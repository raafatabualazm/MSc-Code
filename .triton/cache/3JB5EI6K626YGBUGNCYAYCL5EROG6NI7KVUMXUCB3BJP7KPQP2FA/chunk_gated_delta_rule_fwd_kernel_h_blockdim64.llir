; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @chunk_gated_delta_rule_fwd_kernel_h_blockdim64(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = and i32 %11, 31, !dbg !10
  %13 = add i32 %7, 63, !dbg !11
  %14 = sdiv i32 %13, 64, !dbg !15
  %15 = shl nuw nsw i32 %11, 14, !dbg !16
  %16 = and i32 %15, 1073217536, !dbg !16
  %17 = mul i32 %16, %14, !dbg !17
  %18 = shl nuw nsw i32 %12, 14, !dbg !17
  %19 = or disjoint i32 %17, %18, !dbg !17
  %20 = sext i32 %19 to i64, !dbg !18
  %21 = getelementptr bfloat, ptr addrspace(1) %5, i64 %20, !dbg !18
  %22 = and i32 %11, 65504, !dbg !19
  %23 = mul i32 %22, %7, !dbg !20
  %24 = or disjoint i32 %23, %12, !dbg !21
  %25 = shl i32 %24, 7, !dbg !22
  %26 = sext i32 %25 to i64, !dbg !23
  %27 = getelementptr bfloat, ptr addrspace(1) %1, i64 %26, !dbg !23
  %28 = getelementptr bfloat, ptr addrspace(1) %0, i64 %26, !dbg !24
  %29 = getelementptr bfloat, ptr addrspace(1) %2, i64 %26, !dbg !25
  %30 = getelementptr bfloat, ptr addrspace(1) %3, i64 %26, !dbg !26
  %31 = shl i32 %10, 6, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !29
  %34 = lshr i32 %33, 5, !dbg !29
  %35 = and i32 %33, 8, !dbg !29
  %.not = icmp eq i32 %35, 0, !dbg !29
  %36 = and i32 %33, 16, !dbg !29
  %.not269 = icmp eq i32 %36, 0, !dbg !29
  %37 = and i32 %33, 32, !dbg !29
  %38 = icmp eq i32 %37, 0, !dbg !29
  %39 = and i32 %33, 64, !dbg !29
  %40 = lshr i32 %33, 3, !dbg !29
  %41 = and i32 %40, 15, !dbg !29
  %42 = or disjoint i32 %41, 16, !dbg !29
  %43 = or disjoint i32 %41, 32, !dbg !29
  %44 = or disjoint i32 %41, 48, !dbg !29
  %45 = shl nuw nsw i32 %33, 3, !dbg !29
  %46 = and i32 %45, 24, !dbg !29
  %47 = and i32 %33, 4, !dbg !29
  %48 = shl nuw nsw i32 %47, 3, !dbg !29
  %49 = or disjoint i32 %46, %48, !dbg !29
  %50 = lshr i32 %33, 2, !dbg !29
  %51 = and i32 %50, 7, !dbg !29
  %52 = lshr i32 %33, 1, !dbg !29
  %53 = and i32 %52, 48, !dbg !29
  %54 = or disjoint i32 %53, %51, !dbg !29
  %55 = or disjoint i32 %54, 8, !dbg !29
  %56 = zext nneg i32 %41 to i64, !dbg !29
  %57 = zext nneg i32 %42 to i64, !dbg !29
  %58 = zext nneg i32 %43 to i64, !dbg !29
  %59 = zext nneg i32 %44 to i64, !dbg !29
  %60 = zext nneg i32 %49 to i64, !dbg !29
  %61 = zext nneg i32 %54 to i64, !dbg !29
  %62 = zext nneg i32 %55 to i64, !dbg !29
  %63 = or disjoint i64 %60, %32, !dbg !29
  %64 = icmp sgt i32 %31, -1, !dbg !29
  %65 = icmp slt i64 %63, 128, !dbg !29
  %66 = and i1 %64, %65, !dbg !29
  %67 = or disjoint i64 %56, 64, !dbg !30
  %68 = or disjoint i64 %57, 64, !dbg !30
  %69 = or disjoint i64 %58, 64, !dbg !30
  %70 = or disjoint i64 %59, 64, !dbg !30
  %71 = or disjoint i64 %60, 64, !dbg !30
  %72 = sext i32 %7 to i64, !dbg !31
  %73 = sext i32 %23 to i64, !dbg !32
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %73, !dbg !32
  %75 = zext nneg i32 %12 to i64, !dbg !33
  %76 = getelementptr float, ptr addrspace(1) %74, i64 %75, !dbg !33
  %77 = icmp sgt i32 %13, 63, !dbg !34
  %78 = shl nuw nsw i64 %56, 12, !dbg !35
  %79 = shl nuw nsw i64 %57, 12, !dbg !35
  %80 = shl nuw nsw i64 %58, 12, !dbg !35
  %81 = shl nuw nsw i64 %59, 12, !dbg !35
  %82 = or disjoint i64 %78, %60, !dbg !35
  %83 = or disjoint i64 %79, %60, !dbg !35
  %84 = or disjoint i64 %80, %60, !dbg !35
  %85 = or disjoint i64 %81, %60, !dbg !35
  %86 = getelementptr bfloat, ptr addrspace(1) %29, i64 %82, !dbg !35
  %87 = getelementptr bfloat, ptr addrspace(1) %29, i64 %83, !dbg !35
  %88 = getelementptr bfloat, ptr addrspace(1) %29, i64 %84, !dbg !35
  %89 = getelementptr bfloat, ptr addrspace(1) %29, i64 %85, !dbg !35
  %90 = icmp slt i32 %41, %7, !dbg !35
  %91 = icmp slt i32 %42, %7, !dbg !35
  %92 = icmp slt i32 %43, %7, !dbg !35
  %93 = icmp slt i32 %44, %7, !dbg !35
  %94 = and i1 %90, %77, !dbg !34
  %95 = and i1 %91, %77, !dbg !34
  %96 = and i1 %92, %77, !dbg !34
  %97 = and i1 %93, %77, !dbg !34
  %98 = select i1 %.not, i32 0, i32 72, !dbg !35
  %99 = select i1 %.not269, i32 0, i32 144, !dbg !35
  %100 = select i1 %38, i32 0, i32 288, !dbg !35
  %101 = shl nuw nsw i32 %39, 3, !dbg !35
  %102 = or disjoint i32 %98, %101, !dbg !35
  %103 = xor i32 %102, %49, !dbg !35
  %104 = xor i32 %103, %99, !dbg !35
  %105 = xor i32 %104, %100, !dbg !35
  %106 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %105, !dbg !35
  %107 = or disjoint i32 %49, 1024, !dbg !35
  %108 = or disjoint i32 %102, %99, !dbg !35
  %109 = or disjoint i32 %108, %100, !dbg !35
  %110 = xor i32 %109, %107, !dbg !35
  %111 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %110, !dbg !35
  %112 = or disjoint i32 %49, 2048, !dbg !35
  %113 = xor i32 %109, %112, !dbg !35
  %114 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %113, !dbg !35
  %115 = or disjoint i32 %49, 3072, !dbg !35
  %116 = xor i32 %109, %115, !dbg !35
  %117 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %116, !dbg !35
  %118 = select i1 %94, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %106, ptr addrspace(1) %86, i32 %118) #2, !dbg !35
  %119 = select i1 %95, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %111, ptr addrspace(1) %87, i32 %119) #2, !dbg !35
  %120 = select i1 %96, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %114, ptr addrspace(1) %88, i32 %120) #2, !dbg !35
  %121 = select i1 %97, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %117, ptr addrspace(1) %89, i32 %121) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %122 = or disjoint i64 %71, %78, !dbg !36
  %123 = or disjoint i64 %79, %71, !dbg !36
  %124 = or disjoint i64 %80, %71, !dbg !36
  %125 = or disjoint i64 %81, %71, !dbg !36
  %126 = getelementptr bfloat, ptr addrspace(1) %29, i64 %122, !dbg !36
  %127 = getelementptr bfloat, ptr addrspace(1) %29, i64 %123, !dbg !36
  %128 = getelementptr bfloat, ptr addrspace(1) %29, i64 %124, !dbg !36
  %129 = getelementptr bfloat, ptr addrspace(1) %29, i64 %125, !dbg !36
  %130 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %105, !dbg !36
  %131 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %110, !dbg !36
  %132 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %113, !dbg !36
  %133 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %130, ptr addrspace(1) %126, i32 %118) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %131, ptr addrspace(1) %127, i32 %119) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %132, ptr addrspace(1) %128, i32 %120) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %133, ptr addrspace(1) %129, i32 %121) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %134 = add nsw i64 %63, %78, !dbg !37
  %135 = add nsw i64 %79, %63, !dbg !37
  %136 = add nsw i64 %80, %63, !dbg !37
  %137 = add nsw i64 %81, %63, !dbg !37
  %138 = getelementptr bfloat, ptr addrspace(1) %27, i64 %134, !dbg !37
  %139 = getelementptr bfloat, ptr addrspace(1) %27, i64 %135, !dbg !37
  %140 = getelementptr bfloat, ptr addrspace(1) %27, i64 %136, !dbg !37
  %141 = getelementptr bfloat, ptr addrspace(1) %27, i64 %137, !dbg !37
  %142 = and i1 %66, %90, !dbg !37
  %143 = and i1 %66, %91, !dbg !37
  %144 = and i1 %66, %92, !dbg !37
  %145 = and i1 %66, %93, !dbg !37
  %146 = and i1 %77, %142, !dbg !34
  %147 = and i1 %77, %143, !dbg !34
  %148 = and i1 %77, %144, !dbg !34
  %149 = and i1 %77, %145, !dbg !34
  %and.ra665 = and i32 %33, 56, !dbg !37
  %150 = xor i32 %49, %and.ra665, !dbg !37
  %151 = shl nuw nsw i32 %41, 6, !dbg !37
  %152 = or disjoint i32 %150, %151, !dbg !37
  %153 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %152, !dbg !37
  %154 = or disjoint i32 %152, 1024, !dbg !37
  %155 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %154, !dbg !37
  %156 = or disjoint i32 %152, 2048, !dbg !37
  %157 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %156, !dbg !37
  %158 = or disjoint i32 %152, 3072, !dbg !37
  %159 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %158, !dbg !37
  %160 = select i1 %146, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %153, ptr addrspace(1) %138, i32 %160) #2, !dbg !37
  %161 = select i1 %147, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %155, ptr addrspace(1) %139, i32 %161) #2, !dbg !37
  %162 = select i1 %148, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %157, ptr addrspace(1) %140, i32 %162) #2, !dbg !37
  %163 = select i1 %149, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %159, ptr addrspace(1) %141, i32 %163) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx = shl nuw nsw i64 %61, 7, !dbg !38
  %164 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx, !dbg !38
  %.idx4 = shl nuw nsw i64 %62, 7, !dbg !38
  %165 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx4, !dbg !38
  %166 = icmp slt i32 %54, %7, !dbg !38
  %167 = icmp slt i32 %55, %7, !dbg !38
  %168 = and i1 %166, %77, !dbg !34
  %169 = and i1 %167, %77, !dbg !34
  %170 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181248), i32 %54, !dbg !38
  %171 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181248), i32 %55, !dbg !38
  %172 = and i32 %33, 3, !dbg !38
  %173 = icmp eq i32 %172, 0, !dbg !38
  %174 = select i1 %168, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %170, ptr addrspace(1) %164, i32 %174, i1 %173) #2, !dbg !38
  %175 = select i1 %169, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %171, ptr addrspace(1) %165, i32 %175, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %176 = getelementptr bfloat, ptr addrspace(1) %28, i64 %82, !dbg !39
  %177 = getelementptr bfloat, ptr addrspace(1) %28, i64 %83, !dbg !39
  %178 = getelementptr bfloat, ptr addrspace(1) %28, i64 %84, !dbg !39
  %179 = getelementptr bfloat, ptr addrspace(1) %28, i64 %85, !dbg !39
  %180 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %105, !dbg !39
  %181 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %110, !dbg !39
  %182 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %113, !dbg !39
  %183 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %180, ptr addrspace(1) %176, i32 %118) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %181, ptr addrspace(1) %177, i32 %119) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %182, ptr addrspace(1) %178, i32 %120) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %183, ptr addrspace(1) %179, i32 %121) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %184 = getelementptr bfloat, ptr addrspace(1) %28, i64 %122, !dbg !40
  %185 = getelementptr bfloat, ptr addrspace(1) %28, i64 %123, !dbg !40
  %186 = getelementptr bfloat, ptr addrspace(1) %28, i64 %124, !dbg !40
  %187 = getelementptr bfloat, ptr addrspace(1) %28, i64 %125, !dbg !40
  %188 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %105, !dbg !40
  %189 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %110, !dbg !40
  %190 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %113, !dbg !40
  %191 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %184, i32 %118) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %189, ptr addrspace(1) %185, i32 %119) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %190, ptr addrspace(1) %186, i32 %120) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %191, ptr addrspace(1) %187, i32 %121) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  %192 = icmp sgt i32 %13, 127, !dbg !34
  %193 = or disjoint i64 %61, 64, !dbg !35
  %194 = or disjoint i64 %62, 64, !dbg !35
  %195 = shl nuw nsw i64 %67, 12, !dbg !35
  %196 = shl nuw nsw i64 %68, 12, !dbg !35
  %197 = shl nuw nsw i64 %69, 12, !dbg !35
  %198 = shl nuw nsw i64 %70, 12, !dbg !35
  %199 = or disjoint i64 %195, %60, !dbg !35
  %200 = or disjoint i64 %196, %60, !dbg !35
  %201 = or disjoint i64 %197, %60, !dbg !35
  %202 = or disjoint i64 %198, %60, !dbg !35
  %203 = getelementptr bfloat, ptr addrspace(1) %29, i64 %199, !dbg !35
  %204 = getelementptr bfloat, ptr addrspace(1) %29, i64 %200, !dbg !35
  %205 = getelementptr bfloat, ptr addrspace(1) %29, i64 %201, !dbg !35
  %206 = getelementptr bfloat, ptr addrspace(1) %29, i64 %202, !dbg !35
  %207 = icmp slt i64 %67, %72, !dbg !35
  %208 = icmp slt i64 %68, %72, !dbg !35
  %209 = icmp slt i64 %69, %72, !dbg !35
  %210 = icmp slt i64 %70, %72, !dbg !35
  %211 = and i1 %192, %207, !dbg !34
  %212 = and i1 %192, %208, !dbg !34
  %213 = and i1 %192, %209, !dbg !34
  %214 = and i1 %192, %210, !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %215 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %105, !dbg !35
  %216 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %110, !dbg !35
  %217 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %113, !dbg !35
  %218 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %116, !dbg !35
  %219 = select i1 %211, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %215, ptr addrspace(1) %203, i32 %219) #2, !dbg !35
  %220 = select i1 %212, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %216, ptr addrspace(1) %204, i32 %220) #2, !dbg !35
  %221 = select i1 %213, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %217, ptr addrspace(1) %205, i32 %221) #2, !dbg !35
  %222 = select i1 %214, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %218, ptr addrspace(1) %206, i32 %222) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %223 = or disjoint i64 %195, %71, !dbg !36
  %224 = or disjoint i64 %196, %71, !dbg !36
  %225 = or disjoint i64 %197, %71, !dbg !36
  %226 = or disjoint i64 %198, %71, !dbg !36
  %227 = getelementptr bfloat, ptr addrspace(1) %29, i64 %223, !dbg !36
  %228 = getelementptr bfloat, ptr addrspace(1) %29, i64 %224, !dbg !36
  %229 = getelementptr bfloat, ptr addrspace(1) %29, i64 %225, !dbg !36
  %230 = getelementptr bfloat, ptr addrspace(1) %29, i64 %226, !dbg !36
  %231 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %105, !dbg !36
  %232 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %110, !dbg !36
  %233 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %113, !dbg !36
  %234 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 40960), i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %231, ptr addrspace(1) %227, i32 %219) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %232, ptr addrspace(1) %228, i32 %220) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %233, ptr addrspace(1) %229, i32 %221) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %234, ptr addrspace(1) %230, i32 %222) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %235 = add nsw i64 %195, %63, !dbg !37
  %236 = add nsw i64 %196, %63, !dbg !37
  %237 = add nsw i64 %197, %63, !dbg !37
  %238 = add nsw i64 %198, %63, !dbg !37
  %239 = getelementptr bfloat, ptr addrspace(1) %27, i64 %235, !dbg !37
  %240 = getelementptr bfloat, ptr addrspace(1) %27, i64 %236, !dbg !37
  %241 = getelementptr bfloat, ptr addrspace(1) %27, i64 %237, !dbg !37
  %242 = getelementptr bfloat, ptr addrspace(1) %27, i64 %238, !dbg !37
  %243 = and i1 %66, %207, !dbg !37
  %244 = and i1 %66, %208, !dbg !37
  %245 = and i1 %66, %209, !dbg !37
  %246 = and i1 %66, %210, !dbg !37
  %247 = and i1 %192, %243, !dbg !34
  %248 = and i1 %192, %244, !dbg !34
  %249 = and i1 %192, %245, !dbg !34
  %250 = and i1 %192, %246, !dbg !34
  %251 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 139264), i32 %152, !dbg !37
  %252 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 139264), i32 %154, !dbg !37
  %253 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 139264), i32 %156, !dbg !37
  %254 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 139264), i32 %158, !dbg !37
  %255 = select i1 %247, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %251, ptr addrspace(1) %239, i32 %255) #2, !dbg !37
  %256 = select i1 %248, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %252, ptr addrspace(1) %240, i32 %256) #2, !dbg !37
  %257 = select i1 %249, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %253, ptr addrspace(1) %241, i32 %257) #2, !dbg !37
  %258 = select i1 %250, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %254, ptr addrspace(1) %242, i32 %258) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx5 = shl nuw nsw i64 %193, 7, !dbg !38
  %259 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx5, !dbg !38
  %.idx6 = shl nuw nsw i64 %194, 7, !dbg !38
  %260 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx6, !dbg !38
  %261 = icmp slt i64 %193, %72, !dbg !38
  %262 = icmp slt i64 %194, %72, !dbg !38
  %263 = and i1 %192, %261, !dbg !34
  %264 = and i1 %192, %262, !dbg !34
  %265 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181504), i32 %54, !dbg !38
  %266 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181504), i32 %55, !dbg !38
  %267 = select i1 %263, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %265, ptr addrspace(1) %259, i32 %267, i1 %173) #2, !dbg !38
  %268 = select i1 %264, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %266, ptr addrspace(1) %260, i32 %268, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %269 = getelementptr bfloat, ptr addrspace(1) %28, i64 %199, !dbg !39
  %270 = getelementptr bfloat, ptr addrspace(1) %28, i64 %200, !dbg !39
  %271 = getelementptr bfloat, ptr addrspace(1) %28, i64 %201, !dbg !39
  %272 = getelementptr bfloat, ptr addrspace(1) %28, i64 %202, !dbg !39
  %273 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %105, !dbg !39
  %274 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %110, !dbg !39
  %275 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %113, !dbg !39
  %276 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %273, ptr addrspace(1) %269, i32 %219) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %274, ptr addrspace(1) %270, i32 %220) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %275, ptr addrspace(1) %271, i32 %221) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %276, ptr addrspace(1) %272, i32 %222) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %277 = getelementptr bfloat, ptr addrspace(1) %28, i64 %223, !dbg !40
  %278 = getelementptr bfloat, ptr addrspace(1) %28, i64 %224, !dbg !40
  %279 = getelementptr bfloat, ptr addrspace(1) %28, i64 %225, !dbg !40
  %280 = getelementptr bfloat, ptr addrspace(1) %28, i64 %226, !dbg !40
  %281 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %105, !dbg !40
  %282 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %110, !dbg !40
  %283 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %113, !dbg !40
  %284 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %281, ptr addrspace(1) %277, i32 %219) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %282, ptr addrspace(1) %278, i32 %220) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %283, ptr addrspace(1) %279, i32 %221) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %284, ptr addrspace(1) %280, i32 %222) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  %285 = icmp sgt i32 %13, 191, !dbg !34
  %286 = or disjoint i64 %56, 128, !dbg !35
  %287 = or disjoint i64 %57, 128, !dbg !35
  %288 = or disjoint i64 %58, 128, !dbg !35
  %289 = or disjoint i64 %59, 128, !dbg !35
  %290 = or disjoint i64 %61, 128, !dbg !35
  %291 = or disjoint i64 %62, 128, !dbg !35
  %292 = shl nuw nsw i64 %286, 12, !dbg !35
  %293 = shl nuw nsw i64 %287, 12, !dbg !35
  %294 = shl nuw nsw i64 %288, 12, !dbg !35
  %295 = shl nuw nsw i64 %289, 12, !dbg !35
  %296 = or disjoint i64 %292, %60, !dbg !35
  %297 = or disjoint i64 %293, %60, !dbg !35
  %298 = or disjoint i64 %294, %60, !dbg !35
  %299 = or disjoint i64 %295, %60, !dbg !35
  %300 = getelementptr bfloat, ptr addrspace(1) %29, i64 %296, !dbg !35
  %301 = getelementptr bfloat, ptr addrspace(1) %29, i64 %297, !dbg !35
  %302 = getelementptr bfloat, ptr addrspace(1) %29, i64 %298, !dbg !35
  %303 = getelementptr bfloat, ptr addrspace(1) %29, i64 %299, !dbg !35
  %304 = icmp slt i64 %286, %72, !dbg !35
  %305 = icmp slt i64 %287, %72, !dbg !35
  %306 = icmp slt i64 %288, %72, !dbg !35
  %307 = icmp slt i64 %289, %72, !dbg !35
  %308 = and i1 %285, %304, !dbg !34
  %309 = and i1 %285, %305, !dbg !34
  %310 = and i1 %285, %306, !dbg !34
  %311 = and i1 %285, %307, !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %312 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %105, !dbg !35
  %313 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %110, !dbg !35
  %314 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %113, !dbg !35
  %315 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %116, !dbg !35
  %316 = select i1 %308, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %312, ptr addrspace(1) %300, i32 %316) #2, !dbg !35
  %317 = select i1 %309, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %313, ptr addrspace(1) %301, i32 %317) #2, !dbg !35
  %318 = select i1 %310, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %314, ptr addrspace(1) %302, i32 %318) #2, !dbg !35
  %319 = select i1 %311, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %315, ptr addrspace(1) %303, i32 %319) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %320 = or disjoint i64 %292, %71, !dbg !36
  %321 = or disjoint i64 %293, %71, !dbg !36
  %322 = or disjoint i64 %294, %71, !dbg !36
  %323 = or disjoint i64 %295, %71, !dbg !36
  %324 = getelementptr bfloat, ptr addrspace(1) %29, i64 %320, !dbg !36
  %325 = getelementptr bfloat, ptr addrspace(1) %29, i64 %321, !dbg !36
  %326 = getelementptr bfloat, ptr addrspace(1) %29, i64 %322, !dbg !36
  %327 = getelementptr bfloat, ptr addrspace(1) %29, i64 %323, !dbg !36
  %328 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %105, !dbg !36
  %329 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %110, !dbg !36
  %330 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %113, !dbg !36
  %331 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %328, ptr addrspace(1) %324, i32 %316) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %329, ptr addrspace(1) %325, i32 %317) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %330, ptr addrspace(1) %326, i32 %318) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %331, ptr addrspace(1) %327, i32 %319) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %332 = add nsw i64 %292, %63, !dbg !37
  %333 = add nsw i64 %293, %63, !dbg !37
  %334 = add nsw i64 %294, %63, !dbg !37
  %335 = add nsw i64 %295, %63, !dbg !37
  %336 = getelementptr bfloat, ptr addrspace(1) %27, i64 %332, !dbg !37
  %337 = getelementptr bfloat, ptr addrspace(1) %27, i64 %333, !dbg !37
  %338 = getelementptr bfloat, ptr addrspace(1) %27, i64 %334, !dbg !37
  %339 = getelementptr bfloat, ptr addrspace(1) %27, i64 %335, !dbg !37
  %340 = and i1 %66, %304, !dbg !37
  %341 = and i1 %66, %305, !dbg !37
  %342 = and i1 %66, %306, !dbg !37
  %343 = and i1 %66, %307, !dbg !37
  %344 = and i1 %285, %340, !dbg !34
  %345 = and i1 %285, %341, !dbg !34
  %346 = and i1 %285, %342, !dbg !34
  %347 = and i1 %285, %343, !dbg !34
  %348 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %152, !dbg !37
  %349 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %154, !dbg !37
  %350 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %156, !dbg !37
  %351 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 147456), i32 %158, !dbg !37
  %352 = select i1 %344, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %348, ptr addrspace(1) %336, i32 %352) #2, !dbg !37
  %353 = select i1 %345, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %349, ptr addrspace(1) %337, i32 %353) #2, !dbg !37
  %354 = select i1 %346, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %350, ptr addrspace(1) %338, i32 %354) #2, !dbg !37
  %355 = select i1 %347, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %351, ptr addrspace(1) %339, i32 %355) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx7 = shl nuw nsw i64 %290, 7, !dbg !38
  %356 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx7, !dbg !38
  %.idx8 = shl nuw nsw i64 %291, 7, !dbg !38
  %357 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx8, !dbg !38
  %358 = icmp slt i64 %290, %72, !dbg !38
  %359 = icmp slt i64 %291, %72, !dbg !38
  %360 = and i1 %285, %358, !dbg !34
  %361 = and i1 %285, %359, !dbg !34
  %362 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181760), i32 %54, !dbg !38
  %363 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181760), i32 %55, !dbg !38
  %364 = select i1 %360, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %362, ptr addrspace(1) %356, i32 %364, i1 %173) #2, !dbg !38
  %365 = select i1 %361, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %363, ptr addrspace(1) %357, i32 %365, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %366 = getelementptr bfloat, ptr addrspace(1) %28, i64 %296, !dbg !39
  %367 = getelementptr bfloat, ptr addrspace(1) %28, i64 %297, !dbg !39
  %368 = getelementptr bfloat, ptr addrspace(1) %28, i64 %298, !dbg !39
  %369 = getelementptr bfloat, ptr addrspace(1) %28, i64 %299, !dbg !39
  %370 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %105, !dbg !39
  %371 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %110, !dbg !39
  %372 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %113, !dbg !39
  %373 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %370, ptr addrspace(1) %366, i32 %316) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %371, ptr addrspace(1) %367, i32 %317) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %372, ptr addrspace(1) %368, i32 %318) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %373, ptr addrspace(1) %369, i32 %319) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %374 = getelementptr bfloat, ptr addrspace(1) %28, i64 %320, !dbg !40
  %375 = getelementptr bfloat, ptr addrspace(1) %28, i64 %321, !dbg !40
  %376 = getelementptr bfloat, ptr addrspace(1) %28, i64 %322, !dbg !40
  %377 = getelementptr bfloat, ptr addrspace(1) %28, i64 %323, !dbg !40
  %378 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %105, !dbg !40
  %379 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %110, !dbg !40
  %380 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %113, !dbg !40
  %381 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %378, ptr addrspace(1) %374, i32 %316) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %379, ptr addrspace(1) %375, i32 %317) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %380, ptr addrspace(1) %376, i32 %318) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %381, ptr addrspace(1) %377, i32 %319) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  br i1 %77, label %.lr.ph, label %._crit_edge, !dbg !34

.lr.ph:                                           ; preds = %9
  %.not3 = icmp eq i32 %47, 0, !dbg !29
  %382 = add nsw i32 %14, -3
  %383 = mul nuw nsw i32 %172, 72
  %384 = select i1 %.not3, i32 0, i32 288
  %385 = xor i32 %384, %383
  %386 = shl nuw nsw i32 %35, 6
  %387 = or disjoint i32 %385, %386
  %388 = lshr exact i32 %36, 1
  %389 = xor i32 %387, %388
  %390 = shl nuw nsw i32 %37, 5
  %391 = or disjoint i32 %389, %390
  %392 = shl nuw nsw i32 %39, 5
  %393 = xor i32 %391, %392
  %394 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864), i32 %393
  %395 = ptrtoint ptr addrspace(3) %394 to i32
  %396 = xor i32 %393, 16
  %397 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864), i32 %396
  %398 = ptrtoint ptr addrspace(3) %397 to i32
  %399 = xor i32 %393, 32
  %400 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864), i32 %399
  %401 = ptrtoint ptr addrspace(3) %400 to i32
  %402 = xor i32 %393, 48
  %403 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864), i32 %402
  %404 = ptrtoint ptr addrspace(3) %403 to i32
  %.idx412 = shl nuw nsw i64 %56, 8
  %.idx413 = shl nuw nsw i64 %57, 8
  %.idx414 = shl nuw nsw i64 %58, 8
  %.idx415 = shl nuw nsw i64 %59, 8
  %405 = shl nuw nsw i32 %33, 6
  %406 = and i32 %405, 448
  %407 = or disjoint i32 %406, %386
  %408 = or disjoint i32 %407, %388
  %409 = or disjoint i32 %408, %390
  %410 = or disjoint i32 %409, %392
  %411 = and i32 %45, 448
  %412 = or disjoint i32 %49, %411
  %.reass = or disjoint i32 %412, %101
  %413 = lshr exact i32 %410, 3
  %414 = and i32 %413, 536870904
  %415 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %414
  %416 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %415, i32 %410
  %417 = ptrtoint ptr addrspace(3) %416 to i32
  %418 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 32
  %419 = ptrtoint ptr addrspace(3) %418 to i32
  %420 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 64
  %421 = ptrtoint ptr addrspace(3) %420 to i32
  %422 = getelementptr inbounds nuw i8, ptr addrspace(3) %416, i32 96
  %423 = ptrtoint ptr addrspace(3) %422 to i32
  %424 = lshr exact i32 %.reass, 3
  %425 = and i32 %424, 268435448
  %426 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %425
  %427 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %426, i32 %.reass
  %428 = or disjoint i32 %.reass, 1024
  %429 = lshr exact i32 %428, 3
  %430 = and i32 %429, 536870904
  %431 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %430
  %432 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %431, i32 %428
  %433 = or disjoint i32 %.reass, 2048
  %434 = lshr exact i32 %433, 3
  %435 = and i32 %434, 536870904
  %436 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %435
  %437 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %436, i32 %433
  %438 = or disjoint i32 %.reass, 3072
  %439 = lshr exact i32 %438, 3
  %440 = and i32 %439, 536870904
  %441 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %440
  %442 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %441, i32 %438
  %443 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056), i32 %393
  %444 = ptrtoint ptr addrspace(3) %443 to i32
  %445 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056), i32 %396
  %446 = ptrtoint ptr addrspace(3) %445 to i32
  %447 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056), i32 %399
  %448 = ptrtoint ptr addrspace(3) %447 to i32
  %449 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056), i32 %402
  %450 = ptrtoint ptr addrspace(3) %449 to i32
  %.idx462 = shl nuw nsw i64 %67, 8
  %.idx463 = shl nuw nsw i64 %68, 8
  %.idx464 = shl nuw nsw i64 %69, 8
  %.idx465 = shl nuw nsw i64 %70, 8
  %451 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864) to i32), 4
  %452 = and i32 %451, 16383
  %453 = zext nneg i32 %452 to i64
  %454 = or disjoint i64 %453, 4611686293338849280
  %455 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864) to i32), i32 2048), 4
  %456 = and i32 %455, 16383
  %457 = zext nneg i32 %456 to i64
  %458 = or disjoint i64 %457, 4611686293338849280
  %459 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864) to i32), i32 4096), 4
  %460 = and i32 %459, 16383
  %461 = zext nneg i32 %460 to i64
  %462 = or disjoint i64 %461, 4611686293338849280
  %463 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864) to i32), i32 6144), 4
  %464 = and i32 %463, 16383
  %465 = zext nneg i32 %464 to i64
  %466 = or disjoint i64 %465, 4611686293338849280
  %467 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056) to i32), 4
  %468 = and i32 %467, 16383
  %469 = zext nneg i32 %468 to i64
  %470 = or disjoint i64 %469, 4611686293338849280
  %471 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056) to i32), i32 2048), 4
  %472 = and i32 %471, 16383
  %473 = zext nneg i32 %472 to i64
  %474 = or disjoint i64 %473, 4611686293338849280
  %475 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056) to i32), i32 4096), 4
  %476 = and i32 %475, 16383
  %477 = zext nneg i32 %476 to i64
  %478 = or disjoint i64 %477, 4611686293338849280
  %479 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056) to i32), i32 6144), 4
  %480 = and i32 %479, 16383
  %481 = zext nneg i32 %480 to i64
  %482 = or disjoint i64 %481, 4611686293338849280
  %483 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %393
  %484 = ptrtoint ptr addrspace(3) %483 to i32
  %485 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %396
  %486 = ptrtoint ptr addrspace(3) %485 to i32
  %487 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %399
  %488 = ptrtoint ptr addrspace(3) %487 to i32
  %489 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 %402
  %490 = ptrtoint ptr addrspace(3) %489 to i32
  %491 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648) to i32), 4
  %492 = and i32 %491, 16383
  %493 = zext nneg i32 %492 to i64
  %494 = or disjoint i64 %493, 4611686293338849280
  %495 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648) to i32), i32 2048), 4
  %496 = and i32 %495, 16383
  %497 = zext nneg i32 %496 to i64
  %498 = or disjoint i64 %497, 4611686293338849280
  %499 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648) to i32), i32 4096), 4
  %500 = and i32 %499, 16383
  %501 = zext nneg i32 %500 to i64
  %502 = or disjoint i64 %501, 4611686293338849280
  %503 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648) to i32), i32 6144), 4
  %504 = and i32 %503, 16383
  %505 = zext nneg i32 %504 to i64
  %506 = or disjoint i64 %505, 4611686293338849280
  %507 = sext i32 %382 to i64, !dbg !34
  %wide.trip.count = zext nneg i32 %14 to i64, !dbg !34
  %508 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 4
  %509 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 8
  %510 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 12
  %511 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 4
  %512 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 8
  %513 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 12
  %514 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 4
  %515 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 8
  %516 = getelementptr inbounds nuw i8, ptr addrspace(3) %427, i32 12
  br label %517, !dbg !34

517:                                              ; preds = %.lr.ph, %517
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %517 ]
  %518 = phi i32 [ 128, %.lr.ph ], [ %1907, %517 ]
  %519 = phi i32 [ 64, %.lr.ph ], [ %518, %517 ]
  %520 = phi i32 [ 0, %.lr.ph ], [ %519, %517 ]
  %.pn148690 = phi i1 [ %343, %.lr.ph ], [ %1975, %517 ]
  %.pn164689 = phi i1 [ %342, %.lr.ph ], [ %1974, %517 ]
  %.pn180688 = phi i1 [ %341, %.lr.ph ], [ %1973, %517 ]
  %.pn196687 = phi i1 [ %340, %.lr.ph ], [ %1972, %517 ]
  %.pn148.pn686 = phi i1 [ %246, %.lr.ph ], [ %.pn148690, %517 ]
  %.pn164.pn685 = phi i1 [ %245, %.lr.ph ], [ %.pn164689, %517 ]
  %.pn180.pn684 = phi i1 [ %244, %.lr.ph ], [ %.pn180688, %517 ]
  %.pn196.pn683 = phi i1 [ %243, %.lr.ph ], [ %.pn196687, %517 ]
  %.pn148.pn.pn682 = phi i1 [ %145, %.lr.ph ], [ %.pn148.pn686, %517 ]
  %.pn164.pn.pn681 = phi i1 [ %144, %.lr.ph ], [ %.pn164.pn685, %517 ]
  %.pn180.pn.pn680 = phi i1 [ %143, %.lr.ph ], [ %.pn180.pn684, %517 ]
  %.pn196.pn.pn679 = phi i1 [ %142, %.lr.ph ], [ %.pn196.pn683, %517 ]
  %.pn23678 = phi i64 [ %335, %.lr.ph ], [ %1967, %517 ]
  %.pn39677 = phi i64 [ %334, %.lr.ph ], [ %1966, %517 ]
  %.pn55676 = phi i64 [ %333, %.lr.ph ], [ %1965, %517 ]
  %.pn71675 = phi i64 [ %332, %.lr.ph ], [ %1964, %517 ]
  %.pn23.pn674 = phi i64 [ %238, %.lr.ph ], [ %.pn23678, %517 ]
  %.pn39.pn673 = phi i64 [ %237, %.lr.ph ], [ %.pn39677, %517 ]
  %.pn55.pn672 = phi i64 [ %236, %.lr.ph ], [ %.pn55676, %517 ]
  %.pn71.pn671 = phi i64 [ %235, %.lr.ph ], [ %.pn71675, %517 ]
  %.pn23.pn.pn670 = phi i64 [ %137, %.lr.ph ], [ %.pn23.pn674, %517 ]
  %.pn39.pn.pn669 = phi i64 [ %136, %.lr.ph ], [ %.pn39.pn673, %517 ]
  %.pn55.pn.pn668 = phi i64 [ %135, %.lr.ph ], [ %.pn55.pn672, %517 ]
  %.pn71.pn.pn667 = phi i64 [ %134, %.lr.ph ], [ %.pn71.pn671, %517 ]
  %521 = phi float [ 0.000000e+00, %.lr.ph ], [ %1874, %517 ]
  %522 = phi float [ 0.000000e+00, %.lr.ph ], [ %1875, %517 ]
  %523 = phi float [ 0.000000e+00, %.lr.ph ], [ %1876, %517 ]
  %524 = phi float [ 0.000000e+00, %.lr.ph ], [ %1877, %517 ]
  %525 = phi float [ 0.000000e+00, %.lr.ph ], [ %1878, %517 ]
  %526 = phi float [ 0.000000e+00, %.lr.ph ], [ %1879, %517 ]
  %527 = phi float [ 0.000000e+00, %.lr.ph ], [ %1880, %517 ]
  %528 = phi float [ 0.000000e+00, %.lr.ph ], [ %1881, %517 ]
  %529 = phi float [ 0.000000e+00, %.lr.ph ], [ %1882, %517 ]
  %530 = phi float [ 0.000000e+00, %.lr.ph ], [ %1883, %517 ]
  %531 = phi float [ 0.000000e+00, %.lr.ph ], [ %1884, %517 ]
  %532 = phi float [ 0.000000e+00, %.lr.ph ], [ %1885, %517 ]
  %533 = phi float [ 0.000000e+00, %.lr.ph ], [ %1886, %517 ]
  %534 = phi float [ 0.000000e+00, %.lr.ph ], [ %1887, %517 ]
  %535 = phi float [ 0.000000e+00, %.lr.ph ], [ %1888, %517 ]
  %536 = phi float [ 0.000000e+00, %.lr.ph ], [ %1889, %517 ]
  %537 = phi float [ 0.000000e+00, %.lr.ph ], [ %1890, %517 ]
  %538 = phi float [ 0.000000e+00, %.lr.ph ], [ %1891, %517 ]
  %539 = phi float [ 0.000000e+00, %.lr.ph ], [ %1892, %517 ]
  %540 = phi float [ 0.000000e+00, %.lr.ph ], [ %1893, %517 ]
  %541 = phi float [ 0.000000e+00, %.lr.ph ], [ %1894, %517 ]
  %542 = phi float [ 0.000000e+00, %.lr.ph ], [ %1895, %517 ]
  %543 = phi float [ 0.000000e+00, %.lr.ph ], [ %1896, %517 ]
  %544 = phi float [ 0.000000e+00, %.lr.ph ], [ %1897, %517 ]
  %545 = phi float [ 0.000000e+00, %.lr.ph ], [ %1898, %517 ]
  %546 = phi float [ 0.000000e+00, %.lr.ph ], [ %1899, %517 ]
  %547 = phi float [ 0.000000e+00, %.lr.ph ], [ %1900, %517 ]
  %548 = phi float [ 0.000000e+00, %.lr.ph ], [ %1901, %517 ]
  %549 = phi float [ 0.000000e+00, %.lr.ph ], [ %1902, %517 ]
  %550 = phi float [ 0.000000e+00, %.lr.ph ], [ %1903, %517 ]
  %551 = phi float [ 0.000000e+00, %.lr.ph ], [ %1904, %517 ]
  %552 = phi float [ 0.000000e+00, %.lr.ph ], [ %1905, %517 ]
  %553 = phi float [ 0.000000e+00, %.lr.ph ], [ %1688, %517 ]
  %554 = phi float [ 0.000000e+00, %.lr.ph ], [ %1689, %517 ]
  %555 = phi float [ 0.000000e+00, %.lr.ph ], [ %1690, %517 ]
  %556 = phi float [ 0.000000e+00, %.lr.ph ], [ %1691, %517 ]
  %557 = phi float [ 0.000000e+00, %.lr.ph ], [ %1692, %517 ]
  %558 = phi float [ 0.000000e+00, %.lr.ph ], [ %1693, %517 ]
  %559 = phi float [ 0.000000e+00, %.lr.ph ], [ %1694, %517 ]
  %560 = phi float [ 0.000000e+00, %.lr.ph ], [ %1695, %517 ]
  %561 = phi float [ 0.000000e+00, %.lr.ph ], [ %1696, %517 ]
  %562 = phi float [ 0.000000e+00, %.lr.ph ], [ %1697, %517 ]
  %563 = phi float [ 0.000000e+00, %.lr.ph ], [ %1698, %517 ]
  %564 = phi float [ 0.000000e+00, %.lr.ph ], [ %1699, %517 ]
  %565 = phi float [ 0.000000e+00, %.lr.ph ], [ %1700, %517 ]
  %566 = phi float [ 0.000000e+00, %.lr.ph ], [ %1701, %517 ]
  %567 = phi float [ 0.000000e+00, %.lr.ph ], [ %1702, %517 ]
  %568 = phi float [ 0.000000e+00, %.lr.ph ], [ %1703, %517 ]
  %569 = phi float [ 0.000000e+00, %.lr.ph ], [ %1704, %517 ]
  %570 = phi float [ 0.000000e+00, %.lr.ph ], [ %1705, %517 ]
  %571 = phi float [ 0.000000e+00, %.lr.ph ], [ %1706, %517 ]
  %572 = phi float [ 0.000000e+00, %.lr.ph ], [ %1707, %517 ]
  %573 = phi float [ 0.000000e+00, %.lr.ph ], [ %1708, %517 ]
  %574 = phi float [ 0.000000e+00, %.lr.ph ], [ %1709, %517 ]
  %575 = phi float [ 0.000000e+00, %.lr.ph ], [ %1710, %517 ]
  %576 = phi float [ 0.000000e+00, %.lr.ph ], [ %1711, %517 ]
  %577 = phi float [ 0.000000e+00, %.lr.ph ], [ %1712, %517 ]
  %578 = phi float [ 0.000000e+00, %.lr.ph ], [ %1713, %517 ]
  %579 = phi float [ 0.000000e+00, %.lr.ph ], [ %1714, %517 ]
  %580 = phi float [ 0.000000e+00, %.lr.ph ], [ %1715, %517 ]
  %581 = phi float [ 0.000000e+00, %.lr.ph ], [ %1716, %517 ]
  %582 = phi float [ 0.000000e+00, %.lr.ph ], [ %1717, %517 ]
  %583 = phi float [ 0.000000e+00, %.lr.ph ], [ %1718, %517 ]
  %584 = phi float [ 0.000000e+00, %.lr.ph ], [ %1719, %517 ]
  %585 = phi <4 x i32> [ <i32 -1, i32 2, i32 -1, i32 2>, %.lr.ph ], [ %789, %517 ]
  %586 = icmp slt i64 %indvars.iv, %507, !dbg !34
  %587 = add <4 x i32> %585, splat (i32 1), !dbg !34
  %588 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !41
  %589 = shl i32 %588, 19, !dbg !41
  %590 = sext i32 %589 to i64, !dbg !42
  %591 = getelementptr bfloat, ptr addrspace(1) %21, i64 %590, !dbg !42
  %592 = fptrunc float %553 to bfloat, !dbg !43
  %593 = fptrunc float %554 to bfloat, !dbg !43
  %594 = fptrunc float %555 to bfloat, !dbg !43
  %595 = fptrunc float %556 to bfloat, !dbg !43
  %596 = fptrunc float %557 to bfloat, !dbg !43
  %597 = fptrunc float %558 to bfloat, !dbg !43
  %598 = fptrunc float %559 to bfloat, !dbg !43
  %599 = fptrunc float %560 to bfloat, !dbg !43
  %600 = fptrunc float %561 to bfloat, !dbg !43
  %601 = fptrunc float %562 to bfloat, !dbg !43
  %602 = fptrunc float %563 to bfloat, !dbg !43
  %603 = fptrunc float %564 to bfloat, !dbg !43
  %604 = fptrunc float %565 to bfloat, !dbg !43
  %605 = fptrunc float %566 to bfloat, !dbg !43
  %606 = fptrunc float %567 to bfloat, !dbg !43
  %607 = fptrunc float %568 to bfloat, !dbg !43
  %608 = fptrunc float %569 to bfloat, !dbg !43
  %609 = fptrunc float %570 to bfloat, !dbg !43
  %610 = fptrunc float %571 to bfloat, !dbg !43
  %611 = fptrunc float %572 to bfloat, !dbg !43
  %612 = fptrunc float %573 to bfloat, !dbg !43
  %613 = fptrunc float %574 to bfloat, !dbg !43
  %614 = fptrunc float %575 to bfloat, !dbg !43
  %615 = fptrunc float %576 to bfloat, !dbg !43
  %616 = fptrunc float %577 to bfloat, !dbg !43
  %617 = fptrunc float %578 to bfloat, !dbg !43
  %618 = fptrunc float %579 to bfloat, !dbg !43
  %619 = fptrunc float %580 to bfloat, !dbg !43
  %620 = fptrunc float %581 to bfloat, !dbg !43
  %621 = fptrunc float %582 to bfloat, !dbg !43
  %622 = fptrunc float %583 to bfloat, !dbg !43
  %623 = fptrunc float %584 to bfloat, !dbg !43
  %624 = insertelement <2 x bfloat> poison, bfloat %592, i64 0, !dbg !43
  %625 = insertelement <2 x bfloat> %624, bfloat %593, i64 1, !dbg !43
  %626 = bitcast <2 x bfloat> %625 to i32, !dbg !43
  %627 = insertelement <2 x bfloat> poison, bfloat %594, i64 0, !dbg !43
  %628 = insertelement <2 x bfloat> %627, bfloat %595, i64 1, !dbg !43
  %629 = bitcast <2 x bfloat> %628 to i32, !dbg !43
  %630 = insertelement <2 x bfloat> poison, bfloat %596, i64 0, !dbg !43
  %631 = insertelement <2 x bfloat> %630, bfloat %597, i64 1, !dbg !43
  %632 = bitcast <2 x bfloat> %631 to i32, !dbg !43
  %633 = insertelement <2 x bfloat> poison, bfloat %598, i64 0, !dbg !43
  %634 = insertelement <2 x bfloat> %633, bfloat %599, i64 1, !dbg !43
  %635 = bitcast <2 x bfloat> %634 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %395, i32 %626, i32 %629, i32 %632, i32 %635) #2, !dbg !43
  %636 = insertelement <2 x bfloat> poison, bfloat %600, i64 0, !dbg !43
  %637 = insertelement <2 x bfloat> %636, bfloat %601, i64 1, !dbg !43
  %638 = bitcast <2 x bfloat> %637 to i32, !dbg !43
  %639 = insertelement <2 x bfloat> poison, bfloat %602, i64 0, !dbg !43
  %640 = insertelement <2 x bfloat> %639, bfloat %603, i64 1, !dbg !43
  %641 = bitcast <2 x bfloat> %640 to i32, !dbg !43
  %642 = insertelement <2 x bfloat> poison, bfloat %604, i64 0, !dbg !43
  %643 = insertelement <2 x bfloat> %642, bfloat %605, i64 1, !dbg !43
  %644 = bitcast <2 x bfloat> %643 to i32, !dbg !43
  %645 = insertelement <2 x bfloat> poison, bfloat %606, i64 0, !dbg !43
  %646 = insertelement <2 x bfloat> %645, bfloat %607, i64 1, !dbg !43
  %647 = bitcast <2 x bfloat> %646 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %398, i32 %638, i32 %641, i32 %644, i32 %647) #2, !dbg !43
  %648 = insertelement <2 x bfloat> poison, bfloat %608, i64 0, !dbg !43
  %649 = insertelement <2 x bfloat> %648, bfloat %609, i64 1, !dbg !43
  %650 = bitcast <2 x bfloat> %649 to i32, !dbg !43
  %651 = insertelement <2 x bfloat> poison, bfloat %610, i64 0, !dbg !43
  %652 = insertelement <2 x bfloat> %651, bfloat %611, i64 1, !dbg !43
  %653 = bitcast <2 x bfloat> %652 to i32, !dbg !43
  %654 = insertelement <2 x bfloat> poison, bfloat %612, i64 0, !dbg !43
  %655 = insertelement <2 x bfloat> %654, bfloat %613, i64 1, !dbg !43
  %656 = bitcast <2 x bfloat> %655 to i32, !dbg !43
  %657 = insertelement <2 x bfloat> poison, bfloat %614, i64 0, !dbg !43
  %658 = insertelement <2 x bfloat> %657, bfloat %615, i64 1, !dbg !43
  %659 = bitcast <2 x bfloat> %658 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %401, i32 %650, i32 %653, i32 %656, i32 %659) #2, !dbg !43
  %660 = insertelement <2 x bfloat> poison, bfloat %616, i64 0, !dbg !43
  %661 = insertelement <2 x bfloat> %660, bfloat %617, i64 1, !dbg !43
  %662 = bitcast <2 x bfloat> %661 to i32, !dbg !43
  %663 = insertelement <2 x bfloat> poison, bfloat %618, i64 0, !dbg !43
  %664 = insertelement <2 x bfloat> %663, bfloat %619, i64 1, !dbg !43
  %665 = bitcast <2 x bfloat> %664 to i32, !dbg !43
  %666 = insertelement <2 x bfloat> poison, bfloat %620, i64 0, !dbg !43
  %667 = insertelement <2 x bfloat> %666, bfloat %621, i64 1, !dbg !43
  %668 = bitcast <2 x bfloat> %667 to i32, !dbg !43
  %669 = insertelement <2 x bfloat> poison, bfloat %622, i64 0, !dbg !43
  %670 = insertelement <2 x bfloat> %669, bfloat %623, i64 1, !dbg !43
  %671 = bitcast <2 x bfloat> %670 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %404, i32 %662, i32 %665, i32 %668, i32 %671) #2, !dbg !43
  %672 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx412, !dbg !29
  %673 = getelementptr bfloat, ptr addrspace(1) %672, i64 %63, !dbg !29
  %674 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx413, !dbg !29
  %675 = getelementptr bfloat, ptr addrspace(1) %674, i64 %63, !dbg !29
  %676 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx414, !dbg !29
  %677 = getelementptr bfloat, ptr addrspace(1) %676, i64 %63, !dbg !29
  %678 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx415, !dbg !29
  %679 = getelementptr bfloat, ptr addrspace(1) %678, i64 %63, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %417, i32 %626, i32 %629, i32 %632, i32 %635) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %419, i32 %638, i32 %641, i32 %644, i32 %647) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %421, i32 %650, i32 %653, i32 %656, i32 %659) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %423, i32 %662, i32 %665, i32 %668, i32 %671) #2, !dbg !29
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !29
  %680 = load <4 x i32>, ptr addrspace(3) %432, align 16, !dbg !29
  %681 = load <4 x i32>, ptr addrspace(3) %437, align 16, !dbg !29
  %682 = load <4 x i32>, ptr addrspace(3) %442, align 16, !dbg !29
  %.extract570 = load i32, ptr addrspace(3) %427, align 16, !dbg !29
  %.extract572 = load i32, ptr addrspace(3) %508, align 4, !dbg !29
  %.extract574 = load i32, ptr addrspace(3) %509, align 8, !dbg !29
  %.extract576 = load i32, ptr addrspace(3) %510, align 4, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract570, i32 %.extract572, i32 %.extract574, i32 %.extract576, ptr addrspace(1) %673, i1 %66) #2, !dbg !29
  %.extract578 = extractelement <4 x i32> %680, i64 0, !dbg !29
  %.extract580 = extractelement <4 x i32> %680, i64 1, !dbg !29
  %.extract582 = extractelement <4 x i32> %680, i64 2, !dbg !29
  %.extract584 = extractelement <4 x i32> %680, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract578, i32 %.extract580, i32 %.extract582, i32 %.extract584, ptr addrspace(1) %675, i1 %66) #2, !dbg !29
  %.extract586 = extractelement <4 x i32> %681, i64 0, !dbg !29
  %.extract588 = extractelement <4 x i32> %681, i64 1, !dbg !29
  %.extract590 = extractelement <4 x i32> %681, i64 2, !dbg !29
  %.extract592 = extractelement <4 x i32> %681, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract586, i32 %.extract588, i32 %.extract590, i32 %.extract592, ptr addrspace(1) %677, i1 %66) #2, !dbg !29
  %.extract594 = extractelement <4 x i32> %682, i64 0, !dbg !29
  %.extract596 = extractelement <4 x i32> %682, i64 1, !dbg !29
  %.extract598 = extractelement <4 x i32> %682, i64 2, !dbg !29
  %.extract600 = extractelement <4 x i32> %682, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract594, i32 %.extract596, i32 %.extract598, i32 %.extract600, ptr addrspace(1) %679, i1 %66) #2, !dbg !29
  %683 = fptrunc float %521 to bfloat, !dbg !44
  %684 = fptrunc float %522 to bfloat, !dbg !44
  %685 = fptrunc float %523 to bfloat, !dbg !44
  %686 = fptrunc float %524 to bfloat, !dbg !44
  %687 = fptrunc float %525 to bfloat, !dbg !44
  %688 = fptrunc float %526 to bfloat, !dbg !44
  %689 = fptrunc float %527 to bfloat, !dbg !44
  %690 = fptrunc float %528 to bfloat, !dbg !44
  %691 = fptrunc float %529 to bfloat, !dbg !44
  %692 = fptrunc float %530 to bfloat, !dbg !44
  %693 = fptrunc float %531 to bfloat, !dbg !44
  %694 = fptrunc float %532 to bfloat, !dbg !44
  %695 = fptrunc float %533 to bfloat, !dbg !44
  %696 = fptrunc float %534 to bfloat, !dbg !44
  %697 = fptrunc float %535 to bfloat, !dbg !44
  %698 = fptrunc float %536 to bfloat, !dbg !44
  %699 = fptrunc float %537 to bfloat, !dbg !44
  %700 = fptrunc float %538 to bfloat, !dbg !44
  %701 = fptrunc float %539 to bfloat, !dbg !44
  %702 = fptrunc float %540 to bfloat, !dbg !44
  %703 = fptrunc float %541 to bfloat, !dbg !44
  %704 = fptrunc float %542 to bfloat, !dbg !44
  %705 = fptrunc float %543 to bfloat, !dbg !44
  %706 = fptrunc float %544 to bfloat, !dbg !44
  %707 = fptrunc float %545 to bfloat, !dbg !44
  %708 = fptrunc float %546 to bfloat, !dbg !44
  %709 = fptrunc float %547 to bfloat, !dbg !44
  %710 = fptrunc float %548 to bfloat, !dbg !44
  %711 = fptrunc float %549 to bfloat, !dbg !44
  %712 = fptrunc float %550 to bfloat, !dbg !44
  %713 = fptrunc float %551 to bfloat, !dbg !44
  %714 = fptrunc float %552 to bfloat, !dbg !44
  %715 = insertelement <2 x bfloat> poison, bfloat %683, i64 0, !dbg !44
  %716 = insertelement <2 x bfloat> %715, bfloat %684, i64 1, !dbg !44
  %717 = bitcast <2 x bfloat> %716 to i32, !dbg !44
  %718 = insertelement <2 x bfloat> poison, bfloat %685, i64 0, !dbg !44
  %719 = insertelement <2 x bfloat> %718, bfloat %686, i64 1, !dbg !44
  %720 = bitcast <2 x bfloat> %719 to i32, !dbg !44
  %721 = insertelement <2 x bfloat> poison, bfloat %687, i64 0, !dbg !44
  %722 = insertelement <2 x bfloat> %721, bfloat %688, i64 1, !dbg !44
  %723 = bitcast <2 x bfloat> %722 to i32, !dbg !44
  %724 = insertelement <2 x bfloat> poison, bfloat %689, i64 0, !dbg !44
  %725 = insertelement <2 x bfloat> %724, bfloat %690, i64 1, !dbg !44
  %726 = bitcast <2 x bfloat> %725 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %444, i32 %717, i32 %720, i32 %723, i32 %726) #2, !dbg !44
  %727 = insertelement <2 x bfloat> poison, bfloat %691, i64 0, !dbg !44
  %728 = insertelement <2 x bfloat> %727, bfloat %692, i64 1, !dbg !44
  %729 = bitcast <2 x bfloat> %728 to i32, !dbg !44
  %730 = insertelement <2 x bfloat> poison, bfloat %693, i64 0, !dbg !44
  %731 = insertelement <2 x bfloat> %730, bfloat %694, i64 1, !dbg !44
  %732 = bitcast <2 x bfloat> %731 to i32, !dbg !44
  %733 = insertelement <2 x bfloat> poison, bfloat %695, i64 0, !dbg !44
  %734 = insertelement <2 x bfloat> %733, bfloat %696, i64 1, !dbg !44
  %735 = bitcast <2 x bfloat> %734 to i32, !dbg !44
  %736 = insertelement <2 x bfloat> poison, bfloat %697, i64 0, !dbg !44
  %737 = insertelement <2 x bfloat> %736, bfloat %698, i64 1, !dbg !44
  %738 = bitcast <2 x bfloat> %737 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %446, i32 %729, i32 %732, i32 %735, i32 %738) #2, !dbg !44
  %739 = insertelement <2 x bfloat> poison, bfloat %699, i64 0, !dbg !44
  %740 = insertelement <2 x bfloat> %739, bfloat %700, i64 1, !dbg !44
  %741 = bitcast <2 x bfloat> %740 to i32, !dbg !44
  %742 = insertelement <2 x bfloat> poison, bfloat %701, i64 0, !dbg !44
  %743 = insertelement <2 x bfloat> %742, bfloat %702, i64 1, !dbg !44
  %744 = bitcast <2 x bfloat> %743 to i32, !dbg !44
  %745 = insertelement <2 x bfloat> poison, bfloat %703, i64 0, !dbg !44
  %746 = insertelement <2 x bfloat> %745, bfloat %704, i64 1, !dbg !44
  %747 = bitcast <2 x bfloat> %746 to i32, !dbg !44
  %748 = insertelement <2 x bfloat> poison, bfloat %705, i64 0, !dbg !44
  %749 = insertelement <2 x bfloat> %748, bfloat %706, i64 1, !dbg !44
  %750 = bitcast <2 x bfloat> %749 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %448, i32 %741, i32 %744, i32 %747, i32 %750) #2, !dbg !44
  %751 = insertelement <2 x bfloat> poison, bfloat %707, i64 0, !dbg !44
  %752 = insertelement <2 x bfloat> %751, bfloat %708, i64 1, !dbg !44
  %753 = bitcast <2 x bfloat> %752 to i32, !dbg !44
  %754 = insertelement <2 x bfloat> poison, bfloat %709, i64 0, !dbg !44
  %755 = insertelement <2 x bfloat> %754, bfloat %710, i64 1, !dbg !44
  %756 = bitcast <2 x bfloat> %755 to i32, !dbg !44
  %757 = insertelement <2 x bfloat> poison, bfloat %711, i64 0, !dbg !44
  %758 = insertelement <2 x bfloat> %757, bfloat %712, i64 1, !dbg !44
  %759 = bitcast <2 x bfloat> %758 to i32, !dbg !44
  %760 = insertelement <2 x bfloat> poison, bfloat %713, i64 0, !dbg !44
  %761 = insertelement <2 x bfloat> %760, bfloat %714, i64 1, !dbg !44
  %762 = bitcast <2 x bfloat> %761 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %450, i32 %753, i32 %756, i32 %759, i32 %762) #2, !dbg !44
  %763 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx462, !dbg !30
  %764 = getelementptr bfloat, ptr addrspace(1) %763, i64 %63, !dbg !30
  %765 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx463, !dbg !30
  %766 = getelementptr bfloat, ptr addrspace(1) %765, i64 %63, !dbg !30
  %767 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx464, !dbg !30
  %768 = getelementptr bfloat, ptr addrspace(1) %767, i64 %63, !dbg !30
  %769 = getelementptr i8, ptr addrspace(1) %591, i64 %.idx465, !dbg !30
  %770 = getelementptr bfloat, ptr addrspace(1) %769, i64 %63, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %417, i32 %717, i32 %720, i32 %723, i32 %726) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %419, i32 %729, i32 %732, i32 %735, i32 %738) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %421, i32 %741, i32 %744, i32 %747, i32 %750) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %423, i32 %753, i32 %756, i32 %759, i32 %762) #2, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %771 = load <4 x i32>, ptr addrspace(3) %432, align 16, !dbg !30
  %772 = load <4 x i32>, ptr addrspace(3) %437, align 16, !dbg !30
  %773 = load <4 x i32>, ptr addrspace(3) %442, align 16, !dbg !30
  %.extract602 = load i32, ptr addrspace(3) %427, align 16, !dbg !30
  %.extract604 = load i32, ptr addrspace(3) %511, align 4, !dbg !30
  %.extract606 = load i32, ptr addrspace(3) %512, align 8, !dbg !30
  %.extract608 = load i32, ptr addrspace(3) %513, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract602, i32 %.extract604, i32 %.extract606, i32 %.extract608, ptr addrspace(1) %764, i1 %66) #2, !dbg !30
  %.extract610 = extractelement <4 x i32> %771, i64 0, !dbg !30
  %.extract612 = extractelement <4 x i32> %771, i64 1, !dbg !30
  %.extract614 = extractelement <4 x i32> %771, i64 2, !dbg !30
  %.extract616 = extractelement <4 x i32> %771, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract610, i32 %.extract612, i32 %.extract614, i32 %.extract616, ptr addrspace(1) %766, i1 %66) #2, !dbg !30
  %.extract618 = extractelement <4 x i32> %772, i64 0, !dbg !30
  %.extract620 = extractelement <4 x i32> %772, i64 1, !dbg !30
  %.extract622 = extractelement <4 x i32> %772, i64 2, !dbg !30
  %.extract624 = extractelement <4 x i32> %772, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract618, i32 %.extract620, i32 %.extract622, i32 %.extract624, ptr addrspace(1) %768, i1 %66) #2, !dbg !30
  %.extract626 = extractelement <4 x i32> %773, i64 0, !dbg !30
  %.extract628 = extractelement <4 x i32> %773, i64 1, !dbg !30
  %.extract630 = extractelement <4 x i32> %773, i64 2, !dbg !30
  %.extract632 = extractelement <4 x i32> %773, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract626, i32 %.extract628, i32 %.extract630, i32 %.extract632, ptr addrspace(1) %770, i1 %66) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.wait.group(i32 12), !dbg !35
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !45
  %774 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %34, i32 0, i32 31), !dbg !45
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !45
  %775 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn71.pn.pn667, !dbg !46
  %776 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn55.pn.pn668, !dbg !46
  %777 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn39.pn.pn669, !dbg !46
  %778 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn23.pn.pn670, !dbg !46
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !47
  %indvars.iv.next.tr = trunc i64 %indvars.iv.next to i32, !dbg !48
  %779 = shl i32 %indvars.iv.next.tr, 6, !dbg !48
  %780 = tail call i32 @llvm.smin.i32(i32 %779, i32 %7), !dbg !48
  %781 = add nuw nsw i32 %520, %54, !dbg !49
  %782 = add nuw nsw i32 %520, %55, !dbg !49
  %783 = icmp slt i32 %781, %7, !dbg !50
  %784 = icmp slt i32 %782, %7, !dbg !50
  %785 = shl i32 %780, 5, !dbg !51
  %786 = add i32 %785, -32, !dbg !51
  %787 = sext i32 %786 to i64, !dbg !52
  %gep = getelementptr float, ptr addrspace(1) %76, i64 %787, !dbg !53
  %788 = icmp sgt <4 x i32> %587, <i32 2, i32 2, i32 3, i32 3>, !dbg !34
  %789 = select <4 x i1> %788, <4 x i32> zeroinitializer, <4 x i32> %587, !dbg !34
  %790 = extractelement <4 x i32> %789, i64 2, !dbg !35
  %791 = shl i32 %790, 12, !dbg !35
  %792 = getelementptr bfloat, ptr addrspace(3) @global_smem, i32 %791, !dbg !35
  %793 = ptrtoint ptr addrspace(3) %792 to i32, !dbg !45
  %794 = lshr exact i32 %793, 4, !dbg !45
  %795 = and i32 %794, 16383, !dbg !45
  %796 = zext nneg i32 %795 to i64, !dbg !45
  %797 = or disjoint i64 %796, 4611686293338849280, !dbg !45
  %798 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %797, i64 %454) #2, !dbg !45
  %799 = add i32 %793, 32, !dbg !45
  %800 = lshr exact i32 %799, 4, !dbg !45
  %801 = and i32 %800, 16383, !dbg !45
  %802 = zext nneg i32 %801 to i64, !dbg !45
  %803 = or disjoint i64 %802, 4611686293338849280, !dbg !45
  %804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 0, !dbg !45
  %805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 1, !dbg !45
  %806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 2, !dbg !45
  %807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 3, !dbg !45
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 4, !dbg !45
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 5, !dbg !45
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 6, !dbg !45
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 7, !dbg !45
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 8, !dbg !45
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 9, !dbg !45
  %814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 10, !dbg !45
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 11, !dbg !45
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 12, !dbg !45
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 13, !dbg !45
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 14, !dbg !45
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 15, !dbg !45
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 16, !dbg !45
  %821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 17, !dbg !45
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 18, !dbg !45
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 19, !dbg !45
  %824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 20, !dbg !45
  %825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 21, !dbg !45
  %826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 22, !dbg !45
  %827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 23, !dbg !45
  %828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 24, !dbg !45
  %829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 25, !dbg !45
  %830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 26, !dbg !45
  %831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 27, !dbg !45
  %832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 28, !dbg !45
  %833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 29, !dbg !45
  %834 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 30, !dbg !45
  %835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %798, 31, !dbg !45
  %836 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %804, float %805, float %806, float %807, float %808, float %809, float %810, float %811, float %812, float %813, float %814, float %815, float %816, float %817, float %818, float %819, float %820, float %821, float %822, float %823, float %824, float %825, float %826, float %827, float %828, float %829, float %830, float %831, float %832, float %833, float %834, float %835, i64 %803, i64 %458, i1 true) #2, !dbg !45
  %837 = add i32 %793, 64, !dbg !45
  %838 = lshr exact i32 %837, 4, !dbg !45
  %839 = and i32 %838, 16383, !dbg !45
  %840 = zext nneg i32 %839 to i64, !dbg !45
  %841 = or disjoint i64 %840, 4611686293338849280, !dbg !45
  %842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 0, !dbg !45
  %843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 1, !dbg !45
  %844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 2, !dbg !45
  %845 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 3, !dbg !45
  %846 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 4, !dbg !45
  %847 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 5, !dbg !45
  %848 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 6, !dbg !45
  %849 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 7, !dbg !45
  %850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 8, !dbg !45
  %851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 9, !dbg !45
  %852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 10, !dbg !45
  %853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 11, !dbg !45
  %854 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 12, !dbg !45
  %855 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 13, !dbg !45
  %856 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 14, !dbg !45
  %857 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 15, !dbg !45
  %858 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 16, !dbg !45
  %859 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 17, !dbg !45
  %860 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 18, !dbg !45
  %861 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 19, !dbg !45
  %862 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 20, !dbg !45
  %863 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 21, !dbg !45
  %864 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 22, !dbg !45
  %865 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 23, !dbg !45
  %866 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 24, !dbg !45
  %867 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 25, !dbg !45
  %868 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 26, !dbg !45
  %869 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 27, !dbg !45
  %870 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 28, !dbg !45
  %871 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 29, !dbg !45
  %872 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 30, !dbg !45
  %873 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %836, 31, !dbg !45
  %874 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %842, float %843, float %844, float %845, float %846, float %847, float %848, float %849, float %850, float %851, float %852, float %853, float %854, float %855, float %856, float %857, float %858, float %859, float %860, float %861, float %862, float %863, float %864, float %865, float %866, float %867, float %868, float %869, float %870, float %871, float %872, float %873, i64 %841, i64 %462, i1 true) #2, !dbg !45
  %875 = add i32 %793, 96, !dbg !45
  %876 = lshr exact i32 %875, 4, !dbg !45
  %877 = and i32 %876, 16383, !dbg !45
  %878 = zext nneg i32 %877 to i64, !dbg !45
  %879 = or disjoint i64 %878, 4611686293338849280, !dbg !45
  %880 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 0, !dbg !45
  %881 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 1, !dbg !45
  %882 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 2, !dbg !45
  %883 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 3, !dbg !45
  %884 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 4, !dbg !45
  %885 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 5, !dbg !45
  %886 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 6, !dbg !45
  %887 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 7, !dbg !45
  %888 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 8, !dbg !45
  %889 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 9, !dbg !45
  %890 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 10, !dbg !45
  %891 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 11, !dbg !45
  %892 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 12, !dbg !45
  %893 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 13, !dbg !45
  %894 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 14, !dbg !45
  %895 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 15, !dbg !45
  %896 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 16, !dbg !45
  %897 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 17, !dbg !45
  %898 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 18, !dbg !45
  %899 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 19, !dbg !45
  %900 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 20, !dbg !45
  %901 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 21, !dbg !45
  %902 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 22, !dbg !45
  %903 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 23, !dbg !45
  %904 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 24, !dbg !45
  %905 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 25, !dbg !45
  %906 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 26, !dbg !45
  %907 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 27, !dbg !45
  %908 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 28, !dbg !45
  %909 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 29, !dbg !45
  %910 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 30, !dbg !45
  %911 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %874, 31, !dbg !45
  %912 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %880, float %881, float %882, float %883, float %884, float %885, float %886, float %887, float %888, float %889, float %890, float %891, float %892, float %893, float %894, float %895, float %896, float %897, float %898, float %899, float %900, float %901, float %902, float %903, float %904, float %905, float %906, float %907, float %908, float %909, float %910, float %911, i64 %879, i64 %466, i1 true) #2, !dbg !45
  %913 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 0, !dbg !45
  %914 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 1, !dbg !45
  %915 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 2, !dbg !45
  %916 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 3, !dbg !45
  %917 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 4, !dbg !45
  %918 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 5, !dbg !45
  %919 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 6, !dbg !45
  %920 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 7, !dbg !45
  %921 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 8, !dbg !45
  %922 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 9, !dbg !45
  %923 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 10, !dbg !45
  %924 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 11, !dbg !45
  %925 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 12, !dbg !45
  %926 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 13, !dbg !45
  %927 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 14, !dbg !45
  %928 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 15, !dbg !45
  %929 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 16, !dbg !45
  %930 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 17, !dbg !45
  %931 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 18, !dbg !45
  %932 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 19, !dbg !45
  %933 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 20, !dbg !45
  %934 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 21, !dbg !45
  %935 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 22, !dbg !45
  %936 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 23, !dbg !45
  %937 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 24, !dbg !45
  %938 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 25, !dbg !45
  %939 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 26, !dbg !45
  %940 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 27, !dbg !45
  %941 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 28, !dbg !45
  %942 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 29, !dbg !45
  %943 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 30, !dbg !45
  %944 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %912, 31, !dbg !45
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !45
  %945 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %913, float %914, float %915, float %916, float %917, float %918, float %919, float %920, float %921, float %922, float %923, float %924, float %925, float %926, float %927, float %928, float %929, float %930, float %931, float %932, float %933, float %934, float %935, float %936, float %937, float %938, float %939, float %940, float %941, float %942, float %943, float %944, ptr addrspace(3) %792, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 164864), i32 0, i32 0) #2, !dbg !45
  %946 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 0, !dbg !45
  %947 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 1, !dbg !45
  %948 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 2, !dbg !45
  %949 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 3, !dbg !45
  %950 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 4, !dbg !45
  %951 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 5, !dbg !45
  %952 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 6, !dbg !45
  %953 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 7, !dbg !45
  %954 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 8, !dbg !45
  %955 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 9, !dbg !45
  %956 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 10, !dbg !45
  %957 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 11, !dbg !45
  %958 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 12, !dbg !45
  %959 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 13, !dbg !45
  %960 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 14, !dbg !45
  %961 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 15, !dbg !45
  %962 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 16, !dbg !45
  %963 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 17, !dbg !45
  %964 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 18, !dbg !45
  %965 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 19, !dbg !45
  %966 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 20, !dbg !45
  %967 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 21, !dbg !45
  %968 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 22, !dbg !45
  %969 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 23, !dbg !45
  %970 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 24, !dbg !45
  %971 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 25, !dbg !45
  %972 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 26, !dbg !45
  %973 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 27, !dbg !45
  %974 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 28, !dbg !45
  %975 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 29, !dbg !45
  %976 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 30, !dbg !45
  %977 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %945, 31, !dbg !45
  %978 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %791, !dbg !36
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !54
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !54
  %979 = ptrtoint ptr addrspace(3) %978 to i32, !dbg !54
  %980 = lshr exact i32 %979, 4, !dbg !54
  %981 = and i32 %980, 16383, !dbg !54
  %982 = zext nneg i32 %981 to i64, !dbg !54
  %983 = or disjoint i64 %982, 4611686293338849280, !dbg !54
  %984 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %946, float %947, float %948, float %949, float %950, float %951, float %952, float %953, float %954, float %955, float %956, float %957, float %958, float %959, float %960, float %961, float %962, float %963, float %964, float %965, float %966, float %967, float %968, float %969, float %970, float %971, float %972, float %973, float %974, float %975, float %976, float %977, i64 %983, i64 %470, i1 true) #2, !dbg !54
  %985 = add i32 %979, 32, !dbg !54
  %986 = lshr exact i32 %985, 4, !dbg !54
  %987 = and i32 %986, 16383, !dbg !54
  %988 = zext nneg i32 %987 to i64, !dbg !54
  %989 = or disjoint i64 %988, 4611686293338849280, !dbg !54
  %990 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 0, !dbg !54
  %991 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 1, !dbg !54
  %992 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 2, !dbg !54
  %993 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 3, !dbg !54
  %994 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 4, !dbg !54
  %995 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 5, !dbg !54
  %996 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 6, !dbg !54
  %997 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 7, !dbg !54
  %998 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 8, !dbg !54
  %999 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 9, !dbg !54
  %1000 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 10, !dbg !54
  %1001 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 11, !dbg !54
  %1002 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 12, !dbg !54
  %1003 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 13, !dbg !54
  %1004 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 14, !dbg !54
  %1005 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 15, !dbg !54
  %1006 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 16, !dbg !54
  %1007 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 17, !dbg !54
  %1008 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 18, !dbg !54
  %1009 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 19, !dbg !54
  %1010 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 20, !dbg !54
  %1011 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 21, !dbg !54
  %1012 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 22, !dbg !54
  %1013 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 23, !dbg !54
  %1014 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 24, !dbg !54
  %1015 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 25, !dbg !54
  %1016 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 26, !dbg !54
  %1017 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 27, !dbg !54
  %1018 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 28, !dbg !54
  %1019 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 29, !dbg !54
  %1020 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 30, !dbg !54
  %1021 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %984, 31, !dbg !54
  %1022 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %990, float %991, float %992, float %993, float %994, float %995, float %996, float %997, float %998, float %999, float %1000, float %1001, float %1002, float %1003, float %1004, float %1005, float %1006, float %1007, float %1008, float %1009, float %1010, float %1011, float %1012, float %1013, float %1014, float %1015, float %1016, float %1017, float %1018, float %1019, float %1020, float %1021, i64 %989, i64 %474, i1 true) #2, !dbg !54
  %1023 = add i32 %979, 64, !dbg !54
  %1024 = lshr exact i32 %1023, 4, !dbg !54
  %1025 = and i32 %1024, 16383, !dbg !54
  %1026 = zext nneg i32 %1025 to i64, !dbg !54
  %1027 = or disjoint i64 %1026, 4611686293338849280, !dbg !54
  %1028 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 0, !dbg !54
  %1029 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 1, !dbg !54
  %1030 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 2, !dbg !54
  %1031 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 3, !dbg !54
  %1032 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 4, !dbg !54
  %1033 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 5, !dbg !54
  %1034 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 6, !dbg !54
  %1035 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 7, !dbg !54
  %1036 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 8, !dbg !54
  %1037 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 9, !dbg !54
  %1038 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 10, !dbg !54
  %1039 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 11, !dbg !54
  %1040 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 12, !dbg !54
  %1041 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 13, !dbg !54
  %1042 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 14, !dbg !54
  %1043 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 15, !dbg !54
  %1044 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 16, !dbg !54
  %1045 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 17, !dbg !54
  %1046 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 18, !dbg !54
  %1047 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 19, !dbg !54
  %1048 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 20, !dbg !54
  %1049 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 21, !dbg !54
  %1050 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 22, !dbg !54
  %1051 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 23, !dbg !54
  %1052 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 24, !dbg !54
  %1053 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 25, !dbg !54
  %1054 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 26, !dbg !54
  %1055 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 27, !dbg !54
  %1056 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 28, !dbg !54
  %1057 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 29, !dbg !54
  %1058 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 30, !dbg !54
  %1059 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1022, 31, !dbg !54
  %1060 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1028, float %1029, float %1030, float %1031, float %1032, float %1033, float %1034, float %1035, float %1036, float %1037, float %1038, float %1039, float %1040, float %1041, float %1042, float %1043, float %1044, float %1045, float %1046, float %1047, float %1048, float %1049, float %1050, float %1051, float %1052, float %1053, float %1054, float %1055, float %1056, float %1057, float %1058, float %1059, i64 %1027, i64 %478, i1 true) #2, !dbg !54
  %1061 = add i32 %979, 96, !dbg !54
  %1062 = lshr exact i32 %1061, 4, !dbg !54
  %1063 = and i32 %1062, 16383, !dbg !54
  %1064 = zext nneg i32 %1063 to i64, !dbg !54
  %1065 = or disjoint i64 %1064, 4611686293338849280, !dbg !54
  %1066 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 0, !dbg !54
  %1067 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 1, !dbg !54
  %1068 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 2, !dbg !54
  %1069 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 3, !dbg !54
  %1070 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 4, !dbg !54
  %1071 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 5, !dbg !54
  %1072 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 6, !dbg !54
  %1073 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 7, !dbg !54
  %1074 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 8, !dbg !54
  %1075 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 9, !dbg !54
  %1076 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 10, !dbg !54
  %1077 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 11, !dbg !54
  %1078 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 12, !dbg !54
  %1079 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 13, !dbg !54
  %1080 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 14, !dbg !54
  %1081 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 15, !dbg !54
  %1082 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 16, !dbg !54
  %1083 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 17, !dbg !54
  %1084 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 18, !dbg !54
  %1085 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 19, !dbg !54
  %1086 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 20, !dbg !54
  %1087 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 21, !dbg !54
  %1088 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 22, !dbg !54
  %1089 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 23, !dbg !54
  %1090 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 24, !dbg !54
  %1091 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 25, !dbg !54
  %1092 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 26, !dbg !54
  %1093 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 27, !dbg !54
  %1094 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 28, !dbg !54
  %1095 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 29, !dbg !54
  %1096 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 30, !dbg !54
  %1097 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1060, 31, !dbg !54
  %1098 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1066, float %1067, float %1068, float %1069, float %1070, float %1071, float %1072, float %1073, float %1074, float %1075, float %1076, float %1077, float %1078, float %1079, float %1080, float %1081, float %1082, float %1083, float %1084, float %1085, float %1086, float %1087, float %1088, float %1089, float %1090, float %1091, float %1092, float %1093, float %1094, float %1095, float %1096, float %1097, i64 %1065, i64 %482, i1 true) #2, !dbg !54
  %1099 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 0, !dbg !54
  %1100 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 1, !dbg !54
  %1101 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 2, !dbg !54
  %1102 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 3, !dbg !54
  %1103 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 4, !dbg !54
  %1104 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 5, !dbg !54
  %1105 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 6, !dbg !54
  %1106 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 7, !dbg !54
  %1107 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 8, !dbg !54
  %1108 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 9, !dbg !54
  %1109 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 10, !dbg !54
  %1110 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 11, !dbg !54
  %1111 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 12, !dbg !54
  %1112 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 13, !dbg !54
  %1113 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 14, !dbg !54
  %1114 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 15, !dbg !54
  %1115 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 16, !dbg !54
  %1116 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 17, !dbg !54
  %1117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 18, !dbg !54
  %1118 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 19, !dbg !54
  %1119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 20, !dbg !54
  %1120 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 21, !dbg !54
  %1121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 22, !dbg !54
  %1122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 23, !dbg !54
  %1123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 24, !dbg !54
  %1124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 25, !dbg !54
  %1125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 26, !dbg !54
  %1126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 27, !dbg !54
  %1127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 28, !dbg !54
  %1128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 29, !dbg !54
  %1129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 30, !dbg !54
  %1130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1098, 31, !dbg !54
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !54
  %1131 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1099, float %1100, float %1101, float %1102, float %1103, float %1104, float %1105, float %1106, float %1107, float %1108, float %1109, float %1110, float %1111, float %1112, float %1113, float %1114, float %1115, float %1116, float %1117, float %1118, float %1119, float %1120, float %1121, float %1122, float %1123, float %1124, float %1125, float %1126, float %1127, float %1128, float %1129, float %1130, ptr addrspace(3) %978, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 173056), i32 0, i32 0) #2, !dbg !54
  %1132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 0, !dbg !54
  %1133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 1, !dbg !54
  %1134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 2, !dbg !54
  %1135 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 3, !dbg !54
  %1136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 4, !dbg !54
  %1137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 5, !dbg !54
  %1138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 6, !dbg !54
  %1139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 7, !dbg !54
  %1140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 8, !dbg !54
  %1141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 9, !dbg !54
  %1142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 10, !dbg !54
  %1143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 11, !dbg !54
  %1144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 12, !dbg !54
  %1145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 13, !dbg !54
  %1146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 14, !dbg !54
  %1147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 15, !dbg !54
  %1148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 16, !dbg !54
  %1149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 17, !dbg !54
  %1150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 18, !dbg !54
  %1151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 19, !dbg !54
  %1152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 20, !dbg !54
  %1153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 21, !dbg !54
  %1154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 22, !dbg !54
  %1155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 23, !dbg !54
  %1156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 24, !dbg !54
  %1157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 25, !dbg !54
  %1158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 26, !dbg !54
  %1159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 27, !dbg !54
  %1160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 28, !dbg !54
  %1161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 29, !dbg !54
  %1162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 30, !dbg !54
  %1163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1131, 31, !dbg !54
  %1164 = extractelement <4 x i32> %789, i64 0, !dbg !38
  %.idx514 = shl i32 %1164, 13, !dbg !37
  %1165 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %.idx514, !dbg !37
  %1166 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1165, i32 %393, !dbg !55
  %1167 = ptrtoint ptr addrspace(3) %1166 to i32, !dbg !55
  %1168 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1167) #2, !dbg !55
  %1169 = extractvalue { i32, i32, i32, i32 } %1168, 0, !dbg !55
  %1170 = bitcast i32 %1169 to <2 x bfloat>, !dbg !55
  %1171 = extractvalue { i32, i32, i32, i32 } %1168, 1, !dbg !55
  %1172 = bitcast i32 %1171 to <2 x bfloat>, !dbg !55
  %1173 = extractvalue { i32, i32, i32, i32 } %1168, 2, !dbg !55
  %1174 = bitcast i32 %1173 to <2 x bfloat>, !dbg !55
  %1175 = extractvalue { i32, i32, i32, i32 } %1168, 3, !dbg !55
  %1176 = bitcast i32 %1175 to <2 x bfloat>, !dbg !55
  %1177 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1165, i32 %396, !dbg !55
  %1178 = ptrtoint ptr addrspace(3) %1177 to i32, !dbg !55
  %1179 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1178) #2, !dbg !55
  %1180 = extractvalue { i32, i32, i32, i32 } %1179, 0, !dbg !55
  %1181 = bitcast i32 %1180 to <2 x bfloat>, !dbg !55
  %1182 = extractvalue { i32, i32, i32, i32 } %1179, 1, !dbg !55
  %1183 = bitcast i32 %1182 to <2 x bfloat>, !dbg !55
  %1184 = extractvalue { i32, i32, i32, i32 } %1179, 2, !dbg !55
  %1185 = bitcast i32 %1184 to <2 x bfloat>, !dbg !55
  %1186 = extractvalue { i32, i32, i32, i32 } %1179, 3, !dbg !55
  %1187 = bitcast i32 %1186 to <2 x bfloat>, !dbg !55
  %1188 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1165, i32 %399, !dbg !55
  %1189 = ptrtoint ptr addrspace(3) %1188 to i32, !dbg !55
  %1190 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1189) #2, !dbg !55
  %1191 = extractvalue { i32, i32, i32, i32 } %1190, 0, !dbg !55
  %1192 = bitcast i32 %1191 to <2 x bfloat>, !dbg !55
  %1193 = extractvalue { i32, i32, i32, i32 } %1190, 1, !dbg !55
  %1194 = bitcast i32 %1193 to <2 x bfloat>, !dbg !55
  %1195 = extractvalue { i32, i32, i32, i32 } %1190, 2, !dbg !55
  %1196 = bitcast i32 %1195 to <2 x bfloat>, !dbg !55
  %1197 = extractvalue { i32, i32, i32, i32 } %1190, 3, !dbg !55
  %1198 = bitcast i32 %1197 to <2 x bfloat>, !dbg !55
  %1199 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1165, i32 %402, !dbg !55
  %1200 = ptrtoint ptr addrspace(3) %1199 to i32, !dbg !55
  %1201 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1200) #2, !dbg !55
  %1202 = extractvalue { i32, i32, i32, i32 } %1201, 0, !dbg !55
  %1203 = bitcast i32 %1202 to <2 x bfloat>, !dbg !55
  %1204 = extractvalue { i32, i32, i32, i32 } %1201, 1, !dbg !55
  %1205 = bitcast i32 %1204 to <2 x bfloat>, !dbg !55
  %1206 = extractvalue { i32, i32, i32, i32 } %1201, 2, !dbg !55
  %1207 = bitcast i32 %1206 to <2 x bfloat>, !dbg !55
  %1208 = extractvalue { i32, i32, i32, i32 } %1201, 3, !dbg !55
  %1209 = bitcast i32 %1208 to <2 x bfloat>, !dbg !55
  %1210 = fpext <2 x bfloat> %1170 to <2 x float>, !dbg !55
  %1211 = insertelement <2 x float> poison, float %1132, i64 0, !dbg !55
  %1212 = insertelement <2 x float> %1211, float %1133, i64 1, !dbg !55
  %1213 = fsub <2 x float> %1210, %1212, !dbg !55
  %1214 = fptrunc <2 x float> %1213 to <2 x bfloat>, !dbg !56
  %1215 = fpext <2 x bfloat> %1172 to <2 x float>, !dbg !55
  %1216 = insertelement <2 x float> poison, float %1134, i64 0, !dbg !55
  %1217 = insertelement <2 x float> %1216, float %1135, i64 1, !dbg !55
  %1218 = fsub <2 x float> %1215, %1217, !dbg !55
  %1219 = fptrunc <2 x float> %1218 to <2 x bfloat>, !dbg !56
  %1220 = fpext <2 x bfloat> %1174 to <2 x float>, !dbg !55
  %1221 = insertelement <2 x float> poison, float %1136, i64 0, !dbg !55
  %1222 = insertelement <2 x float> %1221, float %1137, i64 1, !dbg !55
  %1223 = fsub <2 x float> %1220, %1222, !dbg !55
  %1224 = fptrunc <2 x float> %1223 to <2 x bfloat>, !dbg !56
  %1225 = fpext <2 x bfloat> %1176 to <2 x float>, !dbg !55
  %1226 = insertelement <2 x float> poison, float %1138, i64 0, !dbg !55
  %1227 = insertelement <2 x float> %1226, float %1139, i64 1, !dbg !55
  %1228 = fsub <2 x float> %1225, %1227, !dbg !55
  %1229 = fptrunc <2 x float> %1228 to <2 x bfloat>, !dbg !56
  %1230 = fpext <2 x bfloat> %1181 to <2 x float>, !dbg !55
  %1231 = insertelement <2 x float> poison, float %1140, i64 0, !dbg !55
  %1232 = insertelement <2 x float> %1231, float %1141, i64 1, !dbg !55
  %1233 = fsub <2 x float> %1230, %1232, !dbg !55
  %1234 = fptrunc <2 x float> %1233 to <2 x bfloat>, !dbg !56
  %1235 = fpext <2 x bfloat> %1183 to <2 x float>, !dbg !55
  %1236 = insertelement <2 x float> poison, float %1142, i64 0, !dbg !55
  %1237 = insertelement <2 x float> %1236, float %1143, i64 1, !dbg !55
  %1238 = fsub <2 x float> %1235, %1237, !dbg !55
  %1239 = fptrunc <2 x float> %1238 to <2 x bfloat>, !dbg !56
  %1240 = fpext <2 x bfloat> %1185 to <2 x float>, !dbg !55
  %1241 = insertelement <2 x float> poison, float %1144, i64 0, !dbg !55
  %1242 = insertelement <2 x float> %1241, float %1145, i64 1, !dbg !55
  %1243 = fsub <2 x float> %1240, %1242, !dbg !55
  %1244 = fptrunc <2 x float> %1243 to <2 x bfloat>, !dbg !56
  %1245 = fpext <2 x bfloat> %1187 to <2 x float>, !dbg !55
  %1246 = insertelement <2 x float> poison, float %1146, i64 0, !dbg !55
  %1247 = insertelement <2 x float> %1246, float %1147, i64 1, !dbg !55
  %1248 = fsub <2 x float> %1245, %1247, !dbg !55
  %1249 = fptrunc <2 x float> %1248 to <2 x bfloat>, !dbg !56
  %1250 = fpext <2 x bfloat> %1192 to <2 x float>, !dbg !55
  %1251 = insertelement <2 x float> poison, float %1148, i64 0, !dbg !55
  %1252 = insertelement <2 x float> %1251, float %1149, i64 1, !dbg !55
  %1253 = fsub <2 x float> %1250, %1252, !dbg !55
  %1254 = fptrunc <2 x float> %1253 to <2 x bfloat>, !dbg !56
  %1255 = fpext <2 x bfloat> %1194 to <2 x float>, !dbg !55
  %1256 = insertelement <2 x float> poison, float %1150, i64 0, !dbg !55
  %1257 = insertelement <2 x float> %1256, float %1151, i64 1, !dbg !55
  %1258 = fsub <2 x float> %1255, %1257, !dbg !55
  %1259 = fptrunc <2 x float> %1258 to <2 x bfloat>, !dbg !56
  %1260 = fpext <2 x bfloat> %1196 to <2 x float>, !dbg !55
  %1261 = insertelement <2 x float> poison, float %1152, i64 0, !dbg !55
  %1262 = insertelement <2 x float> %1261, float %1153, i64 1, !dbg !55
  %1263 = fsub <2 x float> %1260, %1262, !dbg !55
  %1264 = fptrunc <2 x float> %1263 to <2 x bfloat>, !dbg !56
  %1265 = fpext <2 x bfloat> %1198 to <2 x float>, !dbg !55
  %1266 = insertelement <2 x float> poison, float %1154, i64 0, !dbg !55
  %1267 = insertelement <2 x float> %1266, float %1155, i64 1, !dbg !55
  %1268 = fsub <2 x float> %1265, %1267, !dbg !55
  %1269 = fptrunc <2 x float> %1268 to <2 x bfloat>, !dbg !56
  %1270 = fpext <2 x bfloat> %1203 to <2 x float>, !dbg !55
  %1271 = insertelement <2 x float> poison, float %1156, i64 0, !dbg !55
  %1272 = insertelement <2 x float> %1271, float %1157, i64 1, !dbg !55
  %1273 = fsub <2 x float> %1270, %1272, !dbg !55
  %1274 = fptrunc <2 x float> %1273 to <2 x bfloat>, !dbg !56
  %1275 = fpext <2 x bfloat> %1205 to <2 x float>, !dbg !55
  %1276 = insertelement <2 x float> poison, float %1158, i64 0, !dbg !55
  %1277 = insertelement <2 x float> %1276, float %1159, i64 1, !dbg !55
  %1278 = fsub <2 x float> %1275, %1277, !dbg !55
  %1279 = fptrunc <2 x float> %1278 to <2 x bfloat>, !dbg !56
  %1280 = fpext <2 x bfloat> %1207 to <2 x float>, !dbg !55
  %1281 = insertelement <2 x float> poison, float %1160, i64 0, !dbg !55
  %1282 = insertelement <2 x float> %1281, float %1161, i64 1, !dbg !55
  %1283 = fsub <2 x float> %1280, %1282, !dbg !55
  %1284 = fptrunc <2 x float> %1283 to <2 x bfloat>, !dbg !56
  %1285 = fpext <2 x bfloat> %1209 to <2 x float>, !dbg !55
  %1286 = insertelement <2 x float> poison, float %1162, i64 0, !dbg !55
  %1287 = insertelement <2 x float> %1286, float %1163, i64 1, !dbg !55
  %1288 = fsub <2 x float> %1285, %1287, !dbg !55
  %1289 = fptrunc <2 x float> %1288 to <2 x bfloat>, !dbg !56
  %1290 = bitcast <2 x bfloat> %1214 to i32, !dbg !56
  %1291 = bitcast <2 x bfloat> %1219 to i32, !dbg !56
  %1292 = bitcast <2 x bfloat> %1224 to i32, !dbg !56
  %1293 = bitcast <2 x bfloat> %1229 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %417, i32 %1290, i32 %1291, i32 %1292, i32 %1293) #2, !dbg !56
  %1294 = bitcast <2 x bfloat> %1234 to i32, !dbg !56
  %1295 = bitcast <2 x bfloat> %1239 to i32, !dbg !56
  %1296 = bitcast <2 x bfloat> %1244 to i32, !dbg !56
  %1297 = bitcast <2 x bfloat> %1249 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %419, i32 %1294, i32 %1295, i32 %1296, i32 %1297) #2, !dbg !56
  %1298 = bitcast <2 x bfloat> %1254 to i32, !dbg !56
  %1299 = bitcast <2 x bfloat> %1259 to i32, !dbg !56
  %1300 = bitcast <2 x bfloat> %1264 to i32, !dbg !56
  %1301 = bitcast <2 x bfloat> %1269 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %421, i32 %1298, i32 %1299, i32 %1300, i32 %1301) #2, !dbg !56
  %1302 = bitcast <2 x bfloat> %1274 to i32, !dbg !56
  %1303 = bitcast <2 x bfloat> %1279 to i32, !dbg !56
  %1304 = bitcast <2 x bfloat> %1284 to i32, !dbg !56
  %1305 = bitcast <2 x bfloat> %1289 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %423, i32 %1302, i32 %1303, i32 %1304, i32 %1305) #2, !dbg !56
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !56
  %1306 = load <4 x i32>, ptr addrspace(3) %432, align 16, !dbg !56
  %1307 = load <4 x i32>, ptr addrspace(3) %437, align 16, !dbg !56
  %1308 = load <4 x i32>, ptr addrspace(3) %442, align 16, !dbg !56
  %.extract634 = load i32, ptr addrspace(3) %427, align 16, !dbg !46
  %.extract636 = load i32, ptr addrspace(3) %514, align 4, !dbg !46
  %.extract638 = load i32, ptr addrspace(3) %515, align 8, !dbg !46
  %.extract640 = load i32, ptr addrspace(3) %516, align 4, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract634, i32 %.extract636, i32 %.extract638, i32 %.extract640, ptr addrspace(1) %775, i1 %.pn196.pn.pn679) #2, !dbg !46
  %.extract642 = extractelement <4 x i32> %1306, i64 0, !dbg !46
  %.extract644 = extractelement <4 x i32> %1306, i64 1, !dbg !46
  %.extract646 = extractelement <4 x i32> %1306, i64 2, !dbg !46
  %.extract648 = extractelement <4 x i32> %1306, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract642, i32 %.extract644, i32 %.extract646, i32 %.extract648, ptr addrspace(1) %776, i1 %.pn180.pn.pn680) #2, !dbg !46
  %.extract650 = extractelement <4 x i32> %1307, i64 0, !dbg !46
  %.extract652 = extractelement <4 x i32> %1307, i64 1, !dbg !46
  %.extract654 = extractelement <4 x i32> %1307, i64 2, !dbg !46
  %.extract656 = extractelement <4 x i32> %1307, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract650, i32 %.extract652, i32 %.extract654, i32 %.extract656, ptr addrspace(1) %777, i1 %.pn164.pn.pn681) #2, !dbg !46
  %.extract658 = extractelement <4 x i32> %1308, i64 0, !dbg !46
  %.extract660 = extractelement <4 x i32> %1308, i64 1, !dbg !46
  %.extract662 = extractelement <4 x i32> %1308, i64 2, !dbg !46
  %.extract664 = extractelement <4 x i32> %1308, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract658, i32 %.extract660, i32 %.extract662, i32 %.extract664, ptr addrspace(1) %778, i1 %.pn148.pn.pn682) #2, !dbg !46
  %1309 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %gep) #2, !dbg !57
  %1310 = bitcast i32 %1309 to float, !dbg !57
  %.idx563 = shl i32 %1164, 8, !dbg !38
  %1311 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181248), i32 %.idx563, !dbg !38
  %1312 = getelementptr inbounds nuw float, ptr addrspace(3) %1311, i32 %54, !dbg !38
  %1313 = load float, ptr addrspace(3) %1312, align 4, !dbg !38
  %1314 = getelementptr inbounds nuw float, ptr addrspace(3) %1311, i32 %55, !dbg !38
  %1315 = load float, ptr addrspace(3) %1314, align 4, !dbg !38
  %1316 = fsub float %1310, %1313, !dbg !58
  %1317 = fsub float %1310, %1315, !dbg !58
  %1318 = fmul float %1316, 0x3FF7154760000000, !dbg !59
  %1319 = tail call float @llvm.nvvm.ex2.approx.f(float %1318), !dbg !59
  %1320 = fmul float %1317, 0x3FF7154760000000, !dbg !59
  %1321 = tail call float @llvm.nvvm.ex2.approx.f(float %1320), !dbg !59
  %1322 = select i1 %783, float %1319, float 0.000000e+00, !dbg !60
  %1323 = select i1 %784, float %1321, float 0.000000e+00, !dbg !60
  %1324 = extractelement <2 x float> %1213, i64 0, !dbg !61
  %1325 = fmul float %1324, %1322, !dbg !61
  %1326 = extractelement <2 x float> %1213, i64 1, !dbg !61
  %1327 = fmul float %1326, %1322, !dbg !61
  %1328 = extractelement <2 x float> %1218, i64 0, !dbg !61
  %1329 = fmul float %1328, %1323, !dbg !61
  %1330 = extractelement <2 x float> %1218, i64 1, !dbg !61
  %1331 = fmul float %1330, %1323, !dbg !61
  %1332 = extractelement <2 x float> %1223, i64 0, !dbg !61
  %1333 = fmul float %1332, %1322, !dbg !61
  %1334 = extractelement <2 x float> %1223, i64 1, !dbg !61
  %1335 = fmul float %1334, %1322, !dbg !61
  %1336 = extractelement <2 x float> %1228, i64 0, !dbg !61
  %1337 = fmul float %1336, %1323, !dbg !61
  %1338 = extractelement <2 x float> %1228, i64 1, !dbg !61
  %1339 = fmul float %1338, %1323, !dbg !61
  %1340 = extractelement <2 x float> %1233, i64 0, !dbg !61
  %1341 = fmul float %1340, %1322, !dbg !61
  %1342 = extractelement <2 x float> %1233, i64 1, !dbg !61
  %1343 = fmul float %1342, %1322, !dbg !61
  %1344 = extractelement <2 x float> %1238, i64 0, !dbg !61
  %1345 = fmul float %1344, %1323, !dbg !61
  %1346 = extractelement <2 x float> %1238, i64 1, !dbg !61
  %1347 = fmul float %1346, %1323, !dbg !61
  %1348 = extractelement <2 x float> %1243, i64 0, !dbg !61
  %1349 = fmul float %1348, %1322, !dbg !61
  %1350 = extractelement <2 x float> %1243, i64 1, !dbg !61
  %1351 = fmul float %1350, %1322, !dbg !61
  %1352 = extractelement <2 x float> %1248, i64 0, !dbg !61
  %1353 = fmul float %1352, %1323, !dbg !61
  %1354 = extractelement <2 x float> %1248, i64 1, !dbg !61
  %1355 = fmul float %1354, %1323, !dbg !61
  %1356 = extractelement <2 x float> %1253, i64 0, !dbg !61
  %1357 = fmul float %1356, %1322, !dbg !61
  %1358 = extractelement <2 x float> %1253, i64 1, !dbg !61
  %1359 = fmul float %1358, %1322, !dbg !61
  %1360 = extractelement <2 x float> %1258, i64 0, !dbg !61
  %1361 = fmul float %1360, %1323, !dbg !61
  %1362 = extractelement <2 x float> %1258, i64 1, !dbg !61
  %1363 = fmul float %1362, %1323, !dbg !61
  %1364 = extractelement <2 x float> %1263, i64 0, !dbg !61
  %1365 = fmul float %1364, %1322, !dbg !61
  %1366 = extractelement <2 x float> %1263, i64 1, !dbg !61
  %1367 = fmul float %1366, %1322, !dbg !61
  %1368 = extractelement <2 x float> %1268, i64 0, !dbg !61
  %1369 = fmul float %1368, %1323, !dbg !61
  %1370 = extractelement <2 x float> %1268, i64 1, !dbg !61
  %1371 = fmul float %1370, %1323, !dbg !61
  %1372 = extractelement <2 x float> %1273, i64 0, !dbg !61
  %1373 = fmul float %1372, %1322, !dbg !61
  %1374 = extractelement <2 x float> %1273, i64 1, !dbg !61
  %1375 = fmul float %1374, %1322, !dbg !61
  %1376 = extractelement <2 x float> %1278, i64 0, !dbg !61
  %1377 = fmul float %1376, %1323, !dbg !61
  %1378 = extractelement <2 x float> %1278, i64 1, !dbg !61
  %1379 = fmul float %1378, %1323, !dbg !61
  %1380 = extractelement <2 x float> %1283, i64 0, !dbg !61
  %1381 = fmul float %1380, %1322, !dbg !61
  %1382 = extractelement <2 x float> %1283, i64 1, !dbg !61
  %1383 = fmul float %1382, %1322, !dbg !61
  %1384 = extractelement <2 x float> %1288, i64 0, !dbg !61
  %1385 = fmul float %1384, %1323, !dbg !61
  %1386 = extractelement <2 x float> %1288, i64 1, !dbg !61
  %1387 = fmul float %1386, %1323, !dbg !61
  %1388 = fmul float %1310, 0x3FF7154760000000, !dbg !62
  %1389 = tail call float @llvm.nvvm.ex2.approx.f(float %1388), !dbg !62
  %1390 = fmul float %553, %1389, !dbg !63
  %1391 = fmul float %554, %1389, !dbg !63
  %1392 = fmul float %555, %1389, !dbg !63
  %1393 = fmul float %556, %1389, !dbg !63
  %1394 = fmul float %557, %1389, !dbg !63
  %1395 = fmul float %558, %1389, !dbg !63
  %1396 = fmul float %559, %1389, !dbg !63
  %1397 = fmul float %560, %1389, !dbg !63
  %1398 = fmul float %561, %1389, !dbg !63
  %1399 = fmul float %562, %1389, !dbg !63
  %1400 = fmul float %563, %1389, !dbg !63
  %1401 = fmul float %564, %1389, !dbg !63
  %1402 = fmul float %565, %1389, !dbg !63
  %1403 = fmul float %566, %1389, !dbg !63
  %1404 = fmul float %567, %1389, !dbg !63
  %1405 = fmul float %568, %1389, !dbg !63
  %1406 = fmul float %569, %1389, !dbg !63
  %1407 = fmul float %570, %1389, !dbg !63
  %1408 = fmul float %571, %1389, !dbg !63
  %1409 = fmul float %572, %1389, !dbg !63
  %1410 = fmul float %573, %1389, !dbg !63
  %1411 = fmul float %574, %1389, !dbg !63
  %1412 = fmul float %575, %1389, !dbg !63
  %1413 = fmul float %576, %1389, !dbg !63
  %1414 = fmul float %577, %1389, !dbg !63
  %1415 = fmul float %578, %1389, !dbg !63
  %1416 = fmul float %579, %1389, !dbg !63
  %1417 = fmul float %580, %1389, !dbg !63
  %1418 = fmul float %581, %1389, !dbg !63
  %1419 = fmul float %582, %1389, !dbg !63
  %1420 = fmul float %583, %1389, !dbg !63
  %1421 = fmul float %584, %1389, !dbg !63
  %1422 = fmul float %521, %1389, !dbg !64
  %1423 = fmul float %522, %1389, !dbg !64
  %1424 = fmul float %523, %1389, !dbg !64
  %1425 = fmul float %524, %1389, !dbg !64
  %1426 = fmul float %525, %1389, !dbg !64
  %1427 = fmul float %526, %1389, !dbg !64
  %1428 = fmul float %527, %1389, !dbg !64
  %1429 = fmul float %528, %1389, !dbg !64
  %1430 = fmul float %529, %1389, !dbg !64
  %1431 = fmul float %530, %1389, !dbg !64
  %1432 = fmul float %531, %1389, !dbg !64
  %1433 = fmul float %532, %1389, !dbg !64
  %1434 = fmul float %533, %1389, !dbg !64
  %1435 = fmul float %534, %1389, !dbg !64
  %1436 = fmul float %535, %1389, !dbg !64
  %1437 = fmul float %536, %1389, !dbg !64
  %1438 = fmul float %537, %1389, !dbg !64
  %1439 = fmul float %538, %1389, !dbg !64
  %1440 = fmul float %539, %1389, !dbg !64
  %1441 = fmul float %540, %1389, !dbg !64
  %1442 = fmul float %541, %1389, !dbg !64
  %1443 = fmul float %542, %1389, !dbg !64
  %1444 = fmul float %543, %1389, !dbg !64
  %1445 = fmul float %544, %1389, !dbg !64
  %1446 = fmul float %545, %1389, !dbg !64
  %1447 = fmul float %546, %1389, !dbg !64
  %1448 = fmul float %547, %1389, !dbg !64
  %1449 = fmul float %548, %1389, !dbg !64
  %1450 = fmul float %549, %1389, !dbg !64
  %1451 = fmul float %550, %1389, !dbg !64
  %1452 = fmul float %551, %1389, !dbg !64
  %1453 = fmul float %552, %1389, !dbg !64
  %1454 = fptrunc float %1325 to bfloat, !dbg !65
  %1455 = fptrunc float %1327 to bfloat, !dbg !65
  %1456 = fptrunc float %1329 to bfloat, !dbg !65
  %1457 = fptrunc float %1331 to bfloat, !dbg !65
  %1458 = fptrunc float %1333 to bfloat, !dbg !65
  %1459 = fptrunc float %1335 to bfloat, !dbg !65
  %1460 = fptrunc float %1337 to bfloat, !dbg !65
  %1461 = fptrunc float %1339 to bfloat, !dbg !65
  %1462 = fptrunc float %1341 to bfloat, !dbg !65
  %1463 = fptrunc float %1343 to bfloat, !dbg !65
  %1464 = fptrunc float %1345 to bfloat, !dbg !65
  %1465 = fptrunc float %1347 to bfloat, !dbg !65
  %1466 = fptrunc float %1349 to bfloat, !dbg !65
  %1467 = fptrunc float %1351 to bfloat, !dbg !65
  %1468 = fptrunc float %1353 to bfloat, !dbg !65
  %1469 = fptrunc float %1355 to bfloat, !dbg !65
  %1470 = fptrunc float %1357 to bfloat, !dbg !65
  %1471 = fptrunc float %1359 to bfloat, !dbg !65
  %1472 = fptrunc float %1361 to bfloat, !dbg !65
  %1473 = fptrunc float %1363 to bfloat, !dbg !65
  %1474 = fptrunc float %1365 to bfloat, !dbg !65
  %1475 = fptrunc float %1367 to bfloat, !dbg !65
  %1476 = fptrunc float %1369 to bfloat, !dbg !65
  %1477 = fptrunc float %1371 to bfloat, !dbg !65
  %1478 = fptrunc float %1373 to bfloat, !dbg !65
  %1479 = fptrunc float %1375 to bfloat, !dbg !65
  %1480 = fptrunc float %1377 to bfloat, !dbg !65
  %1481 = fptrunc float %1379 to bfloat, !dbg !65
  %1482 = fptrunc float %1381 to bfloat, !dbg !65
  %1483 = fptrunc float %1383 to bfloat, !dbg !65
  %1484 = fptrunc float %1385 to bfloat, !dbg !65
  %1485 = fptrunc float %1387 to bfloat, !dbg !65
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !65
  %1486 = insertelement <2 x bfloat> poison, bfloat %1454, i64 0, !dbg !65
  %1487 = insertelement <2 x bfloat> %1486, bfloat %1455, i64 1, !dbg !65
  %1488 = bitcast <2 x bfloat> %1487 to i32, !dbg !65
  %1489 = insertelement <2 x bfloat> poison, bfloat %1456, i64 0, !dbg !65
  %1490 = insertelement <2 x bfloat> %1489, bfloat %1457, i64 1, !dbg !65
  %1491 = bitcast <2 x bfloat> %1490 to i32, !dbg !65
  %1492 = insertelement <2 x bfloat> poison, bfloat %1458, i64 0, !dbg !65
  %1493 = insertelement <2 x bfloat> %1492, bfloat %1459, i64 1, !dbg !65
  %1494 = bitcast <2 x bfloat> %1493 to i32, !dbg !65
  %1495 = insertelement <2 x bfloat> poison, bfloat %1460, i64 0, !dbg !65
  %1496 = insertelement <2 x bfloat> %1495, bfloat %1461, i64 1, !dbg !65
  %1497 = bitcast <2 x bfloat> %1496 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %484, i32 %1488, i32 %1491, i32 %1494, i32 %1497) #2, !dbg !65
  %1498 = insertelement <2 x bfloat> poison, bfloat %1462, i64 0, !dbg !65
  %1499 = insertelement <2 x bfloat> %1498, bfloat %1463, i64 1, !dbg !65
  %1500 = bitcast <2 x bfloat> %1499 to i32, !dbg !65
  %1501 = insertelement <2 x bfloat> poison, bfloat %1464, i64 0, !dbg !65
  %1502 = insertelement <2 x bfloat> %1501, bfloat %1465, i64 1, !dbg !65
  %1503 = bitcast <2 x bfloat> %1502 to i32, !dbg !65
  %1504 = insertelement <2 x bfloat> poison, bfloat %1466, i64 0, !dbg !65
  %1505 = insertelement <2 x bfloat> %1504, bfloat %1467, i64 1, !dbg !65
  %1506 = bitcast <2 x bfloat> %1505 to i32, !dbg !65
  %1507 = insertelement <2 x bfloat> poison, bfloat %1468, i64 0, !dbg !65
  %1508 = insertelement <2 x bfloat> %1507, bfloat %1469, i64 1, !dbg !65
  %1509 = bitcast <2 x bfloat> %1508 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %486, i32 %1500, i32 %1503, i32 %1506, i32 %1509) #2, !dbg !65
  %1510 = insertelement <2 x bfloat> poison, bfloat %1470, i64 0, !dbg !65
  %1511 = insertelement <2 x bfloat> %1510, bfloat %1471, i64 1, !dbg !65
  %1512 = bitcast <2 x bfloat> %1511 to i32, !dbg !65
  %1513 = insertelement <2 x bfloat> poison, bfloat %1472, i64 0, !dbg !65
  %1514 = insertelement <2 x bfloat> %1513, bfloat %1473, i64 1, !dbg !65
  %1515 = bitcast <2 x bfloat> %1514 to i32, !dbg !65
  %1516 = insertelement <2 x bfloat> poison, bfloat %1474, i64 0, !dbg !65
  %1517 = insertelement <2 x bfloat> %1516, bfloat %1475, i64 1, !dbg !65
  %1518 = bitcast <2 x bfloat> %1517 to i32, !dbg !65
  %1519 = insertelement <2 x bfloat> poison, bfloat %1476, i64 0, !dbg !65
  %1520 = insertelement <2 x bfloat> %1519, bfloat %1477, i64 1, !dbg !65
  %1521 = bitcast <2 x bfloat> %1520 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %488, i32 %1512, i32 %1515, i32 %1518, i32 %1521) #2, !dbg !65
  %1522 = insertelement <2 x bfloat> poison, bfloat %1478, i64 0, !dbg !65
  %1523 = insertelement <2 x bfloat> %1522, bfloat %1479, i64 1, !dbg !65
  %1524 = bitcast <2 x bfloat> %1523 to i32, !dbg !65
  %1525 = insertelement <2 x bfloat> poison, bfloat %1480, i64 0, !dbg !65
  %1526 = insertelement <2 x bfloat> %1525, bfloat %1481, i64 1, !dbg !65
  %1527 = bitcast <2 x bfloat> %1526 to i32, !dbg !65
  %1528 = insertelement <2 x bfloat> poison, bfloat %1482, i64 0, !dbg !65
  %1529 = insertelement <2 x bfloat> %1528, bfloat %1483, i64 1, !dbg !65
  %1530 = bitcast <2 x bfloat> %1529 to i32, !dbg !65
  %1531 = insertelement <2 x bfloat> poison, bfloat %1484, i64 0, !dbg !65
  %1532 = insertelement <2 x bfloat> %1531, bfloat %1485, i64 1, !dbg !65
  %1533 = bitcast <2 x bfloat> %1532 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %490, i32 %1524, i32 %1527, i32 %1530, i32 %1533) #2, !dbg !65
  %1534 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %791, !dbg !39
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !66
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !66
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !66
  %1535 = ptrtoint ptr addrspace(3) %1534 to i32, !dbg !66
  %1536 = lshr exact i32 %1535, 4, !dbg !66
  %1537 = and i32 %1536, 16383, !dbg !66
  %1538 = zext nneg i32 %1537 to i64, !dbg !66
  %1539 = or disjoint i64 %1538, 4611686293338849280, !dbg !66
  %1540 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1390, float %1391, float %1392, float %1393, float %1394, float %1395, float %1396, float %1397, float %1398, float %1399, float %1400, float %1401, float %1402, float %1403, float %1404, float %1405, float %1406, float %1407, float %1408, float %1409, float %1410, float %1411, float %1412, float %1413, float %1414, float %1415, float %1416, float %1417, float %1418, float %1419, float %1420, float %1421, i64 %1539, i64 %494, i1 true) #2, !dbg !66
  %1541 = add i32 %1535, 2048, !dbg !66
  %1542 = lshr exact i32 %1541, 4, !dbg !66
  %1543 = and i32 %1542, 16383, !dbg !66
  %1544 = zext nneg i32 %1543 to i64, !dbg !66
  %1545 = or disjoint i64 %1544, 4611686293338849280, !dbg !66
  %1546 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 0, !dbg !66
  %1547 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 1, !dbg !66
  %1548 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 2, !dbg !66
  %1549 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 3, !dbg !66
  %1550 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 4, !dbg !66
  %1551 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 5, !dbg !66
  %1552 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 6, !dbg !66
  %1553 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 7, !dbg !66
  %1554 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 8, !dbg !66
  %1555 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 9, !dbg !66
  %1556 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 10, !dbg !66
  %1557 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 11, !dbg !66
  %1558 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 12, !dbg !66
  %1559 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 13, !dbg !66
  %1560 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 14, !dbg !66
  %1561 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 15, !dbg !66
  %1562 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 16, !dbg !66
  %1563 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 17, !dbg !66
  %1564 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 18, !dbg !66
  %1565 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 19, !dbg !66
  %1566 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 20, !dbg !66
  %1567 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 21, !dbg !66
  %1568 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 22, !dbg !66
  %1569 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 23, !dbg !66
  %1570 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 24, !dbg !66
  %1571 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 25, !dbg !66
  %1572 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 26, !dbg !66
  %1573 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 27, !dbg !66
  %1574 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 28, !dbg !66
  %1575 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 29, !dbg !66
  %1576 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 30, !dbg !66
  %1577 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1540, 31, !dbg !66
  %1578 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1546, float %1547, float %1548, float %1549, float %1550, float %1551, float %1552, float %1553, float %1554, float %1555, float %1556, float %1557, float %1558, float %1559, float %1560, float %1561, float %1562, float %1563, float %1564, float %1565, float %1566, float %1567, float %1568, float %1569, float %1570, float %1571, float %1572, float %1573, float %1574, float %1575, float %1576, float %1577, i64 %1545, i64 %498, i1 true) #2, !dbg !66
  %1579 = add i32 %1535, 4096, !dbg !66
  %1580 = lshr exact i32 %1579, 4, !dbg !66
  %1581 = and i32 %1580, 16383, !dbg !66
  %1582 = zext nneg i32 %1581 to i64, !dbg !66
  %1583 = or disjoint i64 %1582, 4611686293338849280, !dbg !66
  %1584 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 0, !dbg !66
  %1585 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 1, !dbg !66
  %1586 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 2, !dbg !66
  %1587 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 3, !dbg !66
  %1588 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 4, !dbg !66
  %1589 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 5, !dbg !66
  %1590 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 6, !dbg !66
  %1591 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 7, !dbg !66
  %1592 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 8, !dbg !66
  %1593 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 9, !dbg !66
  %1594 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 10, !dbg !66
  %1595 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 11, !dbg !66
  %1596 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 12, !dbg !66
  %1597 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 13, !dbg !66
  %1598 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 14, !dbg !66
  %1599 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 15, !dbg !66
  %1600 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 16, !dbg !66
  %1601 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 17, !dbg !66
  %1602 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 18, !dbg !66
  %1603 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 19, !dbg !66
  %1604 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 20, !dbg !66
  %1605 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 21, !dbg !66
  %1606 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 22, !dbg !66
  %1607 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 23, !dbg !66
  %1608 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 24, !dbg !66
  %1609 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 25, !dbg !66
  %1610 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 26, !dbg !66
  %1611 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 27, !dbg !66
  %1612 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 28, !dbg !66
  %1613 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 29, !dbg !66
  %1614 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 30, !dbg !66
  %1615 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1578, 31, !dbg !66
  %1616 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1584, float %1585, float %1586, float %1587, float %1588, float %1589, float %1590, float %1591, float %1592, float %1593, float %1594, float %1595, float %1596, float %1597, float %1598, float %1599, float %1600, float %1601, float %1602, float %1603, float %1604, float %1605, float %1606, float %1607, float %1608, float %1609, float %1610, float %1611, float %1612, float %1613, float %1614, float %1615, i64 %1583, i64 %502, i1 true) #2, !dbg !66
  %1617 = add i32 %1535, 6144, !dbg !66
  %1618 = lshr exact i32 %1617, 4, !dbg !66
  %1619 = and i32 %1618, 16383, !dbg !66
  %1620 = zext nneg i32 %1619 to i64, !dbg !66
  %1621 = or disjoint i64 %1620, 4611686293338849280, !dbg !66
  %1622 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 0, !dbg !66
  %1623 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 1, !dbg !66
  %1624 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 2, !dbg !66
  %1625 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 3, !dbg !66
  %1626 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 4, !dbg !66
  %1627 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 5, !dbg !66
  %1628 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 6, !dbg !66
  %1629 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 7, !dbg !66
  %1630 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 8, !dbg !66
  %1631 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 9, !dbg !66
  %1632 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 10, !dbg !66
  %1633 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 11, !dbg !66
  %1634 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 12, !dbg !66
  %1635 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 13, !dbg !66
  %1636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 14, !dbg !66
  %1637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 15, !dbg !66
  %1638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 16, !dbg !66
  %1639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 17, !dbg !66
  %1640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 18, !dbg !66
  %1641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 19, !dbg !66
  %1642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 20, !dbg !66
  %1643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 21, !dbg !66
  %1644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 22, !dbg !66
  %1645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 23, !dbg !66
  %1646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 24, !dbg !66
  %1647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 25, !dbg !66
  %1648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 26, !dbg !66
  %1649 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 27, !dbg !66
  %1650 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 28, !dbg !66
  %1651 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 29, !dbg !66
  %1652 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 30, !dbg !66
  %1653 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1616, 31, !dbg !66
  %1654 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1622, float %1623, float %1624, float %1625, float %1626, float %1627, float %1628, float %1629, float %1630, float %1631, float %1632, float %1633, float %1634, float %1635, float %1636, float %1637, float %1638, float %1639, float %1640, float %1641, float %1642, float %1643, float %1644, float %1645, float %1646, float %1647, float %1648, float %1649, float %1650, float %1651, float %1652, float %1653, i64 %1621, i64 %506, i1 true) #2, !dbg !66
  %1655 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 0, !dbg !66
  %1656 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 1, !dbg !66
  %1657 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 2, !dbg !66
  %1658 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 3, !dbg !66
  %1659 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 4, !dbg !66
  %1660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 5, !dbg !66
  %1661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 6, !dbg !66
  %1662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 7, !dbg !66
  %1663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 8, !dbg !66
  %1664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 9, !dbg !66
  %1665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 10, !dbg !66
  %1666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 11, !dbg !66
  %1667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 12, !dbg !66
  %1668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 13, !dbg !66
  %1669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 14, !dbg !66
  %1670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 15, !dbg !66
  %1671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 16, !dbg !66
  %1672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 17, !dbg !66
  %1673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 18, !dbg !66
  %1674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 19, !dbg !66
  %1675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 20, !dbg !66
  %1676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 21, !dbg !66
  %1677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 22, !dbg !66
  %1678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 23, !dbg !66
  %1679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 24, !dbg !66
  %1680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 25, !dbg !66
  %1681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 26, !dbg !66
  %1682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 27, !dbg !66
  %1683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 28, !dbg !66
  %1684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 29, !dbg !66
  %1685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 30, !dbg !66
  %1686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 31, !dbg !66
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !66
  %1687 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1655, float %1656, float %1657, float %1658, float %1659, float %1660, float %1661, float %1662, float %1663, float %1664, float %1665, float %1666, float %1667, float %1668, float %1669, float %1670, float %1671, float %1672, float %1673, float %1674, float %1675, float %1676, float %1677, float %1678, float %1679, float %1680, float %1681, float %1682, float %1683, float %1684, float %1685, float %1686, ptr addrspace(3) %1534, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 0, i32 0) #2, !dbg !66
  %1688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 0, !dbg !66
  %1689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 1, !dbg !66
  %1690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 2, !dbg !66
  %1691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 3, !dbg !66
  %1692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 4, !dbg !66
  %1693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 5, !dbg !66
  %1694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 6, !dbg !66
  %1695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 7, !dbg !66
  %1696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 8, !dbg !66
  %1697 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 9, !dbg !66
  %1698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 10, !dbg !66
  %1699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 11, !dbg !66
  %1700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 12, !dbg !66
  %1701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 13, !dbg !66
  %1702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 14, !dbg !66
  %1703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 15, !dbg !66
  %1704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 16, !dbg !66
  %1705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 17, !dbg !66
  %1706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 18, !dbg !66
  %1707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 19, !dbg !66
  %1708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 20, !dbg !66
  %1709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 21, !dbg !66
  %1710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 22, !dbg !66
  %1711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 23, !dbg !66
  %1712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 24, !dbg !66
  %1713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 25, !dbg !66
  %1714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 26, !dbg !66
  %1715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 27, !dbg !66
  %1716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 28, !dbg !66
  %1717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 29, !dbg !66
  %1718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 30, !dbg !66
  %1719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1687, 31, !dbg !66
  %1720 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %791, !dbg !40
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !67
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !67
  %1721 = ptrtoint ptr addrspace(3) %1720 to i32, !dbg !67
  %1722 = lshr exact i32 %1721, 4, !dbg !67
  %1723 = and i32 %1722, 16383, !dbg !67
  %1724 = zext nneg i32 %1723 to i64, !dbg !67
  %1725 = or disjoint i64 %1724, 4611686293338849280, !dbg !67
  %1726 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1422, float %1423, float %1424, float %1425, float %1426, float %1427, float %1428, float %1429, float %1430, float %1431, float %1432, float %1433, float %1434, float %1435, float %1436, float %1437, float %1438, float %1439, float %1440, float %1441, float %1442, float %1443, float %1444, float %1445, float %1446, float %1447, float %1448, float %1449, float %1450, float %1451, float %1452, float %1453, i64 %1725, i64 %494, i1 true) #2, !dbg !67
  %1727 = add i32 %1721, 2048, !dbg !67
  %1728 = lshr exact i32 %1727, 4, !dbg !67
  %1729 = and i32 %1728, 16383, !dbg !67
  %1730 = zext nneg i32 %1729 to i64, !dbg !67
  %1731 = or disjoint i64 %1730, 4611686293338849280, !dbg !67
  %1732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 0, !dbg !67
  %1733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 1, !dbg !67
  %1734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 2, !dbg !67
  %1735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 3, !dbg !67
  %1736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 4, !dbg !67
  %1737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 5, !dbg !67
  %1738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 6, !dbg !67
  %1739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 7, !dbg !67
  %1740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 8, !dbg !67
  %1741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 9, !dbg !67
  %1742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 10, !dbg !67
  %1743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 11, !dbg !67
  %1744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 12, !dbg !67
  %1745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 13, !dbg !67
  %1746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 14, !dbg !67
  %1747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 15, !dbg !67
  %1748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 16, !dbg !67
  %1749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 17, !dbg !67
  %1750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 18, !dbg !67
  %1751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 19, !dbg !67
  %1752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 20, !dbg !67
  %1753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 21, !dbg !67
  %1754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 22, !dbg !67
  %1755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 23, !dbg !67
  %1756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 24, !dbg !67
  %1757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 25, !dbg !67
  %1758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 26, !dbg !67
  %1759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 27, !dbg !67
  %1760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 28, !dbg !67
  %1761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 29, !dbg !67
  %1762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 30, !dbg !67
  %1763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1726, 31, !dbg !67
  %1764 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1732, float %1733, float %1734, float %1735, float %1736, float %1737, float %1738, float %1739, float %1740, float %1741, float %1742, float %1743, float %1744, float %1745, float %1746, float %1747, float %1748, float %1749, float %1750, float %1751, float %1752, float %1753, float %1754, float %1755, float %1756, float %1757, float %1758, float %1759, float %1760, float %1761, float %1762, float %1763, i64 %1731, i64 %498, i1 true) #2, !dbg !67
  %1765 = add i32 %1721, 4096, !dbg !67
  %1766 = lshr exact i32 %1765, 4, !dbg !67
  %1767 = and i32 %1766, 16383, !dbg !67
  %1768 = zext nneg i32 %1767 to i64, !dbg !67
  %1769 = or disjoint i64 %1768, 4611686293338849280, !dbg !67
  %1770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 0, !dbg !67
  %1771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 1, !dbg !67
  %1772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 2, !dbg !67
  %1773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 3, !dbg !67
  %1774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 4, !dbg !67
  %1775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 5, !dbg !67
  %1776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 6, !dbg !67
  %1777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 7, !dbg !67
  %1778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 8, !dbg !67
  %1779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 9, !dbg !67
  %1780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 10, !dbg !67
  %1781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 11, !dbg !67
  %1782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 12, !dbg !67
  %1783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 13, !dbg !67
  %1784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 14, !dbg !67
  %1785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 15, !dbg !67
  %1786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 16, !dbg !67
  %1787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 17, !dbg !67
  %1788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 18, !dbg !67
  %1789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 19, !dbg !67
  %1790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 20, !dbg !67
  %1791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 21, !dbg !67
  %1792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 22, !dbg !67
  %1793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 23, !dbg !67
  %1794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 24, !dbg !67
  %1795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 25, !dbg !67
  %1796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 26, !dbg !67
  %1797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 27, !dbg !67
  %1798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 28, !dbg !67
  %1799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 29, !dbg !67
  %1800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 30, !dbg !67
  %1801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1764, 31, !dbg !67
  %1802 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1770, float %1771, float %1772, float %1773, float %1774, float %1775, float %1776, float %1777, float %1778, float %1779, float %1780, float %1781, float %1782, float %1783, float %1784, float %1785, float %1786, float %1787, float %1788, float %1789, float %1790, float %1791, float %1792, float %1793, float %1794, float %1795, float %1796, float %1797, float %1798, float %1799, float %1800, float %1801, i64 %1769, i64 %502, i1 true) #2, !dbg !67
  %1803 = add i32 %1721, 6144, !dbg !67
  %1804 = lshr exact i32 %1803, 4, !dbg !67
  %1805 = and i32 %1804, 16383, !dbg !67
  %1806 = zext nneg i32 %1805 to i64, !dbg !67
  %1807 = or disjoint i64 %1806, 4611686293338849280, !dbg !67
  %1808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 0, !dbg !67
  %1809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 1, !dbg !67
  %1810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 2, !dbg !67
  %1811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 3, !dbg !67
  %1812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 4, !dbg !67
  %1813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 5, !dbg !67
  %1814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 6, !dbg !67
  %1815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 7, !dbg !67
  %1816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 8, !dbg !67
  %1817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 9, !dbg !67
  %1818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 10, !dbg !67
  %1819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 11, !dbg !67
  %1820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 12, !dbg !67
  %1821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 13, !dbg !67
  %1822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 14, !dbg !67
  %1823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 15, !dbg !67
  %1824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 16, !dbg !67
  %1825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 17, !dbg !67
  %1826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 18, !dbg !67
  %1827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 19, !dbg !67
  %1828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 20, !dbg !67
  %1829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 21, !dbg !67
  %1830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 22, !dbg !67
  %1831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 23, !dbg !67
  %1832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 24, !dbg !67
  %1833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 25, !dbg !67
  %1834 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 26, !dbg !67
  %1835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 27, !dbg !67
  %1836 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 28, !dbg !67
  %1837 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 29, !dbg !67
  %1838 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 30, !dbg !67
  %1839 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1802, 31, !dbg !67
  %1840 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1808, float %1809, float %1810, float %1811, float %1812, float %1813, float %1814, float %1815, float %1816, float %1817, float %1818, float %1819, float %1820, float %1821, float %1822, float %1823, float %1824, float %1825, float %1826, float %1827, float %1828, float %1829, float %1830, float %1831, float %1832, float %1833, float %1834, float %1835, float %1836, float %1837, float %1838, float %1839, i64 %1807, i64 %506, i1 true) #2, !dbg !67
  %1841 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 0, !dbg !67
  %1842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 1, !dbg !67
  %1843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 2, !dbg !67
  %1844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 3, !dbg !67
  %1845 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 4, !dbg !67
  %1846 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 5, !dbg !67
  %1847 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 6, !dbg !67
  %1848 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 7, !dbg !67
  %1849 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 8, !dbg !67
  %1850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 9, !dbg !67
  %1851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 10, !dbg !67
  %1852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 11, !dbg !67
  %1853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 12, !dbg !67
  %1854 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 13, !dbg !67
  %1855 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 14, !dbg !67
  %1856 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 15, !dbg !67
  %1857 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 16, !dbg !67
  %1858 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 17, !dbg !67
  %1859 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 18, !dbg !67
  %1860 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 19, !dbg !67
  %1861 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 20, !dbg !67
  %1862 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 21, !dbg !67
  %1863 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 22, !dbg !67
  %1864 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 23, !dbg !67
  %1865 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 24, !dbg !67
  %1866 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 25, !dbg !67
  %1867 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 26, !dbg !67
  %1868 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 27, !dbg !67
  %1869 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 28, !dbg !67
  %1870 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 29, !dbg !67
  %1871 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 30, !dbg !67
  %1872 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1840, 31, !dbg !67
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !67
  %1873 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1841, float %1842, float %1843, float %1844, float %1845, float %1846, float %1847, float %1848, float %1849, float %1850, float %1851, float %1852, float %1853, float %1854, float %1855, float %1856, float %1857, float %1858, float %1859, float %1860, float %1861, float %1862, float %1863, float %1864, float %1865, float %1866, float %1867, float %1868, float %1869, float %1870, float %1871, float %1872, ptr addrspace(3) %1720, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 155648), i32 0, i32 0) #2, !dbg !67
  %1874 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 0, !dbg !67
  %1875 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 1, !dbg !67
  %1876 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 2, !dbg !67
  %1877 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 3, !dbg !67
  %1878 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 4, !dbg !67
  %1879 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 5, !dbg !67
  %1880 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 6, !dbg !67
  %1881 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 7, !dbg !67
  %1882 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 8, !dbg !67
  %1883 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 9, !dbg !67
  %1884 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 10, !dbg !67
  %1885 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 11, !dbg !67
  %1886 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 12, !dbg !67
  %1887 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 13, !dbg !67
  %1888 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 14, !dbg !67
  %1889 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 15, !dbg !67
  %1890 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 16, !dbg !67
  %1891 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 17, !dbg !67
  %1892 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 18, !dbg !67
  %1893 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 19, !dbg !67
  %1894 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 20, !dbg !67
  %1895 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 21, !dbg !67
  %1896 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 22, !dbg !67
  %1897 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 23, !dbg !67
  %1898 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 24, !dbg !67
  %1899 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 25, !dbg !67
  %1900 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 26, !dbg !67
  %1901 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 27, !dbg !67
  %1902 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 28, !dbg !67
  %1903 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 29, !dbg !67
  %1904 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 30, !dbg !67
  %1905 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1873, 31, !dbg !67
  %indvars.iv.tr = trunc i64 %indvars.iv to i32, !dbg !31
  %1906 = shl i32 %indvars.iv.tr, 6, !dbg !31
  %1907 = add i32 %1906, 192, !dbg !31
  %1908 = sext i32 %1907 to i64, !dbg !31
  %1909 = or disjoint i64 %1908, %56, !dbg !35
  %1910 = or disjoint i64 %1908, %57, !dbg !35
  %1911 = or disjoint i64 %1908, %58, !dbg !35
  %1912 = or disjoint i64 %1908, %59, !dbg !35
  %1913 = or disjoint i64 %1908, %61, !dbg !35
  %1914 = or disjoint i64 %1908, %62, !dbg !35
  %1915 = shl nsw i64 %1909, 12, !dbg !35
  %1916 = shl nsw i64 %1910, 12, !dbg !35
  %1917 = shl nsw i64 %1911, 12, !dbg !35
  %1918 = shl nsw i64 %1912, 12, !dbg !35
  %1919 = or disjoint i64 %1915, %60, !dbg !35
  %1920 = or disjoint i64 %1916, %60, !dbg !35
  %1921 = or disjoint i64 %1917, %60, !dbg !35
  %1922 = or disjoint i64 %1918, %60, !dbg !35
  %1923 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1919, !dbg !35
  %1924 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1920, !dbg !35
  %1925 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1921, !dbg !35
  %1926 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1922, !dbg !35
  %1927 = icmp sgt i32 %1907, -1, !dbg !35
  %1928 = icmp slt i64 %1909, %72, !dbg !35
  %1929 = icmp slt i64 %1910, %72, !dbg !35
  %1930 = icmp slt i64 %1911, %72, !dbg !35
  %1931 = icmp slt i64 %1912, %72, !dbg !35
  %1932 = and i1 %1927, %1928, !dbg !35
  %1933 = and i1 %1927, %1929, !dbg !35
  %1934 = and i1 %1927, %1930, !dbg !35
  %1935 = and i1 %1927, %1931, !dbg !35
  %1936 = extractelement <4 x i32> %789, i64 3, !dbg !35
  %1937 = shl i32 %1936, 12, !dbg !35
  %1938 = getelementptr bfloat, ptr addrspace(3) @global_smem, i32 %1937, !dbg !35
  %1939 = and i1 %586, %1932, !dbg !34
  %1940 = and i1 %586, %1933, !dbg !34
  %1941 = and i1 %586, %1934, !dbg !34
  %1942 = and i1 %586, %1935, !dbg !34
  %1943 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1938, i32 %105, !dbg !35
  %1944 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1938, i32 %110, !dbg !35
  %1945 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1938, i32 %113, !dbg !35
  %1946 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1938, i32 %116, !dbg !35
  %1947 = select i1 %1939, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1943, ptr addrspace(1) %1923, i32 %1947) #2, !dbg !35
  %1948 = select i1 %1940, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1944, ptr addrspace(1) %1924, i32 %1948) #2, !dbg !35
  %1949 = select i1 %1941, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1945, ptr addrspace(1) %1925, i32 %1949) #2, !dbg !35
  %1950 = select i1 %1942, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1946, ptr addrspace(1) %1926, i32 %1950) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %1951 = or disjoint i64 %1915, %71, !dbg !36
  %1952 = or disjoint i64 %1916, %71, !dbg !36
  %1953 = or disjoint i64 %1917, %71, !dbg !36
  %1954 = or disjoint i64 %1918, %71, !dbg !36
  %1955 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1951, !dbg !36
  %1956 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1952, !dbg !36
  %1957 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1953, !dbg !36
  %1958 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1954, !dbg !36
  %1959 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %1937, !dbg !36
  %1960 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1959, i32 %105, !dbg !36
  %1961 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1959, i32 %110, !dbg !36
  %1962 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1959, i32 %113, !dbg !36
  %1963 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1959, i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1960, ptr addrspace(1) %1955, i32 %1947) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1961, ptr addrspace(1) %1956, i32 %1948) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1962, ptr addrspace(1) %1957, i32 %1949) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1963, ptr addrspace(1) %1958, i32 %1950) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %1964 = add nsw i64 %1915, %63, !dbg !37
  %1965 = add nsw i64 %1916, %63, !dbg !37
  %1966 = add nsw i64 %1917, %63, !dbg !37
  %1967 = add nsw i64 %1918, %63, !dbg !37
  %1968 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1964, !dbg !37
  %1969 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1965, !dbg !37
  %1970 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1966, !dbg !37
  %1971 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1967, !dbg !37
  %1972 = and i1 %66, %1932, !dbg !37
  %1973 = and i1 %66, %1933, !dbg !37
  %1974 = and i1 %66, %1934, !dbg !37
  %1975 = and i1 %66, %1935, !dbg !37
  %1976 = extractelement <4 x i32> %789, i64 1, !dbg !38
  %.idx564 = shl i32 %1976, 13, !dbg !37
  %1977 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 131072), i32 %.idx564, !dbg !37
  %1978 = and i1 %586, %1972, !dbg !34
  %1979 = and i1 %586, %1973, !dbg !34
  %1980 = and i1 %586, %1974, !dbg !34
  %1981 = and i1 %586, %1975, !dbg !34
  %1982 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1977, i32 %152, !dbg !37
  %1983 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1977, i32 %154, !dbg !37
  %1984 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1977, i32 %156, !dbg !37
  %1985 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1977, i32 %158, !dbg !37
  %1986 = select i1 %1978, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1982, ptr addrspace(1) %1968, i32 %1986) #2, !dbg !37
  %1987 = select i1 %1979, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1983, ptr addrspace(1) %1969, i32 %1987) #2, !dbg !37
  %1988 = select i1 %1980, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1984, ptr addrspace(1) %1970, i32 %1988) #2, !dbg !37
  %1989 = select i1 %1981, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1985, ptr addrspace(1) %1971, i32 %1989) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx565 = shl nsw i64 %1913, 7, !dbg !38
  %1990 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx565, !dbg !38
  %.idx566 = shl nsw i64 %1914, 7, !dbg !38
  %1991 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx566, !dbg !38
  %1992 = icmp slt i64 %1913, %72, !dbg !38
  %1993 = icmp slt i64 %1914, %72, !dbg !38
  %1994 = and i1 %1927, %1992, !dbg !38
  %1995 = and i1 %1927, %1993, !dbg !38
  %.idx567 = shl i32 %1976, 8, !dbg !38
  %1996 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 181248), i32 %.idx567, !dbg !38
  %1997 = and i1 %586, %1994, !dbg !34
  %1998 = and i1 %586, %1995, !dbg !34
  %1999 = getelementptr inbounds nuw float, ptr addrspace(3) %1996, i32 %54, !dbg !38
  %2000 = getelementptr inbounds nuw float, ptr addrspace(3) %1996, i32 %55, !dbg !38
  %2001 = select i1 %1997, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %1999, ptr addrspace(1) %1990, i32 %2001, i1 %173) #2, !dbg !38
  %2002 = select i1 %1998, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %2000, ptr addrspace(1) %1991, i32 %2002, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %2003 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1919, !dbg !39
  %2004 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1920, !dbg !39
  %2005 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1921, !dbg !39
  %2006 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1922, !dbg !39
  %2007 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 65536), i32 %1937, !dbg !39
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %2008 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2007, i32 %105, !dbg !39
  %2009 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2007, i32 %110, !dbg !39
  %2010 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2007, i32 %113, !dbg !39
  %2011 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2007, i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2008, ptr addrspace(1) %2003, i32 %1947) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2009, ptr addrspace(1) %2004, i32 %1948) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2010, ptr addrspace(1) %2005, i32 %1949) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2011, ptr addrspace(1) %2006, i32 %1950) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %2012 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1951, !dbg !40
  %2013 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1952, !dbg !40
  %2014 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1953, !dbg !40
  %2015 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1954, !dbg !40
  %2016 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %1937, !dbg !40
  %2017 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2016, i32 %105, !dbg !40
  %2018 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2016, i32 %110, !dbg !40
  %2019 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2016, i32 %113, !dbg !40
  %2020 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2016, i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2017, ptr addrspace(1) %2012, i32 %1947) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2018, ptr addrspace(1) %2013, i32 %1948) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2019, ptr addrspace(1) %2014, i32 %1949) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %2020, ptr addrspace(1) %2015, i32 %1950) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !34
  br i1 %exitcond.not, label %._crit_edge, label %517, !dbg !34

._crit_edge:                                      ; preds = %517, %9
  %2021 = phi float [ 0.000000e+00, %9 ], [ %1688, %517 ]
  %2022 = phi float [ 0.000000e+00, %9 ], [ %1689, %517 ]
  %2023 = phi float [ 0.000000e+00, %9 ], [ %1690, %517 ]
  %2024 = phi float [ 0.000000e+00, %9 ], [ %1691, %517 ]
  %2025 = phi float [ 0.000000e+00, %9 ], [ %1692, %517 ]
  %2026 = phi float [ 0.000000e+00, %9 ], [ %1693, %517 ]
  %2027 = phi float [ 0.000000e+00, %9 ], [ %1694, %517 ]
  %2028 = phi float [ 0.000000e+00, %9 ], [ %1695, %517 ]
  %2029 = phi float [ 0.000000e+00, %9 ], [ %1696, %517 ]
  %2030 = phi float [ 0.000000e+00, %9 ], [ %1697, %517 ]
  %2031 = phi float [ 0.000000e+00, %9 ], [ %1698, %517 ]
  %2032 = phi float [ 0.000000e+00, %9 ], [ %1699, %517 ]
  %2033 = phi float [ 0.000000e+00, %9 ], [ %1700, %517 ]
  %2034 = phi float [ 0.000000e+00, %9 ], [ %1701, %517 ]
  %2035 = phi float [ 0.000000e+00, %9 ], [ %1702, %517 ]
  %2036 = phi float [ 0.000000e+00, %9 ], [ %1703, %517 ]
  %2037 = phi float [ 0.000000e+00, %9 ], [ %1704, %517 ]
  %2038 = phi float [ 0.000000e+00, %9 ], [ %1705, %517 ]
  %2039 = phi float [ 0.000000e+00, %9 ], [ %1706, %517 ]
  %2040 = phi float [ 0.000000e+00, %9 ], [ %1707, %517 ]
  %2041 = phi float [ 0.000000e+00, %9 ], [ %1708, %517 ]
  %2042 = phi float [ 0.000000e+00, %9 ], [ %1709, %517 ]
  %2043 = phi float [ 0.000000e+00, %9 ], [ %1710, %517 ]
  %2044 = phi float [ 0.000000e+00, %9 ], [ %1711, %517 ]
  %2045 = phi float [ 0.000000e+00, %9 ], [ %1712, %517 ]
  %2046 = phi float [ 0.000000e+00, %9 ], [ %1713, %517 ]
  %2047 = phi float [ 0.000000e+00, %9 ], [ %1714, %517 ]
  %2048 = phi float [ 0.000000e+00, %9 ], [ %1715, %517 ]
  %2049 = phi float [ 0.000000e+00, %9 ], [ %1716, %517 ]
  %2050 = phi float [ 0.000000e+00, %9 ], [ %1717, %517 ]
  %2051 = phi float [ 0.000000e+00, %9 ], [ %1718, %517 ]
  %2052 = phi float [ 0.000000e+00, %9 ], [ %1719, %517 ]
  %2053 = phi float [ 0.000000e+00, %9 ], [ %1874, %517 ]
  %2054 = phi float [ 0.000000e+00, %9 ], [ %1875, %517 ]
  %2055 = phi float [ 0.000000e+00, %9 ], [ %1876, %517 ]
  %2056 = phi float [ 0.000000e+00, %9 ], [ %1877, %517 ]
  %2057 = phi float [ 0.000000e+00, %9 ], [ %1878, %517 ]
  %2058 = phi float [ 0.000000e+00, %9 ], [ %1879, %517 ]
  %2059 = phi float [ 0.000000e+00, %9 ], [ %1880, %517 ]
  %2060 = phi float [ 0.000000e+00, %9 ], [ %1881, %517 ]
  %2061 = phi float [ 0.000000e+00, %9 ], [ %1882, %517 ]
  %2062 = phi float [ 0.000000e+00, %9 ], [ %1883, %517 ]
  %2063 = phi float [ 0.000000e+00, %9 ], [ %1884, %517 ]
  %2064 = phi float [ 0.000000e+00, %9 ], [ %1885, %517 ]
  %2065 = phi float [ 0.000000e+00, %9 ], [ %1886, %517 ]
  %2066 = phi float [ 0.000000e+00, %9 ], [ %1887, %517 ]
  %2067 = phi float [ 0.000000e+00, %9 ], [ %1888, %517 ]
  %2068 = phi float [ 0.000000e+00, %9 ], [ %1889, %517 ]
  %2069 = phi float [ 0.000000e+00, %9 ], [ %1890, %517 ]
  %2070 = phi float [ 0.000000e+00, %9 ], [ %1891, %517 ]
  %2071 = phi float [ 0.000000e+00, %9 ], [ %1892, %517 ]
  %2072 = phi float [ 0.000000e+00, %9 ], [ %1893, %517 ]
  %2073 = phi float [ 0.000000e+00, %9 ], [ %1894, %517 ]
  %2074 = phi float [ 0.000000e+00, %9 ], [ %1895, %517 ]
  %2075 = phi float [ 0.000000e+00, %9 ], [ %1896, %517 ]
  %2076 = phi float [ 0.000000e+00, %9 ], [ %1897, %517 ]
  %2077 = phi float [ 0.000000e+00, %9 ], [ %1898, %517 ]
  %2078 = phi float [ 0.000000e+00, %9 ], [ %1899, %517 ]
  %2079 = phi float [ 0.000000e+00, %9 ], [ %1900, %517 ]
  %2080 = phi float [ 0.000000e+00, %9 ], [ %1901, %517 ]
  %2081 = phi float [ 0.000000e+00, %9 ], [ %1902, %517 ]
  %2082 = phi float [ 0.000000e+00, %9 ], [ %1903, %517 ]
  %2083 = phi float [ 0.000000e+00, %9 ], [ %1904, %517 ]
  %2084 = phi float [ 0.000000e+00, %9 ], [ %1905, %517 ]
  %2085 = zext nneg i32 %15 to i64, !dbg !68
  %2086 = getelementptr float, ptr addrspace(1) %6, i64 %2085, !dbg !68
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !34
  %2087 = lshr i32 %33, 4, !dbg !69
  %2088 = shl nuw nsw i32 %33, 2, !dbg !69
  %2089 = and i32 %2088, 60, !dbg !69
  %2090 = zext nneg i32 %2089 to i64, !dbg !69
  %2091 = or disjoint i64 %2090, %32, !dbg !69
  %2092 = shl nuw nsw i32 %2087, 9, !dbg !69
  %2093 = and i32 %2092, 3584, !dbg !69
  %.idx271 = zext nneg i32 %2093 to i64, !dbg !69
  %2094 = getelementptr i8, ptr addrspace(1) %2086, i64 %.idx271, !dbg !69
  %2095 = getelementptr float, ptr addrspace(1) %2094, i64 %2091, !dbg !69
  %2096 = getelementptr i8, ptr addrspace(1) %2094, i64 4096, !dbg !69
  %2097 = getelementptr float, ptr addrspace(1) %2096, i64 %2091, !dbg !69
  %2098 = getelementptr i8, ptr addrspace(1) %2094, i64 8192, !dbg !69
  %2099 = getelementptr float, ptr addrspace(1) %2098, i64 %2091, !dbg !69
  %2100 = getelementptr i8, ptr addrspace(1) %2094, i64 12288, !dbg !69
  %2101 = getelementptr float, ptr addrspace(1) %2100, i64 %2091, !dbg !69
  %2102 = getelementptr i8, ptr addrspace(1) %2094, i64 16384, !dbg !69
  %2103 = getelementptr float, ptr addrspace(1) %2102, i64 %2091, !dbg !69
  %2104 = getelementptr i8, ptr addrspace(1) %2094, i64 20480, !dbg !69
  %2105 = getelementptr float, ptr addrspace(1) %2104, i64 %2091, !dbg !69
  %2106 = getelementptr i8, ptr addrspace(1) %2094, i64 24576, !dbg !69
  %2107 = getelementptr float, ptr addrspace(1) %2106, i64 %2091, !dbg !69
  %2108 = shl nuw nsw i32 %2087, 9, !dbg !69
  %2109 = or i32 %2108, 28672, !dbg !69
  %.idx278 = zext nneg i32 %2109 to i64, !dbg !69
  %2110 = getelementptr i8, ptr addrspace(1) %2086, i64 %.idx278, !dbg !69
  %2111 = getelementptr float, ptr addrspace(1) %2110, i64 %2091, !dbg !69
  %2112 = icmp slt i64 %2091, 128, !dbg !69
  %2113 = and i1 %64, %2112, !dbg !69
  %2114 = shl nuw nsw i32 %33, 1, !dbg !69
  %2115 = and i32 %2114, 6, !dbg !69
  %2116 = shl nuw nsw i32 %33, 4, !dbg !69
  %2117 = and i32 %2116, 192, !dbg !69
  %2118 = or disjoint i32 %2117, %2115, !dbg !69
  %2119 = shl nuw nsw i32 %36, 4, !dbg !69
  %2120 = or disjoint i32 %2118, %2119, !dbg !69
  %2121 = shl nuw nsw i32 %33, 5, !dbg !69
  %2122 = and i32 %2121, 3072, !dbg !69
  %2123 = or disjoint i32 %2120, %2122, !dbg !69
  %2124 = and i32 %2088, 508, !dbg !69
  %2125 = lshr i32 %2123, 4, !dbg !69
  %2126 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2125, !dbg !69
  %2127 = getelementptr inbounds nuw float, ptr addrspace(3) %2126, i32 %2123, !dbg !69
  %2128 = insertelement <2 x float> poison, float %2021, i64 0, !dbg !69
  %2129 = insertelement <2 x float> %2128, float %2022, i64 1, !dbg !69
  store <2 x float> %2129, ptr addrspace(3) %2127, align 8, !dbg !69
  %2130 = or disjoint i32 %2123, 512, !dbg !69
  %2131 = lshr i32 %2130, 4, !dbg !69
  %2132 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2131, !dbg !69
  %2133 = getelementptr inbounds nuw float, ptr addrspace(3) %2132, i32 %2130, !dbg !69
  %2134 = insertelement <2 x float> poison, float %2023, i64 0, !dbg !69
  %2135 = insertelement <2 x float> %2134, float %2024, i64 1, !dbg !69
  store <2 x float> %2135, ptr addrspace(3) %2133, align 8, !dbg !69
  %2136 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 32, !dbg !69
  %2137 = insertelement <2 x float> poison, float %2025, i64 0, !dbg !69
  %2138 = insertelement <2 x float> %2137, float %2026, i64 1, !dbg !69
  store <2 x float> %2138, ptr addrspace(3) %2136, align 8, !dbg !69
  %2139 = or disjoint i32 %2123, 520, !dbg !69
  %2140 = lshr i32 %2139, 4, !dbg !69
  %2141 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2140, !dbg !69
  %2142 = getelementptr inbounds nuw float, ptr addrspace(3) %2141, i32 %2139, !dbg !69
  %2143 = insertelement <2 x float> poison, float %2027, i64 0, !dbg !69
  %2144 = insertelement <2 x float> %2143, float %2028, i64 1, !dbg !69
  store <2 x float> %2144, ptr addrspace(3) %2142, align 8, !dbg !69
  %2145 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 64, !dbg !69
  %2146 = insertelement <2 x float> poison, float %2029, i64 0, !dbg !69
  %2147 = insertelement <2 x float> %2146, float %2030, i64 1, !dbg !69
  store <2 x float> %2147, ptr addrspace(3) %2145, align 8, !dbg !69
  %2148 = or disjoint i32 %2123, 528, !dbg !69
  %2149 = lshr i32 %2148, 4, !dbg !69
  %2150 = and i32 %2149, 268435452, !dbg !69
  %2151 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2150, !dbg !69
  %2152 = getelementptr inbounds nuw float, ptr addrspace(3) %2151, i32 %2148, !dbg !69
  %2153 = insertelement <2 x float> poison, float %2031, i64 0, !dbg !69
  %2154 = insertelement <2 x float> %2153, float %2032, i64 1, !dbg !69
  store <2 x float> %2154, ptr addrspace(3) %2152, align 8, !dbg !69
  %2155 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 96, !dbg !69
  %2156 = insertelement <2 x float> poison, float %2033, i64 0, !dbg !69
  %2157 = insertelement <2 x float> %2156, float %2034, i64 1, !dbg !69
  store <2 x float> %2157, ptr addrspace(3) %2155, align 8, !dbg !69
  %2158 = or disjoint i32 %2123, 536, !dbg !69
  %2159 = lshr i32 %2158, 4, !dbg !69
  %2160 = and i32 %2159, 268435452, !dbg !69
  %2161 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2160, !dbg !69
  %2162 = getelementptr inbounds nuw float, ptr addrspace(3) %2161, i32 %2158, !dbg !69
  %2163 = insertelement <2 x float> poison, float %2035, i64 0, !dbg !69
  %2164 = insertelement <2 x float> %2163, float %2036, i64 1, !dbg !69
  store <2 x float> %2164, ptr addrspace(3) %2162, align 8, !dbg !69
  %2165 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 128, !dbg !69
  %2166 = insertelement <2 x float> poison, float %2037, i64 0, !dbg !69
  %2167 = insertelement <2 x float> %2166, float %2038, i64 1, !dbg !69
  store <2 x float> %2167, ptr addrspace(3) %2165, align 8, !dbg !69
  %2168 = or disjoint i32 %2123, 544, !dbg !69
  %2169 = lshr i32 %2168, 4, !dbg !69
  %2170 = and i32 %2169, 268435452, !dbg !69
  %2171 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2170, !dbg !69
  %2172 = getelementptr inbounds nuw float, ptr addrspace(3) %2171, i32 %2168, !dbg !69
  %2173 = insertelement <2 x float> poison, float %2039, i64 0, !dbg !69
  %2174 = insertelement <2 x float> %2173, float %2040, i64 1, !dbg !69
  store <2 x float> %2174, ptr addrspace(3) %2172, align 8, !dbg !69
  %2175 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 160, !dbg !69
  %2176 = insertelement <2 x float> poison, float %2041, i64 0, !dbg !69
  %2177 = insertelement <2 x float> %2176, float %2042, i64 1, !dbg !69
  store <2 x float> %2177, ptr addrspace(3) %2175, align 8, !dbg !69
  %2178 = or disjoint i32 %2123, 552, !dbg !69
  %2179 = lshr i32 %2178, 4, !dbg !69
  %2180 = and i32 %2179, 268435452, !dbg !69
  %2181 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2180, !dbg !69
  %2182 = getelementptr inbounds nuw float, ptr addrspace(3) %2181, i32 %2178, !dbg !69
  %2183 = insertelement <2 x float> poison, float %2043, i64 0, !dbg !69
  %2184 = insertelement <2 x float> %2183, float %2044, i64 1, !dbg !69
  store <2 x float> %2184, ptr addrspace(3) %2182, align 8, !dbg !69
  %2185 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 192, !dbg !69
  %2186 = insertelement <2 x float> poison, float %2045, i64 0, !dbg !69
  %2187 = insertelement <2 x float> %2186, float %2046, i64 1, !dbg !69
  store <2 x float> %2187, ptr addrspace(3) %2185, align 8, !dbg !69
  %2188 = or disjoint i32 %2123, 560, !dbg !69
  %2189 = lshr i32 %2188, 4, !dbg !69
  %2190 = and i32 %2189, 268435452, !dbg !69
  %2191 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2190, !dbg !69
  %2192 = getelementptr inbounds nuw float, ptr addrspace(3) %2191, i32 %2188, !dbg !69
  %2193 = insertelement <2 x float> poison, float %2047, i64 0, !dbg !69
  %2194 = insertelement <2 x float> %2193, float %2048, i64 1, !dbg !69
  store <2 x float> %2194, ptr addrspace(3) %2192, align 8, !dbg !69
  %2195 = getelementptr inbounds nuw i8, ptr addrspace(3) %2127, i32 224, !dbg !69
  %2196 = insertelement <2 x float> poison, float %2049, i64 0, !dbg !69
  %2197 = insertelement <2 x float> %2196, float %2050, i64 1, !dbg !69
  store <2 x float> %2197, ptr addrspace(3) %2195, align 8, !dbg !69
  %2198 = or disjoint i32 %2123, 568, !dbg !69
  %2199 = lshr i32 %2198, 4, !dbg !69
  %2200 = and i32 %2199, 268435452, !dbg !69
  %2201 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2200, !dbg !69
  %2202 = getelementptr inbounds nuw float, ptr addrspace(3) %2201, i32 %2198, !dbg !69
  %2203 = insertelement <2 x float> poison, float %2051, i64 0, !dbg !69
  %2204 = insertelement <2 x float> %2203, float %2052, i64 1, !dbg !69
  store <2 x float> %2204, ptr addrspace(3) %2202, align 8, !dbg !69
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !69
  %2205 = and i32 %50, 28, !dbg !69
  %2206 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2205, !dbg !69
  %2207 = getelementptr inbounds nuw float, ptr addrspace(3) %2206, i32 %2124, !dbg !69
  %2208 = load <4 x i32>, ptr addrspace(3) %2207, align 16, !dbg !69
  %2209 = or disjoint i32 %2124, 512, !dbg !69
  %2210 = lshr i32 %2209, 4, !dbg !69
  %2211 = and i32 %2210, 60, !dbg !69
  %2212 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2211, !dbg !69
  %2213 = getelementptr inbounds nuw float, ptr addrspace(3) %2212, i32 %2209, !dbg !69
  %2214 = load <4 x i32>, ptr addrspace(3) %2213, align 16, !dbg !69
  %2215 = or disjoint i32 %2124, 1024, !dbg !69
  %2216 = lshr i32 %2215, 4, !dbg !69
  %2217 = and i32 %2216, 92, !dbg !69
  %2218 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2217, !dbg !69
  %2219 = getelementptr inbounds nuw float, ptr addrspace(3) %2218, i32 %2215, !dbg !69
  %2220 = load <4 x i32>, ptr addrspace(3) %2219, align 16, !dbg !69
  %2221 = or disjoint i32 %2124, 1536, !dbg !69
  %2222 = lshr i32 %2221, 4, !dbg !69
  %2223 = and i32 %2222, 124, !dbg !69
  %2224 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2223, !dbg !69
  %2225 = getelementptr inbounds nuw float, ptr addrspace(3) %2224, i32 %2221, !dbg !69
  %2226 = load <4 x i32>, ptr addrspace(3) %2225, align 16, !dbg !69
  %2227 = or disjoint i32 %2124, 2048, !dbg !69
  %2228 = lshr i32 %2227, 4, !dbg !69
  %2229 = and i32 %2228, 156, !dbg !69
  %2230 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2229, !dbg !69
  %2231 = getelementptr inbounds nuw float, ptr addrspace(3) %2230, i32 %2227, !dbg !69
  %2232 = load <4 x i32>, ptr addrspace(3) %2231, align 16, !dbg !69
  %2233 = or disjoint i32 %2124, 2560, !dbg !69
  %2234 = lshr i32 %2233, 4, !dbg !69
  %2235 = and i32 %2234, 188, !dbg !69
  %2236 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2235, !dbg !69
  %2237 = getelementptr inbounds nuw float, ptr addrspace(3) %2236, i32 %2233, !dbg !69
  %2238 = load <4 x i32>, ptr addrspace(3) %2237, align 16, !dbg !69
  %2239 = or disjoint i32 %2124, 3072, !dbg !69
  %2240 = lshr i32 %2239, 4, !dbg !69
  %2241 = and i32 %2240, 220, !dbg !69
  %2242 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2241, !dbg !69
  %2243 = getelementptr inbounds nuw float, ptr addrspace(3) %2242, i32 %2239, !dbg !69
  %2244 = load <4 x i32>, ptr addrspace(3) %2243, align 16, !dbg !69
  %2245 = or i32 %2088, 3584, !dbg !69
  %2246 = lshr i32 %2245, 4, !dbg !69
  %2247 = and i32 %2246, 252, !dbg !69
  %2248 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2247, !dbg !69
  %2249 = getelementptr inbounds nuw float, ptr addrspace(3) %2248, i32 %2245, !dbg !69
  %2250 = load <4 x i32>, ptr addrspace(3) %2249, align 16, !dbg !69
  %.extract = extractelement <4 x i32> %2208, i64 0, !dbg !69
  %.extract310 = extractelement <4 x i32> %2208, i64 1, !dbg !69
  %.extract311 = extractelement <4 x i32> %2208, i64 2, !dbg !69
  %.extract312 = extractelement <4 x i32> %2208, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract310, i32 %.extract311, i32 %.extract312, ptr addrspace(1) %2095, i1 %2113) #2, !dbg !69
  %.extract313 = extractelement <4 x i32> %2214, i64 0, !dbg !69
  %.extract314 = extractelement <4 x i32> %2214, i64 1, !dbg !69
  %.extract315 = extractelement <4 x i32> %2214, i64 2, !dbg !69
  %.extract316 = extractelement <4 x i32> %2214, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract313, i32 %.extract314, i32 %.extract315, i32 %.extract316, ptr addrspace(1) %2097, i1 %2113) #2, !dbg !69
  %.extract317 = extractelement <4 x i32> %2220, i64 0, !dbg !69
  %.extract318 = extractelement <4 x i32> %2220, i64 1, !dbg !69
  %.extract319 = extractelement <4 x i32> %2220, i64 2, !dbg !69
  %.extract320 = extractelement <4 x i32> %2220, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract317, i32 %.extract318, i32 %.extract319, i32 %.extract320, ptr addrspace(1) %2099, i1 %2113) #2, !dbg !69
  %.extract321 = extractelement <4 x i32> %2226, i64 0, !dbg !69
  %.extract322 = extractelement <4 x i32> %2226, i64 1, !dbg !69
  %.extract323 = extractelement <4 x i32> %2226, i64 2, !dbg !69
  %.extract324 = extractelement <4 x i32> %2226, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract321, i32 %.extract322, i32 %.extract323, i32 %.extract324, ptr addrspace(1) %2101, i1 %2113) #2, !dbg !69
  %.extract325 = extractelement <4 x i32> %2232, i64 0, !dbg !69
  %.extract326 = extractelement <4 x i32> %2232, i64 1, !dbg !69
  %.extract327 = extractelement <4 x i32> %2232, i64 2, !dbg !69
  %.extract328 = extractelement <4 x i32> %2232, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract325, i32 %.extract326, i32 %.extract327, i32 %.extract328, ptr addrspace(1) %2103, i1 %2113) #2, !dbg !69
  %.extract329 = extractelement <4 x i32> %2238, i64 0, !dbg !69
  %.extract330 = extractelement <4 x i32> %2238, i64 1, !dbg !69
  %.extract331 = extractelement <4 x i32> %2238, i64 2, !dbg !69
  %.extract332 = extractelement <4 x i32> %2238, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract329, i32 %.extract330, i32 %.extract331, i32 %.extract332, ptr addrspace(1) %2105, i1 %2113) #2, !dbg !69
  %.extract333 = extractelement <4 x i32> %2244, i64 0, !dbg !69
  %.extract334 = extractelement <4 x i32> %2244, i64 1, !dbg !69
  %.extract335 = extractelement <4 x i32> %2244, i64 2, !dbg !69
  %.extract336 = extractelement <4 x i32> %2244, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract333, i32 %.extract334, i32 %.extract335, i32 %.extract336, ptr addrspace(1) %2107, i1 %2113) #2, !dbg !69
  %.extract337 = extractelement <4 x i32> %2250, i64 0, !dbg !69
  %.extract338 = extractelement <4 x i32> %2250, i64 1, !dbg !69
  %.extract339 = extractelement <4 x i32> %2250, i64 2, !dbg !69
  %.extract340 = extractelement <4 x i32> %2250, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract337, i32 %.extract338, i32 %.extract339, i32 %.extract340, ptr addrspace(1) %2111, i1 %2113) #2, !dbg !69
  %2251 = getelementptr i8, ptr addrspace(1) %2094, i64 32768, !dbg !70
  %2252 = getelementptr float, ptr addrspace(1) %2251, i64 %2091, !dbg !70
  %2253 = getelementptr i8, ptr addrspace(1) %2094, i64 36864, !dbg !70
  %2254 = getelementptr float, ptr addrspace(1) %2253, i64 %2091, !dbg !70
  %2255 = getelementptr i8, ptr addrspace(1) %2094, i64 40960, !dbg !70
  %2256 = getelementptr float, ptr addrspace(1) %2255, i64 %2091, !dbg !70
  %2257 = getelementptr i8, ptr addrspace(1) %2094, i64 45056, !dbg !70
  %2258 = getelementptr float, ptr addrspace(1) %2257, i64 %2091, !dbg !70
  %2259 = getelementptr i8, ptr addrspace(1) %2094, i64 49152, !dbg !70
  %2260 = getelementptr float, ptr addrspace(1) %2259, i64 %2091, !dbg !70
  %2261 = getelementptr i8, ptr addrspace(1) %2094, i64 53248, !dbg !70
  %2262 = getelementptr float, ptr addrspace(1) %2261, i64 %2091, !dbg !70
  %2263 = getelementptr i8, ptr addrspace(1) %2094, i64 57344, !dbg !70
  %2264 = getelementptr float, ptr addrspace(1) %2263, i64 %2091, !dbg !70
  %2265 = getelementptr i8, ptr addrspace(1) %2110, i64 32768, !dbg !70
  %2266 = getelementptr float, ptr addrspace(1) %2265, i64 %2091, !dbg !70
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !70
  %2267 = insertelement <2 x float> poison, float %2053, i64 0, !dbg !70
  %2268 = insertelement <2 x float> %2267, float %2054, i64 1, !dbg !70
  store <2 x float> %2268, ptr addrspace(3) %2127, align 8, !dbg !70
  %2269 = insertelement <2 x float> poison, float %2055, i64 0, !dbg !70
  %2270 = insertelement <2 x float> %2269, float %2056, i64 1, !dbg !70
  store <2 x float> %2270, ptr addrspace(3) %2133, align 8, !dbg !70
  %2271 = insertelement <2 x float> poison, float %2057, i64 0, !dbg !70
  %2272 = insertelement <2 x float> %2271, float %2058, i64 1, !dbg !70
  store <2 x float> %2272, ptr addrspace(3) %2136, align 8, !dbg !70
  %2273 = insertelement <2 x float> poison, float %2059, i64 0, !dbg !70
  %2274 = insertelement <2 x float> %2273, float %2060, i64 1, !dbg !70
  store <2 x float> %2274, ptr addrspace(3) %2142, align 8, !dbg !70
  %2275 = insertelement <2 x float> poison, float %2061, i64 0, !dbg !70
  %2276 = insertelement <2 x float> %2275, float %2062, i64 1, !dbg !70
  store <2 x float> %2276, ptr addrspace(3) %2145, align 8, !dbg !70
  %2277 = insertelement <2 x float> poison, float %2063, i64 0, !dbg !70
  %2278 = insertelement <2 x float> %2277, float %2064, i64 1, !dbg !70
  store <2 x float> %2278, ptr addrspace(3) %2152, align 8, !dbg !70
  %2279 = insertelement <2 x float> poison, float %2065, i64 0, !dbg !70
  %2280 = insertelement <2 x float> %2279, float %2066, i64 1, !dbg !70
  store <2 x float> %2280, ptr addrspace(3) %2155, align 8, !dbg !70
  %2281 = insertelement <2 x float> poison, float %2067, i64 0, !dbg !70
  %2282 = insertelement <2 x float> %2281, float %2068, i64 1, !dbg !70
  store <2 x float> %2282, ptr addrspace(3) %2162, align 8, !dbg !70
  %2283 = insertelement <2 x float> poison, float %2069, i64 0, !dbg !70
  %2284 = insertelement <2 x float> %2283, float %2070, i64 1, !dbg !70
  store <2 x float> %2284, ptr addrspace(3) %2165, align 8, !dbg !70
  %2285 = insertelement <2 x float> poison, float %2071, i64 0, !dbg !70
  %2286 = insertelement <2 x float> %2285, float %2072, i64 1, !dbg !70
  store <2 x float> %2286, ptr addrspace(3) %2172, align 8, !dbg !70
  %2287 = insertelement <2 x float> poison, float %2073, i64 0, !dbg !70
  %2288 = insertelement <2 x float> %2287, float %2074, i64 1, !dbg !70
  store <2 x float> %2288, ptr addrspace(3) %2175, align 8, !dbg !70
  %2289 = insertelement <2 x float> poison, float %2075, i64 0, !dbg !70
  %2290 = insertelement <2 x float> %2289, float %2076, i64 1, !dbg !70
  store <2 x float> %2290, ptr addrspace(3) %2182, align 8, !dbg !70
  %2291 = insertelement <2 x float> poison, float %2077, i64 0, !dbg !70
  %2292 = insertelement <2 x float> %2291, float %2078, i64 1, !dbg !70
  store <2 x float> %2292, ptr addrspace(3) %2185, align 8, !dbg !70
  %2293 = insertelement <2 x float> poison, float %2079, i64 0, !dbg !70
  %2294 = insertelement <2 x float> %2293, float %2080, i64 1, !dbg !70
  store <2 x float> %2294, ptr addrspace(3) %2192, align 8, !dbg !70
  %2295 = insertelement <2 x float> poison, float %2081, i64 0, !dbg !70
  %2296 = insertelement <2 x float> %2295, float %2082, i64 1, !dbg !70
  store <2 x float> %2296, ptr addrspace(3) %2195, align 8, !dbg !70
  %2297 = insertelement <2 x float> poison, float %2083, i64 0, !dbg !70
  %2298 = insertelement <2 x float> %2297, float %2084, i64 1, !dbg !70
  store <2 x float> %2298, ptr addrspace(3) %2202, align 8, !dbg !70
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !70
  %2299 = load <4 x i32>, ptr addrspace(3) %2213, align 16, !dbg !70
  %2300 = load <4 x i32>, ptr addrspace(3) %2219, align 16, !dbg !70
  %2301 = load <4 x i32>, ptr addrspace(3) %2225, align 16, !dbg !70
  %2302 = load <4 x i32>, ptr addrspace(3) %2231, align 16, !dbg !70
  %2303 = load <4 x i32>, ptr addrspace(3) %2237, align 16, !dbg !70
  %2304 = load <4 x i32>, ptr addrspace(3) %2243, align 16, !dbg !70
  %2305 = load <4 x i32>, ptr addrspace(3) %2249, align 16, !dbg !70
  %.extract380 = load i32, ptr addrspace(3) %2207, align 16, !dbg !70
  %2306 = getelementptr inbounds nuw i8, ptr addrspace(3) %2207, i32 4, !dbg !70
  %.extract381 = load i32, ptr addrspace(3) %2306, align 4, !dbg !70
  %2307 = getelementptr inbounds nuw i8, ptr addrspace(3) %2207, i32 8, !dbg !70
  %.extract382 = load i32, ptr addrspace(3) %2307, align 8, !dbg !70
  %2308 = getelementptr inbounds nuw i8, ptr addrspace(3) %2207, i32 12, !dbg !70
  %.extract383 = load i32, ptr addrspace(3) %2308, align 4, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract380, i32 %.extract381, i32 %.extract382, i32 %.extract383, ptr addrspace(1) %2252, i1 %2113) #2, !dbg !70
  %.extract384 = extractelement <4 x i32> %2299, i64 0, !dbg !70
  %.extract385 = extractelement <4 x i32> %2299, i64 1, !dbg !70
  %.extract386 = extractelement <4 x i32> %2299, i64 2, !dbg !70
  %.extract387 = extractelement <4 x i32> %2299, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract384, i32 %.extract385, i32 %.extract386, i32 %.extract387, ptr addrspace(1) %2254, i1 %2113) #2, !dbg !70
  %.extract388 = extractelement <4 x i32> %2300, i64 0, !dbg !70
  %.extract389 = extractelement <4 x i32> %2300, i64 1, !dbg !70
  %.extract390 = extractelement <4 x i32> %2300, i64 2, !dbg !70
  %.extract391 = extractelement <4 x i32> %2300, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract388, i32 %.extract389, i32 %.extract390, i32 %.extract391, ptr addrspace(1) %2256, i1 %2113) #2, !dbg !70
  %.extract392 = extractelement <4 x i32> %2301, i64 0, !dbg !70
  %.extract393 = extractelement <4 x i32> %2301, i64 1, !dbg !70
  %.extract394 = extractelement <4 x i32> %2301, i64 2, !dbg !70
  %.extract395 = extractelement <4 x i32> %2301, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract392, i32 %.extract393, i32 %.extract394, i32 %.extract395, ptr addrspace(1) %2258, i1 %2113) #2, !dbg !70
  %.extract396 = extractelement <4 x i32> %2302, i64 0, !dbg !70
  %.extract397 = extractelement <4 x i32> %2302, i64 1, !dbg !70
  %.extract398 = extractelement <4 x i32> %2302, i64 2, !dbg !70
  %.extract399 = extractelement <4 x i32> %2302, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract396, i32 %.extract397, i32 %.extract398, i32 %.extract399, ptr addrspace(1) %2260, i1 %2113) #2, !dbg !70
  %.extract400 = extractelement <4 x i32> %2303, i64 0, !dbg !70
  %.extract401 = extractelement <4 x i32> %2303, i64 1, !dbg !70
  %.extract402 = extractelement <4 x i32> %2303, i64 2, !dbg !70
  %.extract403 = extractelement <4 x i32> %2303, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract400, i32 %.extract401, i32 %.extract402, i32 %.extract403, ptr addrspace(1) %2262, i1 %2113) #2, !dbg !70
  %.extract404 = extractelement <4 x i32> %2304, i64 0, !dbg !70
  %.extract405 = extractelement <4 x i32> %2304, i64 1, !dbg !70
  %.extract406 = extractelement <4 x i32> %2304, i64 2, !dbg !70
  %.extract407 = extractelement <4 x i32> %2304, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract404, i32 %.extract405, i32 %.extract406, i32 %.extract407, ptr addrspace(1) %2264, i1 %2113) #2, !dbg !70
  %.extract408 = extractelement <4 x i32> %2305, i64 0, !dbg !70
  %.extract409 = extractelement <4 x i32> %2305, i64 1, !dbg !70
  %.extract410 = extractelement <4 x i32> %2305, i64 2, !dbg !70
  %.extract411 = extractelement <4 x i32> %2305, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract408, i32 %.extract409, i32 %.extract410, i32 %.extract411, ptr addrspace(1) %2266, i1 %2113) #2, !dbg !70
  ret void, !dbg !71
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #5

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chunk_delta_h.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "chunk_gated_delta_rule_fwd_kernel_h_blockdim64", linkageName: "chunk_gated_delta_rule_fwd_kernel_h_blockdim64", scope: !1, file: !1, line: 36, type: !6, scopeLine: 36, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 61, column: 30, scope: !5)
!9 = !DILocation(line: 61, column: 48, scope: !5)
!10 = !DILocation(line: 62, column: 33, scope: !5)
!11 = !DILocation(line: 40, column: 22, scope: !12, inlinedAt: !14)
!12 = distinct !DILexicalBlockFile(scope: !5, file: !13, discriminator: 0)
!13 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language")
!14 = !DILocation(line: 70, column: 24, scope: !5)
!15 = !DILocation(line: 40, column: 28, scope: !12, inlinedAt: !14)
!16 = !DILocation(line: 71, column: 20, scope: !5)
!17 = !DILocation(line: 83, column: 29, scope: !5)
!18 = !DILocation(line: 83, column: 9, scope: !5)
!19 = !DILocation(line: 69, column: 25, scope: !5)
!20 = !DILocation(line: 84, column: 16, scope: !5)
!21 = !DILocation(line: 84, column: 20, scope: !5)
!22 = !DILocation(line: 84, column: 27, scope: !5)
!23 = !DILocation(line: 84, column: 9, scope: !5)
!24 = !DILocation(line: 85, column: 9, scope: !5)
!25 = !DILocation(line: 86, column: 9, scope: !5)
!26 = !DILocation(line: 88, column: 17, scope: !5)
!27 = !DILocation(line: 113, column: 79, scope: !5)
!28 = !DILocation(line: 113, column: 94, scope: !5)
!29 = !DILocation(line: 114, column: 23, scope: !5)
!30 = !DILocation(line: 117, column: 27, scope: !5)
!31 = !DILocation(line: 125, column: 83, scope: !5)
!32 = !DILocation(line: 150, column: 35, scope: !5)
!33 = !DILocation(line: 151, column: 50, scope: !5)
!34 = !DILocation(line: 112, column: 21, scope: !5)
!35 = !DILocation(line: 126, column: 22, scope: !5)
!36 = !DILocation(line: 130, column: 26, scope: !5)
!37 = !DILocation(line: 141, column: 22, scope: !5)
!38 = !DILocation(line: 152, column: 26, scope: !5)
!39 = !DILocation(line: 182, column: 22, scope: !5)
!40 = !DILocation(line: 189, column: 26, scope: !5)
!41 = !DILocation(line: 113, column: 43, scope: !5)
!42 = !DILocation(line: 113, column: 37, scope: !5)
!43 = !DILocation(line: 114, column: 31, scope: !5)
!44 = !DILocation(line: 117, column: 35, scope: !5)
!45 = !DILocation(line: 127, column: 26, scope: !5)
!46 = !DILocation(line: 145, column: 26, scope: !5)
!47 = !DILocation(line: 147, column: 30, scope: !5)
!48 = !DILocation(line: 147, column: 39, scope: !5)
!49 = !DILocation(line: 149, column: 30, scope: !5)
!50 = !DILocation(line: 149, column: 50, scope: !5)
!51 = !DILocation(line: 150, column: 56, scope: !5)
!52 = !DILocation(line: 150, column: 45, scope: !5)
!53 = !DILocation(line: 150, column: 60, scope: !5)
!54 = !DILocation(line: 131, column: 31, scope: !5)
!55 = !DILocation(line: 141, column: 52, scope: !5)
!56 = !DILocation(line: 145, column: 33, scope: !5)
!57 = !DILocation(line: 150, column: 31, scope: !5)
!58 = !DILocation(line: 153, column: 53, scope: !5)
!59 = !DILocation(line: 153, column: 42, scope: !5)
!60 = !DILocation(line: 153, column: 59, scope: !5)
!61 = !DILocation(line: 153, column: 24, scope: !5)
!62 = !DILocation(line: 154, column: 27, scope: !5)
!63 = !DILocation(line: 155, column: 20, scope: !5)
!64 = !DILocation(line: 157, column: 24, scope: !5)
!65 = !DILocation(line: 179, column: 21, scope: !5)
!66 = !DILocation(line: 186, column: 28, scope: !5)
!67 = !DILocation(line: 193, column: 32, scope: !5)
!68 = !DILocation(line: 95, column: 18, scope: !5)
!69 = !DILocation(line: 211, column: 23, scope: !5)
!70 = !DILocation(line: 214, column: 27, scope: !5)
!71 = !DILocation(line: 209, column: 4, scope: !5)
