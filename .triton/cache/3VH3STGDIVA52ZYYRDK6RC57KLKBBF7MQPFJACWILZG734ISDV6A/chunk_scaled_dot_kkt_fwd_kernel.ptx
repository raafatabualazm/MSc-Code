//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 128
{
	.reg .pred 	%p<110>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<995>;
	.reg .b64 	%rd<160>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r79, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd14, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd26, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r99, %ctaid.x;
	ld.param.b64 	%rd27, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r100, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r101, %r100, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r102, %r100, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r103, %r99, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r104, %r1, 5, 1;
	bfe.u32 	%r105, %r1, 3, 4;
	or.b32 	%r106, %r105, 16;
	or.b32 	%r107, %r105, 32;
	or.b32 	%r108, %r105, 48;
	shr.u32 	%r3, %r1, 2;
	bfe.u32 	%r109, %r1, 2, 3;
	shr.u32 	%r110, %r1, 1;
	and.b32 	%r111, %r110, 48;
	or.b32 	%r4, %r111, %r109;
	or.b32 	%r5, %r4, 8;
	shl.b32 	%r112, %r1, 3;
	and.b32 	%r113, %r112, 56;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r114, %r101, %r79;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r114;
	mul.wide.s32 	%rd28, %r114, 2;
	add.s64 	%rd29, %rd27, %rd28;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r102;
	mul.wide.u32 	%rd30, %r102, 2;
	add.s64 	%rd31, %rd29, %rd30;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r79;
	cvt.s64.s32 	%rd4, %r103;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd32, %r105;
	cvt.u64.u32 	%rd33, %r106;
	cvt.u64.u32 	%rd34, %r107;
	cvt.u64.u32 	%rd35, %r108;
	cvt.u64.u32 	%rd36, %r4;
	cvt.u64.u32 	%rd37, %r5;
	cvt.u64.u32 	%rd5, %r113;
	or.b64 	%rd38, %rd32, %rd4;
	or.b64 	%rd39, %rd33, %rd4;
	or.b64 	%rd40, %rd34, %rd4;
	or.b64 	%rd41, %rd35, %rd4;
	or.b64 	%rd42, %rd36, %rd4;
	or.b64 	%rd43, %rd37, %rd4;
	shl.b64 	%rd6, %rd42, 5;
	shl.b64 	%rd7, %rd43, 5;
	shl.b64 	%rd44, %rd42, 6;
	add.s64 	%rd15, %rd31, %rd44;
	shl.b64 	%rd45, %rd43, 6;
	add.s64 	%rd16, %rd31, %rd45;
	setp.gt.s32 	%p7, %r103, -1;
	setp.lt.s64 	%p8, %rd42, %rd3;
	setp.lt.s64 	%p9, %rd43, %rd3;
	and.pred 	%p21, %p7, %p8;
	and.pred 	%p22, %p7, %p9;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p21 ld.global.b16 { %rs3 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p22 ld.global.b16 { %rs4 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r114, %r102;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r115, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd46, %r115, 2;
	add.s64 	%rd47, %rd26, %rd46;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p10, %rd38, %rd3;
	setp.lt.s64 	%p11, %rd39, %rd3;
	setp.lt.s64 	%p12, %rd40, %rd3;
	setp.lt.s64 	%p13, %rd41, %rd3;
	shl.b64 	%rd48, %rd38, 13;
	add.s64 	%rd8, %rd47, %rd48;
	mul.wide.u32 	%rd49, %r113, 2;
	add.s64 	%rd17, %rd8, %rd49;
	shl.b64 	%rd50, %rd39, 13;
	add.s64 	%rd9, %rd47, %rd50;
	add.s64 	%rd18, %rd9, %rd49;
	shl.b64 	%rd51, %rd40, 13;
	add.s64 	%rd10, %rd47, %rd51;
	add.s64 	%rd19, %rd10, %rd49;
	shl.b64 	%rd52, %rd41, 13;
	add.s64 	%rd11, %rd47, %rd52;
	add.s64 	%rd20, %rd11, %rd49;
	and.b32 	%r116, %r104, 288;
	and.b32 	%r117, %r1, 24;
	mul.lo.s32 	%r118, %r117, 9;
	xor.b32 	%r119, %r118, %r113;
	xor.b32 	%r120, %r119, %r116;
	and.b32 	%r121, %r112, 512;
	or.b32 	%r7, %r120, %r121;
	shl.b32 	%r122, %r7, 1;
	mov.b32 	%r123, global_smem;
	add.s32 	%r80, %r123, %r122;
	or.b32 	%r124, %r113, 1024;
	xor.b32 	%r125, %r118, %r124;
	xor.b32 	%r126, %r125, %r116;
	or.b32 	%r8, %r126, %r121;
	shl.b32 	%r127, %r8, 1;
	add.s32 	%r82, %r123, %r127;
	or.b32 	%r128, %r113, 2048;
	xor.b32 	%r129, %r118, %r128;
	xor.b32 	%r130, %r129, %r116;
	or.b32 	%r9, %r130, %r121;
	shl.b32 	%r131, %r9, 1;
	add.s32 	%r84, %r123, %r131;
	or.b32 	%r132, %r113, 3072;
	xor.b32 	%r133, %r118, %r132;
	xor.b32 	%r134, %r133, %r116;
	or.b32 	%r10, %r134, %r121;
	shl.b32 	%r135, %r10, 1;
	add.s32 	%r86, %r123, %r135;
	selp.b32 	%r136, 16, 0, %p10;
	selp.b32 	%r89, %r136, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd17 + 0 ], 0x10, %r89;
	// end inline asm
	selp.b32 	%r137, 16, 0, %p11;
	selp.b32 	%r91, %r137, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r82 + 0 ], [ %rd18 + 0 ], 0x10, %r91;
	// end inline asm
	selp.b32 	%r138, 16, 0, %p12;
	selp.b32 	%r93, %r138, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r84 + 0 ], [ %rd19 + 0 ], 0x10, %r93;
	// end inline asm
	selp.b32 	%r139, 16, 0, %p13;
	selp.b32 	%r95, %r139, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r86 + 0 ], [ %rd20 + 0 ], 0x10, %r95;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd21, %rd17, 128;
	add.s64 	%rd22, %rd18, 128;
	add.s64 	%rd23, %rd19, 128;
	add.s64 	%rd24, %rd20, 128;
	bar.sync 	0;
	add.s32 	%r140, %r123, 8192;
	add.s32 	%r88, %r140, %r122;
	add.s32 	%r90, %r140, %r127;
	add.s32 	%r92, %r140, %r131;
	add.s32 	%r94, %r140, %r135;
	// begin inline asm
	cp.async.cg.shared.global [ %r88 + 0 ], [ %rd21 + 0 ], 0x10, %r89;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r90 + 0 ], [ %rd22 + 0 ], 0x10, %r91;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r92 + 0 ], [ %rd23 + 0 ], 0x10, %r93;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r94 + 0 ], [ %rd24 + 0 ], 0x10, %r95;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r963, 0f00000000;
	mov.b32 	%r962, 1;
	mov.b32 	%r961, -1;
	mov.b64 	%rd159, 0;
	mov.pred 	%p14, -1;
	mov.pred 	%p109, %p14;
	mov.b32 	%r964, %r963;
	mov.b32 	%r965, %r963;
	mov.b32 	%r966, %r963;
	mov.b32 	%r967, %r963;
	mov.b32 	%r968, %r963;
	mov.b32 	%r969, %r963;
	mov.b32 	%r970, %r963;
	mov.b32 	%r971, %r963;
	mov.b32 	%r972, %r963;
	mov.b32 	%r973, %r963;
	mov.b32 	%r974, %r963;
	mov.b32 	%r975, %r963;
	mov.b32 	%r976, %r963;
	mov.b32 	%r977, %r963;
	mov.b32 	%r978, %r963;
	mov.b32 	%r979, %r963;
	mov.b32 	%r980, %r963;
	mov.b32 	%r981, %r963;
	mov.b32 	%r982, %r963;
	mov.b32 	%r983, %r963;
	mov.b32 	%r984, %r963;
	mov.b32 	%r985, %r963;
	mov.b32 	%r986, %r963;
	mov.b32 	%r987, %r963;
	mov.b32 	%r988, %r963;
	mov.b32 	%r989, %r963;
	mov.b32 	%r990, %r963;
	mov.b32 	%r991, %r963;
	mov.b32 	%r992, %r963;
	mov.b32 	%r993, %r963;
	mov.b32 	%r994, %r963;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p3, %p109;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r481, %r961, 1;
	setp.gt.s32 	%p19, %r481, 2;
	selp.b32 	%r961, 0, %r481, %p19;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	1;
	bar.sync 	0;
	shl.b32 	%r482, %r961, 13;
	add.s32 	%r429, %r123, %r482;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r484, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r485, %r429, 4, 14;
	cvt.u64.u32 	%rd66, %r485;
	or.b64 	%rd53, %rd66, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994}, %rd53, %rd53, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r486, %r429, 32;
	bfe.u32 	%r487, %r486, 4, 14;
	cvt.u64.u32 	%rd67, %r487;
	or.b64 	%rd55, %rd67, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994}, %rd55, %rd55, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r488, %r429, 64;
	bfe.u32 	%r489, %r488, 4, 14;
	cvt.u64.u32 	%rd68, %r489;
	or.b64 	%rd57, %rd68, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994}, %rd57, %rd57, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r490, %r429, 96;
	bfe.u32 	%r491, %r490, 4, 14;
	cvt.u64.u32 	%rd69, %r491;
	or.b64 	%rd59, %rd69, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994}, %rd59, %rd59, %p14, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r468, 0;
	mov.b32 	%r430, %r468;
	mov.b32 	%r431, %r468;
	mov.b32 	%r433, %r468;
	mov.b32 	%r434, %r468;
	mov.b32 	%r432, %r429;
	// begin inline asm
	// wait for regs: %r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r429,%r430,%r431,%r432,%r433,%r434
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r492, %r962, 1;
	setp.gt.s32 	%p20, %r492, 2;
	selp.b32 	%r962, 0, %r492, %p20;
	add.s64 	%rd70, %rd159, %rd5;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b64 	%rd71, %rd70, 1;
	add.s64 	%rd72, %rd8, %rd71;
	add.s64 	%rd61, %rd72, 256;
	add.s64 	%rd73, %rd9, %rd71;
	add.s64 	%rd62, %rd73, 256;
	add.s64 	%rd74, %rd10, %rd71;
	add.s64 	%rd63, %rd74, 256;
	add.s64 	%rd75, %rd11, %rd71;
	add.s64 	%rd64, %rd75, 256;
	shl.b32 	%r493, %r962, 13;
	add.s32 	%r494, %r123, %r493;
	bar.sync 	0;
	add.s32 	%r473, %r494, %r122;
	add.s32 	%r475, %r494, %r127;
	add.s32 	%r477, %r494, %r131;
	add.s32 	%r479, %r494, %r135;
	// begin inline asm
	cp.async.cg.shared.global [ %r473 + 0 ], [ %rd61 + 0 ], 0x10, %r468;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r475 + 0 ], [ %rd62 + 0 ], 0x10, %r468;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r477 + 0 ], [ %rd63 + 0 ], 0x10, %r468;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r479 + 0 ], [ %rd64 + 0 ], 0x10, %r468;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd159, 64;
	mov.pred 	%p109, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r613, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p47, %r613, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r614, %r1, 1;
	and.b32 	%r615, %r614, 6;
	or.b32 	%r616, %r615, 57;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd102, %r616;
	or.b64 	%rd103, %rd102, %rd4;
	setp.lt.s64 	%p48, %rd103, %rd3;
	and.pred 	%p38, %p47, %p48;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r617, %r615, 56;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd104, %r617;
	or.b64 	%rd105, %rd104, %rd4;
	setp.lt.s64 	%p49, %rd105, %rd3;
	and.pred 	%p37, %p47, %p49;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r618, %r615, 1;
	shr.u32 	%r619, %r1, 4;
	bfe.u32 	%r620, %r1, 4, 3;
	shl.b32 	%r621, %r1, 2;
	and.b32 	%r622, %r621, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r623, %r616, %r613;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p50, %r623, %r79;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r624, %r617, %r613;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p51, %r624, %r79;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r625, %r615, 25;
	or.b32 	%r626, %r615, 24;
	or.b32 	%r627, %r615, 32;
	or.b32 	%r628, %r615, 33;
	or.b32 	%r629, %r615, 40;
	or.b32 	%r630, %r615, 41;
	or.b32 	%r631, %r615, 48;
	or.b32 	%r632, %r615, 49;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd106, %r632;
	or.b64 	%rd107, %rd106, %rd4;
	setp.lt.s64 	%p52, %rd107, %rd3;
	and.pred 	%p36, %p47, %p52;
	cvt.u64.u32 	%rd108, %r631;
	or.b64 	%rd109, %rd108, %rd4;
	setp.lt.s64 	%p53, %rd109, %rd3;
	and.pred 	%p35, %p47, %p53;
	cvt.u64.u32 	%rd110, %r630;
	or.b64 	%rd111, %rd110, %rd4;
	setp.lt.s64 	%p54, %rd111, %rd3;
	and.pred 	%p34, %p47, %p54;
	cvt.u64.u32 	%rd112, %r629;
	or.b64 	%rd113, %rd112, %rd4;
	setp.lt.s64 	%p55, %rd113, %rd3;
	and.pred 	%p33, %p47, %p55;
	cvt.u64.u32 	%rd114, %r628;
	or.b64 	%rd115, %rd114, %rd4;
	setp.lt.s64 	%p56, %rd115, %rd3;
	and.pred 	%p32, %p47, %p56;
	cvt.u64.u32 	%rd116, %r627;
	or.b64 	%rd117, %rd116, %rd4;
	setp.lt.s64 	%p57, %rd117, %rd3;
	and.pred 	%p31, %p47, %p57;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r633, %r615, 17;
	or.b32 	%r634, %r615, 16;
	or.b32 	%r635, %r615, 9;
	or.b32 	%r636, %r615, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r637, %r4, %r613;
	or.b32 	%r638, %r5, %r613;
	or.b32 	%r639, %r627, %r613;
	or.b32 	%r640, %r628, %r613;
	or.b32 	%r641, %r629, %r613;
	or.b32 	%r642, %r630, %r613;
	or.b32 	%r643, %r631, %r613;
	or.b32 	%r644, %r632, %r613;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p58, %r644, %r79;
	setp.lt.s32 	%p59, %r643, %r79;
	setp.lt.s32 	%p60, %r642, %r79;
	setp.lt.s32 	%p61, %r641, %r79;
	setp.lt.s32 	%p62, %r640, %r79;
	setp.lt.s32 	%p63, %r639, %r79;
	setp.lt.s32 	%p64, %r638, %r79;
	setp.lt.s32 	%p65, %r637, %r79;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd118, %rd1, 2;
	add.s64 	%rd119, %rd13, %rd118;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd120, %rd2, 2;
	add.s64 	%rd121, %rd119, %rd120;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd122, %rd6, 2;
	add.s64 	%rd76, %rd121, %rd122;
	shl.b64 	%rd123, %rd7, 2;
	add.s64 	%rd77, %rd121, %rd123;
	shl.b64 	%rd124, %rd117, 7;
	add.s64 	%rd86, %rd121, %rd124;
	shl.b64 	%rd125, %rd115, 7;
	add.s64 	%rd87, %rd121, %rd125;
	shl.b64 	%rd126, %rd113, 7;
	add.s64 	%rd88, %rd121, %rd126;
	shl.b64 	%rd127, %rd111, 7;
	add.s64 	%rd89, %rd121, %rd127;
	shl.b64 	%rd128, %rd109, 7;
	add.s64 	%rd90, %rd121, %rd128;
	shl.b64 	%rd129, %rd107, 7;
	add.s64 	%rd91, %rd121, %rd129;
	shl.b64 	%rd130, %rd105, 7;
	add.s64 	%rd92, %rd121, %rd130;
	shl.b64 	%rd131, %rd103, 7;
	add.s64 	%rd93, %rd121, %rd131;
	// begin inline asm
	mov.u32 %r563, 0x0;
	@%p21 ld.global.b32 { %r563 }, [ %rd76 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r564, 0x0;
	@%p22 ld.global.b32 { %r564 }, [ %rd77 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r645, %rs3;
	cvt.f32.bf16 	%r646, %rs4;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p66, %r4, %r615;
	setp.gt.u32 	%p67, %r4, %r618;
	setp.gt.u32 	%p68, %r4, %r636;
	setp.gt.u32 	%p69, %r4, %r635;
	setp.gt.u32 	%p70, %r5, %r635;
	setp.gt.u32 	%p71, %r4, %r634;
	setp.gt.u32 	%p72, %r4, %r633;
	setp.gt.u32 	%p73, %r5, %r634;
	setp.gt.u32 	%p74, %r5, %r633;
	setp.gt.u32 	%p75, %r4, %r626;
	setp.gt.u32 	%p76, %r4, %r625;
	setp.gt.u32 	%p77, %r5, %r626;
	setp.gt.u32 	%p78, %r5, %r625;
	setp.gt.u32 	%p79, %r4, %r627;
	setp.gt.u32 	%p80, %r4, %r628;
	setp.gt.u32 	%p81, %r5, %r627;
	setp.gt.u32 	%p82, %r5, %r628;
	setp.gt.u32 	%p83, %r4, %r629;
	setp.gt.u32 	%p84, %r4, %r630;
	setp.gt.u32 	%p85, %r5, %r629;
	setp.gt.u32 	%p86, %r5, %r630;
	setp.gt.u32 	%p87, %r4, %r631;
	setp.gt.u32 	%p88, %r4, %r632;
	setp.gt.u32 	%p89, %r5, %r631;
	setp.gt.u32 	%p90, %r5, %r632;
	setp.gt.u32 	%p91, %r5, %r617;
	setp.gt.u32 	%p92, %r5, %r616;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r647, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd132, %r647, 4;
	add.s64 	%rd133, %rd14, %rd132;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r648, %r619, %r613;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r649, %r618, %r613;
	or.b32 	%r650, %r615, %r613;
	or.b32 	%r651, %r625, %r613;
	or.b32 	%r652, %r626, %r613;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r653, %r633, %r613;
	or.b32 	%r654, %r634, %r613;
	or.b32 	%r655, %r635, %r613;
	or.b32 	%r656, %r636, %r613;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r657, %r620, %r613;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r658, %r657, 8;
	or.b32 	%r659, %r657, 16;
	or.b32 	%r660, %r657, 24;
	or.b32 	%r661, %r657, 32;
	or.b32 	%r662, %r657, 40;
	or.b32 	%r663, %r657, 48;
	or.b32 	%r664, %r648, 56;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p93, %r664, %r79;
	setp.lt.s32 	%p94, %r663, %r79;
	setp.lt.s32 	%p95, %r662, %r79;
	setp.lt.s32 	%p96, %r661, %r79;
	setp.lt.s32 	%p97, %r660, %r79;
	setp.lt.s32 	%p98, %r659, %r79;
	setp.lt.s32 	%p99, %r658, %r79;
	setp.lt.s32 	%p100, %r657, %r79;
	setp.lt.s32 	%p101, %r656, %r79;
	setp.lt.s32 	%p102, %r655, %r79;
	setp.lt.s32 	%p103, %r654, %r79;
	setp.lt.s32 	%p104, %r653, %r79;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p105, %r652, %r79;
	setp.lt.s32 	%p106, %r651, %r79;
	setp.lt.s32 	%p107, %r650, %r79;
	setp.lt.s32 	%p108, %r649, %r79;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p24, %p47, %p108;
	and.pred 	%p23, %p47, %p107;
	and.pred 	%p30, %p47, %p106;
	and.pred 	%p29, %p47, %p105;
	and.pred 	%p28, %p47, %p104;
	and.pred 	%p27, %p47, %p103;
	and.pred 	%p26, %p47, %p102;
	and.pred 	%p25, %p47, %p101;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd134, %r650, 128;
	add.s64 	%rd78, %rd121, %rd134;
	mul.wide.s32 	%rd135, %r649, 128;
	add.s64 	%rd79, %rd121, %rd135;
	mul.wide.s32 	%rd136, %r656, 128;
	add.s64 	%rd80, %rd121, %rd136;
	mul.wide.s32 	%rd137, %r655, 128;
	add.s64 	%rd81, %rd121, %rd137;
	mul.wide.s32 	%rd138, %r654, 128;
	add.s64 	%rd82, %rd121, %rd138;
	mul.wide.s32 	%rd139, %r653, 128;
	add.s64 	%rd83, %rd121, %rd139;
	mul.wide.s32 	%rd140, %r652, 128;
	add.s64 	%rd84, %rd121, %rd140;
	mul.wide.s32 	%rd141, %r651, 128;
	add.s64 	%rd85, %rd121, %rd141;
	// begin inline asm
	mov.u32 %r565, 0x0;
	@%p23 ld.global.b32 { %r565 }, [ %rd78 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r566, 0x0;
	@%p24 ld.global.b32 { %r566 }, [ %rd79 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r567, 0x0;
	@%p25 ld.global.b32 { %r567 }, [ %rd80 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r568, 0x0;
	@%p26 ld.global.b32 { %r568 }, [ %rd81 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r569, 0x0;
	@%p27 ld.global.b32 { %r569 }, [ %rd82 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r570, 0x0;
	@%p28 ld.global.b32 { %r570 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r571, 0x0;
	@%p29 ld.global.b32 { %r571 }, [ %rd84 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r572, 0x0;
	@%p30 ld.global.b32 { %r572 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r573, 0x0;
	@%p31 ld.global.b32 { %r573 }, [ %rd86 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r574, 0x0;
	@%p32 ld.global.b32 { %r574 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r575, 0x0;
	@%p33 ld.global.b32 { %r575 }, [ %rd88 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r576, 0x0;
	@%p34 ld.global.b32 { %r576 }, [ %rd89 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r577, 0x0;
	@%p35 ld.global.b32 { %r577 }, [ %rd90 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r578, 0x0;
	@%p36 ld.global.b32 { %r578 }, [ %rd91 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r579, 0x0;
	@%p37 ld.global.b32 { %r579 }, [ %rd92 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r580, 0x0;
	@%p38 ld.global.b32 { %r580 }, [ %rd93 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r665, %r563, %r565;
	sub.f32 	%r666, %r563, %r566;
	sub.f32 	%r667, %r564, %r565;
	sub.f32 	%r668, %r564, %r566;
	sub.f32 	%r669, %r563, %r567;
	sub.f32 	%r670, %r563, %r568;
	sub.f32 	%r671, %r564, %r567;
	sub.f32 	%r672, %r564, %r568;
	sub.f32 	%r673, %r563, %r569;
	sub.f32 	%r674, %r563, %r570;
	sub.f32 	%r675, %r564, %r569;
	sub.f32 	%r676, %r564, %r570;
	sub.f32 	%r677, %r563, %r571;
	sub.f32 	%r678, %r563, %r572;
	sub.f32 	%r679, %r564, %r571;
	sub.f32 	%r680, %r564, %r572;
	sub.f32 	%r681, %r563, %r573;
	sub.f32 	%r682, %r563, %r574;
	sub.f32 	%r683, %r564, %r573;
	sub.f32 	%r684, %r564, %r574;
	sub.f32 	%r685, %r563, %r575;
	sub.f32 	%r686, %r563, %r576;
	sub.f32 	%r687, %r564, %r575;
	sub.f32 	%r688, %r564, %r576;
	sub.f32 	%r689, %r563, %r577;
	sub.f32 	%r690, %r563, %r578;
	sub.f32 	%r691, %r564, %r577;
	sub.f32 	%r692, %r564, %r578;
	sub.f32 	%r693, %r564, %r579;
	sub.f32 	%r694, %r564, %r580;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r695, %r665, 0f3FB8AA3B;
	ex2.approx.f32 	%r696, %r695;
	mul.f32 	%r697, %r666, 0f3FB8AA3B;
	ex2.approx.f32 	%r698, %r697;
	mul.f32 	%r699, %r667, 0f3FB8AA3B;
	ex2.approx.f32 	%r700, %r699;
	mul.f32 	%r701, %r668, 0f3FB8AA3B;
	ex2.approx.f32 	%r702, %r701;
	mul.f32 	%r703, %r669, 0f3FB8AA3B;
	ex2.approx.f32 	%r704, %r703;
	mul.f32 	%r705, %r670, 0f3FB8AA3B;
	ex2.approx.f32 	%r706, %r705;
	mul.f32 	%r707, %r671, 0f3FB8AA3B;
	ex2.approx.f32 	%r708, %r707;
	mul.f32 	%r709, %r672, 0f3FB8AA3B;
	ex2.approx.f32 	%r710, %r709;
	mul.f32 	%r711, %r673, 0f3FB8AA3B;
	ex2.approx.f32 	%r712, %r711;
	mul.f32 	%r713, %r674, 0f3FB8AA3B;
	ex2.approx.f32 	%r714, %r713;
	mul.f32 	%r715, %r675, 0f3FB8AA3B;
	ex2.approx.f32 	%r716, %r715;
	mul.f32 	%r717, %r676, 0f3FB8AA3B;
	ex2.approx.f32 	%r718, %r717;
	mul.f32 	%r719, %r677, 0f3FB8AA3B;
	ex2.approx.f32 	%r720, %r719;
	mul.f32 	%r721, %r678, 0f3FB8AA3B;
	ex2.approx.f32 	%r722, %r721;
	mul.f32 	%r723, %r679, 0f3FB8AA3B;
	ex2.approx.f32 	%r724, %r723;
	mul.f32 	%r725, %r680, 0f3FB8AA3B;
	ex2.approx.f32 	%r726, %r725;
	mul.f32 	%r727, %r681, 0f3FB8AA3B;
	ex2.approx.f32 	%r728, %r727;
	mul.f32 	%r729, %r682, 0f3FB8AA3B;
	ex2.approx.f32 	%r730, %r729;
	mul.f32 	%r731, %r683, 0f3FB8AA3B;
	ex2.approx.f32 	%r732, %r731;
	mul.f32 	%r733, %r684, 0f3FB8AA3B;
	ex2.approx.f32 	%r734, %r733;
	mul.f32 	%r735, %r685, 0f3FB8AA3B;
	ex2.approx.f32 	%r736, %r735;
	mul.f32 	%r737, %r686, 0f3FB8AA3B;
	ex2.approx.f32 	%r738, %r737;
	mul.f32 	%r739, %r687, 0f3FB8AA3B;
	ex2.approx.f32 	%r740, %r739;
	mul.f32 	%r741, %r688, 0f3FB8AA3B;
	ex2.approx.f32 	%r742, %r741;
	mul.f32 	%r743, %r689, 0f3FB8AA3B;
	ex2.approx.f32 	%r744, %r743;
	mul.f32 	%r745, %r690, 0f3FB8AA3B;
	ex2.approx.f32 	%r746, %r745;
	mul.f32 	%r747, %r691, 0f3FB8AA3B;
	ex2.approx.f32 	%r748, %r747;
	mul.f32 	%r749, %r692, 0f3FB8AA3B;
	ex2.approx.f32 	%r750, %r749;
	mul.f32 	%r751, %r693, 0f3FB8AA3B;
	ex2.approx.f32 	%r752, %r751;
	mul.f32 	%r753, %r694, 0f3FB8AA3B;
	ex2.approx.f32 	%r754, %r753;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r755, %r963, %r696;
	mul.f32 	%r756, %r964, %r698;
	mul.f32 	%r757, %r965, %r700;
	mul.f32 	%r758, %r966, %r702;
	mul.f32 	%r759, %r967, %r704;
	mul.f32 	%r760, %r968, %r706;
	mul.f32 	%r761, %r969, %r708;
	mul.f32 	%r762, %r970, %r710;
	mul.f32 	%r763, %r971, %r712;
	mul.f32 	%r764, %r972, %r714;
	mul.f32 	%r765, %r973, %r716;
	mul.f32 	%r766, %r974, %r718;
	mul.f32 	%r767, %r975, %r720;
	mul.f32 	%r768, %r976, %r722;
	mul.f32 	%r769, %r977, %r724;
	mul.f32 	%r770, %r978, %r726;
	mul.f32 	%r771, %r979, %r728;
	mul.f32 	%r772, %r980, %r730;
	mul.f32 	%r773, %r981, %r732;
	mul.f32 	%r774, %r982, %r734;
	mul.f32 	%r775, %r983, %r736;
	mul.f32 	%r776, %r984, %r738;
	mul.f32 	%r777, %r985, %r740;
	mul.f32 	%r778, %r986, %r742;
	mul.f32 	%r779, %r987, %r744;
	mul.f32 	%r780, %r988, %r746;
	mul.f32 	%r781, %r989, %r748;
	mul.f32 	%r782, %r990, %r750;
	mul.f32 	%r783, %r993, %r752;
	mul.f32 	%r784, %r994, %r754;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r785, %r755, %r645;
	mul.f32 	%r786, %r756, %r645;
	mul.f32 	%r787, %r757, %r646;
	mul.f32 	%r788, %r758, %r646;
	mul.f32 	%r789, %r759, %r645;
	mul.f32 	%r790, %r760, %r645;
	mul.f32 	%r791, %r761, %r646;
	mul.f32 	%r792, %r762, %r646;
	mul.f32 	%r793, %r763, %r645;
	mul.f32 	%r794, %r764, %r645;
	mul.f32 	%r795, %r765, %r646;
	mul.f32 	%r796, %r766, %r646;
	mul.f32 	%r797, %r767, %r645;
	mul.f32 	%r798, %r768, %r645;
	mul.f32 	%r799, %r769, %r646;
	mul.f32 	%r800, %r770, %r646;
	mul.f32 	%r801, %r771, %r645;
	mul.f32 	%r802, %r772, %r645;
	mul.f32 	%r803, %r773, %r646;
	mul.f32 	%r804, %r774, %r646;
	mul.f32 	%r805, %r775, %r645;
	mul.f32 	%r806, %r776, %r645;
	mul.f32 	%r807, %r777, %r646;
	mul.f32 	%r808, %r778, %r646;
	mul.f32 	%r809, %r779, %r645;
	mul.f32 	%r810, %r780, %r645;
	mul.f32 	%r811, %r781, %r646;
	mul.f32 	%r812, %r782, %r646;
	mul.f32 	%r813, %r783, %r646;
	mul.f32 	%r814, %r784, %r646;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd142, %r657, 8192;
	add.s64 	%rd143, %rd133, %rd142;
	mul.wide.u32 	%rd144, %r622, 4;
	add.s64 	%rd94, %rd143, %rd144;
	mul.wide.s32 	%rd145, %r658, 8192;
	add.s64 	%rd146, %rd133, %rd145;
	add.s64 	%rd95, %rd146, %rd144;
	mul.wide.s32 	%rd147, %r659, 8192;
	add.s64 	%rd148, %rd133, %rd147;
	add.s64 	%rd96, %rd148, %rd144;
	mul.wide.s32 	%rd149, %r660, 8192;
	add.s64 	%rd150, %rd133, %rd149;
	add.s64 	%rd97, %rd150, %rd144;
	mul.wide.s32 	%rd151, %r661, 8192;
	add.s64 	%rd152, %rd133, %rd151;
	add.s64 	%rd98, %rd152, %rd144;
	mul.wide.s32 	%rd153, %r662, 8192;
	add.s64 	%rd154, %rd133, %rd153;
	add.s64 	%rd99, %rd154, %rd144;
	mul.wide.s32 	%rd155, %r663, 8192;
	add.s64 	%rd156, %rd133, %rd155;
	add.s64 	%rd100, %rd156, %rd144;
	mul.wide.s32 	%rd157, %r664, 8192;
	add.s64 	%rd158, %rd133, %rd157;
	add.s64 	%rd101, %rd158, %rd144;
	and.pred 	%p39, %p47, %p100;
	and.pred 	%p40, %p47, %p99;
	and.pred 	%p41, %p47, %p98;
	and.pred 	%p42, %p47, %p97;
	and.pred 	%p43, %p47, %p96;
	and.pred 	%p44, %p47, %p95;
	and.pred 	%p45, %p47, %p94;
	and.pred 	%p46, %p47, %p93;
	shl.b32 	%r815, %r1, 4;
	and.b32 	%r816, %r815, 448;
	shl.b32 	%r817, %r1, 5;
	and.b32 	%r818, %r817, 3072;
	or.b32 	%r819, %r818, %r816;
	or.b32 	%r820, %r819, %r615;
	and.b32 	%r821, %r621, 508;
	shr.u32 	%r822, %r819, 2;
	add.s32 	%r824, %r123, %r822;
	shl.b32 	%r825, %r820, 2;
	add.s32 	%r826, %r824, %r825;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r827, %r785, 0, %p107;
	selp.b32 	%r828, %r827, 0, %p66;
	selp.b32 	%r829, %r828, 0, %p65;
	selp.b32 	%r830, %r786, 0, %p108;
	selp.b32 	%r831, %r830, 0, %p67;
	selp.b32 	%r832, %r831, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826], {%r829, %r832};
	or.b32 	%r833, %r819, 512;
	shr.u32 	%r834, %r833, 2;
	add.s32 	%r835, %r123, %r834;
	add.s32 	%r836, %r835, %r825;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r837, %r787, 0, %p107;
	selp.b32 	%r838, %r837, 0, %p64;
	selp.b32 	%r839, %r788, 0, %p108;
	selp.b32 	%r840, %r839, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2048], {%r838, %r840};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r841, %r789, 0, %p101;
	selp.b32 	%r842, %r841, 0, %p68;
	selp.b32 	%r843, %r842, 0, %p65;
	selp.b32 	%r844, %r790, 0, %p102;
	selp.b32 	%r845, %r844, 0, %p69;
	selp.b32 	%r846, %r845, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+32], {%r843, %r846};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r847, %r791, 0, %p101;
	selp.b32 	%r848, %r847, 0, %p66;
	selp.b32 	%r849, %r848, 0, %p64;
	selp.b32 	%r850, %r792, 0, %p102;
	selp.b32 	%r851, %r850, 0, %p70;
	selp.b32 	%r852, %r851, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2080], {%r849, %r852};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r853, %r793, 0, %p103;
	selp.b32 	%r854, %r853, 0, %p71;
	selp.b32 	%r855, %r854, 0, %p65;
	selp.b32 	%r856, %r794, 0, %p104;
	selp.b32 	%r857, %r856, 0, %p72;
	selp.b32 	%r858, %r857, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+64], {%r855, %r858};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r859, %r795, 0, %p103;
	selp.b32 	%r860, %r859, 0, %p73;
	selp.b32 	%r861, %r860, 0, %p64;
	selp.b32 	%r862, %r796, 0, %p104;
	selp.b32 	%r863, %r862, 0, %p74;
	selp.b32 	%r864, %r863, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2112], {%r861, %r864};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r865, %r797, 0, %p105;
	selp.b32 	%r866, %r865, 0, %p75;
	selp.b32 	%r867, %r866, 0, %p65;
	selp.b32 	%r868, %r798, 0, %p106;
	selp.b32 	%r869, %r868, 0, %p76;
	selp.b32 	%r870, %r869, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+96], {%r867, %r870};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r871, %r799, 0, %p105;
	selp.b32 	%r872, %r871, 0, %p77;
	selp.b32 	%r873, %r872, 0, %p64;
	selp.b32 	%r874, %r800, 0, %p106;
	selp.b32 	%r875, %r874, 0, %p78;
	selp.b32 	%r876, %r875, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2144], {%r873, %r876};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r877, %r801, 0, %p63;
	selp.b32 	%r878, %r877, 0, %p79;
	selp.b32 	%r879, %r878, 0, %p65;
	selp.b32 	%r880, %r802, 0, %p62;
	selp.b32 	%r881, %r880, 0, %p80;
	selp.b32 	%r882, %r881, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+128], {%r879, %r882};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r883, %r803, 0, %p63;
	selp.b32 	%r884, %r883, 0, %p81;
	selp.b32 	%r885, %r884, 0, %p64;
	selp.b32 	%r886, %r804, 0, %p62;
	selp.b32 	%r887, %r886, 0, %p82;
	selp.b32 	%r888, %r887, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2176], {%r885, %r888};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r889, %r805, 0, %p61;
	selp.b32 	%r890, %r889, 0, %p83;
	selp.b32 	%r891, %r890, 0, %p65;
	selp.b32 	%r892, %r806, 0, %p60;
	selp.b32 	%r893, %r892, 0, %p84;
	selp.b32 	%r894, %r893, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+160], {%r891, %r894};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r895, %r807, 0, %p61;
	selp.b32 	%r896, %r895, 0, %p85;
	selp.b32 	%r897, %r896, 0, %p64;
	selp.b32 	%r898, %r808, 0, %p60;
	selp.b32 	%r899, %r898, 0, %p86;
	selp.b32 	%r900, %r899, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2208], {%r897, %r900};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r901, %r809, 0, %p59;
	selp.b32 	%r902, %r901, 0, %p87;
	selp.b32 	%r903, %r902, 0, %p65;
	selp.b32 	%r904, %r810, 0, %p58;
	selp.b32 	%r905, %r904, 0, %p88;
	selp.b32 	%r906, %r905, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r826+192], {%r903, %r906};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r907, %r811, 0, %p59;
	selp.b32 	%r908, %r907, 0, %p89;
	selp.b32 	%r909, %r908, 0, %p64;
	selp.b32 	%r910, %r812, 0, %p58;
	selp.b32 	%r911, %r910, 0, %p90;
	selp.b32 	%r912, %r911, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2240], {%r909, %r912};
	st.shared.v2.b32 	[%r826+224], {%r468, %r468};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r914, %r813, 0, %p51;
	selp.b32 	%r915, %r914, 0, %p91;
	selp.b32 	%r916, %r915, 0, %p64;
	selp.b32 	%r917, %r814, 0, %p50;
	selp.b32 	%r918, %r917, 0, %p92;
	selp.b32 	%r919, %r918, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r836+2272], {%r916, %r919};
	bar.sync 	0;
	and.b32 	%r920, %r3, 28;
	shl.b32 	%r921, %r920, 2;
	add.s32 	%r922, %r123, %r921;
	shl.b32 	%r923, %r821, 2;
	add.s32 	%r924, %r922, %r923;
	ld.shared.v4.b32 	{%r581, %r582, %r583, %r584}, [%r924];
	or.b32 	%r925, %r821, 512;
	shr.u32 	%r926, %r925, 2;
	and.b32 	%r927, %r926, 240;
	add.s32 	%r928, %r123, %r927;
	add.s32 	%r929, %r928, %r923;
	ld.shared.v4.b32 	{%r585, %r586, %r587, %r588}, [%r929+2048];
	or.b32 	%r930, %r821, 1024;
	shr.u32 	%r931, %r930, 2;
	and.b32 	%r932, %r931, 368;
	add.s32 	%r933, %r123, %r932;
	add.s32 	%r934, %r933, %r923;
	ld.shared.v4.b32 	{%r589, %r590, %r591, %r592}, [%r934+4096];
	or.b32 	%r935, %r821, 1536;
	shr.u32 	%r936, %r935, 2;
	and.b32 	%r937, %r936, 496;
	add.s32 	%r938, %r123, %r937;
	add.s32 	%r939, %r938, %r923;
	ld.shared.v4.b32 	{%r593, %r594, %r595, %r596}, [%r939+6144];
	or.b32 	%r940, %r821, 2048;
	shr.u32 	%r941, %r940, 2;
	and.b32 	%r942, %r941, 624;
	add.s32 	%r943, %r123, %r942;
	add.s32 	%r944, %r943, %r923;
	ld.shared.v4.b32 	{%r597, %r598, %r599, %r600}, [%r944+8192];
	or.b32 	%r945, %r821, 2560;
	shr.u32 	%r946, %r945, 2;
	and.b32 	%r947, %r946, 752;
	add.s32 	%r948, %r123, %r947;
	add.s32 	%r949, %r948, %r923;
	ld.shared.v4.b32 	{%r601, %r602, %r603, %r604}, [%r949+10240];
	or.b32 	%r950, %r821, 3072;
	shr.u32 	%r951, %r950, 2;
	and.b32 	%r952, %r951, 880;
	add.s32 	%r953, %r123, %r952;
	add.s32 	%r954, %r953, %r923;
	ld.shared.v4.b32 	{%r605, %r606, %r607, %r608}, [%r954+12288];
	or.b32 	%r955, %r621, 3584;
	shr.u32 	%r956, %r955, 2;
	and.b32 	%r957, %r956, 1008;
	add.s32 	%r958, %r123, %r957;
	shl.b32 	%r959, %r955, 2;
	add.s32 	%r960, %r958, %r959;
	ld.shared.v4.b32 	{%r609, %r610, %r611, %r612}, [%r960];
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd94 + 0 ], { %r581, %r582, %r583, %r584 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd95 + 0 ], { %r585, %r586, %r587, %r588 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd96 + 0 ], { %r589, %r590, %r591, %r592 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd97 + 0 ], { %r593, %r594, %r595, %r596 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd98 + 0 ], { %r597, %r598, %r599, %r600 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd99 + 0 ], { %r601, %r602, %r603, %r604 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd100 + 0 ], { %r605, %r606, %r607, %r608 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd101 + 0 ], { %r609, %r610, %r611, %r612 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
