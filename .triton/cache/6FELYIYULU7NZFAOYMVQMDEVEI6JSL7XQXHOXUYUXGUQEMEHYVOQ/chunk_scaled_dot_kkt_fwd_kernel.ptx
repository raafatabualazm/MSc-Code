//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 128
{
	.reg .pred 	%p<106>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<837>;
	.reg .b64 	%rd<142>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r77, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd12, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd21, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r89, %ctaid.x;
	ld.param.b64 	%rd22, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r90, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r91, %r90, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r92, %r90, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r93, %r89, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	shr.u32 	%r3, %r1, 2;
	bfe.u32 	%r94, %r1, 2, 3;
	bfe.u32 	%r95, %r1, 2, 5;
	or.b32 	%r96, %r95, 32;
	shr.u32 	%r97, %r1, 1;
	and.b32 	%r98, %r97, 48;
	or.b32 	%r4, %r98, %r94;
	or.b32 	%r5, %r4, 8;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r99, %r91, %r77;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r99;
	mul.wide.s32 	%rd23, %r99, 2;
	add.s64 	%rd24, %rd22, %rd23;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r92;
	mul.wide.u32 	%rd25, %r92, 2;
	add.s64 	%rd26, %rd24, %rd25;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r77;
	cvt.s64.s32 	%rd4, %r93;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd27, %r95;
	cvt.u64.u32 	%rd28, %r96;
	cvt.u64.u32 	%rd29, %r4;
	cvt.u64.u32 	%rd30, %r5;
	or.b64 	%rd31, %rd27, %rd4;
	or.b64 	%rd32, %rd28, %rd4;
	or.b64 	%rd33, %rd29, %rd4;
	or.b64 	%rd34, %rd30, %rd4;
	shl.b64 	%rd5, %rd33, 5;
	shl.b64 	%rd6, %rd34, 5;
	shl.b64 	%rd35, %rd33, 6;
	add.s64 	%rd14, %rd26, %rd35;
	shl.b64 	%rd36, %rd34, 6;
	add.s64 	%rd15, %rd26, %rd36;
	setp.gt.s32 	%p7, %r93, -1;
	setp.lt.s64 	%p8, %rd33, %rd3;
	setp.lt.s64 	%p9, %rd34, %rd3;
	and.pred 	%p18, %p7, %p8;
	and.pred 	%p19, %p7, %p9;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p18 ld.global.b16 { %rs3 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p19 ld.global.b16 { %rs4 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r99, %r92;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r100, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd37, %r100, 2;
	add.s64 	%rd38, %rd21, %rd37;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r101, %r1, 3;
	and.b32 	%r102, %r101, 24;
	setp.lt.s64 	%p10, %rd31, %rd3;
	setp.lt.s64 	%p11, %rd32, %rd3;
	and.pred 	%p3, %p7, %p10;
	and.pred 	%p4, %p7, %p11;
	shl.b64 	%rd39, %rd31, 13;
	add.s64 	%rd40, %rd38, %rd39;
	mul.wide.u32 	%rd41, %r102, 2;
	add.s64 	%rd16, %rd40, %rd41;
	shl.b64 	%rd42, %rd32, 13;
	add.s64 	%rd43, %rd38, %rd42;
	add.s64 	%rd17, %rd43, %rd41;
	and.b32 	%r103, %r101, 56;
	and.b32 	%r104, %r1, 24;
	mul.lo.s32 	%r105, %r104, 9;
	xor.b32 	%r106, %r105, %r103;
	and.b32 	%r107, %r101, 768;
	or.b32 	%r7, %r107, %r106;
	shl.b32 	%r108, %r7, 1;
	mov.b32 	%r109, global_smem;
	add.s32 	%r78, %r109, %r108;
	or.b32 	%r110, %r103, 1024;
	xor.b32 	%r111, %r105, %r110;
	or.b32 	%r8, %r107, %r111;
	shl.b32 	%r112, %r8, 1;
	add.s32 	%r80, %r109, %r112;
	selp.b32 	%r79, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r78 + 0 ], [ %rd16 + 0 ], 0x10, %r79;
	// end inline asm
	selp.b32 	%r81, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd17 + 0 ], 0x10, %r81;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd18, %rd16, 64;
	add.s64 	%rd19, %rd17, 64;
	bar.sync 	0;
	add.s32 	%r113, %r109, 4096;
	add.s32 	%r82, %r113, %r108;
	add.s32 	%r84, %r113, %r112;
	// begin inline asm
	cp.async.cg.shared.global [ %r82 + 0 ], [ %rd18 + 0 ], 0x10, %r79;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r84 + 0 ], [ %rd19 + 0 ], 0x10, %r81;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	and.b32 	%r114, %r1, 3;
	mul.wide.u32 	%rd44, %r114, 16;
	or.b64 	%rd45, %rd39, %rd44;
	shr.u32 	%r115, %r90, 5;
	mul.lo.s32 	%r116, %r77, %r115;
	shl.b32 	%r117, %r116, 12;
	shl.b32 	%r118, %r92, 7;
	or.b32 	%r119, %r117, %r118;
	mul.wide.s32 	%rd46, %r119, 2;
	add.s64 	%rd47, %rd45, %rd46;
	add.s64 	%rd48, %rd47, %rd21;
	add.s64 	%rd140, %rd48, 262272;
	mov.b32 	%r805, 0f00000000;
	mov.b32 	%r804, 1;
	mov.b32 	%r803, -1;
	mov.b64 	%rd141, 0;
	mov.b32 	%r806, %r805;
	mov.b32 	%r807, %r805;
	mov.b32 	%r808, %r805;
	mov.b32 	%r809, %r805;
	mov.b32 	%r810, %r805;
	mov.b32 	%r811, %r805;
	mov.b32 	%r812, %r805;
	mov.b32 	%r813, %r805;
	mov.b32 	%r814, %r805;
	mov.b32 	%r815, %r805;
	mov.b32 	%r816, %r805;
	mov.b32 	%r817, %r805;
	mov.b32 	%r818, %r805;
	mov.b32 	%r819, %r805;
	mov.b32 	%r820, %r805;
	mov.b32 	%r821, %r805;
	mov.b32 	%r822, %r805;
	mov.b32 	%r823, %r805;
	mov.b32 	%r824, %r805;
	mov.b32 	%r825, %r805;
	mov.b32 	%r826, %r805;
	mov.b32 	%r827, %r805;
	mov.b32 	%r828, %r805;
	mov.b32 	%r829, %r805;
	mov.b32 	%r830, %r805;
	mov.b32 	%r831, %r805;
	mov.b32 	%r832, %r805;
	mov.b32 	%r833, %r805;
	mov.b32 	%r834, %r805;
	mov.b32 	%r835, %r805;
	mov.b32 	%r836, %r805;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r328, %r803, 1;
	setp.gt.s32 	%p14, %r328, 2;
	selp.b32 	%r803, 0, %r328, %p14;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	1;
	bar.sync 	0;
	shl.b32 	%r329, %r803, 12;
	add.s32 	%r280, %r109, %r329;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r331, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r332, %r280, 4, 14;
	cvt.u64.u32 	%rd55, %r332;
	or.b64 	%rd49, %rd55, -9223371899399045120;
	mov.pred 	%p12, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836}, %rd49, %rd49, %p12, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r333, %r280, 32;
	bfe.u32 	%r334, %r333, 4, 14;
	cvt.u64.u32 	%rd56, %r334;
	or.b64 	%rd51, %rd56, -9223371899399045120;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836}, %rd51, %rd51, %p12, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r319, 0;
	mov.b32 	%r285, %r319;
	mov.b32 	%r281, %r319;
	mov.b32 	%r282, %r319;
	mov.b32 	%r284, %r319;
	mov.b32 	%r283, %r280;
	// begin inline asm
	// wait for regs: %r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836,%r280,%r281,%r282,%r283,%r284,%r285
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r335, %r804, 1;
	setp.gt.s32 	%p15, %r335, 2;
	selp.b32 	%r804, 0, %r335, %p15;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd53, %rd140, -262144;
	setp.lt.u64 	%p16, %rd141, 2;
	shl.b32 	%r336, %r804, 12;
	add.s32 	%r337, %r109, %r336;
	bar.sync 	0;
	add.s32 	%r324, %r337, %r108;
	add.s32 	%r326, %r337, %r112;
	selp.b32 	%r340, 16, 0, %p16;
	selp.b32 	%r325, %r340, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r324 + 0 ], [ %rd53 + 0 ], 0x10, %r325;
	// end inline asm
	selp.b32 	%r327, %r340, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r326 + 0 ], [ %rd140 + 0 ], 0x10, %r327;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s64 	%rd141, %rd141, 1;
	add.s64 	%rd140, %rd140, 64;
	setp.ne.s64 	%p17, %rd141, 4;
	@%p17 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r455, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p44, %r455, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r456, %r1, 1;
	and.b32 	%r457, %r456, 6;
	or.b32 	%r458, %r457, 57;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd83, %r458;
	or.b64 	%rd84, %rd83, %rd4;
	setp.lt.s64 	%p45, %rd84, %rd3;
	and.pred 	%p35, %p44, %p45;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r459, %r457, 56;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd85, %r459;
	or.b64 	%rd86, %rd85, %rd4;
	setp.lt.s64 	%p46, %rd86, %rd3;
	and.pred 	%p34, %p44, %p46;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r460, %r457, 1;
	shr.u32 	%r461, %r1, 4;
	bfe.u32 	%r462, %r1, 4, 3;
	shl.b32 	%r463, %r1, 2;
	and.b32 	%r464, %r463, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r465, %r458, %r455;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p47, %r465, %r77;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r466, %r459, %r455;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p48, %r466, %r77;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r467, %r457, 25;
	or.b32 	%r468, %r457, 24;
	or.b32 	%r469, %r457, 32;
	or.b32 	%r470, %r457, 33;
	or.b32 	%r471, %r457, 40;
	or.b32 	%r472, %r457, 41;
	or.b32 	%r473, %r457, 48;
	or.b32 	%r474, %r457, 49;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd87, %r474;
	or.b64 	%rd88, %rd87, %rd4;
	setp.lt.s64 	%p49, %rd88, %rd3;
	and.pred 	%p33, %p44, %p49;
	cvt.u64.u32 	%rd89, %r473;
	or.b64 	%rd90, %rd89, %rd4;
	setp.lt.s64 	%p50, %rd90, %rd3;
	and.pred 	%p32, %p44, %p50;
	cvt.u64.u32 	%rd91, %r472;
	or.b64 	%rd92, %rd91, %rd4;
	setp.lt.s64 	%p51, %rd92, %rd3;
	and.pred 	%p31, %p44, %p51;
	cvt.u64.u32 	%rd93, %r471;
	or.b64 	%rd94, %rd93, %rd4;
	setp.lt.s64 	%p52, %rd94, %rd3;
	and.pred 	%p30, %p44, %p52;
	cvt.u64.u32 	%rd95, %r470;
	or.b64 	%rd96, %rd95, %rd4;
	setp.lt.s64 	%p53, %rd96, %rd3;
	and.pred 	%p29, %p44, %p53;
	cvt.u64.u32 	%rd97, %r469;
	or.b64 	%rd98, %rd97, %rd4;
	setp.lt.s64 	%p54, %rd98, %rd3;
	and.pred 	%p28, %p44, %p54;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r475, %r457, 17;
	or.b32 	%r476, %r457, 16;
	or.b32 	%r477, %r457, 9;
	or.b32 	%r478, %r457, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r479, %r4, %r455;
	or.b32 	%r480, %r5, %r455;
	or.b32 	%r481, %r469, %r455;
	or.b32 	%r482, %r470, %r455;
	or.b32 	%r483, %r471, %r455;
	or.b32 	%r484, %r472, %r455;
	or.b32 	%r485, %r473, %r455;
	or.b32 	%r486, %r474, %r455;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p55, %r486, %r77;
	setp.lt.s32 	%p56, %r485, %r77;
	setp.lt.s32 	%p57, %r484, %r77;
	setp.lt.s32 	%p58, %r483, %r77;
	setp.lt.s32 	%p59, %r482, %r77;
	setp.lt.s32 	%p60, %r481, %r77;
	setp.lt.s32 	%p61, %r480, %r77;
	setp.lt.s32 	%p62, %r479, %r77;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r805,%r806,%r807,%r808,%r809,%r810,%r811,%r812,%r813,%r814,%r815,%r816,%r817,%r818,%r819,%r820,%r821,%r822,%r823,%r824,%r825,%r826,%r827,%r828,%r829,%r830,%r831,%r832,%r833,%r834,%r835,%r836
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd99, %rd1, 2;
	add.s64 	%rd100, %rd12, %rd99;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd101, %rd2, 2;
	add.s64 	%rd102, %rd100, %rd101;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd103, %rd5, 2;
	add.s64 	%rd57, %rd102, %rd103;
	shl.b64 	%rd104, %rd6, 2;
	add.s64 	%rd58, %rd102, %rd104;
	shl.b64 	%rd105, %rd98, 7;
	add.s64 	%rd67, %rd102, %rd105;
	shl.b64 	%rd106, %rd96, 7;
	add.s64 	%rd68, %rd102, %rd106;
	shl.b64 	%rd107, %rd94, 7;
	add.s64 	%rd69, %rd102, %rd107;
	shl.b64 	%rd108, %rd92, 7;
	add.s64 	%rd70, %rd102, %rd108;
	shl.b64 	%rd109, %rd90, 7;
	add.s64 	%rd71, %rd102, %rd109;
	shl.b64 	%rd110, %rd88, 7;
	add.s64 	%rd72, %rd102, %rd110;
	shl.b64 	%rd111, %rd86, 7;
	add.s64 	%rd73, %rd102, %rd111;
	shl.b64 	%rd112, %rd84, 7;
	add.s64 	%rd74, %rd102, %rd112;
	// begin inline asm
	mov.u32 %r405, 0x0;
	@%p18 ld.global.b32 { %r405 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r406, 0x0;
	@%p19 ld.global.b32 { %r406 }, [ %rd58 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r487, %rs3;
	cvt.f32.bf16 	%r488, %rs4;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p63, %r4, %r457;
	setp.gt.u32 	%p64, %r4, %r460;
	setp.gt.u32 	%p65, %r4, %r478;
	setp.gt.u32 	%p66, %r4, %r477;
	setp.gt.u32 	%p67, %r5, %r477;
	setp.gt.u32 	%p68, %r4, %r476;
	setp.gt.u32 	%p69, %r4, %r475;
	setp.gt.u32 	%p70, %r5, %r476;
	setp.gt.u32 	%p71, %r5, %r475;
	setp.gt.u32 	%p72, %r4, %r468;
	setp.gt.u32 	%p73, %r4, %r467;
	setp.gt.u32 	%p74, %r5, %r468;
	setp.gt.u32 	%p75, %r5, %r467;
	setp.gt.u32 	%p76, %r4, %r469;
	setp.gt.u32 	%p77, %r4, %r470;
	setp.gt.u32 	%p78, %r5, %r469;
	setp.gt.u32 	%p79, %r5, %r470;
	setp.gt.u32 	%p80, %r4, %r471;
	setp.gt.u32 	%p81, %r4, %r472;
	setp.gt.u32 	%p82, %r5, %r471;
	setp.gt.u32 	%p83, %r5, %r472;
	setp.gt.u32 	%p84, %r4, %r473;
	setp.gt.u32 	%p85, %r4, %r474;
	setp.gt.u32 	%p86, %r5, %r473;
	setp.gt.u32 	%p87, %r5, %r474;
	setp.gt.u32 	%p88, %r5, %r459;
	setp.gt.u32 	%p89, %r5, %r458;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r489, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd113, %r489, 4;
	add.s64 	%rd114, %rd13, %rd113;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r490, %r461, %r455;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r491, %r460, %r455;
	or.b32 	%r492, %r457, %r455;
	or.b32 	%r493, %r467, %r455;
	or.b32 	%r494, %r468, %r455;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r495, %r475, %r455;
	or.b32 	%r496, %r476, %r455;
	or.b32 	%r497, %r477, %r455;
	or.b32 	%r498, %r478, %r455;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r499, %r462, %r455;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r500, %r499, 8;
	or.b32 	%r501, %r499, 16;
	or.b32 	%r502, %r499, 24;
	or.b32 	%r503, %r499, 32;
	or.b32 	%r504, %r499, 40;
	or.b32 	%r505, %r499, 48;
	or.b32 	%r506, %r490, 56;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p90, %r506, %r77;
	setp.lt.s32 	%p91, %r505, %r77;
	setp.lt.s32 	%p92, %r504, %r77;
	setp.lt.s32 	%p93, %r503, %r77;
	setp.lt.s32 	%p94, %r502, %r77;
	setp.lt.s32 	%p95, %r501, %r77;
	setp.lt.s32 	%p96, %r500, %r77;
	setp.lt.s32 	%p97, %r499, %r77;
	setp.lt.s32 	%p98, %r498, %r77;
	setp.lt.s32 	%p99, %r497, %r77;
	setp.lt.s32 	%p100, %r496, %r77;
	setp.lt.s32 	%p101, %r495, %r77;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p102, %r494, %r77;
	setp.lt.s32 	%p103, %r493, %r77;
	setp.lt.s32 	%p104, %r492, %r77;
	setp.lt.s32 	%p105, %r491, %r77;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p21, %p44, %p105;
	and.pred 	%p20, %p44, %p104;
	and.pred 	%p27, %p44, %p103;
	and.pred 	%p26, %p44, %p102;
	and.pred 	%p25, %p44, %p101;
	and.pred 	%p24, %p44, %p100;
	and.pred 	%p23, %p44, %p99;
	and.pred 	%p22, %p44, %p98;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd115, %r492, 128;
	add.s64 	%rd59, %rd102, %rd115;
	mul.wide.s32 	%rd116, %r491, 128;
	add.s64 	%rd60, %rd102, %rd116;
	mul.wide.s32 	%rd117, %r498, 128;
	add.s64 	%rd61, %rd102, %rd117;
	mul.wide.s32 	%rd118, %r497, 128;
	add.s64 	%rd62, %rd102, %rd118;
	mul.wide.s32 	%rd119, %r496, 128;
	add.s64 	%rd63, %rd102, %rd119;
	mul.wide.s32 	%rd120, %r495, 128;
	add.s64 	%rd64, %rd102, %rd120;
	mul.wide.s32 	%rd121, %r494, 128;
	add.s64 	%rd65, %rd102, %rd121;
	mul.wide.s32 	%rd122, %r493, 128;
	add.s64 	%rd66, %rd102, %rd122;
	// begin inline asm
	mov.u32 %r407, 0x0;
	@%p20 ld.global.b32 { %r407 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r408, 0x0;
	@%p21 ld.global.b32 { %r408 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r409, 0x0;
	@%p22 ld.global.b32 { %r409 }, [ %rd61 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r410, 0x0;
	@%p23 ld.global.b32 { %r410 }, [ %rd62 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r411, 0x0;
	@%p24 ld.global.b32 { %r411 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r412, 0x0;
	@%p25 ld.global.b32 { %r412 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r413, 0x0;
	@%p26 ld.global.b32 { %r413 }, [ %rd65 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r414, 0x0;
	@%p27 ld.global.b32 { %r414 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r415, 0x0;
	@%p28 ld.global.b32 { %r415 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r416, 0x0;
	@%p29 ld.global.b32 { %r416 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r417, 0x0;
	@%p30 ld.global.b32 { %r417 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r418, 0x0;
	@%p31 ld.global.b32 { %r418 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r419, 0x0;
	@%p32 ld.global.b32 { %r419 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r420, 0x0;
	@%p33 ld.global.b32 { %r420 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r421, 0x0;
	@%p34 ld.global.b32 { %r421 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r422, 0x0;
	@%p35 ld.global.b32 { %r422 }, [ %rd74 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r507, %r405, %r407;
	sub.f32 	%r508, %r405, %r408;
	sub.f32 	%r509, %r406, %r407;
	sub.f32 	%r510, %r406, %r408;
	sub.f32 	%r511, %r405, %r409;
	sub.f32 	%r512, %r405, %r410;
	sub.f32 	%r513, %r406, %r409;
	sub.f32 	%r514, %r406, %r410;
	sub.f32 	%r515, %r405, %r411;
	sub.f32 	%r516, %r405, %r412;
	sub.f32 	%r517, %r406, %r411;
	sub.f32 	%r518, %r406, %r412;
	sub.f32 	%r519, %r405, %r413;
	sub.f32 	%r520, %r405, %r414;
	sub.f32 	%r521, %r406, %r413;
	sub.f32 	%r522, %r406, %r414;
	sub.f32 	%r523, %r405, %r415;
	sub.f32 	%r524, %r405, %r416;
	sub.f32 	%r525, %r406, %r415;
	sub.f32 	%r526, %r406, %r416;
	sub.f32 	%r527, %r405, %r417;
	sub.f32 	%r528, %r405, %r418;
	sub.f32 	%r529, %r406, %r417;
	sub.f32 	%r530, %r406, %r418;
	sub.f32 	%r531, %r405, %r419;
	sub.f32 	%r532, %r405, %r420;
	sub.f32 	%r533, %r406, %r419;
	sub.f32 	%r534, %r406, %r420;
	sub.f32 	%r535, %r406, %r421;
	sub.f32 	%r536, %r406, %r422;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r537, %r507, 0f3FB8AA3B;
	ex2.approx.f32 	%r538, %r537;
	mul.f32 	%r539, %r508, 0f3FB8AA3B;
	ex2.approx.f32 	%r540, %r539;
	mul.f32 	%r541, %r509, 0f3FB8AA3B;
	ex2.approx.f32 	%r542, %r541;
	mul.f32 	%r543, %r510, 0f3FB8AA3B;
	ex2.approx.f32 	%r544, %r543;
	mul.f32 	%r545, %r511, 0f3FB8AA3B;
	ex2.approx.f32 	%r546, %r545;
	mul.f32 	%r547, %r512, 0f3FB8AA3B;
	ex2.approx.f32 	%r548, %r547;
	mul.f32 	%r549, %r513, 0f3FB8AA3B;
	ex2.approx.f32 	%r550, %r549;
	mul.f32 	%r551, %r514, 0f3FB8AA3B;
	ex2.approx.f32 	%r552, %r551;
	mul.f32 	%r553, %r515, 0f3FB8AA3B;
	ex2.approx.f32 	%r554, %r553;
	mul.f32 	%r555, %r516, 0f3FB8AA3B;
	ex2.approx.f32 	%r556, %r555;
	mul.f32 	%r557, %r517, 0f3FB8AA3B;
	ex2.approx.f32 	%r558, %r557;
	mul.f32 	%r559, %r518, 0f3FB8AA3B;
	ex2.approx.f32 	%r560, %r559;
	mul.f32 	%r561, %r519, 0f3FB8AA3B;
	ex2.approx.f32 	%r562, %r561;
	mul.f32 	%r563, %r520, 0f3FB8AA3B;
	ex2.approx.f32 	%r564, %r563;
	mul.f32 	%r565, %r521, 0f3FB8AA3B;
	ex2.approx.f32 	%r566, %r565;
	mul.f32 	%r567, %r522, 0f3FB8AA3B;
	ex2.approx.f32 	%r568, %r567;
	mul.f32 	%r569, %r523, 0f3FB8AA3B;
	ex2.approx.f32 	%r570, %r569;
	mul.f32 	%r571, %r524, 0f3FB8AA3B;
	ex2.approx.f32 	%r572, %r571;
	mul.f32 	%r573, %r525, 0f3FB8AA3B;
	ex2.approx.f32 	%r574, %r573;
	mul.f32 	%r575, %r526, 0f3FB8AA3B;
	ex2.approx.f32 	%r576, %r575;
	mul.f32 	%r577, %r527, 0f3FB8AA3B;
	ex2.approx.f32 	%r578, %r577;
	mul.f32 	%r579, %r528, 0f3FB8AA3B;
	ex2.approx.f32 	%r580, %r579;
	mul.f32 	%r581, %r529, 0f3FB8AA3B;
	ex2.approx.f32 	%r582, %r581;
	mul.f32 	%r583, %r530, 0f3FB8AA3B;
	ex2.approx.f32 	%r584, %r583;
	mul.f32 	%r585, %r531, 0f3FB8AA3B;
	ex2.approx.f32 	%r586, %r585;
	mul.f32 	%r587, %r532, 0f3FB8AA3B;
	ex2.approx.f32 	%r588, %r587;
	mul.f32 	%r589, %r533, 0f3FB8AA3B;
	ex2.approx.f32 	%r590, %r589;
	mul.f32 	%r591, %r534, 0f3FB8AA3B;
	ex2.approx.f32 	%r592, %r591;
	mul.f32 	%r593, %r535, 0f3FB8AA3B;
	ex2.approx.f32 	%r594, %r593;
	mul.f32 	%r595, %r536, 0f3FB8AA3B;
	ex2.approx.f32 	%r596, %r595;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r597, %r805, %r538;
	mul.f32 	%r598, %r806, %r540;
	mul.f32 	%r599, %r807, %r542;
	mul.f32 	%r600, %r808, %r544;
	mul.f32 	%r601, %r809, %r546;
	mul.f32 	%r602, %r810, %r548;
	mul.f32 	%r603, %r811, %r550;
	mul.f32 	%r604, %r812, %r552;
	mul.f32 	%r605, %r813, %r554;
	mul.f32 	%r606, %r814, %r556;
	mul.f32 	%r607, %r815, %r558;
	mul.f32 	%r608, %r816, %r560;
	mul.f32 	%r609, %r817, %r562;
	mul.f32 	%r610, %r818, %r564;
	mul.f32 	%r611, %r819, %r566;
	mul.f32 	%r612, %r820, %r568;
	mul.f32 	%r613, %r821, %r570;
	mul.f32 	%r614, %r822, %r572;
	mul.f32 	%r615, %r823, %r574;
	mul.f32 	%r616, %r824, %r576;
	mul.f32 	%r617, %r825, %r578;
	mul.f32 	%r618, %r826, %r580;
	mul.f32 	%r619, %r827, %r582;
	mul.f32 	%r620, %r828, %r584;
	mul.f32 	%r621, %r829, %r586;
	mul.f32 	%r622, %r830, %r588;
	mul.f32 	%r623, %r831, %r590;
	mul.f32 	%r624, %r832, %r592;
	mul.f32 	%r625, %r835, %r594;
	mul.f32 	%r626, %r836, %r596;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r627, %r597, %r487;
	mul.f32 	%r628, %r598, %r487;
	mul.f32 	%r629, %r599, %r488;
	mul.f32 	%r630, %r600, %r488;
	mul.f32 	%r631, %r601, %r487;
	mul.f32 	%r632, %r602, %r487;
	mul.f32 	%r633, %r603, %r488;
	mul.f32 	%r634, %r604, %r488;
	mul.f32 	%r635, %r605, %r487;
	mul.f32 	%r636, %r606, %r487;
	mul.f32 	%r637, %r607, %r488;
	mul.f32 	%r638, %r608, %r488;
	mul.f32 	%r639, %r609, %r487;
	mul.f32 	%r640, %r610, %r487;
	mul.f32 	%r641, %r611, %r488;
	mul.f32 	%r642, %r612, %r488;
	mul.f32 	%r643, %r613, %r487;
	mul.f32 	%r644, %r614, %r487;
	mul.f32 	%r645, %r615, %r488;
	mul.f32 	%r646, %r616, %r488;
	mul.f32 	%r647, %r617, %r487;
	mul.f32 	%r648, %r618, %r487;
	mul.f32 	%r649, %r619, %r488;
	mul.f32 	%r650, %r620, %r488;
	mul.f32 	%r651, %r621, %r487;
	mul.f32 	%r652, %r622, %r487;
	mul.f32 	%r653, %r623, %r488;
	mul.f32 	%r654, %r624, %r488;
	mul.f32 	%r655, %r625, %r488;
	mul.f32 	%r656, %r626, %r488;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd123, %r499, 8192;
	add.s64 	%rd124, %rd114, %rd123;
	mul.wide.u32 	%rd125, %r464, 4;
	add.s64 	%rd75, %rd124, %rd125;
	mul.wide.s32 	%rd126, %r500, 8192;
	add.s64 	%rd127, %rd114, %rd126;
	add.s64 	%rd76, %rd127, %rd125;
	mul.wide.s32 	%rd128, %r501, 8192;
	add.s64 	%rd129, %rd114, %rd128;
	add.s64 	%rd77, %rd129, %rd125;
	mul.wide.s32 	%rd130, %r502, 8192;
	add.s64 	%rd131, %rd114, %rd130;
	add.s64 	%rd78, %rd131, %rd125;
	mul.wide.s32 	%rd132, %r503, 8192;
	add.s64 	%rd133, %rd114, %rd132;
	add.s64 	%rd79, %rd133, %rd125;
	mul.wide.s32 	%rd134, %r504, 8192;
	add.s64 	%rd135, %rd114, %rd134;
	add.s64 	%rd80, %rd135, %rd125;
	mul.wide.s32 	%rd136, %r505, 8192;
	add.s64 	%rd137, %rd114, %rd136;
	add.s64 	%rd81, %rd137, %rd125;
	mul.wide.s32 	%rd138, %r506, 8192;
	add.s64 	%rd139, %rd114, %rd138;
	add.s64 	%rd82, %rd139, %rd125;
	and.pred 	%p36, %p44, %p97;
	and.pred 	%p37, %p44, %p96;
	and.pred 	%p38, %p44, %p95;
	and.pred 	%p39, %p44, %p94;
	and.pred 	%p40, %p44, %p93;
	and.pred 	%p41, %p44, %p92;
	and.pred 	%p42, %p44, %p91;
	and.pred 	%p43, %p44, %p90;
	shl.b32 	%r657, %r1, 4;
	and.b32 	%r658, %r657, 448;
	shl.b32 	%r659, %r1, 5;
	and.b32 	%r660, %r659, 3072;
	or.b32 	%r661, %r660, %r658;
	or.b32 	%r662, %r661, %r457;
	and.b32 	%r663, %r463, 508;
	shr.u32 	%r664, %r661, 2;
	add.s32 	%r666, %r109, %r664;
	shl.b32 	%r667, %r662, 2;
	add.s32 	%r668, %r666, %r667;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r669, %r627, 0, %p104;
	selp.b32 	%r670, %r669, 0, %p63;
	selp.b32 	%r671, %r670, 0, %p62;
	selp.b32 	%r672, %r628, 0, %p105;
	selp.b32 	%r673, %r672, 0, %p64;
	selp.b32 	%r674, %r673, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668], {%r671, %r674};
	or.b32 	%r675, %r661, 512;
	shr.u32 	%r676, %r675, 2;
	add.s32 	%r677, %r109, %r676;
	add.s32 	%r678, %r677, %r667;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r679, %r629, 0, %p104;
	selp.b32 	%r680, %r679, 0, %p61;
	selp.b32 	%r681, %r630, 0, %p105;
	selp.b32 	%r682, %r681, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2048], {%r680, %r682};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r683, %r631, 0, %p98;
	selp.b32 	%r684, %r683, 0, %p65;
	selp.b32 	%r685, %r684, 0, %p62;
	selp.b32 	%r686, %r632, 0, %p99;
	selp.b32 	%r687, %r686, 0, %p66;
	selp.b32 	%r688, %r687, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+32], {%r685, %r688};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r689, %r633, 0, %p98;
	selp.b32 	%r690, %r689, 0, %p63;
	selp.b32 	%r691, %r690, 0, %p61;
	selp.b32 	%r692, %r634, 0, %p99;
	selp.b32 	%r693, %r692, 0, %p67;
	selp.b32 	%r694, %r693, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2080], {%r691, %r694};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r695, %r635, 0, %p100;
	selp.b32 	%r696, %r695, 0, %p68;
	selp.b32 	%r697, %r696, 0, %p62;
	selp.b32 	%r698, %r636, 0, %p101;
	selp.b32 	%r699, %r698, 0, %p69;
	selp.b32 	%r700, %r699, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+64], {%r697, %r700};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r701, %r637, 0, %p100;
	selp.b32 	%r702, %r701, 0, %p70;
	selp.b32 	%r703, %r702, 0, %p61;
	selp.b32 	%r704, %r638, 0, %p101;
	selp.b32 	%r705, %r704, 0, %p71;
	selp.b32 	%r706, %r705, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2112], {%r703, %r706};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r707, %r639, 0, %p102;
	selp.b32 	%r708, %r707, 0, %p72;
	selp.b32 	%r709, %r708, 0, %p62;
	selp.b32 	%r710, %r640, 0, %p103;
	selp.b32 	%r711, %r710, 0, %p73;
	selp.b32 	%r712, %r711, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+96], {%r709, %r712};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r713, %r641, 0, %p102;
	selp.b32 	%r714, %r713, 0, %p74;
	selp.b32 	%r715, %r714, 0, %p61;
	selp.b32 	%r716, %r642, 0, %p103;
	selp.b32 	%r717, %r716, 0, %p75;
	selp.b32 	%r718, %r717, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2144], {%r715, %r718};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r719, %r643, 0, %p60;
	selp.b32 	%r720, %r719, 0, %p76;
	selp.b32 	%r721, %r720, 0, %p62;
	selp.b32 	%r722, %r644, 0, %p59;
	selp.b32 	%r723, %r722, 0, %p77;
	selp.b32 	%r724, %r723, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+128], {%r721, %r724};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r725, %r645, 0, %p60;
	selp.b32 	%r726, %r725, 0, %p78;
	selp.b32 	%r727, %r726, 0, %p61;
	selp.b32 	%r728, %r646, 0, %p59;
	selp.b32 	%r729, %r728, 0, %p79;
	selp.b32 	%r730, %r729, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2176], {%r727, %r730};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r731, %r647, 0, %p58;
	selp.b32 	%r732, %r731, 0, %p80;
	selp.b32 	%r733, %r732, 0, %p62;
	selp.b32 	%r734, %r648, 0, %p57;
	selp.b32 	%r735, %r734, 0, %p81;
	selp.b32 	%r736, %r735, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+160], {%r733, %r736};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r737, %r649, 0, %p58;
	selp.b32 	%r738, %r737, 0, %p82;
	selp.b32 	%r739, %r738, 0, %p61;
	selp.b32 	%r740, %r650, 0, %p57;
	selp.b32 	%r741, %r740, 0, %p83;
	selp.b32 	%r742, %r741, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2208], {%r739, %r742};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r743, %r651, 0, %p56;
	selp.b32 	%r744, %r743, 0, %p84;
	selp.b32 	%r745, %r744, 0, %p62;
	selp.b32 	%r746, %r652, 0, %p55;
	selp.b32 	%r747, %r746, 0, %p85;
	selp.b32 	%r748, %r747, 0, %p62;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r668+192], {%r745, %r748};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r749, %r653, 0, %p56;
	selp.b32 	%r750, %r749, 0, %p86;
	selp.b32 	%r751, %r750, 0, %p61;
	selp.b32 	%r752, %r654, 0, %p55;
	selp.b32 	%r753, %r752, 0, %p87;
	selp.b32 	%r754, %r753, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2240], {%r751, %r754};
	st.shared.v2.b32 	[%r668+224], {%r319, %r319};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r756, %r655, 0, %p48;
	selp.b32 	%r757, %r756, 0, %p88;
	selp.b32 	%r758, %r757, 0, %p61;
	selp.b32 	%r759, %r656, 0, %p47;
	selp.b32 	%r760, %r759, 0, %p89;
	selp.b32 	%r761, %r760, 0, %p61;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r678+2272], {%r758, %r761};
	bar.sync 	0;
	and.b32 	%r762, %r3, 28;
	shl.b32 	%r763, %r762, 2;
	add.s32 	%r764, %r109, %r763;
	shl.b32 	%r765, %r663, 2;
	add.s32 	%r766, %r764, %r765;
	ld.shared.v4.b32 	{%r423, %r424, %r425, %r426}, [%r766];
	or.b32 	%r767, %r663, 512;
	shr.u32 	%r768, %r767, 2;
	and.b32 	%r769, %r768, 240;
	add.s32 	%r770, %r109, %r769;
	add.s32 	%r771, %r770, %r765;
	ld.shared.v4.b32 	{%r427, %r428, %r429, %r430}, [%r771+2048];
	or.b32 	%r772, %r663, 1024;
	shr.u32 	%r773, %r772, 2;
	and.b32 	%r774, %r773, 368;
	add.s32 	%r775, %r109, %r774;
	add.s32 	%r776, %r775, %r765;
	ld.shared.v4.b32 	{%r431, %r432, %r433, %r434}, [%r776+4096];
	or.b32 	%r777, %r663, 1536;
	shr.u32 	%r778, %r777, 2;
	and.b32 	%r779, %r778, 496;
	add.s32 	%r780, %r109, %r779;
	add.s32 	%r781, %r780, %r765;
	ld.shared.v4.b32 	{%r435, %r436, %r437, %r438}, [%r781+6144];
	or.b32 	%r782, %r663, 2048;
	shr.u32 	%r783, %r782, 2;
	and.b32 	%r784, %r783, 624;
	add.s32 	%r785, %r109, %r784;
	add.s32 	%r786, %r785, %r765;
	ld.shared.v4.b32 	{%r439, %r440, %r441, %r442}, [%r786+8192];
	or.b32 	%r787, %r663, 2560;
	shr.u32 	%r788, %r787, 2;
	and.b32 	%r789, %r788, 752;
	add.s32 	%r790, %r109, %r789;
	add.s32 	%r791, %r790, %r765;
	ld.shared.v4.b32 	{%r443, %r444, %r445, %r446}, [%r791+10240];
	or.b32 	%r792, %r663, 3072;
	shr.u32 	%r793, %r792, 2;
	and.b32 	%r794, %r793, 880;
	add.s32 	%r795, %r109, %r794;
	add.s32 	%r796, %r795, %r765;
	ld.shared.v4.b32 	{%r447, %r448, %r449, %r450}, [%r796+12288];
	or.b32 	%r797, %r463, 3584;
	shr.u32 	%r798, %r797, 2;
	and.b32 	%r799, %r798, 1008;
	add.s32 	%r800, %r109, %r799;
	shl.b32 	%r801, %r797, 2;
	add.s32 	%r802, %r800, %r801;
	ld.shared.v4.b32 	{%r451, %r452, %r453, %r454}, [%r802];
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd75 + 0 ], { %r423, %r424, %r425, %r426 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd76 + 0 ], { %r427, %r428, %r429, %r430 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd77 + 0 ], { %r431, %r432, %r433, %r434 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd78 + 0 ], { %r435, %r436, %r437, %r438 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd79 + 0 ], { %r439, %r440, %r441, %r442 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd80 + 0 ], { %r443, %r444, %r445, %r446 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd81 + 0 ], { %r447, %r448, %r449, %r450 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd82 + 0 ], { %r451, %r452, %r453, %r454 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
