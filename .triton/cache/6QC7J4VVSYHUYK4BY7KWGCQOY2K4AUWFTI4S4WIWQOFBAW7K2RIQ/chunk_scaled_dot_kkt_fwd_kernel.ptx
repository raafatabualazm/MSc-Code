//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 64
{
	.reg .pred 	%p<80>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<1324>;
	.reg .b64 	%rd<143>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r149, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd12, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd24, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r169, %ctaid.x;
	ld.param.b64 	%rd25, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r170, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r171, %r170, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r172, %r170, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r1, %r169, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r2, %tid.x;
	bfe.s32 	%r173, %r2, 2, 1;
	shr.u32 	%r3, %r2, 2;
	bfe.u32 	%r174, %r2, 2, 2;
	and.b32 	%r175, %r2, 16;
	shr.u32 	%r4, %r175, 2;
	or.b32 	%r5, %r174, %r4;
	and.b32 	%r176, %r2, 32;
	shr.u32 	%r6, %r176, 2;
	or.b32 	%r177, %r5, %r6;
	or.b32 	%r178, %r177, 16;
	or.b32 	%r179, %r177, 32;
	or.b32 	%r180, %r177, 48;
	bfe.s32 	%r181, %r2, 1, 1;
	and.b32 	%r7, %r2, 63;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r182, %r171, %r149;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r182;
	mul.wide.s32 	%rd26, %r182, 2;
	add.s64 	%rd27, %rd25, %rd26;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r172;
	mul.wide.u32 	%rd28, %r172, 2;
	add.s64 	%rd29, %rd27, %rd28;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd30, %r149;
	cvt.s64.s32 	%rd31, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd32, %r177;
	cvt.u64.u32 	%rd33, %r178;
	cvt.u64.u32 	%rd34, %r179;
	cvt.u64.u32 	%rd35, %r180;
	cvt.u64.u32 	%rd36, %r7;
	or.b64 	%rd37, %rd32, %rd31;
	or.b64 	%rd38, %rd33, %rd31;
	or.b64 	%rd39, %rd34, %rd31;
	or.b64 	%rd40, %rd35, %rd31;
	or.b64 	%rd41, %rd31, %rd36;
	shl.b64 	%rd3, %rd41, 5;
	shl.b64 	%rd42, %rd41, 6;
	add.s64 	%rd14, %rd29, %rd42;
	setp.gt.s32 	%p7, %r1, -1;
	setp.lt.s64 	%p8, %rd41, %rd30;
	and.pred 	%p17, %p7, %p8;
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p17 ld.global.b16 { %rs1 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r8, %r182, %r172;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r183, %r8, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd43, %r183, 2;
	add.s64 	%rd44, %rd24, %rd43;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r184, %r2, 3;
	and.b32 	%r185, %r184, 24;
	setp.lt.s64 	%p9, %rd37, %rd30;
	setp.lt.s64 	%p10, %rd38, %rd30;
	setp.lt.s64 	%p11, %rd39, %rd30;
	setp.lt.s64 	%p12, %rd40, %rd30;
	and.pred 	%p2, %p7, %p9;
	and.pred 	%p3, %p7, %p10;
	and.pred 	%p4, %p7, %p11;
	and.pred 	%p5, %p7, %p12;
	shl.b64 	%rd45, %rd37, 13;
	add.s64 	%rd46, %rd44, %rd45;
	mul.wide.u32 	%rd47, %r185, 2;
	add.s64 	%rd15, %rd46, %rd47;
	shl.b64 	%rd48, %rd38, 13;
	add.s64 	%rd49, %rd44, %rd48;
	add.s64 	%rd16, %rd49, %rd47;
	shl.b64 	%rd50, %rd39, 13;
	add.s64 	%rd51, %rd44, %rd50;
	add.s64 	%rd17, %rd51, %rd47;
	shl.b64 	%rd52, %rd40, 13;
	add.s64 	%rd53, %rd44, %rd52;
	add.s64 	%rd18, %rd53, %rd47;
	xor.b32 	%r186, %r184, %r2;
	and.b32 	%r187, %r186, 24;
	shl.b32 	%r188, %r177, 5;
	or.b32 	%r9, %r188, %r187;
	shl.b32 	%r189, %r9, 1;
	mov.b32 	%r190, global_smem;
	add.s32 	%r150, %r190, %r189;
	add.s32 	%r152, %r150, 1024;
	add.s32 	%r154, %r150, 2048;
	add.s32 	%r156, %r150, 3072;
	selp.b32 	%r151, 16, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r150 + 0 ], [ %rd15 + 0 ], 0x10, %r151;
	// end inline asm
	selp.b32 	%r153, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r152 + 0 ], [ %rd16 + 0 ], 0x10, %r153;
	// end inline asm
	selp.b32 	%r155, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r154 + 0 ], [ %rd17 + 0 ], 0x10, %r155;
	// end inline asm
	selp.b32 	%r157, 16, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r156 + 0 ], [ %rd18 + 0 ], 0x10, %r157;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd19, %rd15, 64;
	add.s64 	%rd20, %rd16, 64;
	add.s64 	%rd21, %rd17, 64;
	add.s64 	%rd22, %rd18, 64;
	bar.sync 	0;
	add.s32 	%r158, %r150, 4096;
	add.s32 	%r160, %r150, 5120;
	add.s32 	%r162, %r150, 6144;
	add.s32 	%r164, %r150, 7168;
	// begin inline asm
	cp.async.cg.shared.global [ %r158 + 0 ], [ %rd19 + 0 ], 0x10, %r151;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r160 + 0 ], [ %rd20 + 0 ], 0x10, %r153;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r162 + 0 ], [ %rd21 + 0 ], 0x10, %r155;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r164 + 0 ], [ %rd22 + 0 ], 0x10, %r157;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r191, %r2, 5;
	and.b32 	%r192, %r191, 32;
	and.b32 	%r193, %r181, 72;
	or.b32 	%r194, %r193, %r192;
	and.b32 	%r195, %r173, 144;
	or.b32 	%r196, %r194, %r195;
	and.b32 	%r197, %r2, 24;
	xor.b32 	%r10, %r196, %r197;
	and.b32 	%r198, %r191, 256;
	or.b32 	%r199, %r196, %r198;
	shr.u32 	%r200, %r175, 1;
	xor.b32 	%r11, %r199, %r200;
	xor.b32 	%r12, %r11, 16;
	xor.b32 	%r13, %r11, 528;
	xor.b32 	%r14, %r11, 1040;
	xor.b32 	%r15, %r11, 1552;
	shl.b32 	%r16, %r176, 4;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	or.b32 	%r201, %r6, %r4;
	or.b32 	%r202, %r201, %r174;
	or.b32 	%r203, %r202, 48;
	cvt.u64.u32 	%rd54, %r203;
	or.b64 	%rd55, %rd31, %rd54;
	shl.b64 	%rd56, %rd55, 13;
	and.b32 	%r204, %r2, 3;
	mul.wide.u32 	%rd57, %r204, 16;
	or.b64 	%rd58, %rd56, %rd57;
	shr.u32 	%r205, %r170, 5;
	mul.lo.s32 	%r206, %r149, %r205;
	shl.b32 	%r207, %r206, 12;
	shl.b32 	%r208, %r172, 7;
	or.b32 	%r209, %r207, %r208;
	mul.wide.s32 	%rd59, %r209, 2;
	add.s64 	%rd60, %rd58, %rd59;
	add.s64 	%rd61, %rd60, %rd24;
	add.s64 	%rd4, %rd61, 128;
	or.b32 	%r210, %r202, 32;
	cvt.u64.u32 	%rd62, %r210;
	or.b64 	%rd63, %rd31, %rd62;
	shl.b64 	%rd64, %rd63, 13;
	or.b64 	%rd65, %rd64, %rd57;
	add.s64 	%rd66, %rd65, %rd59;
	add.s64 	%rd67, %rd66, %rd24;
	add.s64 	%rd5, %rd67, 128;
	or.b32 	%r211, %r202, 16;
	cvt.u64.u32 	%rd68, %r211;
	or.b64 	%rd69, %rd31, %rd68;
	shl.b64 	%rd70, %rd69, 13;
	or.b64 	%rd71, %rd70, %rd57;
	add.s64 	%rd72, %rd71, %rd59;
	add.s64 	%rd73, %rd72, %rd24;
	add.s64 	%rd6, %rd73, 128;
	cvt.u64.u32 	%rd74, %r202;
	or.b64 	%rd75, %rd31, %rd74;
	shl.b64 	%rd76, %rd75, 13;
	or.b64 	%rd77, %rd76, %rd57;
	add.s64 	%rd78, %rd77, %rd59;
	add.s64 	%rd79, %rd78, %rd24;
	add.s64 	%rd7, %rd79, 128;
	mov.b32 	%r1260, 0f00000000;
	mov.b32 	%r1259, 1;
	mov.b32 	%r1258, -1;
	mov.b64 	%rd141, 0;
	shl.b32 	%r732, %r10, 1;
	shl.b32 	%r735, %r12, 1;
	shl.b32 	%r736, %r13, 1;
	shl.b32 	%r737, %r14, 1;
	shl.b32 	%r738, %r15, 1;
	mov.b64 	%rd142, %rd141;
	mov.b32 	%r1261, %r1260;
	mov.b32 	%r1262, %r1260;
	mov.b32 	%r1263, %r1260;
	mov.b32 	%r1264, %r1260;
	mov.b32 	%r1265, %r1260;
	mov.b32 	%r1266, %r1260;
	mov.b32 	%r1267, %r1260;
	mov.b32 	%r1268, %r1260;
	mov.b32 	%r1269, %r1260;
	mov.b32 	%r1270, %r1260;
	mov.b32 	%r1271, %r1260;
	mov.b32 	%r1272, %r1260;
	mov.b32 	%r1273, %r1260;
	mov.b32 	%r1274, %r1260;
	mov.b32 	%r1275, %r1260;
	mov.b32 	%r1276, %r1260;
	mov.b32 	%r1277, %r1260;
	mov.b32 	%r1278, %r1260;
	mov.b32 	%r1279, %r1260;
	mov.b32 	%r1280, %r1260;
	mov.b32 	%r1281, %r1260;
	mov.b32 	%r1282, %r1260;
	mov.b32 	%r1283, %r1260;
	mov.b32 	%r1284, %r1260;
	mov.b32 	%r1285, %r1260;
	mov.b32 	%r1286, %r1260;
	mov.b32 	%r1287, %r1260;
	mov.b32 	%r1288, %r1260;
	mov.b32 	%r1289, %r1260;
	mov.b32 	%r1290, %r1260;
	mov.b32 	%r1291, %r1260;
	mov.b32 	%r1292, %r1260;
	mov.b32 	%r1293, %r1260;
	mov.b32 	%r1294, %r1260;
	mov.b32 	%r1295, %r1260;
	mov.b32 	%r1296, %r1260;
	mov.b32 	%r1297, %r1260;
	mov.b32 	%r1298, %r1260;
	mov.b32 	%r1299, %r1260;
	mov.b32 	%r1300, %r1260;
	mov.b32 	%r1301, %r1260;
	mov.b32 	%r1302, %r1260;
	mov.b32 	%r1303, %r1260;
	mov.b32 	%r1304, %r1260;
	mov.b32 	%r1305, %r1260;
	mov.b32 	%r1306, %r1260;
	mov.b32 	%r1307, %r1260;
	mov.b32 	%r1308, %r1260;
	mov.b32 	%r1309, %r1260;
	mov.b32 	%r1310, %r1260;
	mov.b32 	%r1311, %r1260;
	mov.b32 	%r1312, %r1260;
	mov.b32 	%r1313, %r1260;
	mov.b32 	%r1314, %r1260;
	mov.b32 	%r1315, %r1260;
	mov.b32 	%r1316, %r1260;
	mov.b32 	%r1317, %r1260;
	mov.b32 	%r1318, %r1260;
	mov.b32 	%r1319, %r1260;
	mov.b32 	%r1320, %r1260;
	mov.b32 	%r1321, %r1260;
	mov.b32 	%r1322, %r1260;
	mov.b32 	%r1323, %r1260;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r728, %r1258, 1;
	setp.gt.s32 	%p13, %r728, 1;
	selp.b32 	%r1258, 0, %r728, %p13;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	1;
	bar.sync 	0;
	shl.b32 	%r729, %r1258, 12;
	add.s32 	%r731, %r190, %r729;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	add.s32 	%r733, %r731, %r732;
	add.s32 	%r216, %r733, %r16;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r284, %r285, %r508, %r509}, [%r216];
	// end inline asm
	add.s32 	%r221, %r216, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r298, %r299, %r522, %r523}, [%r221];
	// end inline asm
	add.s32 	%r226, %r216, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r312, %r313, %r536, %r537}, [%r226];
	// end inline asm
	add.s32 	%r231, %r216, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r326, %r327, %r550, %r551}, [%r231];
	// end inline asm
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r734, %r11, 1;
	add.s32 	%r236, %r731, %r734;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r280, %r281, %r282, %r283}, [%r236];
	// end inline asm
	add.s32 	%r241, %r731, %r735;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r504, %r505, %r506, %r507}, [%r241];
	// end inline asm
	add.s32 	%r246, %r236, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r336, %r337, %r338, %r339}, [%r246];
	// end inline asm
	add.s32 	%r251, %r731, %r736;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r560, %r561, %r562, %r563}, [%r251];
	// end inline asm
	add.s32 	%r256, %r236, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r392, %r393, %r394, %r395}, [%r256];
	// end inline asm
	add.s32 	%r261, %r731, %r737;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r616, %r617, %r618, %r619}, [%r261];
	// end inline asm
	add.s32 	%r266, %r236, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r448, %r449, %r450, %r451}, [%r266];
	// end inline asm
	add.s32 	%r271, %r731, %r738;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r672, %r673, %r674, %r675}, [%r271];
	// end inline asm
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1260, %r1261, %r1262, %r1263 }, { %r280, %r281, %r282, %r283 }, { %r284, %r285 }, { %r1260, %r1261, %r1262, %r1263 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1264, %r1265, %r1266, %r1267 }, { %r280, %r281, %r282, %r283 }, { %r298, %r299 }, { %r1264, %r1265, %r1266, %r1267 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1268, %r1269, %r1270, %r1271 }, { %r280, %r281, %r282, %r283 }, { %r312, %r313 }, { %r1268, %r1269, %r1270, %r1271 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1272, %r1273, %r1274, %r1275 }, { %r280, %r281, %r282, %r283 }, { %r326, %r327 }, { %r1272, %r1273, %r1274, %r1275 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1276, %r1277, %r1278, %r1279 }, { %r336, %r337, %r338, %r339 }, { %r284, %r285 }, { %r1276, %r1277, %r1278, %r1279 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1280, %r1281, %r1282, %r1283 }, { %r336, %r337, %r338, %r339 }, { %r298, %r299 }, { %r1280, %r1281, %r1282, %r1283 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1284, %r1285, %r1286, %r1287 }, { %r336, %r337, %r338, %r339 }, { %r312, %r313 }, { %r1284, %r1285, %r1286, %r1287 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1288, %r1289, %r1290, %r1291 }, { %r336, %r337, %r338, %r339 }, { %r326, %r327 }, { %r1288, %r1289, %r1290, %r1291 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1292, %r1293, %r1294, %r1295 }, { %r392, %r393, %r394, %r395 }, { %r284, %r285 }, { %r1292, %r1293, %r1294, %r1295 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1296, %r1297, %r1298, %r1299 }, { %r392, %r393, %r394, %r395 }, { %r298, %r299 }, { %r1296, %r1297, %r1298, %r1299 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1300, %r1301, %r1302, %r1303 }, { %r392, %r393, %r394, %r395 }, { %r312, %r313 }, { %r1300, %r1301, %r1302, %r1303 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1304, %r1305, %r1306, %r1307 }, { %r392, %r393, %r394, %r395 }, { %r326, %r327 }, { %r1304, %r1305, %r1306, %r1307 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1308, %r1309, %r1310, %r1311 }, { %r448, %r449, %r450, %r451 }, { %r284, %r285 }, { %r1308, %r1309, %r1310, %r1311 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1312, %r1313, %r1314, %r1315 }, { %r448, %r449, %r450, %r451 }, { %r298, %r299 }, { %r1312, %r1313, %r1314, %r1315 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1316, %r1317, %r1318, %r1319 }, { %r448, %r449, %r450, %r451 }, { %r312, %r313 }, { %r1316, %r1317, %r1318, %r1319 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1320, %r1321, %r1322, %r1323 }, { %r448, %r449, %r450, %r451 }, { %r326, %r327 }, { %r1320, %r1321, %r1322, %r1323 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1260, %r1261, %r1262, %r1263 }, { %r504, %r505, %r506, %r507 }, { %r508, %r509 }, { %r1260, %r1261, %r1262, %r1263 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1264, %r1265, %r1266, %r1267 }, { %r504, %r505, %r506, %r507 }, { %r522, %r523 }, { %r1264, %r1265, %r1266, %r1267 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1268, %r1269, %r1270, %r1271 }, { %r504, %r505, %r506, %r507 }, { %r536, %r537 }, { %r1268, %r1269, %r1270, %r1271 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1272, %r1273, %r1274, %r1275 }, { %r504, %r505, %r506, %r507 }, { %r550, %r551 }, { %r1272, %r1273, %r1274, %r1275 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1276, %r1277, %r1278, %r1279 }, { %r560, %r561, %r562, %r563 }, { %r508, %r509 }, { %r1276, %r1277, %r1278, %r1279 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1280, %r1281, %r1282, %r1283 }, { %r560, %r561, %r562, %r563 }, { %r522, %r523 }, { %r1280, %r1281, %r1282, %r1283 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1284, %r1285, %r1286, %r1287 }, { %r560, %r561, %r562, %r563 }, { %r536, %r537 }, { %r1284, %r1285, %r1286, %r1287 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1288, %r1289, %r1290, %r1291 }, { %r560, %r561, %r562, %r563 }, { %r550, %r551 }, { %r1288, %r1289, %r1290, %r1291 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1292, %r1293, %r1294, %r1295 }, { %r616, %r617, %r618, %r619 }, { %r508, %r509 }, { %r1292, %r1293, %r1294, %r1295 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1296, %r1297, %r1298, %r1299 }, { %r616, %r617, %r618, %r619 }, { %r522, %r523 }, { %r1296, %r1297, %r1298, %r1299 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1300, %r1301, %r1302, %r1303 }, { %r616, %r617, %r618, %r619 }, { %r536, %r537 }, { %r1300, %r1301, %r1302, %r1303 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1304, %r1305, %r1306, %r1307 }, { %r616, %r617, %r618, %r619 }, { %r550, %r551 }, { %r1304, %r1305, %r1306, %r1307 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1308, %r1309, %r1310, %r1311 }, { %r672, %r673, %r674, %r675 }, { %r508, %r509 }, { %r1308, %r1309, %r1310, %r1311 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1312, %r1313, %r1314, %r1315 }, { %r672, %r673, %r674, %r675 }, { %r522, %r523 }, { %r1312, %r1313, %r1314, %r1315 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1316, %r1317, %r1318, %r1319 }, { %r672, %r673, %r674, %r675 }, { %r536, %r537 }, { %r1316, %r1317, %r1318, %r1319 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1320, %r1321, %r1322, %r1323 }, { %r672, %r673, %r674, %r675 }, { %r550, %r551 }, { %r1320, %r1321, %r1322, %r1323 };
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r739, %r1259, 1;
	setp.gt.s32 	%p14, %r739, 1;
	selp.b32 	%r1259, 0, %r739, %p14;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd80, %rd7, %rd141;
	add.s64 	%rd81, %rd6, %rd141;
	add.s64 	%rd82, %rd5, %rd141;
	add.s64 	%rd83, %rd4, %rd141;
	setp.lt.u64 	%p15, %rd142, 2;
	shl.b32 	%r740, %r1259, 12;
	add.s32 	%r741, %r190, %r740;
	bar.sync 	0;
	add.s32 	%r720, %r741, %r189;
	add.s32 	%r722, %r720, 1024;
	add.s32 	%r724, %r720, 2048;
	add.s32 	%r726, %r720, 3072;
	selp.b32 	%r743, 16, 0, %p15;
	selp.b32 	%r721, %r743, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r720 + 0 ], [ %rd80 + 0 ], 0x10, %r721;
	// end inline asm
	selp.b32 	%r723, %r743, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r722 + 0 ], [ %rd81 + 0 ], 0x10, %r723;
	// end inline asm
	selp.b32 	%r725, %r743, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r724 + 0 ], [ %rd82 + 0 ], 0x10, %r725;
	// end inline asm
	selp.b32 	%r727, %r743, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r726 + 0 ], [ %rd83 + 0 ], 0x10, %r727;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s64 	%rd142, %rd142, 1;
	add.s64 	%rd141, %rd141, 64;
	setp.ne.s64 	%p16, %rd141, 256;
	@%p16 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shr.u32 	%r809, %r2, 4;
	shl.b32 	%r810, %r2, 2;
	and.b32 	%r811, %r810, 60;
	shl.b32 	%r812, %r2, 1;
	and.b32 	%r813, %r812, 6;
	or.b32 	%r814, %r5, 56;
	or.b32 	%r815, %r5, 48;
	or.b32 	%r816, %r5, 40;
	or.b32 	%r817, %r5, 32;
	or.b32 	%r818, %r5, 24;
	or.b32 	%r819, %r5, 16;
	or.b32 	%r820, %r5, 8;
	or.b32 	%r821, %r813, %r6;
	or.b32 	%r822, %r821, 49;
	or.b32 	%r823, %r821, 48;
	or.b32 	%r824, %r821, 33;
	or.b32 	%r825, %r821, 32;
	or.b32 	%r826, %r821, 17;
	or.b32 	%r827, %r821, 16;
	or.b32 	%r828, %r821, 1;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r829, %r821, %r1;
	or.b32 	%r830, %r5, %r1;
	or.b32 	%r831, %r828, %r1;
	or.b32 	%r832, %r820, %r1;
	or.b32 	%r833, %r819, %r1;
	or.b32 	%r834, %r818, %r1;
	or.b32 	%r835, %r827, %r1;
	or.b32 	%r836, %r826, %r1;
	or.b32 	%r837, %r817, %r1;
	or.b32 	%r838, %r816, %r1;
	or.b32 	%r839, %r825, %r1;
	or.b32 	%r840, %r824, %r1;
	or.b32 	%r841, %r815, %r1;
	or.b32 	%r842, %r814, %r1;
	or.b32 	%r843, %r823, %r1;
	or.b32 	%r844, %r822, %r1;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p35, %r844, %r149;
	setp.lt.s32 	%p36, %r843, %r149;
	setp.lt.s32 	%p37, %r842, %r149;
	setp.lt.s32 	%p38, %r841, %r149;
	setp.lt.s32 	%p39, %r840, %r149;
	setp.lt.s32 	%p40, %r839, %r149;
	setp.lt.s32 	%p41, %r838, %r149;
	setp.lt.s32 	%p42, %r837, %r149;
	setp.lt.s32 	%p43, %r836, %r149;
	setp.lt.s32 	%p44, %r835, %r149;
	setp.lt.s32 	%p45, %r834, %r149;
	setp.lt.s32 	%p46, %r833, %r149;
	setp.lt.s32 	%p47, %r832, %r149;
	setp.lt.s32 	%p48, %r831, %r149;
	setp.lt.s32 	%p49, %r830, %r149;
	setp.lt.s32 	%p50, %r829, %r149;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd101, %rd1, 2;
	add.s64 	%rd102, %rd12, %rd101;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd103, %rd2, 2;
	add.s64 	%rd104, %rd102, %rd103;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd105, %rd3, 2;
	add.s64 	%rd84, %rd104, %rd105;
	// begin inline asm
	mov.u32 %r744, 0x0;
	@%p17 ld.global.b32 { %r744 }, [ %rd84 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	shl.b32 	%r845, %r7, 2;
	add.s32 	%r847, %r190, %r845;
	st.shared.b32 	[%r847], %r744;
	bar.sync 	0;
	shl.b32 	%r848, %r5, 2;
	add.s32 	%r849, %r190, %r848;
	ld.shared.b32 	%r850, [%r849];
	ld.shared.b32 	%r851, [%r849+32];
	ld.shared.b32 	%r852, [%r849+64];
	ld.shared.b32 	%r853, [%r849+96];
	shl.b32 	%r854, %r817, 2;
	add.s32 	%r855, %r190, %r854;
	ld.shared.b32 	%r856, [%r855];
	shl.b32 	%r857, %r816, 2;
	add.s32 	%r858, %r190, %r857;
	ld.shared.b32 	%r859, [%r858];
	shl.b32 	%r860, %r815, 2;
	add.s32 	%r861, %r190, %r860;
	ld.shared.b32 	%r862, [%r861];
	shl.b32 	%r863, %r814, 2;
	add.s32 	%r864, %r190, %r863;
	ld.shared.b32 	%r865, [%r864];
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	bar.sync 	0;
	st.shared.b32 	[%r847], %r744;
	bar.sync 	0;
	shl.b32 	%r866, %r821, 2;
	add.s32 	%r867, %r190, %r866;
	ld.shared.v2.b32 	{%r868, %r869}, [%r867];
	ld.shared.v2.b32 	{%r870, %r871}, [%r867+64];
	shl.b32 	%r872, %r825, 2;
	add.s32 	%r873, %r190, %r872;
	ld.shared.v2.b32 	{%r874, %r875}, [%r873];
	shl.b32 	%r876, %r823, 2;
	add.s32 	%r877, %r190, %r876;
	ld.shared.v2.b32 	{%r878, %r879}, [%r877];
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r880, %r850, %r868;
	sub.f32 	%r881, %r850, %r869;
	sub.f32 	%r882, %r851, %r868;
	sub.f32 	%r883, %r851, %r869;
	sub.f32 	%r884, %r852, %r868;
	sub.f32 	%r885, %r852, %r869;
	sub.f32 	%r886, %r853, %r868;
	sub.f32 	%r887, %r853, %r869;
	sub.f32 	%r888, %r852, %r870;
	sub.f32 	%r889, %r852, %r871;
	sub.f32 	%r890, %r853, %r870;
	sub.f32 	%r891, %r853, %r871;
	sub.f32 	%r892, %r856, %r868;
	sub.f32 	%r893, %r856, %r869;
	sub.f32 	%r894, %r859, %r868;
	sub.f32 	%r895, %r859, %r869;
	sub.f32 	%r896, %r856, %r870;
	sub.f32 	%r897, %r856, %r871;
	sub.f32 	%r898, %r859, %r870;
	sub.f32 	%r899, %r859, %r871;
	sub.f32 	%r900, %r856, %r874;
	sub.f32 	%r901, %r856, %r875;
	sub.f32 	%r902, %r859, %r874;
	sub.f32 	%r903, %r859, %r875;
	sub.f32 	%r904, %r862, %r868;
	sub.f32 	%r905, %r862, %r869;
	sub.f32 	%r906, %r865, %r868;
	sub.f32 	%r907, %r865, %r869;
	sub.f32 	%r908, %r862, %r870;
	sub.f32 	%r909, %r862, %r871;
	sub.f32 	%r910, %r865, %r870;
	sub.f32 	%r911, %r865, %r871;
	sub.f32 	%r912, %r862, %r874;
	sub.f32 	%r913, %r862, %r875;
	sub.f32 	%r914, %r865, %r874;
	sub.f32 	%r915, %r865, %r875;
	sub.f32 	%r916, %r862, %r878;
	sub.f32 	%r917, %r862, %r879;
	sub.f32 	%r918, %r865, %r878;
	sub.f32 	%r919, %r865, %r879;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r920, %r880, 0f3FB8AA3B;
	ex2.approx.f32 	%r921, %r920;
	mul.f32 	%r922, %r881, 0f3FB8AA3B;
	ex2.approx.f32 	%r923, %r922;
	mul.f32 	%r924, %r882, 0f3FB8AA3B;
	ex2.approx.f32 	%r925, %r924;
	mul.f32 	%r926, %r883, 0f3FB8AA3B;
	ex2.approx.f32 	%r927, %r926;
	mul.f32 	%r928, %r884, 0f3FB8AA3B;
	ex2.approx.f32 	%r929, %r928;
	mul.f32 	%r930, %r885, 0f3FB8AA3B;
	ex2.approx.f32 	%r931, %r930;
	mul.f32 	%r932, %r886, 0f3FB8AA3B;
	ex2.approx.f32 	%r933, %r932;
	mul.f32 	%r934, %r887, 0f3FB8AA3B;
	ex2.approx.f32 	%r935, %r934;
	mul.f32 	%r936, %r888, 0f3FB8AA3B;
	ex2.approx.f32 	%r937, %r936;
	mul.f32 	%r938, %r889, 0f3FB8AA3B;
	ex2.approx.f32 	%r939, %r938;
	mul.f32 	%r940, %r890, 0f3FB8AA3B;
	ex2.approx.f32 	%r941, %r940;
	mul.f32 	%r942, %r891, 0f3FB8AA3B;
	ex2.approx.f32 	%r943, %r942;
	mul.f32 	%r944, %r892, 0f3FB8AA3B;
	ex2.approx.f32 	%r945, %r944;
	mul.f32 	%r946, %r893, 0f3FB8AA3B;
	ex2.approx.f32 	%r947, %r946;
	mul.f32 	%r948, %r894, 0f3FB8AA3B;
	ex2.approx.f32 	%r949, %r948;
	mul.f32 	%r950, %r895, 0f3FB8AA3B;
	ex2.approx.f32 	%r951, %r950;
	mul.f32 	%r952, %r896, 0f3FB8AA3B;
	ex2.approx.f32 	%r953, %r952;
	mul.f32 	%r954, %r897, 0f3FB8AA3B;
	ex2.approx.f32 	%r955, %r954;
	mul.f32 	%r956, %r898, 0f3FB8AA3B;
	ex2.approx.f32 	%r957, %r956;
	mul.f32 	%r958, %r899, 0f3FB8AA3B;
	ex2.approx.f32 	%r959, %r958;
	mul.f32 	%r960, %r900, 0f3FB8AA3B;
	ex2.approx.f32 	%r961, %r960;
	mul.f32 	%r962, %r901, 0f3FB8AA3B;
	ex2.approx.f32 	%r963, %r962;
	mul.f32 	%r964, %r902, 0f3FB8AA3B;
	ex2.approx.f32 	%r965, %r964;
	mul.f32 	%r966, %r903, 0f3FB8AA3B;
	ex2.approx.f32 	%r967, %r966;
	mul.f32 	%r968, %r904, 0f3FB8AA3B;
	ex2.approx.f32 	%r969, %r968;
	mul.f32 	%r970, %r905, 0f3FB8AA3B;
	ex2.approx.f32 	%r971, %r970;
	mul.f32 	%r972, %r906, 0f3FB8AA3B;
	ex2.approx.f32 	%r973, %r972;
	mul.f32 	%r974, %r907, 0f3FB8AA3B;
	ex2.approx.f32 	%r975, %r974;
	mul.f32 	%r976, %r908, 0f3FB8AA3B;
	ex2.approx.f32 	%r977, %r976;
	mul.f32 	%r978, %r909, 0f3FB8AA3B;
	ex2.approx.f32 	%r979, %r978;
	mul.f32 	%r980, %r910, 0f3FB8AA3B;
	ex2.approx.f32 	%r981, %r980;
	mul.f32 	%r982, %r911, 0f3FB8AA3B;
	ex2.approx.f32 	%r983, %r982;
	mul.f32 	%r984, %r912, 0f3FB8AA3B;
	ex2.approx.f32 	%r985, %r984;
	mul.f32 	%r986, %r913, 0f3FB8AA3B;
	ex2.approx.f32 	%r987, %r986;
	mul.f32 	%r988, %r914, 0f3FB8AA3B;
	ex2.approx.f32 	%r989, %r988;
	mul.f32 	%r990, %r915, 0f3FB8AA3B;
	ex2.approx.f32 	%r991, %r990;
	mul.f32 	%r992, %r916, 0f3FB8AA3B;
	ex2.approx.f32 	%r993, %r992;
	mul.f32 	%r994, %r917, 0f3FB8AA3B;
	ex2.approx.f32 	%r995, %r994;
	mul.f32 	%r996, %r918, 0f3FB8AA3B;
	ex2.approx.f32 	%r997, %r996;
	mul.f32 	%r998, %r919, 0f3FB8AA3B;
	ex2.approx.f32 	%r999, %r998;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r1000, %r1260, %r921;
	mul.f32 	%r1001, %r1261, %r923;
	mul.f32 	%r1002, %r1262, %r925;
	mul.f32 	%r1003, %r1263, %r927;
	mul.f32 	%r1004, %r1276, %r929;
	mul.f32 	%r1005, %r1277, %r931;
	mul.f32 	%r1006, %r1278, %r933;
	mul.f32 	%r1007, %r1279, %r935;
	mul.f32 	%r1008, %r1280, %r937;
	mul.f32 	%r1009, %r1281, %r939;
	mul.f32 	%r1010, %r1282, %r941;
	mul.f32 	%r1011, %r1283, %r943;
	mul.f32 	%r1012, %r1292, %r945;
	mul.f32 	%r1013, %r1293, %r947;
	mul.f32 	%r1014, %r1294, %r949;
	mul.f32 	%r1015, %r1295, %r951;
	mul.f32 	%r1016, %r1296, %r953;
	mul.f32 	%r1017, %r1297, %r955;
	mul.f32 	%r1018, %r1298, %r957;
	mul.f32 	%r1019, %r1299, %r959;
	mul.f32 	%r1020, %r1300, %r961;
	mul.f32 	%r1021, %r1301, %r963;
	mul.f32 	%r1022, %r1302, %r965;
	mul.f32 	%r1023, %r1303, %r967;
	mul.f32 	%r1024, %r1308, %r969;
	mul.f32 	%r1025, %r1309, %r971;
	mul.f32 	%r1026, %r1310, %r973;
	mul.f32 	%r1027, %r1311, %r975;
	mul.f32 	%r1028, %r1312, %r977;
	mul.f32 	%r1029, %r1313, %r979;
	mul.f32 	%r1030, %r1314, %r981;
	mul.f32 	%r1031, %r1315, %r983;
	mul.f32 	%r1032, %r1316, %r985;
	mul.f32 	%r1033, %r1317, %r987;
	mul.f32 	%r1034, %r1318, %r989;
	mul.f32 	%r1035, %r1319, %r991;
	mul.f32 	%r1036, %r1320, %r993;
	mul.f32 	%r1037, %r1321, %r995;
	mul.f32 	%r1038, %r1322, %r997;
	mul.f32 	%r1039, %r1323, %r999;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	bar.sync 	0;
	or.b32 	%r1040, %r4, %r6;
	shl.b32 	%r1041, %r7, 1;
	sub.s32 	%r1042, %r847, %r1041;
	st.shared.b16 	[%r1042], %rs1;
	bar.sync 	0;
	shl.b32 	%r1043, %r1040, 1;
	add.s32 	%r1044, %r190, %r1043;
	ld.shared.v4.b16 	{%rs3, %rs4, %rs5, %rs6}, [%r1044];
	ld.shared.v4.b16 	{%rs7, %rs8, %rs9, %rs10}, [%r1044+32];
	ld.shared.v4.b16 	{%rs11, %rs12, %rs13, %rs14}, [%r1044+64];
	ld.shared.v4.b16 	{%rs15, %rs16, %rs17, %rs18}, [%r1044+96];
	cvt.f32.bf16 	%r1045, %rs3;
	cvt.f32.bf16 	%r1046, %rs4;
	cvt.f32.bf16 	%r1047, %rs5;
	cvt.f32.bf16 	%r1048, %rs6;
	cvt.f32.bf16 	%r1049, %rs7;
	cvt.f32.bf16 	%r1050, %rs8;
	cvt.f32.bf16 	%r1051, %rs9;
	cvt.f32.bf16 	%r1052, %rs10;
	cvt.f32.bf16 	%r1053, %rs11;
	cvt.f32.bf16 	%r1054, %rs12;
	cvt.f32.bf16 	%r1055, %rs13;
	cvt.f32.bf16 	%r1056, %rs14;
	cvt.f32.bf16 	%r1057, %rs15;
	cvt.f32.bf16 	%r1058, %rs16;
	cvt.f32.bf16 	%r1059, %rs17;
	cvt.f32.bf16 	%r1060, %rs18;
	bar.sync 	0;
	add.s32 	%r1061, %r1044, %r1043;
	st.shared.v4.b32 	[%r1061], {%r1045, %r1046, %r1047, %r1048};
	bar.sync 	0;
	ld.shared.b32 	%r1062, [%r849];
	ld.shared.b32 	%r1063, [%r849+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1061], {%r1049, %r1050, %r1051, %r1052};
	bar.sync 	0;
	ld.shared.b32 	%r1064, [%r849];
	ld.shared.b32 	%r1065, [%r849+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1061], {%r1053, %r1054, %r1055, %r1056};
	bar.sync 	0;
	ld.shared.b32 	%r1066, [%r849];
	ld.shared.b32 	%r1067, [%r849+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1061], {%r1057, %r1058, %r1059, %r1060};
	bar.sync 	0;
	ld.shared.b32 	%r1068, [%r849];
	ld.shared.b32 	%r1069, [%r849+32];
	mul.f32 	%r1070, %r1000, %r1062;
	mul.f32 	%r1071, %r1001, %r1062;
	mul.f32 	%r1072, %r1002, %r1063;
	mul.f32 	%r1073, %r1003, %r1063;
	mul.f32 	%r1074, %r1004, %r1064;
	mul.f32 	%r1075, %r1005, %r1064;
	mul.f32 	%r1076, %r1006, %r1065;
	mul.f32 	%r1077, %r1007, %r1065;
	mul.f32 	%r1078, %r1008, %r1064;
	mul.f32 	%r1079, %r1009, %r1064;
	mul.f32 	%r1080, %r1010, %r1065;
	mul.f32 	%r1081, %r1011, %r1065;
	mul.f32 	%r1082, %r1012, %r1066;
	mul.f32 	%r1083, %r1013, %r1066;
	mul.f32 	%r1084, %r1014, %r1067;
	mul.f32 	%r1085, %r1015, %r1067;
	mul.f32 	%r1086, %r1016, %r1066;
	mul.f32 	%r1087, %r1017, %r1066;
	mul.f32 	%r1088, %r1018, %r1067;
	mul.f32 	%r1089, %r1019, %r1067;
	mul.f32 	%r1090, %r1020, %r1066;
	mul.f32 	%r1091, %r1021, %r1066;
	mul.f32 	%r1092, %r1022, %r1067;
	mul.f32 	%r1093, %r1023, %r1067;
	mul.f32 	%r1094, %r1024, %r1068;
	mul.f32 	%r1095, %r1025, %r1068;
	mul.f32 	%r1096, %r1026, %r1069;
	mul.f32 	%r1097, %r1027, %r1069;
	mul.f32 	%r1098, %r1028, %r1068;
	mul.f32 	%r1099, %r1029, %r1068;
	mul.f32 	%r1100, %r1030, %r1069;
	mul.f32 	%r1101, %r1031, %r1069;
	mul.f32 	%r1102, %r1032, %r1068;
	mul.f32 	%r1103, %r1033, %r1068;
	mul.f32 	%r1104, %r1034, %r1069;
	mul.f32 	%r1105, %r1035, %r1069;
	mul.f32 	%r1106, %r1036, %r1068;
	mul.f32 	%r1107, %r1037, %r1068;
	mul.f32 	%r1108, %r1038, %r1069;
	mul.f32 	%r1109, %r1039, %r1069;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p51, %r5, %r821;
	setp.gt.u32 	%p52, %r5, %r828;
	setp.gt.u32 	%p53, %r820, %r821;
	setp.gt.u32 	%p54, %r820, %r828;
	setp.gt.u32 	%p55, %r819, %r826;
	setp.gt.u32 	%p56, %r818, %r827;
	setp.gt.u32 	%p57, %r818, %r826;
	setp.gt.u32 	%p58, %r817, %r824;
	setp.gt.u32 	%p59, %r816, %r825;
	setp.gt.u32 	%p60, %r816, %r824;
	setp.gt.u32 	%p61, %r815, %r822;
	setp.gt.u32 	%p62, %r814, %r823;
	setp.gt.u32 	%p63, %r814, %r822;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r1110, %r8, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd106, %r1110, 4;
	add.s64 	%rd107, %rd13, %rd106;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r1111, %r2, 4, 2;
	or.b32 	%r1112, %r809, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1113, %r1112, 60;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r1114, %r1111, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1115, %r1114, 56;
	or.b32 	%r1116, %r1114, 52;
	or.b32 	%r1117, %r1114, 48;
	or.b32 	%r1118, %r1114, 44;
	or.b32 	%r1119, %r1114, 40;
	or.b32 	%r1120, %r1114, 36;
	or.b32 	%r1121, %r1114, 32;
	or.b32 	%r1122, %r1114, 28;
	or.b32 	%r1123, %r1114, 24;
	or.b32 	%r1124, %r1114, 20;
	or.b32 	%r1125, %r1114, 16;
	or.b32 	%r1126, %r1114, 12;
	or.b32 	%r1127, %r1114, 8;
	or.b32 	%r1128, %r1114, 4;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd108, %r1114, 8192;
	add.s64 	%rd109, %rd107, %rd108;
	mul.wide.u32 	%rd110, %r811, 4;
	add.s64 	%rd85, %rd109, %rd110;
	mul.wide.s32 	%rd111, %r1128, 8192;
	add.s64 	%rd112, %rd107, %rd111;
	add.s64 	%rd86, %rd112, %rd110;
	mul.wide.s32 	%rd113, %r1127, 8192;
	add.s64 	%rd114, %rd107, %rd113;
	add.s64 	%rd87, %rd114, %rd110;
	mul.wide.s32 	%rd115, %r1126, 8192;
	add.s64 	%rd116, %rd107, %rd115;
	add.s64 	%rd88, %rd116, %rd110;
	mul.wide.s32 	%rd117, %r1125, 8192;
	add.s64 	%rd118, %rd107, %rd117;
	add.s64 	%rd89, %rd118, %rd110;
	mul.wide.s32 	%rd119, %r1124, 8192;
	add.s64 	%rd120, %rd107, %rd119;
	add.s64 	%rd90, %rd120, %rd110;
	mul.wide.s32 	%rd121, %r1123, 8192;
	add.s64 	%rd122, %rd107, %rd121;
	add.s64 	%rd91, %rd122, %rd110;
	mul.wide.s32 	%rd123, %r1122, 8192;
	add.s64 	%rd124, %rd107, %rd123;
	add.s64 	%rd92, %rd124, %rd110;
	mul.wide.s32 	%rd125, %r1121, 8192;
	add.s64 	%rd126, %rd107, %rd125;
	add.s64 	%rd93, %rd126, %rd110;
	mul.wide.s32 	%rd127, %r1120, 8192;
	add.s64 	%rd128, %rd107, %rd127;
	add.s64 	%rd94, %rd128, %rd110;
	mul.wide.s32 	%rd129, %r1119, 8192;
	add.s64 	%rd130, %rd107, %rd129;
	add.s64 	%rd95, %rd130, %rd110;
	mul.wide.s32 	%rd131, %r1118, 8192;
	add.s64 	%rd132, %rd107, %rd131;
	add.s64 	%rd96, %rd132, %rd110;
	mul.wide.s32 	%rd133, %r1117, 8192;
	add.s64 	%rd134, %rd107, %rd133;
	add.s64 	%rd97, %rd134, %rd110;
	mul.wide.s32 	%rd135, %r1116, 8192;
	add.s64 	%rd136, %rd107, %rd135;
	add.s64 	%rd98, %rd136, %rd110;
	mul.wide.s32 	%rd137, %r1115, 8192;
	add.s64 	%rd138, %rd107, %rd137;
	add.s64 	%rd99, %rd138, %rd110;
	mul.wide.s32 	%rd139, %r1113, 8192;
	add.s64 	%rd140, %rd107, %rd139;
	add.s64 	%rd100, %rd140, %rd110;
	setp.lt.s32 	%p64, %r1113, %r149;
	setp.lt.s32 	%p65, %r1115, %r149;
	setp.lt.s32 	%p66, %r1116, %r149;
	setp.lt.s32 	%p67, %r1117, %r149;
	setp.lt.s32 	%p68, %r1118, %r149;
	setp.lt.s32 	%p69, %r1119, %r149;
	setp.lt.s32 	%p70, %r1120, %r149;
	setp.lt.s32 	%p71, %r1121, %r149;
	setp.lt.s32 	%p72, %r1122, %r149;
	setp.lt.s32 	%p73, %r1123, %r149;
	setp.lt.s32 	%p74, %r1124, %r149;
	setp.lt.s32 	%p75, %r1125, %r149;
	setp.lt.s32 	%p76, %r1126, %r149;
	setp.lt.s32 	%p77, %r1127, %r149;
	setp.lt.s32 	%p78, %r1128, %r149;
	setp.lt.s32 	%p79, %r1114, %r149;
	and.pred 	%p18, %p7, %p79;
	and.pred 	%p19, %p7, %p78;
	and.pred 	%p20, %p7, %p77;
	and.pred 	%p21, %p7, %p76;
	and.pred 	%p22, %p7, %p75;
	and.pred 	%p23, %p7, %p74;
	and.pred 	%p24, %p7, %p73;
	and.pred 	%p25, %p7, %p72;
	and.pred 	%p26, %p7, %p71;
	and.pred 	%p27, %p7, %p70;
	and.pred 	%p28, %p7, %p69;
	and.pred 	%p29, %p7, %p68;
	and.pred 	%p30, %p7, %p67;
	and.pred 	%p31, %p7, %p66;
	and.pred 	%p32, %p7, %p65;
	and.pred 	%p33, %p7, %p64;
	bar.sync 	0;
	shl.b32 	%r1129, %r2, 4;
	and.b32 	%r1130, %r1129, 448;
	or.b32 	%r1131, %r821, %r1130;
	and.b32 	%r1132, %r810, 252;
	shr.u32 	%r1133, %r1130, 2;
	add.s32 	%r1134, %r190, %r1133;
	shl.b32 	%r1135, %r1131, 2;
	add.s32 	%r1136, %r1134, %r1135;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1137, %r1070, 0, %p50;
	selp.b32 	%r1138, %r1137, 0, %p51;
	selp.b32 	%r1139, %r1138, 0, %p49;
	selp.b32 	%r1140, %r1071, 0, %p48;
	selp.b32 	%r1141, %r1140, 0, %p52;
	selp.b32 	%r1142, %r1141, 0, %p49;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136], {%r1139, %r1142};
	or.b32 	%r1143, %r1130, 512;
	shr.u32 	%r1144, %r1143, 2;
	add.s32 	%r1145, %r190, %r1144;
	add.s32 	%r1146, %r1145, %r1135;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1147, %r1072, 0, %p50;
	selp.b32 	%r1148, %r1147, 0, %p53;
	selp.b32 	%r1149, %r1148, 0, %p47;
	selp.b32 	%r1150, %r1073, 0, %p48;
	selp.b32 	%r1151, %r1150, 0, %p54;
	selp.b32 	%r1152, %r1151, 0, %p47;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2048], {%r1149, %r1152};
	mov.b32 	%r1153, 0;
	st.shared.v2.b32 	[%r1136+64], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2112], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1136+128], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2176], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1136+192], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2240], {%r1153, %r1153};
	bar.sync 	0;
	and.b32 	%r1154, %r3, 12;
	shl.b32 	%r1155, %r1154, 2;
	add.s32 	%r1156, %r190, %r1155;
	shl.b32 	%r1157, %r1132, 2;
	add.s32 	%r1158, %r1156, %r1157;
	ld.shared.v4.b32 	{%r745, %r746, %r747, %r748}, [%r1158];
	or.b32 	%r1159, %r1132, 256;
	shr.u32 	%r1160, %r1159, 2;
	and.b32 	%r1161, %r1160, 112;
	add.s32 	%r1162, %r190, %r1161;
	add.s32 	%r1163, %r1162, %r1157;
	ld.shared.v4.b32 	{%r749, %r750, %r751, %r752}, [%r1163+1024];
	or.b32 	%r1164, %r1132, 512;
	shr.u32 	%r1165, %r1164, 2;
	and.b32 	%r1166, %r1165, 176;
	add.s32 	%r1167, %r190, %r1166;
	add.s32 	%r1168, %r1167, %r1157;
	ld.shared.v4.b32 	{%r753, %r754, %r755, %r756}, [%r1168+2048];
	or.b32 	%r1169, %r1132, 768;
	shr.u32 	%r1170, %r1169, 2;
	and.b32 	%r1171, %r1170, 240;
	add.s32 	%r1172, %r190, %r1171;
	add.s32 	%r1173, %r1172, %r1157;
	ld.shared.v4.b32 	{%r757, %r758, %r759, %r760}, [%r1173+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1174, %r1074, 0, %p50;
	selp.b32 	%r1175, %r1174, 0, %p46;
	selp.b32 	%r1176, %r1075, 0, %p48;
	selp.b32 	%r1177, %r1176, 0, %p46;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136], {%r1175, %r1177};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1178, %r1076, 0, %p50;
	selp.b32 	%r1179, %r1178, 0, %p45;
	selp.b32 	%r1180, %r1077, 0, %p48;
	selp.b32 	%r1181, %r1180, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2048], {%r1179, %r1181};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1182, %r1078, 0, %p44;
	selp.b32 	%r1183, %r1182, 0, %p51;
	selp.b32 	%r1184, %r1183, 0, %p46;
	selp.b32 	%r1185, %r1079, 0, %p43;
	selp.b32 	%r1186, %r1185, 0, %p55;
	selp.b32 	%r1187, %r1186, 0, %p46;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+64], {%r1184, %r1187};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1188, %r1080, 0, %p44;
	selp.b32 	%r1189, %r1188, 0, %p56;
	selp.b32 	%r1190, %r1189, 0, %p45;
	selp.b32 	%r1191, %r1081, 0, %p43;
	selp.b32 	%r1192, %r1191, 0, %p57;
	selp.b32 	%r1193, %r1192, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2112], {%r1190, %r1193};
	st.shared.v2.b32 	[%r1136+128], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2176], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1136+192], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2240], {%r1153, %r1153};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r761, %r762, %r763, %r764}, [%r1158];
	ld.shared.v4.b32 	{%r765, %r766, %r767, %r768}, [%r1163+1024];
	ld.shared.v4.b32 	{%r769, %r770, %r771, %r772}, [%r1168+2048];
	ld.shared.v4.b32 	{%r773, %r774, %r775, %r776}, [%r1173+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1194, %r1082, 0, %p50;
	selp.b32 	%r1195, %r1194, 0, %p42;
	selp.b32 	%r1196, %r1083, 0, %p48;
	selp.b32 	%r1197, %r1196, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136], {%r1195, %r1197};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1198, %r1084, 0, %p50;
	selp.b32 	%r1199, %r1198, 0, %p41;
	selp.b32 	%r1200, %r1085, 0, %p48;
	selp.b32 	%r1201, %r1200, 0, %p41;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2048], {%r1199, %r1201};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1202, %r1086, 0, %p44;
	selp.b32 	%r1203, %r1202, 0, %p42;
	selp.b32 	%r1204, %r1087, 0, %p43;
	selp.b32 	%r1205, %r1204, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+64], {%r1203, %r1205};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1206, %r1088, 0, %p44;
	selp.b32 	%r1207, %r1206, 0, %p41;
	selp.b32 	%r1208, %r1089, 0, %p43;
	selp.b32 	%r1209, %r1208, 0, %p41;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2112], {%r1207, %r1209};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1210, %r1090, 0, %p40;
	selp.b32 	%r1211, %r1210, 0, %p51;
	selp.b32 	%r1212, %r1211, 0, %p42;
	selp.b32 	%r1213, %r1091, 0, %p39;
	selp.b32 	%r1214, %r1213, 0, %p58;
	selp.b32 	%r1215, %r1214, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+128], {%r1212, %r1215};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1216, %r1092, 0, %p40;
	selp.b32 	%r1217, %r1216, 0, %p59;
	selp.b32 	%r1218, %r1217, 0, %p41;
	selp.b32 	%r1219, %r1093, 0, %p39;
	selp.b32 	%r1220, %r1219, 0, %p60;
	selp.b32 	%r1221, %r1220, 0, %p41;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2176], {%r1218, %r1221};
	st.shared.v2.b32 	[%r1136+192], {%r1153, %r1153};
	st.shared.v2.b32 	[%r1146+2240], {%r1153, %r1153};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r777, %r778, %r779, %r780}, [%r1158];
	ld.shared.v4.b32 	{%r781, %r782, %r783, %r784}, [%r1163+1024];
	ld.shared.v4.b32 	{%r785, %r786, %r787, %r788}, [%r1168+2048];
	ld.shared.v4.b32 	{%r789, %r790, %r791, %r792}, [%r1173+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1222, %r1094, 0, %p50;
	selp.b32 	%r1223, %r1222, 0, %p38;
	selp.b32 	%r1224, %r1095, 0, %p48;
	selp.b32 	%r1225, %r1224, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136], {%r1223, %r1225};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1226, %r1096, 0, %p50;
	selp.b32 	%r1227, %r1226, 0, %p37;
	selp.b32 	%r1228, %r1097, 0, %p48;
	selp.b32 	%r1229, %r1228, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2048], {%r1227, %r1229};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1230, %r1098, 0, %p44;
	selp.b32 	%r1231, %r1230, 0, %p38;
	selp.b32 	%r1232, %r1099, 0, %p43;
	selp.b32 	%r1233, %r1232, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+64], {%r1231, %r1233};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1234, %r1100, 0, %p44;
	selp.b32 	%r1235, %r1234, 0, %p37;
	selp.b32 	%r1236, %r1101, 0, %p43;
	selp.b32 	%r1237, %r1236, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2112], {%r1235, %r1237};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1238, %r1102, 0, %p40;
	selp.b32 	%r1239, %r1238, 0, %p38;
	selp.b32 	%r1240, %r1103, 0, %p39;
	selp.b32 	%r1241, %r1240, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+128], {%r1239, %r1241};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1242, %r1104, 0, %p40;
	selp.b32 	%r1243, %r1242, 0, %p37;
	selp.b32 	%r1244, %r1105, 0, %p39;
	selp.b32 	%r1245, %r1244, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2176], {%r1243, %r1245};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1246, %r1106, 0, %p36;
	selp.b32 	%r1247, %r1246, 0, %p51;
	selp.b32 	%r1248, %r1247, 0, %p38;
	selp.b32 	%r1249, %r1107, 0, %p35;
	selp.b32 	%r1250, %r1249, 0, %p61;
	selp.b32 	%r1251, %r1250, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1136+192], {%r1248, %r1251};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1252, %r1108, 0, %p36;
	selp.b32 	%r1253, %r1252, 0, %p62;
	selp.b32 	%r1254, %r1253, 0, %p37;
	selp.b32 	%r1255, %r1109, 0, %p35;
	selp.b32 	%r1256, %r1255, 0, %p63;
	selp.b32 	%r1257, %r1256, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1146+2240], {%r1254, %r1257};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r793, %r794, %r795, %r796}, [%r1158];
	ld.shared.v4.b32 	{%r797, %r798, %r799, %r800}, [%r1163+1024];
	ld.shared.v4.b32 	{%r801, %r802, %r803, %r804}, [%r1168+2048];
	ld.shared.v4.b32 	{%r805, %r806, %r807, %r808}, [%r1173+3072];
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd85 + 0 ], { %r745, %r746, %r747, %r748 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd86 + 0 ], { %r749, %r750, %r751, %r752 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd87 + 0 ], { %r753, %r754, %r755, %r756 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd88 + 0 ], { %r757, %r758, %r759, %r760 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd89 + 0 ], { %r761, %r762, %r763, %r764 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd90 + 0 ], { %r765, %r766, %r767, %r768 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd91 + 0 ], { %r769, %r770, %r771, %r772 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd92 + 0 ], { %r773, %r774, %r775, %r776 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd93 + 0 ], { %r777, %r778, %r779, %r780 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd94 + 0 ], { %r781, %r782, %r783, %r784 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd95 + 0 ], { %r785, %r786, %r787, %r788 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd96 + 0 ], { %r789, %r790, %r791, %r792 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd97 + 0 ], { %r793, %r794, %r795, %r796 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd98 + 0 ], { %r797, %r798, %r799, %r800 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd99 + 0 ], { %r801, %r802, %r803, %r804 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd100 + 0 ], { %r805, %r806, %r807, %r808 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
