; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @chunk_fwd_kernel_o(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, float %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.z(), !dbg !10
  %13 = lshr i32 %12, 5, !dbg !11
  %14 = and i32 %12, 31, !dbg !12
  %15 = add i32 %7, 63, !dbg !13
  %16 = sdiv i32 %15, 64, !dbg !17
  %17 = mul i32 %16, %13, !dbg !18
  %18 = add i32 %17, %11, !dbg !19
  %19 = and i32 %12, 65504, !dbg !20
  %20 = mul i32 %19, %7, !dbg !21
  %21 = or disjoint i32 %20, %14, !dbg !22
  %22 = shl i32 %21, 7, !dbg !23
  %23 = sext i32 %22 to i64, !dbg !24
  %24 = getelementptr bfloat, ptr addrspace(1) %0, i64 %23, !dbg !24
  %25 = getelementptr bfloat, ptr addrspace(1) %1, i64 %23, !dbg !25
  %26 = getelementptr bfloat, ptr addrspace(1) %2, i64 %23, !dbg !26
  %27 = getelementptr bfloat, ptr addrspace(1) %5, i64 %23, !dbg !27
  %28 = shl i32 %18, 5, !dbg !28
  %29 = or disjoint i32 %28, %14, !dbg !29
  %30 = sext i32 %29 to i64, !dbg !30
  %.idx = shl nsw i64 %30, 15, !dbg !31
  %31 = getelementptr i8, ptr addrspace(1) %3, i64 %.idx, !dbg !31
  %32 = shl nuw nsw i32 %11, 6, !dbg !32
  %33 = sext i32 %7 to i64, !dbg !33
  %34 = zext nneg i32 %32 to i64, !dbg !33
  %35 = shl i32 %10, 7, !dbg !34
  %36 = sext i32 %35 to i64, !dbg !35
  %37 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !36
  %38 = lshr i32 %37, 5, !dbg !36
  %39 = and i32 %37, 16, !dbg !36
  %.not = icmp eq i32 %39, 0, !dbg !36
  %40 = and i32 %37, 32, !dbg !36
  %41 = icmp eq i32 %40, 0, !dbg !36
  %42 = and i32 %37, 64, !dbg !36
  %43 = icmp eq i32 %42, 0, !dbg !36
  %44 = and i32 %37, 128, !dbg !36
  %45 = lshr i32 %37, 4, !dbg !36
  %46 = and i32 %45, 15, !dbg !36
  %47 = or disjoint i32 %46, 16, !dbg !36
  %48 = or disjoint i32 %46, 32, !dbg !36
  %49 = or i32 %45, 48, !dbg !36
  %50 = and i32 %37, 8, !dbg !36
  %51 = lshr i32 %37, 2, !dbg !36
  %52 = and i32 %51, 7, !dbg !36
  %53 = lshr i32 %37, 1, !dbg !36
  %54 = and i32 %53, 48, !dbg !36
  %55 = or disjoint i32 %54, %52, !dbg !36
  %56 = or disjoint i32 %55, 8, !dbg !36
  %57 = shl nuw nsw i32 %37, 1, !dbg !36
  %58 = and i32 %57, 6, !dbg !36
  %59 = or disjoint i32 %58, 8, !dbg !36
  %60 = or disjoint i32 %58, 9, !dbg !36
  %61 = or disjoint i32 %58, 16, !dbg !36
  %62 = or disjoint i32 %58, 17, !dbg !36
  %63 = or disjoint i32 %58, 24, !dbg !36
  %64 = or disjoint i32 %58, 25, !dbg !36
  %65 = or disjoint i32 %58, 32, !dbg !36
  %66 = or disjoint i32 %58, 33, !dbg !36
  %67 = or disjoint i32 %58, 40, !dbg !36
  %68 = or disjoint i32 %58, 41, !dbg !36
  %69 = or disjoint i32 %58, 48, !dbg !36
  %70 = or disjoint i32 %58, 49, !dbg !36
  %71 = or disjoint i32 %58, 56, !dbg !36
  %72 = or disjoint i32 %58, 57, !dbg !36
  %73 = zext nneg i32 %46 to i64, !dbg !36
  %74 = zext nneg i32 %47 to i64, !dbg !36
  %75 = zext nneg i32 %48 to i64, !dbg !36
  %76 = zext nneg i32 %49 to i64, !dbg !36
  %77 = or disjoint i64 %73, %34, !dbg !36
  %78 = or disjoint i64 %74, %34, !dbg !36
  %79 = or disjoint i64 %75, %34, !dbg !36
  %80 = or disjoint i64 %76, %34, !dbg !36
  %81 = or disjoint i32 %55, %32, !dbg !36
  %82 = or disjoint i32 %56, %32, !dbg !36
  %83 = or disjoint i32 %58, %32, !dbg !36
  %84 = or disjoint i32 %83, 1, !dbg !36
  %85 = or disjoint i32 %59, %32, !dbg !36
  %86 = or disjoint i32 %60, %32, !dbg !36
  %87 = or disjoint i32 %61, %32, !dbg !36
  %88 = or disjoint i32 %62, %32, !dbg !36
  %89 = or disjoint i32 %63, %32, !dbg !36
  %90 = or disjoint i32 %64, %32, !dbg !36
  %91 = or disjoint i32 %65, %32, !dbg !36
  %92 = or disjoint i32 %66, %32, !dbg !36
  %93 = or disjoint i32 %67, %32, !dbg !36
  %94 = or disjoint i32 %68, %32, !dbg !36
  %95 = or disjoint i32 %69, %32, !dbg !36
  %96 = or disjoint i32 %70, %32, !dbg !36
  %97 = or disjoint i32 %71, %32, !dbg !36
  %98 = or disjoint i32 %72, %32, !dbg !36
  %99 = shl nuw nsw i64 %77, 12, !dbg !36
  %100 = shl nuw nsw i64 %78, 12, !dbg !36
  %101 = shl nuw nsw i64 %79, 12, !dbg !36
  %102 = shl nuw nsw i64 %80, 12, !dbg !36
  %103 = shl nuw nsw i32 %37, 3, !dbg !36
  %104 = and i32 %103, 56, !dbg !36
  %105 = shl nuw nsw i32 %50, 3, !dbg !36
  %106 = or disjoint i32 %104, %105, !dbg !36
  %107 = zext nneg i32 %106 to i64, !dbg !36
  %108 = or disjoint i64 %99, %107, !dbg !36
  %109 = or disjoint i64 %100, %107, !dbg !36
  %110 = or disjoint i64 %101, %107, !dbg !36
  %111 = or disjoint i64 %102, %107, !dbg !36
  %112 = getelementptr bfloat, ptr addrspace(1) %24, i64 %108, !dbg !36
  %113 = getelementptr bfloat, ptr addrspace(1) %24, i64 %109, !dbg !36
  %114 = getelementptr bfloat, ptr addrspace(1) %24, i64 %110, !dbg !36
  %115 = getelementptr bfloat, ptr addrspace(1) %24, i64 %111, !dbg !36
  %116 = icmp slt i64 %77, %33, !dbg !36
  %117 = icmp slt i64 %78, %33, !dbg !36
  %118 = icmp slt i64 %79, %33, !dbg !36
  %119 = icmp slt i64 %80, %33, !dbg !36
  %120 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %112, i1 %116) #5, !dbg !36
  %121 = extractvalue { i32, i32, i32, i32 } %120, 0, !dbg !36
  %122 = bitcast i32 %121 to <2 x bfloat>, !dbg !36
  %123 = extractvalue { i32, i32, i32, i32 } %120, 1, !dbg !36
  %124 = bitcast i32 %123 to <2 x bfloat>, !dbg !36
  %125 = extractvalue { i32, i32, i32, i32 } %120, 2, !dbg !36
  %126 = bitcast i32 %125 to <2 x bfloat>, !dbg !36
  %127 = shufflevector <2 x bfloat> %126, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %128 = extractvalue { i32, i32, i32, i32 } %120, 3, !dbg !36
  %129 = bitcast i32 %128 to <2 x bfloat>, !dbg !36
  %130 = shufflevector <2 x bfloat> %129, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %131 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %113, i1 %117) #5, !dbg !36
  %132 = extractvalue { i32, i32, i32, i32 } %131, 0, !dbg !36
  %133 = bitcast i32 %132 to <2 x bfloat>, !dbg !36
  %134 = extractvalue { i32, i32, i32, i32 } %131, 1, !dbg !36
  %135 = bitcast i32 %134 to <2 x bfloat>, !dbg !36
  %136 = extractvalue { i32, i32, i32, i32 } %131, 2, !dbg !36
  %137 = bitcast i32 %136 to <2 x bfloat>, !dbg !36
  %138 = shufflevector <2 x bfloat> %137, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %139 = extractvalue { i32, i32, i32, i32 } %131, 3, !dbg !36
  %140 = bitcast i32 %139 to <2 x bfloat>, !dbg !36
  %141 = shufflevector <2 x bfloat> %140, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %142 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %114, i1 %118) #5, !dbg !36
  %143 = extractvalue { i32, i32, i32, i32 } %142, 0, !dbg !36
  %144 = bitcast i32 %143 to <2 x bfloat>, !dbg !36
  %145 = extractvalue { i32, i32, i32, i32 } %142, 1, !dbg !36
  %146 = bitcast i32 %145 to <2 x bfloat>, !dbg !36
  %147 = extractvalue { i32, i32, i32, i32 } %142, 2, !dbg !36
  %148 = bitcast i32 %147 to <2 x bfloat>, !dbg !36
  %149 = shufflevector <2 x bfloat> %148, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %150 = extractvalue { i32, i32, i32, i32 } %142, 3, !dbg !36
  %151 = bitcast i32 %150 to <2 x bfloat>, !dbg !36
  %152 = shufflevector <2 x bfloat> %151, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %153 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %115, i1 %119) #5, !dbg !36
  %154 = extractvalue { i32, i32, i32, i32 } %153, 0, !dbg !36
  %155 = bitcast i32 %154 to <2 x bfloat>, !dbg !36
  %156 = extractvalue { i32, i32, i32, i32 } %153, 1, !dbg !36
  %157 = bitcast i32 %156 to <2 x bfloat>, !dbg !36
  %158 = extractvalue { i32, i32, i32, i32 } %153, 2, !dbg !36
  %159 = bitcast i32 %158 to <2 x bfloat>, !dbg !36
  %160 = shufflevector <2 x bfloat> %159, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %161 = extractvalue { i32, i32, i32, i32 } %153, 3, !dbg !36
  %162 = bitcast i32 %161 to <2 x bfloat>, !dbg !36
  %163 = shufflevector <2 x bfloat> %162, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %164 = shl nuw nsw i32 %50, 9, !dbg !36
  %165 = or disjoint i32 %104, %164, !dbg !36
  %166 = select i1 %.not, i32 0, i32 72, !dbg !36
  %167 = select i1 %41, i32 0, i32 144, !dbg !36
  %168 = select i1 %43, i32 0, i32 288, !dbg !36
  %169 = shl nuw nsw i32 %44, 2, !dbg !36
  %170 = or disjoint i32 %167, %166, !dbg !36
  %171 = or disjoint i32 %170, %169, !dbg !36
  %172 = xor i32 %171, %165, !dbg !36
  %173 = xor i32 %172, %168, !dbg !36
  %174 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %173, !dbg !36
  %175 = shufflevector <2 x bfloat> %122, <2 x bfloat> %124, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %176 = shufflevector <8 x bfloat> %175, <8 x bfloat> %127, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %177 = shufflevector <8 x bfloat> %176, <8 x bfloat> %130, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x bfloat> %177, ptr addrspace(3) %174, align 16, !dbg !36
  %178 = or disjoint i32 %104, 1024, !dbg !36
  %179 = or disjoint i32 %178, %164, !dbg !36
  %180 = or disjoint i32 %171, %168, !dbg !36
  %181 = xor i32 %180, %179, !dbg !36
  %182 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %181, !dbg !36
  %183 = shufflevector <2 x bfloat> %133, <2 x bfloat> %135, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %184 = shufflevector <8 x bfloat> %183, <8 x bfloat> %138, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %185 = shufflevector <8 x bfloat> %184, <8 x bfloat> %141, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x bfloat> %185, ptr addrspace(3) %182, align 16, !dbg !36
  %186 = or disjoint i32 %104, 2048, !dbg !36
  %187 = or disjoint i32 %186, %164, !dbg !36
  %188 = xor i32 %180, %187, !dbg !36
  %189 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %188, !dbg !36
  %190 = shufflevector <2 x bfloat> %144, <2 x bfloat> %146, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %191 = shufflevector <8 x bfloat> %190, <8 x bfloat> %149, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %192 = shufflevector <8 x bfloat> %191, <8 x bfloat> %152, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x bfloat> %192, ptr addrspace(3) %189, align 16, !dbg !36
  %193 = or disjoint i32 %104, 3072, !dbg !36
  %194 = or disjoint i32 %193, %164, !dbg !36
  %195 = xor i32 %180, %194, !dbg !36
  %196 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %195, !dbg !36
  %197 = shufflevector <2 x bfloat> %155, <2 x bfloat> %157, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !36
  %198 = shufflevector <8 x bfloat> %197, <8 x bfloat> %160, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !36
  %199 = shufflevector <8 x bfloat> %198, <8 x bfloat> %163, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !36
  store <8 x bfloat> %199, ptr addrspace(3) %196, align 16, !dbg !36
  %200 = getelementptr bfloat, ptr addrspace(1) %25, i64 %108, !dbg !37
  %201 = getelementptr bfloat, ptr addrspace(1) %25, i64 %109, !dbg !37
  %202 = getelementptr bfloat, ptr addrspace(1) %25, i64 %110, !dbg !37
  %203 = getelementptr bfloat, ptr addrspace(1) %25, i64 %111, !dbg !37
  %204 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %200, i1 %116) #5, !dbg !37
  %205 = extractvalue { i32, i32, i32, i32 } %204, 0, !dbg !37
  %206 = bitcast i32 %205 to <2 x bfloat>, !dbg !37
  %207 = extractvalue { i32, i32, i32, i32 } %204, 1, !dbg !37
  %208 = bitcast i32 %207 to <2 x bfloat>, !dbg !37
  %209 = extractvalue { i32, i32, i32, i32 } %204, 2, !dbg !37
  %210 = bitcast i32 %209 to <2 x bfloat>, !dbg !37
  %211 = shufflevector <2 x bfloat> %210, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %212 = extractvalue { i32, i32, i32, i32 } %204, 3, !dbg !37
  %213 = bitcast i32 %212 to <2 x bfloat>, !dbg !37
  %214 = shufflevector <2 x bfloat> %213, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %215 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %201, i1 %117) #5, !dbg !37
  %216 = extractvalue { i32, i32, i32, i32 } %215, 0, !dbg !37
  %217 = bitcast i32 %216 to <2 x bfloat>, !dbg !37
  %218 = extractvalue { i32, i32, i32, i32 } %215, 1, !dbg !37
  %219 = bitcast i32 %218 to <2 x bfloat>, !dbg !37
  %220 = extractvalue { i32, i32, i32, i32 } %215, 2, !dbg !37
  %221 = bitcast i32 %220 to <2 x bfloat>, !dbg !37
  %222 = shufflevector <2 x bfloat> %221, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %223 = extractvalue { i32, i32, i32, i32 } %215, 3, !dbg !37
  %224 = bitcast i32 %223 to <2 x bfloat>, !dbg !37
  %225 = shufflevector <2 x bfloat> %224, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %226 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %202, i1 %118) #5, !dbg !37
  %227 = extractvalue { i32, i32, i32, i32 } %226, 0, !dbg !37
  %228 = bitcast i32 %227 to <2 x bfloat>, !dbg !37
  %229 = extractvalue { i32, i32, i32, i32 } %226, 1, !dbg !37
  %230 = bitcast i32 %229 to <2 x bfloat>, !dbg !37
  %231 = extractvalue { i32, i32, i32, i32 } %226, 2, !dbg !37
  %232 = bitcast i32 %231 to <2 x bfloat>, !dbg !37
  %233 = shufflevector <2 x bfloat> %232, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %234 = extractvalue { i32, i32, i32, i32 } %226, 3, !dbg !37
  %235 = bitcast i32 %234 to <2 x bfloat>, !dbg !37
  %236 = shufflevector <2 x bfloat> %235, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %237 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %203, i1 %119) #5, !dbg !37
  %238 = extractvalue { i32, i32, i32, i32 } %237, 0, !dbg !37
  %239 = bitcast i32 %238 to <2 x bfloat>, !dbg !37
  %240 = extractvalue { i32, i32, i32, i32 } %237, 1, !dbg !37
  %241 = bitcast i32 %240 to <2 x bfloat>, !dbg !37
  %242 = extractvalue { i32, i32, i32, i32 } %237, 2, !dbg !37
  %243 = bitcast i32 %242 to <2 x bfloat>, !dbg !37
  %244 = shufflevector <2 x bfloat> %243, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %245 = extractvalue { i32, i32, i32, i32 } %237, 3, !dbg !37
  %246 = bitcast i32 %245 to <2 x bfloat>, !dbg !37
  %247 = shufflevector <2 x bfloat> %246, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %248 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %173, !dbg !37
  %249 = shufflevector <2 x bfloat> %206, <2 x bfloat> %208, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !37
  %250 = shufflevector <8 x bfloat> %249, <8 x bfloat> %211, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !37
  %251 = shufflevector <8 x bfloat> %250, <8 x bfloat> %214, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !37
  store <8 x bfloat> %251, ptr addrspace(3) %248, align 16, !dbg !37
  %252 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %181, !dbg !37
  %253 = shufflevector <2 x bfloat> %217, <2 x bfloat> %219, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !37
  %254 = shufflevector <8 x bfloat> %253, <8 x bfloat> %222, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !37
  %255 = shufflevector <8 x bfloat> %254, <8 x bfloat> %225, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !37
  store <8 x bfloat> %255, ptr addrspace(3) %252, align 16, !dbg !37
  %256 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %188, !dbg !37
  %257 = shufflevector <2 x bfloat> %228, <2 x bfloat> %230, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !37
  %258 = shufflevector <8 x bfloat> %257, <8 x bfloat> %233, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !37
  %259 = shufflevector <8 x bfloat> %258, <8 x bfloat> %236, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !37
  store <8 x bfloat> %259, ptr addrspace(3) %256, align 16, !dbg !37
  %260 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %195, !dbg !37
  %261 = shufflevector <2 x bfloat> %239, <2 x bfloat> %241, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !37
  %262 = shufflevector <8 x bfloat> %261, <8 x bfloat> %244, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !37
  %263 = shufflevector <8 x bfloat> %262, <8 x bfloat> %247, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !37
  store <8 x bfloat> %263, ptr addrspace(3) %260, align 16, !dbg !37
  %264 = shl nuw nsw i32 %46, 7, !dbg !38
  %265 = shl nuw nsw i32 %45, 7, !dbg !38
  %266 = or i32 %265, 14336, !dbg !38
  %267 = zext nneg i32 %266 to i64, !dbg !38
  %268 = or disjoint i64 %107, %36, !dbg !38
  %.idx4 = shl nuw nsw i64 %73, 8, !dbg !38
  %269 = getelementptr i8, ptr addrspace(1) %31, i64 %.idx4, !dbg !38
  %270 = getelementptr bfloat, ptr addrspace(1) %269, i64 %268, !dbg !38
  %.idx5 = shl nuw nsw i64 %74, 8, !dbg !38
  %271 = getelementptr i8, ptr addrspace(1) %31, i64 %.idx5, !dbg !38
  %272 = getelementptr bfloat, ptr addrspace(1) %271, i64 %268, !dbg !38
  %.idx6 = shl nuw nsw i64 %75, 8, !dbg !38
  %273 = getelementptr i8, ptr addrspace(1) %31, i64 %.idx6, !dbg !38
  %274 = getelementptr bfloat, ptr addrspace(1) %273, i64 %268, !dbg !38
  %.idx7 = shl nuw nsw i64 %76, 8, !dbg !38
  %275 = getelementptr i8, ptr addrspace(1) %31, i64 %.idx7, !dbg !38
  %276 = getelementptr bfloat, ptr addrspace(1) %275, i64 %268, !dbg !38
  %277 = getelementptr bfloat, ptr addrspace(1) %31, i64 %268, !dbg !38
  %278 = zext nneg i32 %264 to i64, !dbg !38
  %279 = getelementptr bfloat, ptr addrspace(1) %277, i64 %278, !dbg !38
  %280 = getelementptr i8, ptr addrspace(1) %279, i64 16384, !dbg !38
  %281 = getelementptr i8, ptr addrspace(1) %279, i64 20480, !dbg !38
  %282 = getelementptr i8, ptr addrspace(1) %279, i64 24576, !dbg !38
  %283 = getelementptr bfloat, ptr addrspace(1) %277, i64 %267, !dbg !38
  %284 = icmp sgt i32 %35, -1, !dbg !38
  %285 = icmp slt i64 %268, 128, !dbg !38
  %286 = and i1 %284, %285, !dbg !38
  %287 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %270, i1 %286) #5, !dbg !38
  %288 = extractvalue { i32, i32, i32, i32 } %287, 0, !dbg !38
  %289 = bitcast i32 %288 to <2 x bfloat>, !dbg !38
  %290 = extractvalue { i32, i32, i32, i32 } %287, 1, !dbg !38
  %291 = bitcast i32 %290 to <2 x bfloat>, !dbg !38
  %292 = extractvalue { i32, i32, i32, i32 } %287, 2, !dbg !38
  %293 = bitcast i32 %292 to <2 x bfloat>, !dbg !38
  %294 = shufflevector <2 x bfloat> %293, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %295 = extractvalue { i32, i32, i32, i32 } %287, 3, !dbg !38
  %296 = bitcast i32 %295 to <2 x bfloat>, !dbg !38
  %297 = shufflevector <2 x bfloat> %296, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %298 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %272, i1 %286) #5, !dbg !38
  %299 = extractvalue { i32, i32, i32, i32 } %298, 0, !dbg !38
  %300 = bitcast i32 %299 to <2 x bfloat>, !dbg !38
  %301 = extractvalue { i32, i32, i32, i32 } %298, 1, !dbg !38
  %302 = bitcast i32 %301 to <2 x bfloat>, !dbg !38
  %303 = extractvalue { i32, i32, i32, i32 } %298, 2, !dbg !38
  %304 = bitcast i32 %303 to <2 x bfloat>, !dbg !38
  %305 = shufflevector <2 x bfloat> %304, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %306 = extractvalue { i32, i32, i32, i32 } %298, 3, !dbg !38
  %307 = bitcast i32 %306 to <2 x bfloat>, !dbg !38
  %308 = shufflevector <2 x bfloat> %307, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %309 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %274, i1 %286) #5, !dbg !38
  %310 = extractvalue { i32, i32, i32, i32 } %309, 0, !dbg !38
  %311 = bitcast i32 %310 to <2 x bfloat>, !dbg !38
  %312 = extractvalue { i32, i32, i32, i32 } %309, 1, !dbg !38
  %313 = bitcast i32 %312 to <2 x bfloat>, !dbg !38
  %314 = extractvalue { i32, i32, i32, i32 } %309, 2, !dbg !38
  %315 = bitcast i32 %314 to <2 x bfloat>, !dbg !38
  %316 = shufflevector <2 x bfloat> %315, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %317 = extractvalue { i32, i32, i32, i32 } %309, 3, !dbg !38
  %318 = bitcast i32 %317 to <2 x bfloat>, !dbg !38
  %319 = shufflevector <2 x bfloat> %318, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %320 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %276, i1 %286) #5, !dbg !38
  %321 = extractvalue { i32, i32, i32, i32 } %320, 0, !dbg !38
  %322 = bitcast i32 %321 to <2 x bfloat>, !dbg !38
  %323 = extractvalue { i32, i32, i32, i32 } %320, 1, !dbg !38
  %324 = bitcast i32 %323 to <2 x bfloat>, !dbg !38
  %325 = extractvalue { i32, i32, i32, i32 } %320, 2, !dbg !38
  %326 = bitcast i32 %325 to <2 x bfloat>, !dbg !38
  %327 = shufflevector <2 x bfloat> %326, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %328 = extractvalue { i32, i32, i32, i32 } %320, 3, !dbg !38
  %329 = bitcast i32 %328 to <2 x bfloat>, !dbg !38
  %330 = shufflevector <2 x bfloat> %329, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %331 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %280, i1 %286) #5, !dbg !38
  %332 = extractvalue { i32, i32, i32, i32 } %331, 0, !dbg !38
  %333 = bitcast i32 %332 to <2 x bfloat>, !dbg !38
  %334 = extractvalue { i32, i32, i32, i32 } %331, 1, !dbg !38
  %335 = bitcast i32 %334 to <2 x bfloat>, !dbg !38
  %336 = extractvalue { i32, i32, i32, i32 } %331, 2, !dbg !38
  %337 = bitcast i32 %336 to <2 x bfloat>, !dbg !38
  %338 = shufflevector <2 x bfloat> %337, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %339 = extractvalue { i32, i32, i32, i32 } %331, 3, !dbg !38
  %340 = bitcast i32 %339 to <2 x bfloat>, !dbg !38
  %341 = shufflevector <2 x bfloat> %340, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %342 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %281, i1 %286) #5, !dbg !38
  %343 = extractvalue { i32, i32, i32, i32 } %342, 0, !dbg !38
  %344 = bitcast i32 %343 to <2 x bfloat>, !dbg !38
  %345 = extractvalue { i32, i32, i32, i32 } %342, 1, !dbg !38
  %346 = bitcast i32 %345 to <2 x bfloat>, !dbg !38
  %347 = extractvalue { i32, i32, i32, i32 } %342, 2, !dbg !38
  %348 = bitcast i32 %347 to <2 x bfloat>, !dbg !38
  %349 = shufflevector <2 x bfloat> %348, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %350 = extractvalue { i32, i32, i32, i32 } %342, 3, !dbg !38
  %351 = bitcast i32 %350 to <2 x bfloat>, !dbg !38
  %352 = shufflevector <2 x bfloat> %351, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %353 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %282, i1 %286) #5, !dbg !38
  %354 = extractvalue { i32, i32, i32, i32 } %353, 0, !dbg !38
  %355 = bitcast i32 %354 to <2 x bfloat>, !dbg !38
  %356 = extractvalue { i32, i32, i32, i32 } %353, 1, !dbg !38
  %357 = bitcast i32 %356 to <2 x bfloat>, !dbg !38
  %358 = extractvalue { i32, i32, i32, i32 } %353, 2, !dbg !38
  %359 = bitcast i32 %358 to <2 x bfloat>, !dbg !38
  %360 = shufflevector <2 x bfloat> %359, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %361 = extractvalue { i32, i32, i32, i32 } %353, 3, !dbg !38
  %362 = bitcast i32 %361 to <2 x bfloat>, !dbg !38
  %363 = shufflevector <2 x bfloat> %362, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %364 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %283, i1 %286) #5, !dbg !38
  %365 = extractvalue { i32, i32, i32, i32 } %364, 0, !dbg !38
  %366 = bitcast i32 %365 to <2 x bfloat>, !dbg !38
  %367 = extractvalue { i32, i32, i32, i32 } %364, 1, !dbg !38
  %368 = bitcast i32 %367 to <2 x bfloat>, !dbg !38
  %369 = extractvalue { i32, i32, i32, i32 } %364, 2, !dbg !38
  %370 = bitcast i32 %369 to <2 x bfloat>, !dbg !38
  %371 = shufflevector <2 x bfloat> %370, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %372 = extractvalue { i32, i32, i32, i32 } %364, 3, !dbg !38
  %373 = bitcast i32 %372 to <2 x bfloat>, !dbg !38
  %374 = shufflevector <2 x bfloat> %373, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %375 = shl nuw nsw i32 %50, 10, !dbg !38
  %376 = or disjoint i32 %104, %375, !dbg !38
  %377 = xor i32 %170, %376, !dbg !38
  %378 = xor i32 %377, %168, !dbg !38
  %379 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %378, !dbg !38
  %380 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %379, i32 %169, !dbg !38
  %381 = shufflevector <2 x bfloat> %289, <2 x bfloat> %291, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %382 = shufflevector <8 x bfloat> %381, <8 x bfloat> %294, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %383 = shufflevector <8 x bfloat> %382, <8 x bfloat> %297, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %383, ptr addrspace(3) %380, align 16, !dbg !38
  %384 = or disjoint i32 %178, %375, !dbg !38
  %385 = xor i32 %180, %384, !dbg !38
  %386 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %385, !dbg !38
  %387 = shufflevector <2 x bfloat> %300, <2 x bfloat> %302, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %388 = shufflevector <8 x bfloat> %387, <8 x bfloat> %305, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %389 = shufflevector <8 x bfloat> %388, <8 x bfloat> %308, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %389, ptr addrspace(3) %386, align 16, !dbg !38
  %390 = or disjoint i32 %186, %375, !dbg !38
  %391 = xor i32 %180, %390, !dbg !38
  %392 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %391, !dbg !38
  %393 = shufflevector <2 x bfloat> %311, <2 x bfloat> %313, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %394 = shufflevector <8 x bfloat> %393, <8 x bfloat> %316, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %395 = shufflevector <8 x bfloat> %394, <8 x bfloat> %319, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %395, ptr addrspace(3) %392, align 16, !dbg !38
  %396 = or disjoint i32 %193, %375, !dbg !38
  %397 = xor i32 %180, %396, !dbg !38
  %398 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %397, !dbg !38
  %399 = shufflevector <2 x bfloat> %322, <2 x bfloat> %324, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %400 = shufflevector <8 x bfloat> %399, <8 x bfloat> %327, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %401 = shufflevector <8 x bfloat> %400, <8 x bfloat> %330, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %401, ptr addrspace(3) %398, align 16, !dbg !38
  %402 = or disjoint i32 %376, 4096, !dbg !38
  %403 = xor i32 %180, %402, !dbg !38
  %404 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %403, !dbg !38
  %405 = shufflevector <2 x bfloat> %333, <2 x bfloat> %335, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %406 = shufflevector <8 x bfloat> %405, <8 x bfloat> %338, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %407 = shufflevector <8 x bfloat> %406, <8 x bfloat> %341, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %407, ptr addrspace(3) %404, align 16, !dbg !38
  %408 = or disjoint i32 %376, 5120, !dbg !38
  %409 = xor i32 %180, %408, !dbg !38
  %410 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %409, !dbg !38
  %411 = shufflevector <2 x bfloat> %344, <2 x bfloat> %346, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %412 = shufflevector <8 x bfloat> %411, <8 x bfloat> %349, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %413 = shufflevector <8 x bfloat> %412, <8 x bfloat> %352, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %413, ptr addrspace(3) %410, align 16, !dbg !38
  %414 = or disjoint i32 %376, 6144, !dbg !38
  %415 = xor i32 %180, %414, !dbg !38
  %416 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %415, !dbg !38
  %417 = shufflevector <2 x bfloat> %355, <2 x bfloat> %357, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %418 = shufflevector <8 x bfloat> %417, <8 x bfloat> %360, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %419 = shufflevector <8 x bfloat> %418, <8 x bfloat> %363, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %419, ptr addrspace(3) %416, align 16, !dbg !38
  %420 = or disjoint i32 %376, 7168, !dbg !38
  %421 = xor i32 %180, %420, !dbg !38
  %422 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %421, !dbg !38
  %423 = shufflevector <2 x bfloat> %366, <2 x bfloat> %368, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !38
  %424 = shufflevector <8 x bfloat> %423, <8 x bfloat> %371, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !38
  %425 = shufflevector <8 x bfloat> %424, <8 x bfloat> %374, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !38
  store <8 x bfloat> %425, ptr addrspace(3) %422, align 16, !dbg !38
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #5, !dbg !39
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %426 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %38, i32 0, i32 31), !dbg !39
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #5, !dbg !39
  %427 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), 4, !dbg !39
  %428 = and i32 %427, 16383, !dbg !39
  %429 = zext nneg i32 %428 to i64, !dbg !39
  %430 = or disjoint i64 %429, 4611686293338849280, !dbg !39
  %431 = shl i32 %426, 4, !dbg !39
  %432 = and i32 %431, 64, !dbg !39
  %433 = shl nuw nsw i32 %432, 8, !dbg !39
  %434 = add i32 %433, ptrtoint (ptr addrspace(3) @global_smem to i32), !dbg !39
  %435 = lshr exact i32 %434, 4, !dbg !39
  %436 = and i32 %435, 16383, !dbg !39
  %437 = zext nneg i32 %436 to i64, !dbg !39
  %438 = or disjoint i64 %437, 4611686293372403712, !dbg !39
  %439 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %430, i64 %438) #5, !dbg !39
  %440 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 32), 4, !dbg !39
  %441 = and i32 %440, 16383, !dbg !39
  %442 = zext nneg i32 %441 to i64, !dbg !39
  %443 = or disjoint i64 %442, 4611686293338849280, !dbg !39
  %444 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 2048), !dbg !39
  %445 = lshr exact i32 %444, 4, !dbg !39
  %446 = and i32 %445, 16383, !dbg !39
  %447 = zext nneg i32 %446 to i64, !dbg !39
  %448 = or disjoint i64 %447, 4611686293372403712, !dbg !39
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 0, !dbg !39
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 1, !dbg !39
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 2, !dbg !39
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 3, !dbg !39
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 4, !dbg !39
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 5, !dbg !39
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 6, !dbg !39
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 7, !dbg !39
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 8, !dbg !39
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 9, !dbg !39
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 10, !dbg !39
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 11, !dbg !39
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 12, !dbg !39
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 13, !dbg !39
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 14, !dbg !39
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 15, !dbg !39
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 16, !dbg !39
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 17, !dbg !39
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 18, !dbg !39
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 19, !dbg !39
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 20, !dbg !39
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 21, !dbg !39
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 22, !dbg !39
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 23, !dbg !39
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 24, !dbg !39
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 25, !dbg !39
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 26, !dbg !39
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 27, !dbg !39
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 28, !dbg !39
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 29, !dbg !39
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 30, !dbg !39
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %439, 31, !dbg !39
  %481 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %449, float %450, float %451, float %452, float %453, float %454, float %455, float %456, float %457, float %458, float %459, float %460, float %461, float %462, float %463, float %464, float %465, float %466, float %467, float %468, float %469, float %470, float %471, float %472, float %473, float %474, float %475, float %476, float %477, float %478, float %479, float %480, i64 %443, i64 %448, i1 true) #5, !dbg !39
  %482 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 64), 4, !dbg !39
  %483 = and i32 %482, 16383, !dbg !39
  %484 = zext nneg i32 %483 to i64, !dbg !39
  %485 = or disjoint i64 %484, 4611686293338849280, !dbg !39
  %486 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 4096), !dbg !39
  %487 = lshr exact i32 %486, 4, !dbg !39
  %488 = and i32 %487, 16383, !dbg !39
  %489 = zext nneg i32 %488 to i64, !dbg !39
  %490 = or disjoint i64 %489, 4611686293372403712, !dbg !39
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 0, !dbg !39
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 1, !dbg !39
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 2, !dbg !39
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 3, !dbg !39
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 4, !dbg !39
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 5, !dbg !39
  %497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 6, !dbg !39
  %498 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 7, !dbg !39
  %499 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 8, !dbg !39
  %500 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 9, !dbg !39
  %501 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 10, !dbg !39
  %502 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 11, !dbg !39
  %503 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 12, !dbg !39
  %504 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 13, !dbg !39
  %505 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 14, !dbg !39
  %506 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 15, !dbg !39
  %507 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 16, !dbg !39
  %508 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 17, !dbg !39
  %509 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 18, !dbg !39
  %510 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 19, !dbg !39
  %511 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 20, !dbg !39
  %512 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 21, !dbg !39
  %513 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 22, !dbg !39
  %514 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 23, !dbg !39
  %515 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 24, !dbg !39
  %516 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 25, !dbg !39
  %517 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 26, !dbg !39
  %518 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 27, !dbg !39
  %519 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 28, !dbg !39
  %520 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 29, !dbg !39
  %521 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 30, !dbg !39
  %522 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %481, 31, !dbg !39
  %523 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %491, float %492, float %493, float %494, float %495, float %496, float %497, float %498, float %499, float %500, float %501, float %502, float %503, float %504, float %505, float %506, float %507, float %508, float %509, float %510, float %511, float %512, float %513, float %514, float %515, float %516, float %517, float %518, float %519, float %520, float %521, float %522, i64 %485, i64 %490, i1 true) #5, !dbg !39
  %524 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 96), 4, !dbg !39
  %525 = and i32 %524, 16383, !dbg !39
  %526 = zext nneg i32 %525 to i64, !dbg !39
  %527 = or disjoint i64 %526, 4611686293338849280, !dbg !39
  %528 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 6144), !dbg !39
  %529 = lshr exact i32 %528, 4, !dbg !39
  %530 = and i32 %529, 16383, !dbg !39
  %531 = zext nneg i32 %530 to i64, !dbg !39
  %532 = or disjoint i64 %531, 4611686293372403712, !dbg !39
  %533 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 0, !dbg !39
  %534 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 1, !dbg !39
  %535 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 2, !dbg !39
  %536 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 3, !dbg !39
  %537 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 4, !dbg !39
  %538 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 5, !dbg !39
  %539 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 6, !dbg !39
  %540 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 7, !dbg !39
  %541 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 8, !dbg !39
  %542 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 9, !dbg !39
  %543 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 10, !dbg !39
  %544 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 11, !dbg !39
  %545 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 12, !dbg !39
  %546 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 13, !dbg !39
  %547 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 14, !dbg !39
  %548 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 15, !dbg !39
  %549 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 16, !dbg !39
  %550 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 17, !dbg !39
  %551 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 18, !dbg !39
  %552 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 19, !dbg !39
  %553 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 20, !dbg !39
  %554 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 21, !dbg !39
  %555 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 22, !dbg !39
  %556 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 23, !dbg !39
  %557 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 24, !dbg !39
  %558 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 25, !dbg !39
  %559 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 26, !dbg !39
  %560 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 27, !dbg !39
  %561 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 28, !dbg !39
  %562 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 29, !dbg !39
  %563 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 30, !dbg !39
  %564 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %523, 31, !dbg !39
  %565 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %533, float %534, float %535, float %536, float %537, float %538, float %539, float %540, float %541, float %542, float %543, float %544, float %545, float %546, float %547, float %548, float %549, float %550, float %551, float %552, float %553, float %554, float %555, float %556, float %557, float %558, float %559, float %560, float %561, float %562, float %563, float %564, i64 %527, i64 %532, i1 true) #5, !dbg !39
  %566 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 8192), 4, !dbg !39
  %567 = and i32 %566, 16383, !dbg !39
  %568 = zext nneg i32 %567 to i64, !dbg !39
  %569 = or disjoint i64 %568, 4611686293338849280, !dbg !39
  %570 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 8192), !dbg !39
  %571 = lshr exact i32 %570, 4, !dbg !39
  %572 = and i32 %571, 16383, !dbg !39
  %573 = zext nneg i32 %572 to i64, !dbg !39
  %574 = or disjoint i64 %573, 4611686293372403712, !dbg !39
  %575 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 0, !dbg !39
  %576 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 1, !dbg !39
  %577 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 2, !dbg !39
  %578 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 3, !dbg !39
  %579 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 4, !dbg !39
  %580 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 5, !dbg !39
  %581 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 6, !dbg !39
  %582 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 7, !dbg !39
  %583 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 8, !dbg !39
  %584 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 9, !dbg !39
  %585 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 10, !dbg !39
  %586 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 11, !dbg !39
  %587 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 12, !dbg !39
  %588 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 13, !dbg !39
  %589 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 14, !dbg !39
  %590 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 15, !dbg !39
  %591 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 16, !dbg !39
  %592 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 17, !dbg !39
  %593 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 18, !dbg !39
  %594 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 19, !dbg !39
  %595 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 20, !dbg !39
  %596 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 21, !dbg !39
  %597 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 22, !dbg !39
  %598 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 23, !dbg !39
  %599 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 24, !dbg !39
  %600 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 25, !dbg !39
  %601 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 26, !dbg !39
  %602 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 27, !dbg !39
  %603 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 28, !dbg !39
  %604 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 29, !dbg !39
  %605 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 30, !dbg !39
  %606 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %565, 31, !dbg !39
  %607 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %575, float %576, float %577, float %578, float %579, float %580, float %581, float %582, float %583, float %584, float %585, float %586, float %587, float %588, float %589, float %590, float %591, float %592, float %593, float %594, float %595, float %596, float %597, float %598, float %599, float %600, float %601, float %602, float %603, float %604, float %605, float %606, i64 %569, i64 %574, i1 true) #5, !dbg !39
  %608 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 8224), 4, !dbg !39
  %609 = and i32 %608, 16383, !dbg !39
  %610 = zext nneg i32 %609 to i64, !dbg !39
  %611 = or disjoint i64 %610, 4611686293338849280, !dbg !39
  %612 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 10240), !dbg !39
  %613 = lshr exact i32 %612, 4, !dbg !39
  %614 = and i32 %613, 16383, !dbg !39
  %615 = zext nneg i32 %614 to i64, !dbg !39
  %616 = or disjoint i64 %615, 4611686293372403712, !dbg !39
  %617 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 0, !dbg !39
  %618 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 1, !dbg !39
  %619 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 2, !dbg !39
  %620 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 3, !dbg !39
  %621 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 4, !dbg !39
  %622 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 5, !dbg !39
  %623 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 6, !dbg !39
  %624 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 7, !dbg !39
  %625 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 8, !dbg !39
  %626 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 9, !dbg !39
  %627 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 10, !dbg !39
  %628 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 11, !dbg !39
  %629 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 12, !dbg !39
  %630 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 13, !dbg !39
  %631 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 14, !dbg !39
  %632 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 15, !dbg !39
  %633 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 16, !dbg !39
  %634 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 17, !dbg !39
  %635 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 18, !dbg !39
  %636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 19, !dbg !39
  %637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 20, !dbg !39
  %638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 21, !dbg !39
  %639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 22, !dbg !39
  %640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 23, !dbg !39
  %641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 24, !dbg !39
  %642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 25, !dbg !39
  %643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 26, !dbg !39
  %644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 27, !dbg !39
  %645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 28, !dbg !39
  %646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 29, !dbg !39
  %647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 30, !dbg !39
  %648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %607, 31, !dbg !39
  %649 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %617, float %618, float %619, float %620, float %621, float %622, float %623, float %624, float %625, float %626, float %627, float %628, float %629, float %630, float %631, float %632, float %633, float %634, float %635, float %636, float %637, float %638, float %639, float %640, float %641, float %642, float %643, float %644, float %645, float %646, float %647, float %648, i64 %611, i64 %616, i1 true) #5, !dbg !39
  %650 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 8256), 4, !dbg !39
  %651 = and i32 %650, 16383, !dbg !39
  %652 = zext nneg i32 %651 to i64, !dbg !39
  %653 = or disjoint i64 %652, 4611686293338849280, !dbg !39
  %654 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 12288), !dbg !39
  %655 = lshr exact i32 %654, 4, !dbg !39
  %656 = and i32 %655, 16383, !dbg !39
  %657 = zext nneg i32 %656 to i64, !dbg !39
  %658 = or disjoint i64 %657, 4611686293372403712, !dbg !39
  %659 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 0, !dbg !39
  %660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 1, !dbg !39
  %661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 2, !dbg !39
  %662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 3, !dbg !39
  %663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 4, !dbg !39
  %664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 5, !dbg !39
  %665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 6, !dbg !39
  %666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 7, !dbg !39
  %667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 8, !dbg !39
  %668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 9, !dbg !39
  %669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 10, !dbg !39
  %670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 11, !dbg !39
  %671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 12, !dbg !39
  %672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 13, !dbg !39
  %673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 14, !dbg !39
  %674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 15, !dbg !39
  %675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 16, !dbg !39
  %676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 17, !dbg !39
  %677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 18, !dbg !39
  %678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 19, !dbg !39
  %679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 20, !dbg !39
  %680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 21, !dbg !39
  %681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 22, !dbg !39
  %682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 23, !dbg !39
  %683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 24, !dbg !39
  %684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 25, !dbg !39
  %685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 26, !dbg !39
  %686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 27, !dbg !39
  %687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 28, !dbg !39
  %688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 29, !dbg !39
  %689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 30, !dbg !39
  %690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %649, 31, !dbg !39
  %691 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %659, float %660, float %661, float %662, float %663, float %664, float %665, float %666, float %667, float %668, float %669, float %670, float %671, float %672, float %673, float %674, float %675, float %676, float %677, float %678, float %679, float %680, float %681, float %682, float %683, float %684, float %685, float %686, float %687, float %688, float %689, float %690, i64 %653, i64 %658, i1 true) #5, !dbg !39
  %692 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768) to i32), i32 8288), 4, !dbg !39
  %693 = and i32 %692, 16383, !dbg !39
  %694 = zext nneg i32 %693 to i64, !dbg !39
  %695 = or disjoint i64 %694, 4611686293338849280, !dbg !39
  %696 = add i32 %433, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 14336), !dbg !39
  %697 = lshr exact i32 %696, 4, !dbg !39
  %698 = and i32 %697, 16383, !dbg !39
  %699 = zext nneg i32 %698 to i64, !dbg !39
  %700 = or disjoint i64 %699, 4611686293372403712, !dbg !39
  %701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 0, !dbg !39
  %702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 1, !dbg !39
  %703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 2, !dbg !39
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 3, !dbg !39
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 4, !dbg !39
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 5, !dbg !39
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 6, !dbg !39
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 7, !dbg !39
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 8, !dbg !39
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 9, !dbg !39
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 10, !dbg !39
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 11, !dbg !39
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 12, !dbg !39
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 13, !dbg !39
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 14, !dbg !39
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 15, !dbg !39
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 16, !dbg !39
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 17, !dbg !39
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 18, !dbg !39
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 19, !dbg !39
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 20, !dbg !39
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 21, !dbg !39
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 22, !dbg !39
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 23, !dbg !39
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 24, !dbg !39
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 25, !dbg !39
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 26, !dbg !39
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 27, !dbg !39
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 28, !dbg !39
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 29, !dbg !39
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 30, !dbg !39
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %691, 31, !dbg !39
  %733 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %701, float %702, float %703, float %704, float %705, float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, float %718, float %719, float %720, float %721, float %722, float %723, float %724, float %725, float %726, float %727, float %728, float %729, float %730, float %731, float %732, i64 %695, i64 %700, i1 true) #5, !dbg !39
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 0, !dbg !39
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 1, !dbg !39
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 2, !dbg !39
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 3, !dbg !39
  %738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 4, !dbg !39
  %739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 5, !dbg !39
  %740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 6, !dbg !39
  %741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 7, !dbg !39
  %742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 8, !dbg !39
  %743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 9, !dbg !39
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 10, !dbg !39
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 11, !dbg !39
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 12, !dbg !39
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 13, !dbg !39
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 14, !dbg !39
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 15, !dbg !39
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 16, !dbg !39
  %751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 17, !dbg !39
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 18, !dbg !39
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 19, !dbg !39
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 20, !dbg !39
  %755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 21, !dbg !39
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 22, !dbg !39
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 23, !dbg !39
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 24, !dbg !39
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 25, !dbg !39
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 26, !dbg !39
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 27, !dbg !39
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 28, !dbg !39
  %763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 29, !dbg !39
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 30, !dbg !39
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %733, 31, !dbg !39
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #5, !dbg !39
  %766 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %734, float %735, float %736, float %737, float %738, float %739, float %740, float %741, float %742, float %743, float %744, float %745, float %746, float %747, float %748, float %749, float %750, float %751, float %752, float %753, float %754, float %755, float %756, float %757, float %758, float %759, float %760, float %761, float %762, float %763, float %764, float %765) #5, !dbg !39
  %767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 0, !dbg !39
  %768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 1, !dbg !39
  %769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 2, !dbg !39
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 3, !dbg !39
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 4, !dbg !39
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 5, !dbg !39
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 6, !dbg !39
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 7, !dbg !39
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 8, !dbg !39
  %776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 9, !dbg !39
  %777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 10, !dbg !39
  %778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 11, !dbg !39
  %779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 12, !dbg !39
  %780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 13, !dbg !39
  %781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 14, !dbg !39
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 15, !dbg !39
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 16, !dbg !39
  %784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 17, !dbg !39
  %785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 18, !dbg !39
  %786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 19, !dbg !39
  %787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 20, !dbg !39
  %788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 21, !dbg !39
  %789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 22, !dbg !39
  %790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 23, !dbg !39
  %791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 24, !dbg !39
  %792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 25, !dbg !39
  %793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 26, !dbg !39
  %794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 27, !dbg !39
  %795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 28, !dbg !39
  %796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 29, !dbg !39
  %797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 30, !dbg !39
  %798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %766, 31, !dbg !39
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #5, !dbg !40
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #5, !dbg !40
  %799 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), 4, !dbg !40
  %800 = and i32 %799, 16383, !dbg !40
  %801 = zext nneg i32 %800 to i64, !dbg !40
  %802 = or disjoint i64 %801, 4611686293338849280, !dbg !40
  %803 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $16, $17, 0, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %430, i64 %802) #5, !dbg !40
  %804 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 32), 4, !dbg !40
  %805 = and i32 %804, 16383, !dbg !40
  %806 = zext nneg i32 %805 to i64, !dbg !40
  %807 = or disjoint i64 %806, 4611686293338849280, !dbg !40
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 0, !dbg !40
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 1, !dbg !40
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 2, !dbg !40
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 3, !dbg !40
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 4, !dbg !40
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 5, !dbg !40
  %814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 6, !dbg !40
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 7, !dbg !40
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 8, !dbg !40
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 9, !dbg !40
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 10, !dbg !40
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 11, !dbg !40
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 12, !dbg !40
  %821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 13, !dbg !40
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 14, !dbg !40
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %803, 15, !dbg !40
  %824 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %808, float %809, float %810, float %811, float %812, float %813, float %814, float %815, float %816, float %817, float %818, float %819, float %820, float %821, float %822, float %823, i64 %443, i64 %807, i1 true) #5, !dbg !40
  %825 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 64), 4, !dbg !40
  %826 = and i32 %825, 16383, !dbg !40
  %827 = zext nneg i32 %826 to i64, !dbg !40
  %828 = or disjoint i64 %827, 4611686293338849280, !dbg !40
  %829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 0, !dbg !40
  %830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 1, !dbg !40
  %831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 2, !dbg !40
  %832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 3, !dbg !40
  %833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 4, !dbg !40
  %834 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 5, !dbg !40
  %835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 6, !dbg !40
  %836 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 7, !dbg !40
  %837 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 8, !dbg !40
  %838 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 9, !dbg !40
  %839 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 10, !dbg !40
  %840 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 11, !dbg !40
  %841 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 12, !dbg !40
  %842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 13, !dbg !40
  %843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 14, !dbg !40
  %844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %824, 15, !dbg !40
  %845 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %829, float %830, float %831, float %832, float %833, float %834, float %835, float %836, float %837, float %838, float %839, float %840, float %841, float %842, float %843, float %844, i64 %485, i64 %828, i1 true) #5, !dbg !40
  %846 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 96), 4, !dbg !40
  %847 = and i32 %846, 16383, !dbg !40
  %848 = zext nneg i32 %847 to i64, !dbg !40
  %849 = or disjoint i64 %848, 4611686293338849280, !dbg !40
  %850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 0, !dbg !40
  %851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 1, !dbg !40
  %852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 2, !dbg !40
  %853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 3, !dbg !40
  %854 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 4, !dbg !40
  %855 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 5, !dbg !40
  %856 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 6, !dbg !40
  %857 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 7, !dbg !40
  %858 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 8, !dbg !40
  %859 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 9, !dbg !40
  %860 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 10, !dbg !40
  %861 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 11, !dbg !40
  %862 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 12, !dbg !40
  %863 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 13, !dbg !40
  %864 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 14, !dbg !40
  %865 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %845, 15, !dbg !40
  %866 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %850, float %851, float %852, float %853, float %854, float %855, float %856, float %857, float %858, float %859, float %860, float %861, float %862, float %863, float %864, float %865, i64 %527, i64 %849, i1 true) #5, !dbg !40
  %867 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 8192), 4, !dbg !40
  %868 = and i32 %867, 16383, !dbg !40
  %869 = zext nneg i32 %868 to i64, !dbg !40
  %870 = or disjoint i64 %869, 4611686293338849280, !dbg !40
  %871 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 0, !dbg !40
  %872 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 1, !dbg !40
  %873 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 2, !dbg !40
  %874 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 3, !dbg !40
  %875 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 4, !dbg !40
  %876 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 5, !dbg !40
  %877 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 6, !dbg !40
  %878 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 7, !dbg !40
  %879 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 8, !dbg !40
  %880 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 9, !dbg !40
  %881 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 10, !dbg !40
  %882 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 11, !dbg !40
  %883 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 12, !dbg !40
  %884 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 13, !dbg !40
  %885 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 14, !dbg !40
  %886 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %866, 15, !dbg !40
  %887 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %871, float %872, float %873, float %874, float %875, float %876, float %877, float %878, float %879, float %880, float %881, float %882, float %883, float %884, float %885, float %886, i64 %569, i64 %870, i1 true) #5, !dbg !40
  %888 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 8224), 4, !dbg !40
  %889 = and i32 %888, 16383, !dbg !40
  %890 = zext nneg i32 %889 to i64, !dbg !40
  %891 = or disjoint i64 %890, 4611686293338849280, !dbg !40
  %892 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 0, !dbg !40
  %893 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 1, !dbg !40
  %894 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 2, !dbg !40
  %895 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 3, !dbg !40
  %896 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 4, !dbg !40
  %897 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 5, !dbg !40
  %898 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 6, !dbg !40
  %899 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 7, !dbg !40
  %900 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 8, !dbg !40
  %901 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 9, !dbg !40
  %902 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 10, !dbg !40
  %903 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 11, !dbg !40
  %904 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 12, !dbg !40
  %905 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 13, !dbg !40
  %906 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 14, !dbg !40
  %907 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %887, 15, !dbg !40
  %908 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %892, float %893, float %894, float %895, float %896, float %897, float %898, float %899, float %900, float %901, float %902, float %903, float %904, float %905, float %906, float %907, i64 %611, i64 %891, i1 true) #5, !dbg !40
  %909 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 8256), 4, !dbg !40
  %910 = and i32 %909, 16383, !dbg !40
  %911 = zext nneg i32 %910 to i64, !dbg !40
  %912 = or disjoint i64 %911, 4611686293338849280, !dbg !40
  %913 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 0, !dbg !40
  %914 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 1, !dbg !40
  %915 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 2, !dbg !40
  %916 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 3, !dbg !40
  %917 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 4, !dbg !40
  %918 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 5, !dbg !40
  %919 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 6, !dbg !40
  %920 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 7, !dbg !40
  %921 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 8, !dbg !40
  %922 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 9, !dbg !40
  %923 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 10, !dbg !40
  %924 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 11, !dbg !40
  %925 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 12, !dbg !40
  %926 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 13, !dbg !40
  %927 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 14, !dbg !40
  %928 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %908, 15, !dbg !40
  %929 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %913, float %914, float %915, float %916, float %917, float %918, float %919, float %920, float %921, float %922, float %923, float %924, float %925, float %926, float %927, float %928, i64 %653, i64 %912, i1 true) #5, !dbg !40
  %930 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 8288), 4, !dbg !40
  %931 = and i32 %930, 16383, !dbg !40
  %932 = zext nneg i32 %931 to i64, !dbg !40
  %933 = or disjoint i64 %932, 4611686293338849280, !dbg !40
  %934 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 0, !dbg !40
  %935 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 1, !dbg !40
  %936 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 2, !dbg !40
  %937 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 3, !dbg !40
  %938 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 4, !dbg !40
  %939 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 5, !dbg !40
  %940 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 6, !dbg !40
  %941 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 7, !dbg !40
  %942 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 8, !dbg !40
  %943 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 9, !dbg !40
  %944 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 10, !dbg !40
  %945 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 11, !dbg !40
  %946 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 12, !dbg !40
  %947 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 13, !dbg !40
  %948 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 14, !dbg !40
  %949 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %929, 15, !dbg !40
  %950 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %934, float %935, float %936, float %937, float %938, float %939, float %940, float %941, float %942, float %943, float %944, float %945, float %946, float %947, float %948, float %949, i64 %695, i64 %933, i1 true) #5, !dbg !40
  %951 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 0, !dbg !40
  %952 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 1, !dbg !40
  %953 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 2, !dbg !40
  %954 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 3, !dbg !40
  %955 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 4, !dbg !40
  %956 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 5, !dbg !40
  %957 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 6, !dbg !40
  %958 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 7, !dbg !40
  %959 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 8, !dbg !40
  %960 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 9, !dbg !40
  %961 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 10, !dbg !40
  %962 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 11, !dbg !40
  %963 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 12, !dbg !40
  %964 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 13, !dbg !40
  %965 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 14, !dbg !40
  %966 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %950, 15, !dbg !40
  %967 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 4096), 4, !dbg !40
  %968 = and i32 %967, 16383, !dbg !40
  %969 = zext nneg i32 %968 to i64, !dbg !40
  %970 = or disjoint i64 %969, 4611686293338849280, !dbg !40
  %971 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $16, $17, 0, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %430, i64 %970) #5, !dbg !40
  %972 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 4128), 4, !dbg !40
  %973 = and i32 %972, 16383, !dbg !40
  %974 = zext nneg i32 %973 to i64, !dbg !40
  %975 = or disjoint i64 %974, 4611686293338849280, !dbg !40
  %976 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 0, !dbg !40
  %977 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 1, !dbg !40
  %978 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 2, !dbg !40
  %979 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 3, !dbg !40
  %980 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 4, !dbg !40
  %981 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 5, !dbg !40
  %982 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 6, !dbg !40
  %983 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 7, !dbg !40
  %984 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 8, !dbg !40
  %985 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 9, !dbg !40
  %986 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 10, !dbg !40
  %987 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 11, !dbg !40
  %988 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 12, !dbg !40
  %989 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 13, !dbg !40
  %990 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 14, !dbg !40
  %991 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %971, 15, !dbg !40
  %992 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %976, float %977, float %978, float %979, float %980, float %981, float %982, float %983, float %984, float %985, float %986, float %987, float %988, float %989, float %990, float %991, i64 %443, i64 %975, i1 true) #5, !dbg !40
  %993 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 4160), 4, !dbg !40
  %994 = and i32 %993, 16383, !dbg !40
  %995 = zext nneg i32 %994 to i64, !dbg !40
  %996 = or disjoint i64 %995, 4611686293338849280, !dbg !40
  %997 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 0, !dbg !40
  %998 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 1, !dbg !40
  %999 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 2, !dbg !40
  %1000 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 3, !dbg !40
  %1001 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 4, !dbg !40
  %1002 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 5, !dbg !40
  %1003 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 6, !dbg !40
  %1004 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 7, !dbg !40
  %1005 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 8, !dbg !40
  %1006 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 9, !dbg !40
  %1007 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 10, !dbg !40
  %1008 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 11, !dbg !40
  %1009 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 12, !dbg !40
  %1010 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 13, !dbg !40
  %1011 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 14, !dbg !40
  %1012 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %992, 15, !dbg !40
  %1013 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %997, float %998, float %999, float %1000, float %1001, float %1002, float %1003, float %1004, float %1005, float %1006, float %1007, float %1008, float %1009, float %1010, float %1011, float %1012, i64 %485, i64 %996, i1 true) #5, !dbg !40
  %1014 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 4192), 4, !dbg !40
  %1015 = and i32 %1014, 16383, !dbg !40
  %1016 = zext nneg i32 %1015 to i64, !dbg !40
  %1017 = or disjoint i64 %1016, 4611686293338849280, !dbg !40
  %1018 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 0, !dbg !40
  %1019 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 1, !dbg !40
  %1020 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 2, !dbg !40
  %1021 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 3, !dbg !40
  %1022 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 4, !dbg !40
  %1023 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 5, !dbg !40
  %1024 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 6, !dbg !40
  %1025 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 7, !dbg !40
  %1026 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 8, !dbg !40
  %1027 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 9, !dbg !40
  %1028 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 10, !dbg !40
  %1029 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 11, !dbg !40
  %1030 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 12, !dbg !40
  %1031 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 13, !dbg !40
  %1032 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 14, !dbg !40
  %1033 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1013, 15, !dbg !40
  %1034 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %1018, float %1019, float %1020, float %1021, float %1022, float %1023, float %1024, float %1025, float %1026, float %1027, float %1028, float %1029, float %1030, float %1031, float %1032, float %1033, i64 %527, i64 %1017, i1 true) #5, !dbg !40
  %1035 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 12288), 4, !dbg !40
  %1036 = and i32 %1035, 16383, !dbg !40
  %1037 = zext nneg i32 %1036 to i64, !dbg !40
  %1038 = or disjoint i64 %1037, 4611686293338849280, !dbg !40
  %1039 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 0, !dbg !40
  %1040 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 1, !dbg !40
  %1041 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 2, !dbg !40
  %1042 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 3, !dbg !40
  %1043 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 4, !dbg !40
  %1044 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 5, !dbg !40
  %1045 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 6, !dbg !40
  %1046 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 7, !dbg !40
  %1047 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 8, !dbg !40
  %1048 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 9, !dbg !40
  %1049 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 10, !dbg !40
  %1050 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 11, !dbg !40
  %1051 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 12, !dbg !40
  %1052 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 13, !dbg !40
  %1053 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 14, !dbg !40
  %1054 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1034, 15, !dbg !40
  %1055 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %1039, float %1040, float %1041, float %1042, float %1043, float %1044, float %1045, float %1046, float %1047, float %1048, float %1049, float %1050, float %1051, float %1052, float %1053, float %1054, i64 %569, i64 %1038, i1 true) #5, !dbg !40
  %1056 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 12320), 4, !dbg !40
  %1057 = and i32 %1056, 16383, !dbg !40
  %1058 = zext nneg i32 %1057 to i64, !dbg !40
  %1059 = or disjoint i64 %1058, 4611686293338849280, !dbg !40
  %1060 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 0, !dbg !40
  %1061 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 1, !dbg !40
  %1062 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 2, !dbg !40
  %1063 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 3, !dbg !40
  %1064 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 4, !dbg !40
  %1065 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 5, !dbg !40
  %1066 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 6, !dbg !40
  %1067 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 7, !dbg !40
  %1068 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 8, !dbg !40
  %1069 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 9, !dbg !40
  %1070 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 10, !dbg !40
  %1071 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 11, !dbg !40
  %1072 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 12, !dbg !40
  %1073 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 13, !dbg !40
  %1074 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 14, !dbg !40
  %1075 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1055, 15, !dbg !40
  %1076 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %1060, float %1061, float %1062, float %1063, float %1064, float %1065, float %1066, float %1067, float %1068, float %1069, float %1070, float %1071, float %1072, float %1073, float %1074, float %1075, i64 %611, i64 %1059, i1 true) #5, !dbg !40
  %1077 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 12352), 4, !dbg !40
  %1078 = and i32 %1077, 16383, !dbg !40
  %1079 = zext nneg i32 %1078 to i64, !dbg !40
  %1080 = or disjoint i64 %1079, 4611686293338849280, !dbg !40
  %1081 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 0, !dbg !40
  %1082 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 1, !dbg !40
  %1083 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 2, !dbg !40
  %1084 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 3, !dbg !40
  %1085 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 4, !dbg !40
  %1086 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 5, !dbg !40
  %1087 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 6, !dbg !40
  %1088 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 7, !dbg !40
  %1089 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 8, !dbg !40
  %1090 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 9, !dbg !40
  %1091 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 10, !dbg !40
  %1092 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 11, !dbg !40
  %1093 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 12, !dbg !40
  %1094 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 13, !dbg !40
  %1095 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 14, !dbg !40
  %1096 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1076, 15, !dbg !40
  %1097 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %1081, float %1082, float %1083, float %1084, float %1085, float %1086, float %1087, float %1088, float %1089, float %1090, float %1091, float %1092, float %1093, float %1094, float %1095, float %1096, i64 %653, i64 %1080, i1 true) #5, !dbg !40
  %1098 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152) to i32), i32 12384), 4, !dbg !40
  %1099 = and i32 %1098, 16383, !dbg !40
  %1100 = zext nneg i32 %1099 to i64, !dbg !40
  %1101 = or disjoint i64 %1100, 4611686293338849280, !dbg !40
  %1102 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 0, !dbg !40
  %1103 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 1, !dbg !40
  %1104 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 2, !dbg !40
  %1105 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 3, !dbg !40
  %1106 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 4, !dbg !40
  %1107 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 5, !dbg !40
  %1108 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 6, !dbg !40
  %1109 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 7, !dbg !40
  %1110 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 8, !dbg !40
  %1111 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 9, !dbg !40
  %1112 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 10, !dbg !40
  %1113 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 11, !dbg !40
  %1114 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 12, !dbg !40
  %1115 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 13, !dbg !40
  %1116 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 14, !dbg !40
  %1117 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1097, 15, !dbg !40
  %1118 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15}, $32, $33, $34, 1, 1, 0, 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,l,l,b"(float %1102, float %1103, float %1104, float %1105, float %1106, float %1107, float %1108, float %1109, float %1110, float %1111, float %1112, float %1113, float %1114, float %1115, float %1116, float %1117, i64 %695, i64 %1101, i1 true) #5, !dbg !40
  %1119 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 0, !dbg !40
  %1120 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 1, !dbg !40
  %1121 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 2, !dbg !40
  %1122 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 3, !dbg !40
  %1123 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 4, !dbg !40
  %1124 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 5, !dbg !40
  %1125 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 6, !dbg !40
  %1126 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 7, !dbg !40
  %1127 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 8, !dbg !40
  %1128 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 9, !dbg !40
  %1129 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 10, !dbg !40
  %1130 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 11, !dbg !40
  %1131 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 12, !dbg !40
  %1132 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 13, !dbg !40
  %1133 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 14, !dbg !40
  %1134 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1118, 15, !dbg !40
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #5, !dbg !40
  %1135 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %951, float %952, float %953, float %954, float %955, float %956, float %957, float %958, float %959, float %960, float %961, float %962, float %963, float %964, float %965, float %966, float %1119, float %1120, float %1121, float %1122, float %1123, float %1124, float %1125, float %1126, float %1127, float %1128, float %1129, float %1130, float %1131, float %1132, float %1133, float %1134) #5, !dbg !40
  %1136 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 0, !dbg !40
  %1137 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 1, !dbg !40
  %1138 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 2, !dbg !40
  %1139 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 3, !dbg !40
  %1140 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 4, !dbg !40
  %1141 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 5, !dbg !40
  %1142 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 6, !dbg !40
  %1143 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 7, !dbg !40
  %1144 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 8, !dbg !40
  %1145 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 9, !dbg !40
  %1146 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 10, !dbg !40
  %1147 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 11, !dbg !40
  %1148 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 12, !dbg !40
  %1149 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 13, !dbg !40
  %1150 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 14, !dbg !40
  %1151 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 15, !dbg !40
  %1152 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 16, !dbg !40
  %1153 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 17, !dbg !40
  %1154 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 18, !dbg !40
  %1155 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 19, !dbg !40
  %1156 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 20, !dbg !40
  %1157 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 21, !dbg !40
  %1158 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 22, !dbg !40
  %1159 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 23, !dbg !40
  %1160 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 24, !dbg !40
  %1161 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 25, !dbg !40
  %1162 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 26, !dbg !40
  %1163 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 27, !dbg !40
  %1164 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 30, !dbg !40
  %1165 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1135, 31, !dbg !40
  %1166 = sext i32 %21 to i64, !dbg !41
  %1167 = getelementptr float, ptr addrspace(1) %4, i64 %1166, !dbg !41
  %1168 = shl nuw nsw i32 %81, 7, !dbg !42
  %.idx8 = zext nneg i32 %1168 to i64, !dbg !42
  %1169 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx8, !dbg !42
  %1170 = shl nuw nsw i32 %82, 7, !dbg !42
  %.idx9 = zext nneg i32 %1170 to i64, !dbg !42
  %1171 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx9, !dbg !42
  %1172 = shl nuw nsw i32 %83, 7, !dbg !42
  %.idx10 = zext nneg i32 %1172 to i64, !dbg !42
  %1173 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx10, !dbg !42
  %1174 = shl nuw nsw i32 %84, 7, !dbg !42
  %.idx11 = zext nneg i32 %1174 to i64, !dbg !42
  %1175 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx11, !dbg !42
  %1176 = shl nuw nsw i32 %85, 7, !dbg !42
  %.idx12 = zext nneg i32 %1176 to i64, !dbg !42
  %1177 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx12, !dbg !42
  %1178 = shl nuw nsw i32 %86, 7, !dbg !42
  %.idx13 = zext nneg i32 %1178 to i64, !dbg !42
  %1179 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx13, !dbg !42
  %1180 = shl nuw nsw i32 %87, 7, !dbg !42
  %.idx14 = zext nneg i32 %1180 to i64, !dbg !42
  %1181 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx14, !dbg !42
  %1182 = shl nuw nsw i32 %88, 7, !dbg !42
  %.idx15 = zext nneg i32 %1182 to i64, !dbg !42
  %1183 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx15, !dbg !42
  %1184 = shl nuw nsw i32 %89, 7, !dbg !42
  %.idx16 = zext nneg i32 %1184 to i64, !dbg !42
  %1185 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx16, !dbg !42
  %1186 = shl nuw nsw i32 %90, 7, !dbg !42
  %.idx17 = zext nneg i32 %1186 to i64, !dbg !42
  %1187 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx17, !dbg !42
  %1188 = shl nuw nsw i32 %91, 7, !dbg !42
  %.idx18 = zext nneg i32 %1188 to i64, !dbg !42
  %1189 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx18, !dbg !42
  %1190 = shl nuw nsw i32 %92, 7, !dbg !42
  %.idx19 = zext nneg i32 %1190 to i64, !dbg !42
  %1191 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx19, !dbg !42
  %1192 = shl nuw nsw i32 %93, 7, !dbg !42
  %.idx20 = zext nneg i32 %1192 to i64, !dbg !42
  %1193 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx20, !dbg !42
  %1194 = shl nuw nsw i32 %94, 7, !dbg !42
  %.idx21 = zext nneg i32 %1194 to i64, !dbg !42
  %1195 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx21, !dbg !42
  %1196 = shl nuw nsw i32 %95, 7, !dbg !42
  %.idx22 = zext nneg i32 %1196 to i64, !dbg !42
  %1197 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx22, !dbg !42
  %1198 = shl nuw nsw i32 %96, 7, !dbg !42
  %.idx23 = zext nneg i32 %1198 to i64, !dbg !42
  %1199 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx23, !dbg !42
  %1200 = shl nuw nsw i32 %97, 7, !dbg !42
  %.idx24 = zext nneg i32 %1200 to i64, !dbg !42
  %1201 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx24, !dbg !42
  %1202 = shl nuw nsw i32 %98, 7, !dbg !42
  %.idx25 = zext nneg i32 %1202 to i64, !dbg !42
  %1203 = getelementptr i8, ptr addrspace(1) %1167, i64 %.idx25, !dbg !42
  %1204 = icmp slt i32 %81, %7, !dbg !42
  %1205 = icmp slt i32 %82, %7, !dbg !42
  %1206 = icmp slt i32 %83, %7, !dbg !42
  %1207 = icmp slt i32 %84, %7, !dbg !42
  %1208 = icmp slt i32 %85, %7, !dbg !42
  %1209 = icmp slt i32 %86, %7, !dbg !42
  %1210 = icmp slt i32 %87, %7, !dbg !42
  %1211 = icmp slt i32 %88, %7, !dbg !42
  %1212 = icmp slt i32 %89, %7, !dbg !42
  %1213 = icmp slt i32 %90, %7, !dbg !42
  %1214 = icmp slt i32 %91, %7, !dbg !42
  %1215 = icmp slt i32 %92, %7, !dbg !42
  %1216 = icmp slt i32 %93, %7, !dbg !42
  %1217 = icmp slt i32 %94, %7, !dbg !42
  %1218 = icmp slt i32 %95, %7, !dbg !42
  %1219 = icmp slt i32 %96, %7, !dbg !42
  %1220 = icmp slt i32 %97, %7, !dbg !42
  %1221 = icmp slt i32 %98, %7, !dbg !42
  %1222 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1169, i1 %1204) #5, !dbg !42
  %1223 = bitcast i32 %1222 to float, !dbg !42
  %1224 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1171, i1 %1205) #5, !dbg !42
  %1225 = bitcast i32 %1224 to float, !dbg !42
  %1226 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1169, i1 %1204) #5, !dbg !42
  %1227 = bitcast i32 %1226 to float, !dbg !42
  %1228 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1171, i1 %1205) #5, !dbg !42
  %1229 = bitcast i32 %1228 to float, !dbg !42
  %1230 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1173, i1 %1206) #5, !dbg !42
  %1231 = bitcast i32 %1230 to float, !dbg !42
  %1232 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1175, i1 %1207) #5, !dbg !42
  %1233 = bitcast i32 %1232 to float, !dbg !42
  %1234 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1177, i1 %1208) #5, !dbg !42
  %1235 = bitcast i32 %1234 to float, !dbg !42
  %1236 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1179, i1 %1209) #5, !dbg !42
  %1237 = bitcast i32 %1236 to float, !dbg !42
  %1238 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1181, i1 %1210) #5, !dbg !42
  %1239 = bitcast i32 %1238 to float, !dbg !42
  %1240 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1183, i1 %1211) #5, !dbg !42
  %1241 = bitcast i32 %1240 to float, !dbg !42
  %1242 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1185, i1 %1212) #5, !dbg !42
  %1243 = bitcast i32 %1242 to float, !dbg !42
  %1244 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1187, i1 %1213) #5, !dbg !42
  %1245 = bitcast i32 %1244 to float, !dbg !42
  %1246 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1189, i1 %1214) #5, !dbg !42
  %1247 = bitcast i32 %1246 to float, !dbg !42
  %1248 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1191, i1 %1215) #5, !dbg !42
  %1249 = bitcast i32 %1248 to float, !dbg !42
  %1250 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1193, i1 %1216) #5, !dbg !42
  %1251 = bitcast i32 %1250 to float, !dbg !42
  %1252 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1195, i1 %1217) #5, !dbg !42
  %1253 = bitcast i32 %1252 to float, !dbg !42
  %1254 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1197, i1 %1218) #5, !dbg !42
  %1255 = bitcast i32 %1254 to float, !dbg !42
  %1256 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1199, i1 %1219) #5, !dbg !42
  %1257 = bitcast i32 %1256 to float, !dbg !42
  %1258 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1201, i1 %1220) #5, !dbg !42
  %1259 = bitcast i32 %1258 to float, !dbg !42
  %1260 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %1203, i1 %1221) #5, !dbg !42
  %1261 = bitcast i32 %1260 to float, !dbg !42
  %1262 = fmul float %1223, 0x3FF7154760000000, !dbg !43
  %1263 = tail call float @llvm.nvvm.ex2.approx.f(float %1262), !dbg !43
  %1264 = fmul float %1225, 0x3FF7154760000000, !dbg !43
  %1265 = tail call float @llvm.nvvm.ex2.approx.f(float %1264), !dbg !43
  %1266 = fsub float %1227, %1231, !dbg !44
  %1267 = fsub float %1227, %1233, !dbg !44
  %1268 = fsub float %1229, %1231, !dbg !44
  %1269 = fsub float %1229, %1233, !dbg !44
  %1270 = fsub float %1227, %1235, !dbg !44
  %1271 = fsub float %1227, %1237, !dbg !44
  %1272 = fsub float %1229, %1235, !dbg !44
  %1273 = fsub float %1229, %1237, !dbg !44
  %1274 = fsub float %1227, %1239, !dbg !44
  %1275 = fsub float %1227, %1241, !dbg !44
  %1276 = fsub float %1229, %1239, !dbg !44
  %1277 = fsub float %1229, %1241, !dbg !44
  %1278 = fsub float %1227, %1243, !dbg !44
  %1279 = fsub float %1227, %1245, !dbg !44
  %1280 = fsub float %1229, %1243, !dbg !44
  %1281 = fsub float %1229, %1245, !dbg !44
  %1282 = fsub float %1227, %1247, !dbg !44
  %1283 = fsub float %1227, %1249, !dbg !44
  %1284 = fsub float %1229, %1247, !dbg !44
  %1285 = fsub float %1229, %1249, !dbg !44
  %1286 = fsub float %1227, %1251, !dbg !44
  %1287 = fsub float %1227, %1253, !dbg !44
  %1288 = fsub float %1229, %1251, !dbg !44
  %1289 = fsub float %1229, %1253, !dbg !44
  %1290 = fsub float %1227, %1255, !dbg !44
  %1291 = fsub float %1227, %1257, !dbg !44
  %1292 = fsub float %1229, %1255, !dbg !44
  %1293 = fsub float %1229, %1257, !dbg !44
  %1294 = fsub float %1229, %1259, !dbg !44
  %1295 = fsub float %1229, %1261, !dbg !44
  %1296 = fmul float %1266, 0x3FF7154760000000, !dbg !45
  %1297 = tail call float @llvm.nvvm.ex2.approx.f(float %1296), !dbg !45
  %1298 = fmul float %1267, 0x3FF7154760000000, !dbg !45
  %1299 = tail call float @llvm.nvvm.ex2.approx.f(float %1298), !dbg !45
  %1300 = fmul float %1268, 0x3FF7154760000000, !dbg !45
  %1301 = tail call float @llvm.nvvm.ex2.approx.f(float %1300), !dbg !45
  %1302 = fmul float %1269, 0x3FF7154760000000, !dbg !45
  %1303 = tail call float @llvm.nvvm.ex2.approx.f(float %1302), !dbg !45
  %1304 = fmul float %1270, 0x3FF7154760000000, !dbg !45
  %1305 = tail call float @llvm.nvvm.ex2.approx.f(float %1304), !dbg !45
  %1306 = fmul float %1271, 0x3FF7154760000000, !dbg !45
  %1307 = tail call float @llvm.nvvm.ex2.approx.f(float %1306), !dbg !45
  %1308 = fmul float %1272, 0x3FF7154760000000, !dbg !45
  %1309 = tail call float @llvm.nvvm.ex2.approx.f(float %1308), !dbg !45
  %1310 = fmul float %1273, 0x3FF7154760000000, !dbg !45
  %1311 = tail call float @llvm.nvvm.ex2.approx.f(float %1310), !dbg !45
  %1312 = fmul float %1274, 0x3FF7154760000000, !dbg !45
  %1313 = tail call float @llvm.nvvm.ex2.approx.f(float %1312), !dbg !45
  %1314 = fmul float %1275, 0x3FF7154760000000, !dbg !45
  %1315 = tail call float @llvm.nvvm.ex2.approx.f(float %1314), !dbg !45
  %1316 = fmul float %1276, 0x3FF7154760000000, !dbg !45
  %1317 = tail call float @llvm.nvvm.ex2.approx.f(float %1316), !dbg !45
  %1318 = fmul float %1277, 0x3FF7154760000000, !dbg !45
  %1319 = tail call float @llvm.nvvm.ex2.approx.f(float %1318), !dbg !45
  %1320 = fmul float %1278, 0x3FF7154760000000, !dbg !45
  %1321 = tail call float @llvm.nvvm.ex2.approx.f(float %1320), !dbg !45
  %1322 = fmul float %1279, 0x3FF7154760000000, !dbg !45
  %1323 = tail call float @llvm.nvvm.ex2.approx.f(float %1322), !dbg !45
  %1324 = fmul float %1280, 0x3FF7154760000000, !dbg !45
  %1325 = tail call float @llvm.nvvm.ex2.approx.f(float %1324), !dbg !45
  %1326 = fmul float %1281, 0x3FF7154760000000, !dbg !45
  %1327 = tail call float @llvm.nvvm.ex2.approx.f(float %1326), !dbg !45
  %1328 = fmul float %1282, 0x3FF7154760000000, !dbg !45
  %1329 = tail call float @llvm.nvvm.ex2.approx.f(float %1328), !dbg !45
  %1330 = fmul float %1283, 0x3FF7154760000000, !dbg !45
  %1331 = tail call float @llvm.nvvm.ex2.approx.f(float %1330), !dbg !45
  %1332 = fmul float %1284, 0x3FF7154760000000, !dbg !45
  %1333 = tail call float @llvm.nvvm.ex2.approx.f(float %1332), !dbg !45
  %1334 = fmul float %1285, 0x3FF7154760000000, !dbg !45
  %1335 = tail call float @llvm.nvvm.ex2.approx.f(float %1334), !dbg !45
  %1336 = fmul float %1286, 0x3FF7154760000000, !dbg !45
  %1337 = tail call float @llvm.nvvm.ex2.approx.f(float %1336), !dbg !45
  %1338 = fmul float %1287, 0x3FF7154760000000, !dbg !45
  %1339 = tail call float @llvm.nvvm.ex2.approx.f(float %1338), !dbg !45
  %1340 = fmul float %1288, 0x3FF7154760000000, !dbg !45
  %1341 = tail call float @llvm.nvvm.ex2.approx.f(float %1340), !dbg !45
  %1342 = fmul float %1289, 0x3FF7154760000000, !dbg !45
  %1343 = tail call float @llvm.nvvm.ex2.approx.f(float %1342), !dbg !45
  %1344 = fmul float %1290, 0x3FF7154760000000, !dbg !45
  %1345 = tail call float @llvm.nvvm.ex2.approx.f(float %1344), !dbg !45
  %1346 = fmul float %1291, 0x3FF7154760000000, !dbg !45
  %1347 = tail call float @llvm.nvvm.ex2.approx.f(float %1346), !dbg !45
  %1348 = fmul float %1292, 0x3FF7154760000000, !dbg !45
  %1349 = tail call float @llvm.nvvm.ex2.approx.f(float %1348), !dbg !45
  %1350 = fmul float %1293, 0x3FF7154760000000, !dbg !45
  %1351 = tail call float @llvm.nvvm.ex2.approx.f(float %1350), !dbg !45
  %1352 = fmul float %1294, 0x3FF7154760000000, !dbg !45
  %1353 = tail call float @llvm.nvvm.ex2.approx.f(float %1352), !dbg !45
  %1354 = fmul float %1295, 0x3FF7154760000000, !dbg !45
  %1355 = tail call float @llvm.nvvm.ex2.approx.f(float %1354), !dbg !45
  %1356 = fmul float %1136, %1297, !dbg !46
  %1357 = fmul float %1137, %1299, !dbg !46
  %1358 = fmul float %1138, %1301, !dbg !46
  %1359 = fmul float %1139, %1303, !dbg !46
  %1360 = fmul float %1140, %1305, !dbg !46
  %1361 = fmul float %1141, %1307, !dbg !46
  %1362 = fmul float %1142, %1309, !dbg !46
  %1363 = fmul float %1143, %1311, !dbg !46
  %1364 = fmul float %1144, %1313, !dbg !46
  %1365 = fmul float %1145, %1315, !dbg !46
  %1366 = fmul float %1146, %1317, !dbg !46
  %1367 = fmul float %1147, %1319, !dbg !46
  %1368 = fmul float %1148, %1321, !dbg !46
  %1369 = fmul float %1149, %1323, !dbg !46
  %1370 = fmul float %1150, %1325, !dbg !46
  %1371 = fmul float %1151, %1327, !dbg !46
  %1372 = fmul float %1152, %1329, !dbg !46
  %1373 = fmul float %1153, %1331, !dbg !46
  %1374 = fmul float %1154, %1333, !dbg !46
  %1375 = fmul float %1155, %1335, !dbg !46
  %1376 = fmul float %1156, %1337, !dbg !46
  %1377 = fmul float %1157, %1339, !dbg !46
  %1378 = fmul float %1158, %1341, !dbg !46
  %1379 = fmul float %1159, %1343, !dbg !46
  %1380 = fmul float %1160, %1345, !dbg !46
  %1381 = fmul float %1161, %1347, !dbg !46
  %1382 = fmul float %1162, %1349, !dbg !46
  %1383 = fmul float %1163, %1351, !dbg !46
  %1384 = fmul float %1164, %1353, !dbg !46
  %1385 = fmul float %1165, %1355, !dbg !46
  %1386 = icmp samesign uge i32 %55, %58, !dbg !47
  %1387 = icmp samesign ugt i32 %55, %58, !dbg !47
  %1388 = icmp samesign uge i32 %55, %59, !dbg !47
  %1389 = icmp samesign uge i32 %55, %60, !dbg !47
  %1390 = icmp samesign uge i32 %56, %60, !dbg !47
  %1391 = icmp samesign uge i32 %55, %61, !dbg !47
  %1392 = icmp samesign uge i32 %55, %62, !dbg !47
  %1393 = icmp samesign uge i32 %56, %61, !dbg !47
  %1394 = icmp samesign uge i32 %56, %62, !dbg !47
  %1395 = icmp samesign uge i32 %55, %63, !dbg !47
  %1396 = icmp samesign uge i32 %55, %64, !dbg !47
  %1397 = icmp samesign uge i32 %56, %63, !dbg !47
  %1398 = icmp samesign uge i32 %56, %64, !dbg !47
  %1399 = icmp samesign uge i32 %55, %65, !dbg !47
  %1400 = icmp samesign uge i32 %55, %66, !dbg !47
  %1401 = icmp samesign uge i32 %56, %65, !dbg !47
  %1402 = icmp samesign uge i32 %56, %66, !dbg !47
  %1403 = icmp samesign uge i32 %55, %67, !dbg !47
  %1404 = icmp samesign uge i32 %55, %68, !dbg !47
  %1405 = icmp samesign uge i32 %56, %67, !dbg !47
  %1406 = icmp samesign uge i32 %56, %68, !dbg !47
  %1407 = icmp samesign uge i32 %55, %69, !dbg !47
  %1408 = icmp samesign uge i32 %55, %70, !dbg !47
  %1409 = icmp samesign uge i32 %56, %69, !dbg !47
  %1410 = icmp samesign uge i32 %56, %70, !dbg !47
  %1411 = icmp samesign uge i32 %56, %71, !dbg !47
  %1412 = icmp samesign uge i32 %56, %72, !dbg !47
  %1413 = and i1 %1205, %1206, !dbg !48
  %1414 = and i1 %1205, %1207, !dbg !48
  %1415 = and i1 %1386, %1206, !dbg !49
  %1416 = and i1 %1204, %1415, !dbg !49
  %1417 = and i1 %1387, %1207, !dbg !49
  %1418 = and i1 %1204, %1417, !dbg !49
  %1419 = and i1 %1388, %1208, !dbg !49
  %1420 = and i1 %1204, %1419, !dbg !49
  %1421 = and i1 %1389, %1209, !dbg !49
  %1422 = and i1 %1204, %1421, !dbg !49
  %1423 = and i1 %1386, %1208, !dbg !49
  %1424 = and i1 %1205, %1423, !dbg !49
  %1425 = and i1 %1390, %1209, !dbg !49
  %1426 = and i1 %1205, %1425, !dbg !49
  %1427 = and i1 %1391, %1210, !dbg !49
  %1428 = and i1 %1204, %1427, !dbg !49
  %1429 = and i1 %1392, %1211, !dbg !49
  %1430 = and i1 %1204, %1429, !dbg !49
  %1431 = and i1 %1393, %1210, !dbg !49
  %1432 = and i1 %1205, %1431, !dbg !49
  %1433 = and i1 %1394, %1211, !dbg !49
  %1434 = and i1 %1205, %1433, !dbg !49
  %1435 = and i1 %1395, %1212, !dbg !49
  %1436 = and i1 %1204, %1435, !dbg !49
  %1437 = and i1 %1396, %1213, !dbg !49
  %1438 = and i1 %1204, %1437, !dbg !49
  %1439 = and i1 %1397, %1212, !dbg !49
  %1440 = and i1 %1205, %1439, !dbg !49
  %1441 = and i1 %1398, %1213, !dbg !49
  %1442 = and i1 %1205, %1441, !dbg !49
  %1443 = and i1 %1399, %1214, !dbg !49
  %1444 = and i1 %1204, %1443, !dbg !49
  %1445 = and i1 %1400, %1215, !dbg !49
  %1446 = and i1 %1204, %1445, !dbg !49
  %1447 = and i1 %1401, %1214, !dbg !49
  %1448 = and i1 %1205, %1447, !dbg !49
  %1449 = and i1 %1402, %1215, !dbg !49
  %1450 = and i1 %1205, %1449, !dbg !49
  %1451 = and i1 %1403, %1216, !dbg !49
  %1452 = and i1 %1204, %1451, !dbg !49
  %1453 = and i1 %1404, %1217, !dbg !49
  %1454 = and i1 %1204, %1453, !dbg !49
  %1455 = and i1 %1405, %1216, !dbg !49
  %1456 = and i1 %1205, %1455, !dbg !49
  %1457 = and i1 %1406, %1217, !dbg !49
  %1458 = and i1 %1205, %1457, !dbg !49
  %1459 = and i1 %1407, %1218, !dbg !49
  %1460 = and i1 %1204, %1459, !dbg !49
  %1461 = and i1 %1408, %1219, !dbg !49
  %1462 = and i1 %1204, %1461, !dbg !49
  %1463 = and i1 %1409, %1218, !dbg !49
  %1464 = and i1 %1205, %1463, !dbg !49
  %1465 = and i1 %1410, %1219, !dbg !49
  %1466 = and i1 %1205, %1465, !dbg !49
  %1467 = and i1 %1411, %1220, !dbg !49
  %1468 = and i1 %1205, %1467, !dbg !49
  %1469 = and i1 %1412, %1221, !dbg !49
  %1470 = and i1 %1205, %1469, !dbg !49
  %1471 = add nsw i64 %99, %268, !dbg !50
  %1472 = add nsw i64 %100, %268, !dbg !50
  %1473 = add nsw i64 %101, %268, !dbg !50
  %1474 = add nsw i64 %102, %268, !dbg !50
  %1475 = getelementptr bfloat, ptr addrspace(1) %26, i64 %1471, !dbg !50
  %1476 = getelementptr bfloat, ptr addrspace(1) %26, i64 %1472, !dbg !50
  %1477 = getelementptr bfloat, ptr addrspace(1) %26, i64 %1473, !dbg !50
  %1478 = getelementptr bfloat, ptr addrspace(1) %26, i64 %1474, !dbg !50
  %1479 = and i1 %286, %116, !dbg !50
  %1480 = and i1 %286, %117, !dbg !50
  %1481 = and i1 %286, %118, !dbg !50
  %1482 = and i1 %286, %119, !dbg !50
  %1483 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1475, i1 %1479) #5, !dbg !50
  %1484 = extractvalue { i32, i32, i32, i32 } %1483, 0, !dbg !50
  %1485 = bitcast i32 %1484 to <2 x bfloat>, !dbg !50
  %1486 = extractvalue { i32, i32, i32, i32 } %1483, 1, !dbg !50
  %1487 = bitcast i32 %1486 to <2 x bfloat>, !dbg !50
  %1488 = extractvalue { i32, i32, i32, i32 } %1483, 2, !dbg !50
  %1489 = bitcast i32 %1488 to <2 x bfloat>, !dbg !50
  %1490 = shufflevector <2 x bfloat> %1489, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1491 = extractvalue { i32, i32, i32, i32 } %1483, 3, !dbg !50
  %1492 = bitcast i32 %1491 to <2 x bfloat>, !dbg !50
  %1493 = shufflevector <2 x bfloat> %1492, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1494 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1476, i1 %1480) #5, !dbg !50
  %1495 = extractvalue { i32, i32, i32, i32 } %1494, 0, !dbg !50
  %1496 = bitcast i32 %1495 to <2 x bfloat>, !dbg !50
  %1497 = extractvalue { i32, i32, i32, i32 } %1494, 1, !dbg !50
  %1498 = bitcast i32 %1497 to <2 x bfloat>, !dbg !50
  %1499 = extractvalue { i32, i32, i32, i32 } %1494, 2, !dbg !50
  %1500 = bitcast i32 %1499 to <2 x bfloat>, !dbg !50
  %1501 = shufflevector <2 x bfloat> %1500, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1502 = extractvalue { i32, i32, i32, i32 } %1494, 3, !dbg !50
  %1503 = bitcast i32 %1502 to <2 x bfloat>, !dbg !50
  %1504 = shufflevector <2 x bfloat> %1503, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1505 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1477, i1 %1481) #5, !dbg !50
  %1506 = extractvalue { i32, i32, i32, i32 } %1505, 0, !dbg !50
  %1507 = bitcast i32 %1506 to <2 x bfloat>, !dbg !50
  %1508 = extractvalue { i32, i32, i32, i32 } %1505, 1, !dbg !50
  %1509 = bitcast i32 %1508 to <2 x bfloat>, !dbg !50
  %1510 = extractvalue { i32, i32, i32, i32 } %1505, 2, !dbg !50
  %1511 = bitcast i32 %1510 to <2 x bfloat>, !dbg !50
  %1512 = shufflevector <2 x bfloat> %1511, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1513 = extractvalue { i32, i32, i32, i32 } %1505, 3, !dbg !50
  %1514 = bitcast i32 %1513 to <2 x bfloat>, !dbg !50
  %1515 = shufflevector <2 x bfloat> %1514, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1516 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %1478, i1 %1482) #5, !dbg !50
  %1517 = extractvalue { i32, i32, i32, i32 } %1516, 0, !dbg !50
  %1518 = bitcast i32 %1517 to <2 x bfloat>, !dbg !50
  %1519 = extractvalue { i32, i32, i32, i32 } %1516, 1, !dbg !50
  %1520 = bitcast i32 %1519 to <2 x bfloat>, !dbg !50
  %1521 = extractvalue { i32, i32, i32, i32 } %1516, 2, !dbg !50
  %1522 = bitcast i32 %1521 to <2 x bfloat>, !dbg !50
  %1523 = shufflevector <2 x bfloat> %1522, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %1524 = extractvalue { i32, i32, i32, i32 } %1516, 3, !dbg !50
  %1525 = bitcast i32 %1524 to <2 x bfloat>, !dbg !50
  %1526 = shufflevector <2 x bfloat> %1525, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !50
  %1527 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %173, !dbg !50
  %1528 = shufflevector <2 x bfloat> %1485, <2 x bfloat> %1487, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !50
  %1529 = shufflevector <8 x bfloat> %1528, <8 x bfloat> %1490, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !50
  %1530 = shufflevector <8 x bfloat> %1529, <8 x bfloat> %1493, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !50
  store <8 x bfloat> %1530, ptr addrspace(3) %1527, align 16, !dbg !50
  %1531 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %181, !dbg !50
  %1532 = shufflevector <2 x bfloat> %1496, <2 x bfloat> %1498, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !50
  %1533 = shufflevector <8 x bfloat> %1532, <8 x bfloat> %1501, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !50
  %1534 = shufflevector <8 x bfloat> %1533, <8 x bfloat> %1504, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !50
  store <8 x bfloat> %1534, ptr addrspace(3) %1531, align 16, !dbg !50
  %1535 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %188, !dbg !50
  %1536 = shufflevector <2 x bfloat> %1507, <2 x bfloat> %1509, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !50
  %1537 = shufflevector <8 x bfloat> %1536, <8 x bfloat> %1512, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !50
  %1538 = shufflevector <8 x bfloat> %1537, <8 x bfloat> %1515, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !50
  store <8 x bfloat> %1538, ptr addrspace(3) %1535, align 16, !dbg !50
  %1539 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %195, !dbg !50
  %1540 = shufflevector <2 x bfloat> %1518, <2 x bfloat> %1520, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !50
  %1541 = shufflevector <8 x bfloat> %1540, <8 x bfloat> %1523, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !50
  %1542 = shufflevector <8 x bfloat> %1541, <8 x bfloat> %1526, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !50
  store <8 x bfloat> %1542, ptr addrspace(3) %1539, align 16, !dbg !50
  %1543 = fptrunc float %1356 to bfloat, !dbg !51
  %1544 = select i1 %1416, bfloat %1543, bfloat 0xR0000, !dbg !52
  %1545 = fptrunc float %1357 to bfloat, !dbg !51
  %1546 = select i1 %1418, bfloat %1545, bfloat 0xR0000, !dbg !52
  %1547 = fptrunc float %1358 to bfloat, !dbg !51
  %1548 = select i1 %1413, bfloat %1547, bfloat 0xR0000, !dbg !52
  %1549 = fptrunc float %1359 to bfloat, !dbg !51
  %1550 = select i1 %1414, bfloat %1549, bfloat 0xR0000, !dbg !52
  %1551 = fptrunc float %1360 to bfloat, !dbg !51
  %1552 = select i1 %1420, bfloat %1551, bfloat 0xR0000, !dbg !52
  %1553 = fptrunc float %1361 to bfloat, !dbg !51
  %1554 = select i1 %1422, bfloat %1553, bfloat 0xR0000, !dbg !52
  %1555 = fptrunc float %1362 to bfloat, !dbg !51
  %1556 = select i1 %1424, bfloat %1555, bfloat 0xR0000, !dbg !52
  %1557 = fptrunc float %1363 to bfloat, !dbg !51
  %1558 = select i1 %1426, bfloat %1557, bfloat 0xR0000, !dbg !52
  %1559 = fptrunc float %1364 to bfloat, !dbg !51
  %1560 = select i1 %1428, bfloat %1559, bfloat 0xR0000, !dbg !52
  %1561 = fptrunc float %1365 to bfloat, !dbg !51
  %1562 = select i1 %1430, bfloat %1561, bfloat 0xR0000, !dbg !52
  %1563 = fptrunc float %1366 to bfloat, !dbg !51
  %1564 = select i1 %1432, bfloat %1563, bfloat 0xR0000, !dbg !52
  %1565 = fptrunc float %1367 to bfloat, !dbg !51
  %1566 = select i1 %1434, bfloat %1565, bfloat 0xR0000, !dbg !52
  %1567 = fptrunc float %1368 to bfloat, !dbg !51
  %1568 = select i1 %1436, bfloat %1567, bfloat 0xR0000, !dbg !52
  %1569 = fptrunc float %1369 to bfloat, !dbg !51
  %1570 = select i1 %1438, bfloat %1569, bfloat 0xR0000, !dbg !52
  %1571 = fptrunc float %1370 to bfloat, !dbg !51
  %1572 = select i1 %1440, bfloat %1571, bfloat 0xR0000, !dbg !52
  %1573 = fptrunc float %1371 to bfloat, !dbg !51
  %1574 = select i1 %1442, bfloat %1573, bfloat 0xR0000, !dbg !52
  %1575 = fptrunc float %1372 to bfloat, !dbg !51
  %1576 = select i1 %1444, bfloat %1575, bfloat 0xR0000, !dbg !52
  %1577 = fptrunc float %1373 to bfloat, !dbg !51
  %1578 = select i1 %1446, bfloat %1577, bfloat 0xR0000, !dbg !52
  %1579 = fptrunc float %1374 to bfloat, !dbg !51
  %1580 = select i1 %1448, bfloat %1579, bfloat 0xR0000, !dbg !52
  %1581 = fptrunc float %1375 to bfloat, !dbg !51
  %1582 = select i1 %1450, bfloat %1581, bfloat 0xR0000, !dbg !52
  %1583 = fptrunc float %1376 to bfloat, !dbg !51
  %1584 = select i1 %1452, bfloat %1583, bfloat 0xR0000, !dbg !52
  %1585 = fptrunc float %1377 to bfloat, !dbg !51
  %1586 = select i1 %1454, bfloat %1585, bfloat 0xR0000, !dbg !52
  %1587 = fptrunc float %1378 to bfloat, !dbg !51
  %1588 = select i1 %1456, bfloat %1587, bfloat 0xR0000, !dbg !52
  %1589 = fptrunc float %1379 to bfloat, !dbg !51
  %1590 = select i1 %1458, bfloat %1589, bfloat 0xR0000, !dbg !52
  %1591 = fptrunc float %1380 to bfloat, !dbg !51
  %1592 = select i1 %1460, bfloat %1591, bfloat 0xR0000, !dbg !52
  %1593 = fptrunc float %1381 to bfloat, !dbg !51
  %1594 = select i1 %1462, bfloat %1593, bfloat 0xR0000, !dbg !52
  %1595 = fptrunc float %1382 to bfloat, !dbg !51
  %1596 = select i1 %1464, bfloat %1595, bfloat 0xR0000, !dbg !52
  %1597 = fptrunc float %1383 to bfloat, !dbg !51
  %1598 = select i1 %1466, bfloat %1597, bfloat 0xR0000, !dbg !52
  %1599 = fptrunc float %1384 to bfloat, !dbg !51
  %1600 = select i1 %1468, bfloat %1599, bfloat 0xR0000, !dbg !52
  %1601 = fptrunc float %1385 to bfloat, !dbg !51
  %1602 = select i1 %1470, bfloat %1601, bfloat 0xR0000, !dbg !52
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #5, !dbg !53
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !53
  %1603 = insertelement <2 x bfloat> poison, bfloat %1544, i64 0, !dbg !53
  %1604 = insertelement <2 x bfloat> %1603, bfloat %1546, i64 1, !dbg !53
  %1605 = bitcast <2 x bfloat> %1604 to i32, !dbg !53
  %1606 = insertelement <2 x bfloat> poison, bfloat %1548, i64 0, !dbg !53
  %1607 = insertelement <2 x bfloat> %1606, bfloat %1550, i64 1, !dbg !53
  %1608 = bitcast <2 x bfloat> %1607 to i32, !dbg !53
  %1609 = insertelement <2 x bfloat> poison, bfloat %1552, i64 0, !dbg !53
  %1610 = insertelement <2 x bfloat> %1609, bfloat %1554, i64 1, !dbg !53
  %1611 = bitcast <2 x bfloat> %1610 to i32, !dbg !53
  %1612 = insertelement <2 x bfloat> poison, bfloat %1556, i64 0, !dbg !53
  %1613 = insertelement <2 x bfloat> %1612, bfloat %1558, i64 1, !dbg !53
  %1614 = bitcast <2 x bfloat> %1613 to i32, !dbg !53
  %1615 = insertelement <2 x bfloat> poison, bfloat %1560, i64 0, !dbg !53
  %1616 = insertelement <2 x bfloat> %1615, bfloat %1562, i64 1, !dbg !53
  %1617 = bitcast <2 x bfloat> %1616 to i32, !dbg !53
  %1618 = insertelement <2 x bfloat> poison, bfloat %1564, i64 0, !dbg !53
  %1619 = insertelement <2 x bfloat> %1618, bfloat %1566, i64 1, !dbg !53
  %1620 = bitcast <2 x bfloat> %1619 to i32, !dbg !53
  %1621 = insertelement <2 x bfloat> poison, bfloat %1568, i64 0, !dbg !53
  %1622 = insertelement <2 x bfloat> %1621, bfloat %1570, i64 1, !dbg !53
  %1623 = bitcast <2 x bfloat> %1622 to i32, !dbg !53
  %1624 = insertelement <2 x bfloat> poison, bfloat %1572, i64 0, !dbg !53
  %1625 = insertelement <2 x bfloat> %1624, bfloat %1574, i64 1, !dbg !53
  %1626 = bitcast <2 x bfloat> %1625 to i32, !dbg !53
  %1627 = insertelement <2 x bfloat> poison, bfloat %1576, i64 0, !dbg !53
  %1628 = insertelement <2 x bfloat> %1627, bfloat %1578, i64 1, !dbg !53
  %1629 = bitcast <2 x bfloat> %1628 to i32, !dbg !53
  %1630 = insertelement <2 x bfloat> poison, bfloat %1580, i64 0, !dbg !53
  %1631 = insertelement <2 x bfloat> %1630, bfloat %1582, i64 1, !dbg !53
  %1632 = bitcast <2 x bfloat> %1631 to i32, !dbg !53
  %1633 = insertelement <2 x bfloat> poison, bfloat %1584, i64 0, !dbg !53
  %1634 = insertelement <2 x bfloat> %1633, bfloat %1586, i64 1, !dbg !53
  %1635 = bitcast <2 x bfloat> %1634 to i32, !dbg !53
  %1636 = insertelement <2 x bfloat> poison, bfloat %1588, i64 0, !dbg !53
  %1637 = insertelement <2 x bfloat> %1636, bfloat %1590, i64 1, !dbg !53
  %1638 = bitcast <2 x bfloat> %1637 to i32, !dbg !53
  %1639 = insertelement <2 x bfloat> poison, bfloat %1592, i64 0, !dbg !53
  %1640 = insertelement <2 x bfloat> %1639, bfloat %1594, i64 1, !dbg !53
  %1641 = bitcast <2 x bfloat> %1640 to i32, !dbg !53
  %1642 = insertelement <2 x bfloat> poison, bfloat %1596, i64 0, !dbg !53
  %1643 = insertelement <2 x bfloat> %1642, bfloat %1598, i64 1, !dbg !53
  %1644 = bitcast <2 x bfloat> %1643 to i32, !dbg !53
  %1645 = insertelement <2 x bfloat> poison, bfloat %1600, i64 0, !dbg !53
  %1646 = insertelement <2 x bfloat> %1645, bfloat %1602, i64 1, !dbg !53
  %1647 = bitcast <2 x bfloat> %1646 to i32, !dbg !53
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #5, !dbg !53
  %1648 = shl nuw nsw i32 %432, 7, !dbg !53
  %1649 = add i32 %1648, ptrtoint (ptr addrspace(3) @global_smem to i32), !dbg !53
  %1650 = lshr exact i32 %1649, 4, !dbg !53
  %1651 = and i32 %1650, 16383, !dbg !53
  %1652 = zext nneg i32 %1651 to i64, !dbg !53
  %1653 = or disjoint i64 %1652, 4611686293338849280, !dbg !53
  %1654 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$32,$33,$34,$35}, $36, 0, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,r,r,r,r,l"(i32 %1605, i32 %1608, i32 %1611, i32 %1614, i64 %1653) #5, !dbg !53
  %1655 = add i32 %1648, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 2048), !dbg !53
  %1656 = lshr exact i32 %1655, 4, !dbg !53
  %1657 = and i32 %1656, 16383, !dbg !53
  %1658 = zext nneg i32 %1657 to i64, !dbg !53
  %1659 = or disjoint i64 %1658, 4611686293338849280, !dbg !53
  %1660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 0, !dbg !53
  %1661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 1, !dbg !53
  %1662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 2, !dbg !53
  %1663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 3, !dbg !53
  %1664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 4, !dbg !53
  %1665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 5, !dbg !53
  %1666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 6, !dbg !53
  %1667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 7, !dbg !53
  %1668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 8, !dbg !53
  %1669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 9, !dbg !53
  %1670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 10, !dbg !53
  %1671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 11, !dbg !53
  %1672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 12, !dbg !53
  %1673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 13, !dbg !53
  %1674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 14, !dbg !53
  %1675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 15, !dbg !53
  %1676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 16, !dbg !53
  %1677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 17, !dbg !53
  %1678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 18, !dbg !53
  %1679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 19, !dbg !53
  %1680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 20, !dbg !53
  %1681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 21, !dbg !53
  %1682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 22, !dbg !53
  %1683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 23, !dbg !53
  %1684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 24, !dbg !53
  %1685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 25, !dbg !53
  %1686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 26, !dbg !53
  %1687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 27, !dbg !53
  %1688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 28, !dbg !53
  %1689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 29, !dbg !53
  %1690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 30, !dbg !53
  %1691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1654, 31, !dbg !53
  %1692 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %1660, float %1661, float %1662, float %1663, float %1664, float %1665, float %1666, float %1667, float %1668, float %1669, float %1670, float %1671, float %1672, float %1673, float %1674, float %1675, float %1676, float %1677, float %1678, float %1679, float %1680, float %1681, float %1682, float %1683, float %1684, float %1685, float %1686, float %1687, float %1688, float %1689, float %1690, float %1691, i32 %1617, i32 %1620, i32 %1623, i32 %1626, i64 %1659, i1 true) #5, !dbg !53
  %1693 = add i32 %1648, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 4096), !dbg !53
  %1694 = lshr exact i32 %1693, 4, !dbg !53
  %1695 = and i32 %1694, 16383, !dbg !53
  %1696 = zext nneg i32 %1695 to i64, !dbg !53
  %1697 = or disjoint i64 %1696, 4611686293338849280, !dbg !53
  %1698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 0, !dbg !53
  %1699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 1, !dbg !53
  %1700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 2, !dbg !53
  %1701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 3, !dbg !53
  %1702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 4, !dbg !53
  %1703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 5, !dbg !53
  %1704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 6, !dbg !53
  %1705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 7, !dbg !53
  %1706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 8, !dbg !53
  %1707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 9, !dbg !53
  %1708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 10, !dbg !53
  %1709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 11, !dbg !53
  %1710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 12, !dbg !53
  %1711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 13, !dbg !53
  %1712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 14, !dbg !53
  %1713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 15, !dbg !53
  %1714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 16, !dbg !53
  %1715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 17, !dbg !53
  %1716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 18, !dbg !53
  %1717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 19, !dbg !53
  %1718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 20, !dbg !53
  %1719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 21, !dbg !53
  %1720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 22, !dbg !53
  %1721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 23, !dbg !53
  %1722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 24, !dbg !53
  %1723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 25, !dbg !53
  %1724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 26, !dbg !53
  %1725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 27, !dbg !53
  %1726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 28, !dbg !53
  %1727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 29, !dbg !53
  %1728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 30, !dbg !53
  %1729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1692, 31, !dbg !53
  %1730 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %1698, float %1699, float %1700, float %1701, float %1702, float %1703, float %1704, float %1705, float %1706, float %1707, float %1708, float %1709, float %1710, float %1711, float %1712, float %1713, float %1714, float %1715, float %1716, float %1717, float %1718, float %1719, float %1720, float %1721, float %1722, float %1723, float %1724, float %1725, float %1726, float %1727, float %1728, float %1729, i32 %1629, i32 %1632, i32 %1635, i32 %1638, i64 %1697, i1 true) #5, !dbg !53
  %1731 = add i32 %1648, add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 6144), !dbg !53
  %1732 = lshr exact i32 %1731, 4, !dbg !53
  %1733 = and i32 %1732, 16383, !dbg !53
  %1734 = zext nneg i32 %1733 to i64, !dbg !53
  %1735 = or disjoint i64 %1734, 4611686293338849280, !dbg !53
  %1736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 0, !dbg !53
  %1737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 1, !dbg !53
  %1738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 2, !dbg !53
  %1739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 3, !dbg !53
  %1740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 4, !dbg !53
  %1741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 5, !dbg !53
  %1742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 6, !dbg !53
  %1743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 7, !dbg !53
  %1744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 8, !dbg !53
  %1745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 9, !dbg !53
  %1746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 10, !dbg !53
  %1747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 11, !dbg !53
  %1748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 12, !dbg !53
  %1749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 13, !dbg !53
  %1750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 14, !dbg !53
  %1751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 15, !dbg !53
  %1752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 16, !dbg !53
  %1753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 17, !dbg !53
  %1754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 18, !dbg !53
  %1755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 19, !dbg !53
  %1756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 20, !dbg !53
  %1757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 21, !dbg !53
  %1758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 22, !dbg !53
  %1759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 23, !dbg !53
  %1760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 24, !dbg !53
  %1761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 25, !dbg !53
  %1762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 26, !dbg !53
  %1763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 27, !dbg !53
  %1764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 28, !dbg !53
  %1765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 29, !dbg !53
  %1766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 30, !dbg !53
  %1767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1730, 31, !dbg !53
  %1768 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, {$64,$65,$66,$67}, $68, $69, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,r,r,r,r,l,b"(float %1736, float %1737, float %1738, float %1739, float %1740, float %1741, float %1742, float %1743, float %1744, float %1745, float %1746, float %1747, float %1748, float %1749, float %1750, float %1751, float %1752, float %1753, float %1754, float %1755, float %1756, float %1757, float %1758, float %1759, float %1760, float %1761, float %1762, float %1763, float %1764, float %1765, float %1766, float %1767, i32 %1641, i32 %1644, i32 0, i32 %1647, i64 %1735, i1 true) #5, !dbg !53
  %1769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 0, !dbg !53
  %1770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 1, !dbg !53
  %1771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 2, !dbg !53
  %1772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 3, !dbg !53
  %1773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 4, !dbg !53
  %1774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 5, !dbg !53
  %1775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 6, !dbg !53
  %1776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 7, !dbg !53
  %1777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 8, !dbg !53
  %1778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 9, !dbg !53
  %1779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 10, !dbg !53
  %1780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 11, !dbg !53
  %1781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 12, !dbg !53
  %1782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 13, !dbg !53
  %1783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 14, !dbg !53
  %1784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 15, !dbg !53
  %1785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 16, !dbg !53
  %1786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 17, !dbg !53
  %1787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 18, !dbg !53
  %1788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 19, !dbg !53
  %1789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 20, !dbg !53
  %1790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 21, !dbg !53
  %1791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 22, !dbg !53
  %1792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 23, !dbg !53
  %1793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 24, !dbg !53
  %1794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 25, !dbg !53
  %1795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 26, !dbg !53
  %1796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 27, !dbg !53
  %1797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 28, !dbg !53
  %1798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 29, !dbg !53
  %1799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 30, !dbg !53
  %1800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1768, 31, !dbg !53
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #5, !dbg !53
  %1801 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31"(float %1769, float %1770, float %1771, float %1772, float %1773, float %1774, float %1775, float %1776, float %1777, float %1778, float %1779, float %1780, float %1781, float %1782, float %1783, float %1784, float %1785, float %1786, float %1787, float %1788, float %1789, float %1790, float %1791, float %1792, float %1793, float %1794, float %1795, float %1796, float %1797, float %1798, float %1799, float %1800) #5, !dbg !53
  %1802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 0, !dbg !53
  %1803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 1, !dbg !53
  %1804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 2, !dbg !53
  %1805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 3, !dbg !53
  %1806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 4, !dbg !53
  %1807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 5, !dbg !53
  %1808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 6, !dbg !53
  %1809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 7, !dbg !53
  %1810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 8, !dbg !53
  %1811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 9, !dbg !53
  %1812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 10, !dbg !53
  %1813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 11, !dbg !53
  %1814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 12, !dbg !53
  %1815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 13, !dbg !53
  %1816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 14, !dbg !53
  %1817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 15, !dbg !53
  %1818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 16, !dbg !53
  %1819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 17, !dbg !53
  %1820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 18, !dbg !53
  %1821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 19, !dbg !53
  %1822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 20, !dbg !53
  %1823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 21, !dbg !53
  %1824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 22, !dbg !53
  %1825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 23, !dbg !53
  %1826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 24, !dbg !53
  %1827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 25, !dbg !53
  %1828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 26, !dbg !53
  %1829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 27, !dbg !53
  %1830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 28, !dbg !53
  %1831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 29, !dbg !53
  %1832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 30, !dbg !53
  %1833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1801, 31, !dbg !53
  %1834 = insertelement <2 x float> poison, float %767, i64 0, !dbg !54
  %1835 = insertelement <2 x float> %1834, float %768, i64 1, !dbg !54
  %1836 = insertelement <2 x float> poison, float %1263, i64 0, !dbg !54
  %1837 = shufflevector <2 x float> %1836, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !54
  %1838 = fmul <2 x float> %1835, %1837, !dbg !54
  %1839 = insertelement <2 x float> poison, float %6, i64 0, !dbg !55
  %1840 = shufflevector <2 x float> %1839, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !55
  %1841 = fmul <2 x float> %1840, %1838, !dbg !55
  %1842 = insertelement <2 x float> poison, float %1802, i64 0, !dbg !56
  %1843 = insertelement <2 x float> %1842, float %1803, i64 1, !dbg !56
  %1844 = fmul <2 x float> %1840, %1843, !dbg !56
  %1845 = fadd <2 x float> %1841, %1844, !dbg !57
  %1846 = fptrunc <2 x float> %1845 to <2 x bfloat>, !dbg !58
  %1847 = insertelement <2 x float> poison, float %769, i64 0, !dbg !54
  %1848 = insertelement <2 x float> %1847, float %770, i64 1, !dbg !54
  %1849 = insertelement <2 x float> poison, float %1265, i64 0, !dbg !54
  %1850 = shufflevector <2 x float> %1849, <2 x float> poison, <2 x i32> zeroinitializer, !dbg !54
  %1851 = fmul <2 x float> %1848, %1850, !dbg !54
  %1852 = fmul <2 x float> %1840, %1851, !dbg !55
  %1853 = insertelement <2 x float> poison, float %1804, i64 0, !dbg !56
  %1854 = insertelement <2 x float> %1853, float %1805, i64 1, !dbg !56
  %1855 = fmul <2 x float> %1840, %1854, !dbg !56
  %1856 = fadd <2 x float> %1852, %1855, !dbg !57
  %1857 = fptrunc <2 x float> %1856 to <2 x bfloat>, !dbg !58
  %1858 = insertelement <2 x float> poison, float %771, i64 0, !dbg !54
  %1859 = insertelement <2 x float> %1858, float %772, i64 1, !dbg !54
  %1860 = fmul <2 x float> %1859, %1837, !dbg !54
  %1861 = fmul <2 x float> %1840, %1860, !dbg !55
  %1862 = insertelement <2 x float> poison, float %1806, i64 0, !dbg !56
  %1863 = insertelement <2 x float> %1862, float %1807, i64 1, !dbg !56
  %1864 = fmul <2 x float> %1840, %1863, !dbg !56
  %1865 = fadd <2 x float> %1861, %1864, !dbg !57
  %1866 = fptrunc <2 x float> %1865 to <2 x bfloat>, !dbg !58
  %1867 = insertelement <2 x float> poison, float %773, i64 0, !dbg !54
  %1868 = insertelement <2 x float> %1867, float %774, i64 1, !dbg !54
  %1869 = fmul <2 x float> %1868, %1850, !dbg !54
  %1870 = fmul <2 x float> %1840, %1869, !dbg !55
  %1871 = insertelement <2 x float> poison, float %1808, i64 0, !dbg !56
  %1872 = insertelement <2 x float> %1871, float %1809, i64 1, !dbg !56
  %1873 = fmul <2 x float> %1840, %1872, !dbg !56
  %1874 = fadd <2 x float> %1870, %1873, !dbg !57
  %1875 = fptrunc <2 x float> %1874 to <2 x bfloat>, !dbg !58
  %1876 = insertelement <2 x float> poison, float %775, i64 0, !dbg !54
  %1877 = insertelement <2 x float> %1876, float %776, i64 1, !dbg !54
  %1878 = fmul <2 x float> %1877, %1837, !dbg !54
  %1879 = fmul <2 x float> %1840, %1878, !dbg !55
  %1880 = insertelement <2 x float> poison, float %1810, i64 0, !dbg !56
  %1881 = insertelement <2 x float> %1880, float %1811, i64 1, !dbg !56
  %1882 = fmul <2 x float> %1840, %1881, !dbg !56
  %1883 = fadd <2 x float> %1879, %1882, !dbg !57
  %1884 = fptrunc <2 x float> %1883 to <2 x bfloat>, !dbg !58
  %1885 = insertelement <2 x float> poison, float %777, i64 0, !dbg !54
  %1886 = insertelement <2 x float> %1885, float %778, i64 1, !dbg !54
  %1887 = fmul <2 x float> %1886, %1850, !dbg !54
  %1888 = fmul <2 x float> %1840, %1887, !dbg !55
  %1889 = insertelement <2 x float> poison, float %1812, i64 0, !dbg !56
  %1890 = insertelement <2 x float> %1889, float %1813, i64 1, !dbg !56
  %1891 = fmul <2 x float> %1840, %1890, !dbg !56
  %1892 = fadd <2 x float> %1888, %1891, !dbg !57
  %1893 = fptrunc <2 x float> %1892 to <2 x bfloat>, !dbg !58
  %1894 = insertelement <2 x float> poison, float %779, i64 0, !dbg !54
  %1895 = insertelement <2 x float> %1894, float %780, i64 1, !dbg !54
  %1896 = fmul <2 x float> %1895, %1837, !dbg !54
  %1897 = fmul <2 x float> %1840, %1896, !dbg !55
  %1898 = insertelement <2 x float> poison, float %1814, i64 0, !dbg !56
  %1899 = insertelement <2 x float> %1898, float %1815, i64 1, !dbg !56
  %1900 = fmul <2 x float> %1840, %1899, !dbg !56
  %1901 = fadd <2 x float> %1897, %1900, !dbg !57
  %1902 = fptrunc <2 x float> %1901 to <2 x bfloat>, !dbg !58
  %1903 = insertelement <2 x float> poison, float %781, i64 0, !dbg !54
  %1904 = insertelement <2 x float> %1903, float %782, i64 1, !dbg !54
  %1905 = fmul <2 x float> %1904, %1850, !dbg !54
  %1906 = fmul <2 x float> %1840, %1905, !dbg !55
  %1907 = insertelement <2 x float> poison, float %1816, i64 0, !dbg !56
  %1908 = insertelement <2 x float> %1907, float %1817, i64 1, !dbg !56
  %1909 = fmul <2 x float> %1840, %1908, !dbg !56
  %1910 = fadd <2 x float> %1906, %1909, !dbg !57
  %1911 = fptrunc <2 x float> %1910 to <2 x bfloat>, !dbg !58
  %1912 = insertelement <2 x float> poison, float %783, i64 0, !dbg !54
  %1913 = insertelement <2 x float> %1912, float %784, i64 1, !dbg !54
  %1914 = fmul <2 x float> %1913, %1837, !dbg !54
  %1915 = fmul <2 x float> %1840, %1914, !dbg !55
  %1916 = insertelement <2 x float> poison, float %1818, i64 0, !dbg !56
  %1917 = insertelement <2 x float> %1916, float %1819, i64 1, !dbg !56
  %1918 = fmul <2 x float> %1840, %1917, !dbg !56
  %1919 = fadd <2 x float> %1915, %1918, !dbg !57
  %1920 = fptrunc <2 x float> %1919 to <2 x bfloat>, !dbg !58
  %1921 = insertelement <2 x float> poison, float %785, i64 0, !dbg !54
  %1922 = insertelement <2 x float> %1921, float %786, i64 1, !dbg !54
  %1923 = fmul <2 x float> %1922, %1850, !dbg !54
  %1924 = fmul <2 x float> %1840, %1923, !dbg !55
  %1925 = insertelement <2 x float> poison, float %1820, i64 0, !dbg !56
  %1926 = insertelement <2 x float> %1925, float %1821, i64 1, !dbg !56
  %1927 = fmul <2 x float> %1840, %1926, !dbg !56
  %1928 = fadd <2 x float> %1924, %1927, !dbg !57
  %1929 = fptrunc <2 x float> %1928 to <2 x bfloat>, !dbg !58
  %1930 = insertelement <2 x float> poison, float %787, i64 0, !dbg !54
  %1931 = insertelement <2 x float> %1930, float %788, i64 1, !dbg !54
  %1932 = fmul <2 x float> %1931, %1837, !dbg !54
  %1933 = fmul <2 x float> %1840, %1932, !dbg !55
  %1934 = insertelement <2 x float> poison, float %1822, i64 0, !dbg !56
  %1935 = insertelement <2 x float> %1934, float %1823, i64 1, !dbg !56
  %1936 = fmul <2 x float> %1840, %1935, !dbg !56
  %1937 = fadd <2 x float> %1933, %1936, !dbg !57
  %1938 = fptrunc <2 x float> %1937 to <2 x bfloat>, !dbg !58
  %1939 = insertelement <2 x float> poison, float %789, i64 0, !dbg !54
  %1940 = insertelement <2 x float> %1939, float %790, i64 1, !dbg !54
  %1941 = fmul <2 x float> %1940, %1850, !dbg !54
  %1942 = fmul <2 x float> %1840, %1941, !dbg !55
  %1943 = insertelement <2 x float> poison, float %1824, i64 0, !dbg !56
  %1944 = insertelement <2 x float> %1943, float %1825, i64 1, !dbg !56
  %1945 = fmul <2 x float> %1840, %1944, !dbg !56
  %1946 = fadd <2 x float> %1942, %1945, !dbg !57
  %1947 = fptrunc <2 x float> %1946 to <2 x bfloat>, !dbg !58
  %1948 = insertelement <2 x float> poison, float %791, i64 0, !dbg !54
  %1949 = insertelement <2 x float> %1948, float %792, i64 1, !dbg !54
  %1950 = fmul <2 x float> %1949, %1837, !dbg !54
  %1951 = fmul <2 x float> %1840, %1950, !dbg !55
  %1952 = insertelement <2 x float> poison, float %1826, i64 0, !dbg !56
  %1953 = insertelement <2 x float> %1952, float %1827, i64 1, !dbg !56
  %1954 = fmul <2 x float> %1840, %1953, !dbg !56
  %1955 = fadd <2 x float> %1951, %1954, !dbg !57
  %1956 = fptrunc <2 x float> %1955 to <2 x bfloat>, !dbg !58
  %1957 = insertelement <2 x float> poison, float %793, i64 0, !dbg !54
  %1958 = insertelement <2 x float> %1957, float %794, i64 1, !dbg !54
  %1959 = fmul <2 x float> %1958, %1850, !dbg !54
  %1960 = fmul <2 x float> %1840, %1959, !dbg !55
  %1961 = insertelement <2 x float> poison, float %1828, i64 0, !dbg !56
  %1962 = insertelement <2 x float> %1961, float %1829, i64 1, !dbg !56
  %1963 = fmul <2 x float> %1840, %1962, !dbg !56
  %1964 = fadd <2 x float> %1960, %1963, !dbg !57
  %1965 = fptrunc <2 x float> %1964 to <2 x bfloat>, !dbg !58
  %1966 = insertelement <2 x float> poison, float %795, i64 0, !dbg !54
  %1967 = insertelement <2 x float> %1966, float %796, i64 1, !dbg !54
  %1968 = fmul <2 x float> %1967, %1837, !dbg !54
  %1969 = fmul <2 x float> %1840, %1968, !dbg !55
  %1970 = insertelement <2 x float> poison, float %1830, i64 0, !dbg !56
  %1971 = insertelement <2 x float> %1970, float %1831, i64 1, !dbg !56
  %1972 = fmul <2 x float> %1840, %1971, !dbg !56
  %1973 = fadd <2 x float> %1969, %1972, !dbg !57
  %1974 = fptrunc <2 x float> %1973 to <2 x bfloat>, !dbg !58
  %1975 = insertelement <2 x float> poison, float %797, i64 0, !dbg !54
  %1976 = insertelement <2 x float> %1975, float %798, i64 1, !dbg !54
  %1977 = fmul <2 x float> %1976, %1850, !dbg !54
  %1978 = fmul <2 x float> %1840, %1977, !dbg !55
  %1979 = insertelement <2 x float> poison, float %1832, i64 0, !dbg !56
  %1980 = insertelement <2 x float> %1979, float %1833, i64 1, !dbg !56
  %1981 = fmul <2 x float> %1840, %1980, !dbg !56
  %1982 = fadd <2 x float> %1978, %1981, !dbg !57
  %1983 = fptrunc <2 x float> %1982 to <2 x bfloat>, !dbg !58
  %1984 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1471, !dbg !59
  %1985 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1472, !dbg !59
  %1986 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1473, !dbg !59
  %1987 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1474, !dbg !59
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !59
  %1988 = shl nuw nsw i32 %37, 7, !dbg !59
  %1989 = and i32 %1988, 1920, !dbg !59
  %1990 = lshr exact i32 %39, 1, !dbg !59
  %1991 = or disjoint i32 %1989, %1990, !dbg !59
  %1992 = shl nuw nsw i32 %37, 6, !dbg !59
  %1993 = and i32 %1992, 6144, !dbg !59
  %1994 = or disjoint i32 %1991, %1993, !dbg !59
  %1995 = and i32 %103, 2040, !dbg !59
  %1996 = lshr i32 %1994, 4, !dbg !59
  %1997 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %1996, !dbg !59
  %1998 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1997, i32 %1994, !dbg !59
  %1999 = getelementptr inbounds nuw i8, ptr addrspace(3) %1998, i32 %44, !dbg !59
  %2000 = bitcast <2 x bfloat> %1846 to i32, !dbg !59
  %2001 = bitcast <2 x bfloat> %1857 to i32, !dbg !59
  %2002 = bitcast <2 x bfloat> %1866 to i32, !dbg !59
  %2003 = bitcast <2 x bfloat> %1875 to i32, !dbg !59
  %2004 = ptrtoint ptr addrspace(3) %1999 to i32, !dbg !59
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %2004, i32 %2000, i32 %2001, i32 %2002, i32 %2003) #5, !dbg !59
  %2005 = getelementptr inbounds nuw i8, ptr addrspace(3) %1999, i32 32, !dbg !59
  %2006 = bitcast <2 x bfloat> %1884 to i32, !dbg !59
  %2007 = bitcast <2 x bfloat> %1893 to i32, !dbg !59
  %2008 = bitcast <2 x bfloat> %1902 to i32, !dbg !59
  %2009 = bitcast <2 x bfloat> %1911 to i32, !dbg !59
  %2010 = ptrtoint ptr addrspace(3) %2005 to i32, !dbg !59
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %2010, i32 %2006, i32 %2007, i32 %2008, i32 %2009) #5, !dbg !59
  %2011 = getelementptr inbounds nuw i8, ptr addrspace(3) %1999, i32 64, !dbg !59
  %2012 = bitcast <2 x bfloat> %1920 to i32, !dbg !59
  %2013 = bitcast <2 x bfloat> %1929 to i32, !dbg !59
  %2014 = bitcast <2 x bfloat> %1938 to i32, !dbg !59
  %2015 = bitcast <2 x bfloat> %1947 to i32, !dbg !59
  %2016 = ptrtoint ptr addrspace(3) %2011 to i32, !dbg !59
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %2016, i32 %2012, i32 %2013, i32 %2014, i32 %2015) #5, !dbg !59
  %2017 = getelementptr inbounds nuw i8, ptr addrspace(3) %1999, i32 96, !dbg !59
  %2018 = bitcast <2 x bfloat> %1956 to i32, !dbg !59
  %2019 = bitcast <2 x bfloat> %1965 to i32, !dbg !59
  %2020 = bitcast <2 x bfloat> %1974 to i32, !dbg !59
  %2021 = bitcast <2 x bfloat> %1983 to i32, !dbg !59
  %2022 = ptrtoint ptr addrspace(3) %2017 to i32, !dbg !59
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %2022, i32 %2018, i32 %2019, i32 %2020, i32 %2021) #5, !dbg !59
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !59
  %2023 = and i32 %53, 120, !dbg !59
  %2024 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2023, !dbg !59
  %2025 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2024, i32 %1995, !dbg !59
  %2026 = load <4 x i32>, ptr addrspace(3) %2025, align 16, !dbg !59
  %2027 = or disjoint i32 %1995, 2048, !dbg !59
  %2028 = lshr i32 %2027, 4, !dbg !59
  %2029 = and i32 %2028, 248, !dbg !59
  %2030 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2029, !dbg !59
  %2031 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2030, i32 %2027, !dbg !59
  %2032 = load <4 x i32>, ptr addrspace(3) %2031, align 16, !dbg !59
  %2033 = or disjoint i32 %1995, 4096, !dbg !59
  %2034 = lshr i32 %2033, 4, !dbg !59
  %2035 = and i32 %2034, 376, !dbg !59
  %2036 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2035, !dbg !59
  %2037 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2036, i32 %2033, !dbg !59
  %2038 = load <4 x i32>, ptr addrspace(3) %2037, align 16, !dbg !59
  %2039 = or i32 %103, 6144, !dbg !59
  %2040 = lshr i32 %2039, 4, !dbg !59
  %2041 = and i32 %2040, 504, !dbg !59
  %2042 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %2041, !dbg !59
  %2043 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %2042, i32 %2039, !dbg !59
  %2044 = load <4 x i32>, ptr addrspace(3) %2043, align 16, !dbg !59
  %.extract = extractelement <4 x i32> %2026, i64 0, !dbg !59
  %.extract73 = extractelement <4 x i32> %2026, i64 1, !dbg !59
  %.extract75 = extractelement <4 x i32> %2026, i64 2, !dbg !59
  %.extract77 = extractelement <4 x i32> %2026, i64 3, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract73, i32 %.extract75, i32 %.extract77, ptr addrspace(1) %1984, i1 %1479) #5, !dbg !59
  %.extract79 = extractelement <4 x i32> %2032, i64 0, !dbg !59
  %.extract81 = extractelement <4 x i32> %2032, i64 1, !dbg !59
  %.extract83 = extractelement <4 x i32> %2032, i64 2, !dbg !59
  %.extract85 = extractelement <4 x i32> %2032, i64 3, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract79, i32 %.extract81, i32 %.extract83, i32 %.extract85, ptr addrspace(1) %1985, i1 %1480) #5, !dbg !59
  %.extract87 = extractelement <4 x i32> %2038, i64 0, !dbg !59
  %.extract89 = extractelement <4 x i32> %2038, i64 1, !dbg !59
  %.extract91 = extractelement <4 x i32> %2038, i64 2, !dbg !59
  %.extract93 = extractelement <4 x i32> %2038, i64 3, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract87, i32 %.extract89, i32 %.extract91, i32 %.extract93, ptr addrspace(1) %1986, i1 %1481) #5, !dbg !59
  %.extract95 = extractelement <4 x i32> %2044, i64 0, !dbg !59
  %.extract97 = extractelement <4 x i32> %2044, i64 1, !dbg !59
  %.extract99 = extractelement <4 x i32> %2044, i64 2, !dbg !59
  %.extract101 = extractelement <4 x i32> %2044, i64 3, !dbg !59
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract95, i32 %.extract97, i32 %.extract99, i32 %.extract101, ptr addrspace(1) %1987, i1 %1482) #5, !dbg !59
  ret void, !dbg !60
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.z() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

attributes #0 = { "nvvm.reqntid"="256" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind }
attributes #3 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chunk_o.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "chunk_fwd_kernel_o", linkageName: "chunk_fwd_kernel_o", scope: !1, file: !1, line: 32, type: !6, scopeLine: 32, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 54, column: 35, scope: !5)
!9 = !DILocation(line: 54, column: 53, scope: !5)
!10 = !DILocation(line: 54, column: 71, scope: !5)
!11 = !DILocation(line: 55, column: 23, scope: !5)
!12 = !DILocation(line: 55, column: 33, scope: !5)
!13 = !DILocation(line: 40, column: 22, scope: !14, inlinedAt: !16)
!14 = distinct !DILexicalBlockFile(scope: !5, file: !15, discriminator: 0)
!15 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language")
!16 = !DILocation(line: 64, column: 24, scope: !5)
!17 = !DILocation(line: 40, column: 28, scope: !14, inlinedAt: !16)
!18 = !DILocation(line: 65, column: 21, scope: !5)
!19 = !DILocation(line: 65, column: 26, scope: !5)
!20 = !DILocation(line: 66, column: 25, scope: !5)
!21 = !DILocation(line: 69, column: 16, scope: !5)
!22 = !DILocation(line: 69, column: 20, scope: !5)
!23 = !DILocation(line: 69, column: 27, scope: !5)
!24 = !DILocation(line: 69, column: 9, scope: !5)
!25 = !DILocation(line: 70, column: 9, scope: !5)
!26 = !DILocation(line: 71, column: 9, scope: !5)
!27 = !DILocation(line: 72, column: 9, scope: !5)
!28 = !DILocation(line: 73, column: 17, scope: !5)
!29 = !DILocation(line: 73, column: 21, scope: !5)
!30 = !DILocation(line: 73, column: 29, scope: !5)
!31 = !DILocation(line: 73, column: 9, scope: !5)
!32 = !DILocation(line: 79, column: 60, scope: !5)
!33 = !DILocation(line: 79, column: 85, scope: !5)
!34 = !DILocation(line: 81, column: 68, scope: !5)
!35 = !DILocation(line: 81, column: 83, scope: !5)
!36 = !DILocation(line: 83, column: 22, scope: !5)
!37 = !DILocation(line: 85, column: 22, scope: !5)
!38 = !DILocation(line: 87, column: 22, scope: !5)
!39 = !DILocation(line: 90, column: 27, scope: !5)
!40 = !DILocation(line: 92, column: 27, scope: !5)
!41 = !DILocation(line: 95, column: 13, scope: !5)
!42 = !DILocation(line: 97, column: 22, scope: !5)
!43 = !DILocation(line: 98, column: 24, scope: !5)
!44 = !DILocation(line: 99, column: 39, scope: !5)
!45 = !DILocation(line: 99, column: 24, scope: !5)
!46 = !DILocation(line: 99, column: 20, scope: !5)
!47 = !DILocation(line: 109, column: 27, scope: !5)
!48 = !DILocation(line: 109, column: 59, scope: !5)
!49 = !DILocation(line: 109, column: 44, scope: !5)
!50 = !DILocation(line: 115, column: 18, scope: !5)
!51 = !DILocation(line: 118, column: 38, scope: !5)
!52 = !DILocation(line: 110, column: 29, scope: !5)
!53 = !DILocation(line: 118, column: 50, scope: !5)
!54 = !DILocation(line: 98, column: 20, scope: !5)
!55 = !DILocation(line: 118, column: 16, scope: !5)
!56 = !DILocation(line: 118, column: 57, scope: !5)
!57 = !DILocation(line: 118, column: 24, scope: !5)
!58 = !DILocation(line: 119, column: 25, scope: !5)
!59 = !DILocation(line: 119, column: 18, scope: !5)
!60 = !DILocation(line: 119, column: 4, scope: !5)
