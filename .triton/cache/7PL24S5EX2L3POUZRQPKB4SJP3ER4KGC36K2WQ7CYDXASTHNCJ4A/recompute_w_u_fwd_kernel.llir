; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @recompute_w_u_fwd_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = and i32 %11, 65504, !dbg !10
  %13 = and i32 %11, 31, !dbg !11
  %14 = mul i32 %12, %7, !dbg !12
  %15 = sext i32 %14 to i64, !dbg !13
  %16 = getelementptr bfloat, ptr addrspace(1) %2, i64 %15, !dbg !13
  %17 = zext nneg i32 %13 to i64, !dbg !14
  %18 = getelementptr bfloat, ptr addrspace(1) %16, i64 %17, !dbg !14
  %19 = shl i32 %10, 6, !dbg !15
  %20 = sext i32 %7 to i64, !dbg !16
  %21 = sext i32 %19 to i64, !dbg !16
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !17
  %23 = lshr i32 %22, 5, !dbg !17
  %24 = and i32 %22, 32, !dbg !17
  %25 = icmp eq i32 %24, 0, !dbg !17
  %26 = lshr i32 %22, 3, !dbg !17
  %27 = and i32 %26, 15, !dbg !17
  %28 = or disjoint i32 %27, 16, !dbg !17
  %29 = or disjoint i32 %27, 32, !dbg !17
  %30 = or disjoint i32 %27, 48, !dbg !17
  %31 = shl nuw nsw i32 %22, 3, !dbg !17
  %32 = and i32 %31, 56, !dbg !17
  %33 = zext nneg i32 %27 to i64, !dbg !17
  %34 = zext nneg i32 %28 to i64, !dbg !17
  %35 = zext nneg i32 %29 to i64, !dbg !17
  %36 = zext nneg i32 %30 to i64, !dbg !17
  %37 = zext nneg i32 %32 to i64, !dbg !17
  %38 = or disjoint i64 %33, %21, !dbg !17
  %39 = or disjoint i64 %34, %21, !dbg !17
  %40 = or disjoint i64 %35, %21, !dbg !17
  %41 = or disjoint i64 %36, %21, !dbg !17
  %42 = shl nsw i64 %38, 5, !dbg !17
  %43 = shl nsw i64 %39, 5, !dbg !17
  %44 = shl nsw i64 %40, 5, !dbg !17
  %45 = shl nsw i64 %41, 5, !dbg !17
  %46 = getelementptr bfloat, ptr addrspace(1) %18, i64 %42, !dbg !17
  %47 = getelementptr bfloat, ptr addrspace(1) %18, i64 %43, !dbg !17
  %48 = getelementptr bfloat, ptr addrspace(1) %18, i64 %44, !dbg !17
  %49 = getelementptr bfloat, ptr addrspace(1) %18, i64 %45, !dbg !17
  %50 = icmp sgt i32 %19, -1, !dbg !17
  %51 = icmp slt i64 %38, %20, !dbg !17
  %52 = icmp slt i64 %39, %20, !dbg !17
  %53 = icmp slt i64 %40, %20, !dbg !17
  %54 = icmp slt i64 %41, %20, !dbg !17
  %55 = and i1 %50, %51, !dbg !17
  %56 = and i1 %50, %52, !dbg !17
  %57 = and i1 %50, %53, !dbg !17
  %58 = and i1 %50, %54, !dbg !17
  %59 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %55) #2, !dbg !17
  %60 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %47, i1 %56) #2, !dbg !17
  %61 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %48, i1 %57) #2, !dbg !17
  %62 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %49, i1 %58) #2, !dbg !17
  %63 = or disjoint i32 %14, %13, !dbg !18
  %64 = shl i32 %63, 6, !dbg !19
  %65 = sext i32 %64 to i64, !dbg !20
  %66 = getelementptr bfloat, ptr addrspace(1) %5, i64 %65, !dbg !20
  %.idx = shl nsw i64 %38, 12, !dbg !21
  %67 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx, !dbg !21
  %68 = getelementptr bfloat, ptr addrspace(1) %67, i64 %37, !dbg !21
  %.idx2 = shl nsw i64 %39, 12, !dbg !21
  %69 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx2, !dbg !21
  %70 = getelementptr bfloat, ptr addrspace(1) %69, i64 %37, !dbg !21
  %.idx3 = shl nsw i64 %40, 12, !dbg !21
  %71 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx3, !dbg !21
  %72 = getelementptr bfloat, ptr addrspace(1) %71, i64 %37, !dbg !21
  %.idx4 = shl nsw i64 %41, 12, !dbg !21
  %73 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx4, !dbg !21
  %74 = getelementptr bfloat, ptr addrspace(1) %73, i64 %37, !dbg !21
  %75 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %68, i1 %55) #2, !dbg !21
  %76 = extractvalue { i32, i32, i32, i32 } %75, 0, !dbg !21
  %77 = bitcast i32 %76 to <2 x bfloat>, !dbg !21
  %78 = extractvalue { i32, i32, i32, i32 } %75, 1, !dbg !21
  %79 = bitcast i32 %78 to <2 x bfloat>, !dbg !21
  %80 = extractvalue { i32, i32, i32, i32 } %75, 2, !dbg !21
  %81 = bitcast i32 %80 to <2 x bfloat>, !dbg !21
  %82 = shufflevector <2 x bfloat> %81, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %83 = extractvalue { i32, i32, i32, i32 } %75, 3, !dbg !21
  %84 = bitcast i32 %83 to <2 x bfloat>, !dbg !21
  %85 = shufflevector <2 x bfloat> %84, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %86 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %70, i1 %56) #2, !dbg !21
  %87 = extractvalue { i32, i32, i32, i32 } %86, 0, !dbg !21
  %88 = bitcast i32 %87 to <2 x bfloat>, !dbg !21
  %89 = extractvalue { i32, i32, i32, i32 } %86, 1, !dbg !21
  %90 = bitcast i32 %89 to <2 x bfloat>, !dbg !21
  %91 = extractvalue { i32, i32, i32, i32 } %86, 2, !dbg !21
  %92 = bitcast i32 %91 to <2 x bfloat>, !dbg !21
  %93 = shufflevector <2 x bfloat> %92, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %94 = extractvalue { i32, i32, i32, i32 } %86, 3, !dbg !21
  %95 = bitcast i32 %94 to <2 x bfloat>, !dbg !21
  %96 = shufflevector <2 x bfloat> %95, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %97 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %72, i1 %57) #2, !dbg !21
  %98 = extractvalue { i32, i32, i32, i32 } %97, 0, !dbg !21
  %99 = bitcast i32 %98 to <2 x bfloat>, !dbg !21
  %100 = extractvalue { i32, i32, i32, i32 } %97, 1, !dbg !21
  %101 = bitcast i32 %100 to <2 x bfloat>, !dbg !21
  %102 = extractvalue { i32, i32, i32, i32 } %97, 2, !dbg !21
  %103 = bitcast i32 %102 to <2 x bfloat>, !dbg !21
  %104 = shufflevector <2 x bfloat> %103, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %105 = extractvalue { i32, i32, i32, i32 } %97, 3, !dbg !21
  %106 = bitcast i32 %105 to <2 x bfloat>, !dbg !21
  %107 = shufflevector <2 x bfloat> %106, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %108 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %74, i1 %58) #2, !dbg !21
  %109 = extractvalue { i32, i32, i32, i32 } %108, 0, !dbg !21
  %110 = bitcast i32 %109 to <2 x bfloat>, !dbg !21
  %111 = extractvalue { i32, i32, i32, i32 } %108, 1, !dbg !21
  %112 = bitcast i32 %111 to <2 x bfloat>, !dbg !21
  %113 = extractvalue { i32, i32, i32, i32 } %108, 2, !dbg !21
  %114 = bitcast i32 %113 to <2 x bfloat>, !dbg !21
  %115 = shufflevector <2 x bfloat> %114, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %116 = extractvalue { i32, i32, i32, i32 } %108, 3, !dbg !21
  %117 = bitcast i32 %116 to <2 x bfloat>, !dbg !21
  %118 = shufflevector <2 x bfloat> %117, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %119 = select i1 %25, i32 0, i32 288, !dbg !21
  %120 = and i32 %22, 24, !dbg !21
  %121 = mul nuw nsw i32 %120, 9, !dbg !21
  %122 = xor i32 %121, %32, !dbg !21
  %123 = xor i32 %122, %119, !dbg !21
  %124 = and i32 %31, 512, !dbg !21
  %125 = or disjoint i32 %123, %124, !dbg !21
  %126 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 %125, !dbg !21
  %127 = shufflevector <2 x bfloat> %77, <2 x bfloat> %79, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %128 = shufflevector <8 x bfloat> %127, <8 x bfloat> %82, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %129 = shufflevector <8 x bfloat> %128, <8 x bfloat> %85, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %129, ptr addrspace(3) %126, align 16, !dbg !21
  %130 = or disjoint i32 %32, 1024, !dbg !21
  %131 = xor i32 %121, %130, !dbg !21
  %132 = xor i32 %131, %119, !dbg !21
  %133 = or disjoint i32 %132, %124, !dbg !21
  %134 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 %133, !dbg !21
  %135 = shufflevector <2 x bfloat> %88, <2 x bfloat> %90, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %136 = shufflevector <8 x bfloat> %135, <8 x bfloat> %93, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %137 = shufflevector <8 x bfloat> %136, <8 x bfloat> %96, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %137, ptr addrspace(3) %134, align 16, !dbg !21
  %138 = or disjoint i32 %32, 2048, !dbg !21
  %139 = xor i32 %121, %138, !dbg !21
  %140 = xor i32 %139, %119, !dbg !21
  %141 = or disjoint i32 %140, %124, !dbg !21
  %142 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 %141, !dbg !21
  %143 = shufflevector <2 x bfloat> %99, <2 x bfloat> %101, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %144 = shufflevector <8 x bfloat> %143, <8 x bfloat> %104, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %145 = shufflevector <8 x bfloat> %144, <8 x bfloat> %107, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %145, ptr addrspace(3) %142, align 16, !dbg !21
  %146 = or disjoint i32 %32, 3072, !dbg !21
  %147 = xor i32 %121, %146, !dbg !21
  %148 = xor i32 %147, %119, !dbg !21
  %149 = or disjoint i32 %148, %124, !dbg !21
  %150 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 %149, !dbg !21
  %151 = shufflevector <2 x bfloat> %110, <2 x bfloat> %112, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %152 = shufflevector <8 x bfloat> %151, <8 x bfloat> %115, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %153 = shufflevector <8 x bfloat> %152, <8 x bfloat> %118, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %153, ptr addrspace(3) %150, align 16, !dbg !21
  %154 = shl i32 %63, 7, !dbg !22
  %155 = sext i32 %154 to i64, !dbg !23
  %156 = getelementptr bfloat, ptr addrspace(1) %1, i64 %155, !dbg !23
  %157 = getelementptr bfloat, ptr addrspace(1) %4, i64 %155, !dbg !24
  %158 = or disjoint i64 %.idx, %37, !dbg !25
  %159 = or disjoint i64 %.idx2, %37, !dbg !25
  %160 = or disjoint i64 %.idx3, %37, !dbg !25
  %161 = or disjoint i64 %.idx4, %37, !dbg !25
  %162 = getelementptr bfloat, ptr addrspace(1) %156, i64 %158, !dbg !25
  %163 = getelementptr bfloat, ptr addrspace(1) %156, i64 %159, !dbg !25
  %164 = getelementptr bfloat, ptr addrspace(1) %156, i64 %160, !dbg !25
  %165 = getelementptr bfloat, ptr addrspace(1) %156, i64 %161, !dbg !25
  %166 = shl nuw nsw i32 %27, 6, !dbg !25
  %167 = or disjoint i32 %166, %32, !dbg !25
  %168 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %167, !dbg !25
  %169 = or disjoint i32 %167, 1024, !dbg !25
  %170 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %169, !dbg !25
  %171 = or disjoint i32 %167, 2048, !dbg !25
  %172 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %171, !dbg !25
  %173 = or disjoint i32 %167, 3072, !dbg !25
  %174 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %173, !dbg !25
  %175 = select i1 %55, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %162, i32 %175) #2, !dbg !25
  %176 = select i1 %56, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %163, i32 %176) #2, !dbg !25
  %177 = select i1 %57, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %164, i32 %177) #2, !dbg !25
  %178 = select i1 %58, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %165, i32 %178) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %179 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %125
  %180 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %133
  %181 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %141
  %182 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %149
  %183 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408) to i32), 4
  %184 = and i32 %183, 16383
  %185 = zext nneg i32 %184 to i64
  %186 = or disjoint i64 %185, 4611686293338849280
  %187 = lshr exact i32 ptrtoint (ptr addrspace(3) @global_smem to i32), 4
  %188 = and i32 %187, 16383
  %189 = zext nneg i32 %188 to i64
  %190 = or disjoint i64 %189, 4611686293338849280
  %191 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408) to i32), i32 32), 4
  %192 = and i32 %191, 16383
  %193 = zext nneg i32 %192 to i64
  %194 = or disjoint i64 %193, 4611686293338849280
  %195 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 2048), 4
  %196 = and i32 %195, 16383
  %197 = zext nneg i32 %196 to i64
  %198 = or disjoint i64 %197, 4611686293338849280
  %199 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408) to i32), i32 64), 4
  %200 = and i32 %199, 16383
  %201 = zext nneg i32 %200 to i64
  %202 = or disjoint i64 %201, 4611686293338849280
  %203 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 4096), 4
  %204 = and i32 %203, 16383
  %205 = zext nneg i32 %204 to i64
  %206 = or disjoint i64 %205, 4611686293338849280
  %207 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408) to i32), i32 96), 4
  %208 = and i32 %207, 16383
  %209 = zext nneg i32 %208 to i64
  %210 = or disjoint i64 %209, 4611686293338849280
  %211 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) @global_smem to i32), i32 6144), 4
  %212 = and i32 %211, 16383
  %213 = zext nneg i32 %212 to i64
  %214 = or disjoint i64 %213, 4611686293338849280
  %215 = shl nuw nsw i32 %22, 6
  %216 = and i32 %215, 960
  %217 = lshr i32 %22, 1
  %218 = and i32 %217, 8
  %219 = or disjoint i32 %216, %218
  %220 = shl nuw nsw i32 %22, 5
  %221 = and i32 %220, 3072
  %222 = or disjoint i32 %219, %221
  %223 = and i32 %31, 1016
  %224 = lshr exact i32 %222, 3
  %225 = and i32 %224, 504
  %226 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %225
  %227 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %226, i32 %222
  %228 = ptrtoint ptr addrspace(3) %227 to i32
  %229 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 32
  %230 = ptrtoint ptr addrspace(3) %229 to i32
  %231 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 64
  %232 = ptrtoint ptr addrspace(3) %231 to i32
  %233 = getelementptr inbounds nuw i8, ptr addrspace(3) %227, i32 96
  %234 = ptrtoint ptr addrspace(3) %233 to i32
  %235 = and i32 %22, 120
  %236 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %235
  %237 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %236, i32 %223
  %238 = or disjoint i32 %223, 1024
  %239 = lshr exact i32 %238, 3
  %240 = and i32 %239, 248
  %241 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %240
  %242 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %241, i32 %238
  %243 = or disjoint i32 %223, 2048
  %244 = lshr exact i32 %243, 3
  %245 = and i32 %244, 376
  %246 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %245
  %247 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %246, i32 %243
  %248 = or disjoint i32 %223, 3072
  %249 = lshr exact i32 %248, 3
  %250 = and i32 %249, 504
  %251 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %250
  %252 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %251, i32 %248
  %253 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %167
  %254 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %169
  %255 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %171
  %256 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %173
  %257 = insertelement <8 x i16> poison, i16 %59, i64 0, !dbg !26
  %258 = bitcast <8 x i16> %257 to <8 x bfloat>, !dbg !26
  %259 = shufflevector <8 x bfloat> %258, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %260 = insertelement <8 x i16> poison, i16 %60, i64 0, !dbg !26
  %261 = bitcast <8 x i16> %260 to <8 x bfloat>, !dbg !26
  %262 = shufflevector <8 x bfloat> %261, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %263 = insertelement <8 x i16> poison, i16 %61, i64 0, !dbg !26
  %264 = bitcast <8 x i16> %263 to <8 x bfloat>, !dbg !26
  %265 = shufflevector <8 x bfloat> %264, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %266 = insertelement <8 x i16> poison, i16 %62, i64 0, !dbg !26
  %267 = bitcast <8 x i16> %266 to <8 x bfloat>, !dbg !26
  %268 = shufflevector <8 x bfloat> %267, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %269 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 4
  %270 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 8
  %271 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 12
  br label %272, !dbg !27

272:                                              ; preds = %9, %272
  %273 = phi i1 [ true, %9 ], [ false, %272 ]
  %indvars.iv = phi i64 [ 64, %9 ], [ 128, %272 ]
  %274 = phi i1 [ %55, %9 ], [ %536, %272 ]
  %275 = phi i1 [ %56, %9 ], [ %537, %272 ]
  %276 = phi i1 [ %57, %9 ], [ %538, %272 ]
  %277 = phi i1 [ %58, %9 ], [ %539, %272 ]
  %278 = phi i64 [ %158, %9 ], [ %528, %272 ]
  %279 = phi i64 [ %159, %9 ], [ %529, %272 ]
  %280 = phi i64 [ %160, %9 ], [ %530, %272 ]
  %281 = phi i64 [ %161, %9 ], [ %531, %272 ]
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %282 = load <8 x bfloat>, ptr addrspace(3) %253, align 16, !dbg !25
  %283 = fmul <8 x bfloat> %282, %259, !dbg !26
  %284 = load <8 x bfloat>, ptr addrspace(3) %254, align 16, !dbg !25
  %285 = fmul <8 x bfloat> %284, %262, !dbg !26
  %286 = load <8 x bfloat>, ptr addrspace(3) %255, align 16, !dbg !25
  %287 = fmul <8 x bfloat> %286, %265, !dbg !26
  %288 = load <8 x bfloat>, ptr addrspace(3) %256, align 16, !dbg !25
  %289 = fmul <8 x bfloat> %288, %268, !dbg !26
  store <8 x bfloat> %283, ptr addrspace(3) %179, align 16, !dbg !26
  store <8 x bfloat> %285, ptr addrspace(3) %180, align 16, !dbg !26
  store <8 x bfloat> %287, ptr addrspace(3) %181, align 16, !dbg !26
  store <8 x bfloat> %289, ptr addrspace(3) %182, align 16, !dbg !26
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !28
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !28
  %290 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !28
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !28
  %291 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %186, i64 %190) #2, !dbg !28
  %292 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 0, !dbg !28
  %293 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 1, !dbg !28
  %294 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 2, !dbg !28
  %295 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 3, !dbg !28
  %296 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 4, !dbg !28
  %297 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 5, !dbg !28
  %298 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 6, !dbg !28
  %299 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 7, !dbg !28
  %300 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 8, !dbg !28
  %301 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 9, !dbg !28
  %302 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 10, !dbg !28
  %303 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 11, !dbg !28
  %304 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 12, !dbg !28
  %305 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 13, !dbg !28
  %306 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 14, !dbg !28
  %307 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 15, !dbg !28
  %308 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 16, !dbg !28
  %309 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 17, !dbg !28
  %310 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 18, !dbg !28
  %311 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 19, !dbg !28
  %312 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 20, !dbg !28
  %313 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 21, !dbg !28
  %314 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 22, !dbg !28
  %315 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 23, !dbg !28
  %316 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 24, !dbg !28
  %317 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 25, !dbg !28
  %318 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 26, !dbg !28
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 27, !dbg !28
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 28, !dbg !28
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 29, !dbg !28
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 30, !dbg !28
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %291, 31, !dbg !28
  %324 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %292, float %293, float %294, float %295, float %296, float %297, float %298, float %299, float %300, float %301, float %302, float %303, float %304, float %305, float %306, float %307, float %308, float %309, float %310, float %311, float %312, float %313, float %314, float %315, float %316, float %317, float %318, float %319, float %320, float %321, float %322, float %323, i64 %194, i64 %198, i1 true) #2, !dbg !28
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 0, !dbg !28
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 1, !dbg !28
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 2, !dbg !28
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 3, !dbg !28
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 4, !dbg !28
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 5, !dbg !28
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 6, !dbg !28
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 7, !dbg !28
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 8, !dbg !28
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 9, !dbg !28
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 10, !dbg !28
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 11, !dbg !28
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 12, !dbg !28
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 13, !dbg !28
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 14, !dbg !28
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 15, !dbg !28
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 16, !dbg !28
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 17, !dbg !28
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 18, !dbg !28
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 19, !dbg !28
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 20, !dbg !28
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 21, !dbg !28
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 22, !dbg !28
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 23, !dbg !28
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 24, !dbg !28
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 25, !dbg !28
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 26, !dbg !28
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 27, !dbg !28
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 28, !dbg !28
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 29, !dbg !28
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 30, !dbg !28
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %324, 31, !dbg !28
  %357 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, float %356, i64 %202, i64 %206, i1 true) #2, !dbg !28
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 0, !dbg !28
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 1, !dbg !28
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 2, !dbg !28
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 3, !dbg !28
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 4, !dbg !28
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 5, !dbg !28
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 6, !dbg !28
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 7, !dbg !28
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 8, !dbg !28
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 9, !dbg !28
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 10, !dbg !28
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 11, !dbg !28
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 12, !dbg !28
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 13, !dbg !28
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 14, !dbg !28
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 15, !dbg !28
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 16, !dbg !28
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 17, !dbg !28
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 18, !dbg !28
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 19, !dbg !28
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 20, !dbg !28
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 21, !dbg !28
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 22, !dbg !28
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 23, !dbg !28
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 24, !dbg !28
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 25, !dbg !28
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 26, !dbg !28
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 27, !dbg !28
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 28, !dbg !28
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 29, !dbg !28
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 30, !dbg !28
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %357, 31, !dbg !28
  %390 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, i64 %210, i64 %214, i1 true) #2, !dbg !28
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 0, !dbg !28
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 1, !dbg !28
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 2, !dbg !28
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 3, !dbg !28
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 4, !dbg !28
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 5, !dbg !28
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 6, !dbg !28
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 7, !dbg !28
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 8, !dbg !28
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 9, !dbg !28
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 10, !dbg !28
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 11, !dbg !28
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 12, !dbg !28
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 13, !dbg !28
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 14, !dbg !28
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 15, !dbg !28
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 16, !dbg !28
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 17, !dbg !28
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 18, !dbg !28
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 19, !dbg !28
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 20, !dbg !28
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 21, !dbg !28
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 22, !dbg !28
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 23, !dbg !28
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 24, !dbg !28
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 25, !dbg !28
  %417 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 26, !dbg !28
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 27, !dbg !28
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 28, !dbg !28
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 29, !dbg !28
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 30, !dbg !28
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %390, 31, !dbg !28
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !28
  %423 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, float %401, float %402, float %403, float %404, float %405, float %406, float %407, float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, float %417, float %418, float %419, float %420, float %421, float %422, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 0, i32 0, ptr addrspace(3) @global_smem, i32 0, i32 0) #2, !dbg !28
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 0, !dbg !28
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 1, !dbg !28
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 2, !dbg !28
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 3, !dbg !28
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 4, !dbg !28
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 5, !dbg !28
  %430 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 6, !dbg !28
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 7, !dbg !28
  %432 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 8, !dbg !28
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 9, !dbg !28
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 10, !dbg !28
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 11, !dbg !28
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 12, !dbg !28
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 13, !dbg !28
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 14, !dbg !28
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 15, !dbg !28
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 16, !dbg !28
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 17, !dbg !28
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 18, !dbg !28
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 19, !dbg !28
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 20, !dbg !28
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 21, !dbg !28
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 22, !dbg !28
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 23, !dbg !28
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 24, !dbg !28
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 25, !dbg !28
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 26, !dbg !28
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 27, !dbg !28
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 28, !dbg !28
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 29, !dbg !28
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 30, !dbg !28
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %423, 31, !dbg !28
  %456 = insertelement <2 x float> poison, float %424, i64 0, !dbg !29
  %457 = insertelement <2 x float> %456, float %425, i64 1, !dbg !29
  %458 = fptrunc <2 x float> %457 to <2 x bfloat>, !dbg !29
  %459 = insertelement <2 x float> poison, float %426, i64 0, !dbg !29
  %460 = insertelement <2 x float> %459, float %427, i64 1, !dbg !29
  %461 = fptrunc <2 x float> %460 to <2 x bfloat>, !dbg !29
  %462 = insertelement <2 x float> poison, float %428, i64 0, !dbg !29
  %463 = insertelement <2 x float> %462, float %429, i64 1, !dbg !29
  %464 = fptrunc <2 x float> %463 to <2 x bfloat>, !dbg !29
  %465 = insertelement <2 x float> poison, float %430, i64 0, !dbg !29
  %466 = insertelement <2 x float> %465, float %431, i64 1, !dbg !29
  %467 = fptrunc <2 x float> %466 to <2 x bfloat>, !dbg !29
  %468 = insertelement <2 x float> poison, float %432, i64 0, !dbg !29
  %469 = insertelement <2 x float> %468, float %433, i64 1, !dbg !29
  %470 = fptrunc <2 x float> %469 to <2 x bfloat>, !dbg !29
  %471 = insertelement <2 x float> poison, float %434, i64 0, !dbg !29
  %472 = insertelement <2 x float> %471, float %435, i64 1, !dbg !29
  %473 = fptrunc <2 x float> %472 to <2 x bfloat>, !dbg !29
  %474 = insertelement <2 x float> poison, float %436, i64 0, !dbg !29
  %475 = insertelement <2 x float> %474, float %437, i64 1, !dbg !29
  %476 = fptrunc <2 x float> %475 to <2 x bfloat>, !dbg !29
  %477 = insertelement <2 x float> poison, float %438, i64 0, !dbg !29
  %478 = insertelement <2 x float> %477, float %439, i64 1, !dbg !29
  %479 = fptrunc <2 x float> %478 to <2 x bfloat>, !dbg !29
  %480 = insertelement <2 x float> poison, float %440, i64 0, !dbg !29
  %481 = insertelement <2 x float> %480, float %441, i64 1, !dbg !29
  %482 = fptrunc <2 x float> %481 to <2 x bfloat>, !dbg !29
  %483 = insertelement <2 x float> poison, float %442, i64 0, !dbg !29
  %484 = insertelement <2 x float> %483, float %443, i64 1, !dbg !29
  %485 = fptrunc <2 x float> %484 to <2 x bfloat>, !dbg !29
  %486 = insertelement <2 x float> poison, float %444, i64 0, !dbg !29
  %487 = insertelement <2 x float> %486, float %445, i64 1, !dbg !29
  %488 = fptrunc <2 x float> %487 to <2 x bfloat>, !dbg !29
  %489 = insertelement <2 x float> poison, float %446, i64 0, !dbg !29
  %490 = insertelement <2 x float> %489, float %447, i64 1, !dbg !29
  %491 = fptrunc <2 x float> %490 to <2 x bfloat>, !dbg !29
  %492 = insertelement <2 x float> poison, float %448, i64 0, !dbg !29
  %493 = insertelement <2 x float> %492, float %449, i64 1, !dbg !29
  %494 = fptrunc <2 x float> %493 to <2 x bfloat>, !dbg !29
  %495 = insertelement <2 x float> poison, float %450, i64 0, !dbg !29
  %496 = insertelement <2 x float> %495, float %451, i64 1, !dbg !29
  %497 = fptrunc <2 x float> %496 to <2 x bfloat>, !dbg !29
  %498 = insertelement <2 x float> poison, float %452, i64 0, !dbg !29
  %499 = insertelement <2 x float> %498, float %453, i64 1, !dbg !29
  %500 = fptrunc <2 x float> %499 to <2 x bfloat>, !dbg !29
  %501 = insertelement <2 x float> poison, float %454, i64 0, !dbg !29
  %502 = insertelement <2 x float> %501, float %455, i64 1, !dbg !29
  %503 = fptrunc <2 x float> %502 to <2 x bfloat>, !dbg !29
  %504 = getelementptr bfloat, ptr addrspace(1) %157, i64 %278, !dbg !30
  %505 = getelementptr bfloat, ptr addrspace(1) %157, i64 %279, !dbg !30
  %506 = getelementptr bfloat, ptr addrspace(1) %157, i64 %280, !dbg !30
  %507 = getelementptr bfloat, ptr addrspace(1) %157, i64 %281, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %508 = bitcast <2 x bfloat> %458 to i32, !dbg !30
  %509 = bitcast <2 x bfloat> %461 to i32, !dbg !30
  %510 = bitcast <2 x bfloat> %464 to i32, !dbg !30
  %511 = bitcast <2 x bfloat> %467 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %228, i32 %508, i32 %509, i32 %510, i32 %511) #2, !dbg !30
  %512 = bitcast <2 x bfloat> %470 to i32, !dbg !30
  %513 = bitcast <2 x bfloat> %473 to i32, !dbg !30
  %514 = bitcast <2 x bfloat> %476 to i32, !dbg !30
  %515 = bitcast <2 x bfloat> %479 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %230, i32 %512, i32 %513, i32 %514, i32 %515) #2, !dbg !30
  %516 = bitcast <2 x bfloat> %482 to i32, !dbg !30
  %517 = bitcast <2 x bfloat> %485 to i32, !dbg !30
  %518 = bitcast <2 x bfloat> %488 to i32, !dbg !30
  %519 = bitcast <2 x bfloat> %491 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %232, i32 %516, i32 %517, i32 %518, i32 %519) #2, !dbg !30
  %520 = bitcast <2 x bfloat> %494 to i32, !dbg !30
  %521 = bitcast <2 x bfloat> %497 to i32, !dbg !30
  %522 = bitcast <2 x bfloat> %500 to i32, !dbg !30
  %523 = bitcast <2 x bfloat> %503 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %234, i32 %520, i32 %521, i32 %522, i32 %523) #2, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %524 = load <4 x i32>, ptr addrspace(3) %242, align 16, !dbg !30
  %525 = load <4 x i32>, ptr addrspace(3) %247, align 16, !dbg !30
  %526 = load <4 x i32>, ptr addrspace(3) %252, align 16, !dbg !30
  %.extract133 = load i32, ptr addrspace(3) %237, align 16, !dbg !30
  %.extract135 = load i32, ptr addrspace(3) %269, align 4, !dbg !30
  %.extract137 = load i32, ptr addrspace(3) %270, align 8, !dbg !30
  %.extract139 = load i32, ptr addrspace(3) %271, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract133, i32 %.extract135, i32 %.extract137, i32 %.extract139, ptr addrspace(1) %504, i1 %274) #2, !dbg !30
  %.extract141 = extractelement <4 x i32> %524, i64 0, !dbg !30
  %.extract143 = extractelement <4 x i32> %524, i64 1, !dbg !30
  %.extract145 = extractelement <4 x i32> %524, i64 2, !dbg !30
  %.extract147 = extractelement <4 x i32> %524, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract141, i32 %.extract143, i32 %.extract145, i32 %.extract147, ptr addrspace(1) %505, i1 %275) #2, !dbg !30
  %.extract149 = extractelement <4 x i32> %525, i64 0, !dbg !30
  %.extract151 = extractelement <4 x i32> %525, i64 1, !dbg !30
  %.extract153 = extractelement <4 x i32> %525, i64 2, !dbg !30
  %.extract155 = extractelement <4 x i32> %525, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract149, i32 %.extract151, i32 %.extract153, i32 %.extract155, ptr addrspace(1) %506, i1 %276) #2, !dbg !30
  %.extract157 = extractelement <4 x i32> %526, i64 0, !dbg !30
  %.extract159 = extractelement <4 x i32> %526, i64 1, !dbg !30
  %.extract161 = extractelement <4 x i32> %526, i64 2, !dbg !30
  %.extract163 = extractelement <4 x i32> %526, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract157, i32 %.extract159, i32 %.extract161, i32 %.extract163, ptr addrspace(1) %507, i1 %277) #2, !dbg !30
  %527 = or disjoint i64 %indvars.iv, %37, !dbg !25
  %528 = or disjoint i64 %527, %.idx, !dbg !25
  %529 = or disjoint i64 %527, %.idx2, !dbg !25
  %530 = or disjoint i64 %527, %.idx3, !dbg !25
  %531 = or disjoint i64 %527, %.idx4, !dbg !25
  %532 = getelementptr bfloat, ptr addrspace(1) %156, i64 %528, !dbg !25
  %533 = getelementptr bfloat, ptr addrspace(1) %156, i64 %529, !dbg !25
  %534 = getelementptr bfloat, ptr addrspace(1) %156, i64 %530, !dbg !25
  %535 = getelementptr bfloat, ptr addrspace(1) %156, i64 %531, !dbg !25
  %536 = and i1 %55, %273, !dbg !25
  %537 = and i1 %56, %273, !dbg !25
  %538 = and i1 %57, %273, !dbg !25
  %539 = and i1 %58, %273, !dbg !25
  %540 = select i1 %536, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %532, i32 %540) #2, !dbg !25
  %541 = select i1 %537, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %533, i32 %541) #2, !dbg !25
  %542 = select i1 %538, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %534, i32 %542) #2, !dbg !25
  %543 = select i1 %539, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %535, i32 %543) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  br i1 %273, label %272, label %544, !dbg !27

544:                                              ; preds = %272
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %545 = sext i32 %63 to i64, !dbg !31
  %546 = getelementptr float, ptr addrspace(1) %6, i64 %545, !dbg !31
  %547 = getelementptr float, ptr addrspace(1) %546, i64 %42, !dbg !32
  %548 = getelementptr float, ptr addrspace(1) %546, i64 %43, !dbg !32
  %549 = getelementptr float, ptr addrspace(1) %546, i64 %44, !dbg !32
  %550 = getelementptr float, ptr addrspace(1) %546, i64 %45, !dbg !32
  %551 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %547, i1 %55) #2, !dbg !32
  %552 = bitcast i32 %551 to float, !dbg !32
  %553 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %548, i1 %56) #2, !dbg !32
  %554 = bitcast i32 %553 to float, !dbg !32
  %555 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %549, i1 %57) #2, !dbg !32
  %556 = bitcast i32 %555 to float, !dbg !32
  %557 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %550, i1 %58) #2, !dbg !32
  %558 = bitcast i32 %557 to float, !dbg !32
  %559 = fmul float %552, 0x3FF7154760000000, !dbg !33
  %560 = tail call float @llvm.nvvm.ex2.approx.f(float %559), !dbg !33
  %561 = fmul float %554, 0x3FF7154760000000, !dbg !33
  %562 = tail call float @llvm.nvvm.ex2.approx.f(float %561), !dbg !33
  %563 = fmul float %556, 0x3FF7154760000000, !dbg !33
  %564 = tail call float @llvm.nvvm.ex2.approx.f(float %563), !dbg !33
  %565 = fmul float %558, 0x3FF7154760000000, !dbg !33
  %566 = tail call float @llvm.nvvm.ex2.approx.f(float %565), !dbg !33
  %567 = getelementptr bfloat, ptr addrspace(1) %0, i64 %155, !dbg !34
  %568 = getelementptr bfloat, ptr addrspace(1) %3, i64 %155, !dbg !35
  %569 = getelementptr bfloat, ptr addrspace(1) %567, i64 %158, !dbg !36
  %570 = getelementptr bfloat, ptr addrspace(1) %567, i64 %159, !dbg !36
  %571 = getelementptr bfloat, ptr addrspace(1) %567, i64 %160, !dbg !36
  %572 = getelementptr bfloat, ptr addrspace(1) %567, i64 %161, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %569, i32 %175) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %570, i32 %176) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %571, i32 %177) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %572, i32 %178) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %573 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %167
  %574 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %169
  %575 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %171
  %576 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 9216), i32 %173
  %577 = insertelement <8 x float> poison, float %560, i64 0, !dbg !37
  %578 = shufflevector <8 x float> %577, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %579 = insertelement <8 x float> poison, float %562, i64 0, !dbg !37
  %580 = shufflevector <8 x float> %579, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %581 = insertelement <8 x float> poison, float %564, i64 0, !dbg !37
  %582 = shufflevector <8 x float> %581, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %583 = insertelement <8 x float> poison, float %566, i64 0, !dbg !37
  %584 = shufflevector <8 x float> %583, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %585 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 4
  %586 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 8
  %587 = getelementptr inbounds nuw i8, ptr addrspace(3) %237, i32 12
  br label %588, !dbg !38

588:                                              ; preds = %544, %588
  %589 = phi i1 [ true, %544 ], [ false, %588 ]
  %indvars.iv164 = phi i64 [ 64, %544 ], [ 128, %588 ]
  %590 = phi i1 [ %55, %544 ], [ %864, %588 ]
  %591 = phi i1 [ %56, %544 ], [ %865, %588 ]
  %592 = phi i1 [ %57, %544 ], [ %866, %588 ]
  %593 = phi i1 [ %58, %544 ], [ %867, %588 ]
  %594 = phi i64 [ %158, %544 ], [ %856, %588 ]
  %595 = phi i64 [ %159, %544 ], [ %857, %588 ]
  %596 = phi i64 [ %160, %544 ], [ %858, %588 ]
  %597 = phi i64 [ %161, %544 ], [ %859, %588 ]
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  %598 = load <8 x bfloat>, ptr addrspace(3) %573, align 16, !dbg !36
  %599 = fmul <8 x bfloat> %598, %259, !dbg !39
  %600 = fpext <8 x bfloat> %599 to <8 x float>, !dbg !37
  %601 = fmul <8 x float> %578, %600, !dbg !37
  %602 = fptrunc <8 x float> %601 to <8 x bfloat>, !dbg !40
  %603 = load <8 x bfloat>, ptr addrspace(3) %574, align 16, !dbg !36
  %604 = fmul <8 x bfloat> %603, %262, !dbg !39
  %605 = fpext <8 x bfloat> %604 to <8 x float>, !dbg !37
  %606 = fmul <8 x float> %580, %605, !dbg !37
  %607 = fptrunc <8 x float> %606 to <8 x bfloat>, !dbg !40
  %608 = load <8 x bfloat>, ptr addrspace(3) %575, align 16, !dbg !36
  %609 = fmul <8 x bfloat> %608, %265, !dbg !39
  %610 = fpext <8 x bfloat> %609 to <8 x float>, !dbg !37
  %611 = fmul <8 x float> %582, %610, !dbg !37
  %612 = fptrunc <8 x float> %611 to <8 x bfloat>, !dbg !40
  %613 = load <8 x bfloat>, ptr addrspace(3) %576, align 16, !dbg !36
  %614 = fmul <8 x bfloat> %613, %268, !dbg !39
  %615 = fpext <8 x bfloat> %614 to <8 x float>, !dbg !37
  %616 = fmul <8 x float> %584, %615, !dbg !37
  %617 = fptrunc <8 x float> %616 to <8 x bfloat>, !dbg !40
  store <8 x bfloat> %602, ptr addrspace(3) %179, align 16, !dbg !40
  store <8 x bfloat> %607, ptr addrspace(3) %180, align 16, !dbg !40
  store <8 x bfloat> %612, ptr addrspace(3) %181, align 16, !dbg !40
  store <8 x bfloat> %617, ptr addrspace(3) %182, align 16, !dbg !40
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !41
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !41
  %618 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !41
  %619 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %186, i64 %190) #2, !dbg !41
  %620 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 0, !dbg !41
  %621 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 1, !dbg !41
  %622 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 2, !dbg !41
  %623 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 3, !dbg !41
  %624 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 4, !dbg !41
  %625 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 5, !dbg !41
  %626 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 6, !dbg !41
  %627 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 7, !dbg !41
  %628 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 8, !dbg !41
  %629 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 9, !dbg !41
  %630 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 10, !dbg !41
  %631 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 11, !dbg !41
  %632 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 12, !dbg !41
  %633 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 13, !dbg !41
  %634 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 14, !dbg !41
  %635 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 15, !dbg !41
  %636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 16, !dbg !41
  %637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 17, !dbg !41
  %638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 18, !dbg !41
  %639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 19, !dbg !41
  %640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 20, !dbg !41
  %641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 21, !dbg !41
  %642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 22, !dbg !41
  %643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 23, !dbg !41
  %644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 24, !dbg !41
  %645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 25, !dbg !41
  %646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 26, !dbg !41
  %647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 27, !dbg !41
  %648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 28, !dbg !41
  %649 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 29, !dbg !41
  %650 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 30, !dbg !41
  %651 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %619, 31, !dbg !41
  %652 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %620, float %621, float %622, float %623, float %624, float %625, float %626, float %627, float %628, float %629, float %630, float %631, float %632, float %633, float %634, float %635, float %636, float %637, float %638, float %639, float %640, float %641, float %642, float %643, float %644, float %645, float %646, float %647, float %648, float %649, float %650, float %651, i64 %194, i64 %198, i1 true) #2, !dbg !41
  %653 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 0, !dbg !41
  %654 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 1, !dbg !41
  %655 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 2, !dbg !41
  %656 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 3, !dbg !41
  %657 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 4, !dbg !41
  %658 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 5, !dbg !41
  %659 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 6, !dbg !41
  %660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 7, !dbg !41
  %661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 8, !dbg !41
  %662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 9, !dbg !41
  %663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 10, !dbg !41
  %664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 11, !dbg !41
  %665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 12, !dbg !41
  %666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 13, !dbg !41
  %667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 14, !dbg !41
  %668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 15, !dbg !41
  %669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 16, !dbg !41
  %670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 17, !dbg !41
  %671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 18, !dbg !41
  %672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 19, !dbg !41
  %673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 20, !dbg !41
  %674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 21, !dbg !41
  %675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 22, !dbg !41
  %676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 23, !dbg !41
  %677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 24, !dbg !41
  %678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 25, !dbg !41
  %679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 26, !dbg !41
  %680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 27, !dbg !41
  %681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 28, !dbg !41
  %682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 29, !dbg !41
  %683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 30, !dbg !41
  %684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %652, 31, !dbg !41
  %685 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %653, float %654, float %655, float %656, float %657, float %658, float %659, float %660, float %661, float %662, float %663, float %664, float %665, float %666, float %667, float %668, float %669, float %670, float %671, float %672, float %673, float %674, float %675, float %676, float %677, float %678, float %679, float %680, float %681, float %682, float %683, float %684, i64 %202, i64 %206, i1 true) #2, !dbg !41
  %686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 0, !dbg !41
  %687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 1, !dbg !41
  %688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 2, !dbg !41
  %689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 3, !dbg !41
  %690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 4, !dbg !41
  %691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 5, !dbg !41
  %692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 6, !dbg !41
  %693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 7, !dbg !41
  %694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 8, !dbg !41
  %695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 9, !dbg !41
  %696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 10, !dbg !41
  %697 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 11, !dbg !41
  %698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 12, !dbg !41
  %699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 13, !dbg !41
  %700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 14, !dbg !41
  %701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 15, !dbg !41
  %702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 16, !dbg !41
  %703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 17, !dbg !41
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 18, !dbg !41
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 19, !dbg !41
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 20, !dbg !41
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 21, !dbg !41
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 22, !dbg !41
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 23, !dbg !41
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 24, !dbg !41
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 25, !dbg !41
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 26, !dbg !41
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 27, !dbg !41
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 28, !dbg !41
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 29, !dbg !41
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 30, !dbg !41
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %685, 31, !dbg !41
  %718 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %686, float %687, float %688, float %689, float %690, float %691, float %692, float %693, float %694, float %695, float %696, float %697, float %698, float %699, float %700, float %701, float %702, float %703, float %704, float %705, float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, i64 %210, i64 %214, i1 true) #2, !dbg !41
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 0, !dbg !41
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 1, !dbg !41
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 2, !dbg !41
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 3, !dbg !41
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 4, !dbg !41
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 5, !dbg !41
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 6, !dbg !41
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 7, !dbg !41
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 8, !dbg !41
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 9, !dbg !41
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 10, !dbg !41
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 11, !dbg !41
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 12, !dbg !41
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 13, !dbg !41
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 14, !dbg !41
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 15, !dbg !41
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 16, !dbg !41
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 17, !dbg !41
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 18, !dbg !41
  %738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 19, !dbg !41
  %739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 20, !dbg !41
  %740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 21, !dbg !41
  %741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 22, !dbg !41
  %742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 23, !dbg !41
  %743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 24, !dbg !41
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 25, !dbg !41
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 26, !dbg !41
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 27, !dbg !41
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 28, !dbg !41
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 29, !dbg !41
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 30, !dbg !41
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %718, 31, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !41
  %751 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %719, float %720, float %721, float %722, float %723, float %724, float %725, float %726, float %727, float %728, float %729, float %730, float %731, float %732, float %733, float %734, float %735, float %736, float %737, float %738, float %739, float %740, float %741, float %742, float %743, float %744, float %745, float %746, float %747, float %748, float %749, float %750, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 17408), i32 0, i32 0, ptr addrspace(3) @global_smem, i32 0, i32 0) #2, !dbg !41
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 0, !dbg !41
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 1, !dbg !41
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 2, !dbg !41
  %755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 3, !dbg !41
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 4, !dbg !41
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 5, !dbg !41
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 6, !dbg !41
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 7, !dbg !41
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 8, !dbg !41
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 9, !dbg !41
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 10, !dbg !41
  %763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 11, !dbg !41
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 12, !dbg !41
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 13, !dbg !41
  %766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 14, !dbg !41
  %767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 15, !dbg !41
  %768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 16, !dbg !41
  %769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 17, !dbg !41
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 18, !dbg !41
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 19, !dbg !41
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 20, !dbg !41
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 21, !dbg !41
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 22, !dbg !41
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 23, !dbg !41
  %776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 24, !dbg !41
  %777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 25, !dbg !41
  %778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 26, !dbg !41
  %779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 27, !dbg !41
  %780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 28, !dbg !41
  %781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 29, !dbg !41
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 30, !dbg !41
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %751, 31, !dbg !41
  %784 = insertelement <2 x float> poison, float %752, i64 0, !dbg !42
  %785 = insertelement <2 x float> %784, float %753, i64 1, !dbg !42
  %786 = fptrunc <2 x float> %785 to <2 x bfloat>, !dbg !42
  %787 = insertelement <2 x float> poison, float %754, i64 0, !dbg !42
  %788 = insertelement <2 x float> %787, float %755, i64 1, !dbg !42
  %789 = fptrunc <2 x float> %788 to <2 x bfloat>, !dbg !42
  %790 = insertelement <2 x float> poison, float %756, i64 0, !dbg !42
  %791 = insertelement <2 x float> %790, float %757, i64 1, !dbg !42
  %792 = fptrunc <2 x float> %791 to <2 x bfloat>, !dbg !42
  %793 = insertelement <2 x float> poison, float %758, i64 0, !dbg !42
  %794 = insertelement <2 x float> %793, float %759, i64 1, !dbg !42
  %795 = fptrunc <2 x float> %794 to <2 x bfloat>, !dbg !42
  %796 = insertelement <2 x float> poison, float %760, i64 0, !dbg !42
  %797 = insertelement <2 x float> %796, float %761, i64 1, !dbg !42
  %798 = fptrunc <2 x float> %797 to <2 x bfloat>, !dbg !42
  %799 = insertelement <2 x float> poison, float %762, i64 0, !dbg !42
  %800 = insertelement <2 x float> %799, float %763, i64 1, !dbg !42
  %801 = fptrunc <2 x float> %800 to <2 x bfloat>, !dbg !42
  %802 = insertelement <2 x float> poison, float %764, i64 0, !dbg !42
  %803 = insertelement <2 x float> %802, float %765, i64 1, !dbg !42
  %804 = fptrunc <2 x float> %803 to <2 x bfloat>, !dbg !42
  %805 = insertelement <2 x float> poison, float %766, i64 0, !dbg !42
  %806 = insertelement <2 x float> %805, float %767, i64 1, !dbg !42
  %807 = fptrunc <2 x float> %806 to <2 x bfloat>, !dbg !42
  %808 = insertelement <2 x float> poison, float %768, i64 0, !dbg !42
  %809 = insertelement <2 x float> %808, float %769, i64 1, !dbg !42
  %810 = fptrunc <2 x float> %809 to <2 x bfloat>, !dbg !42
  %811 = insertelement <2 x float> poison, float %770, i64 0, !dbg !42
  %812 = insertelement <2 x float> %811, float %771, i64 1, !dbg !42
  %813 = fptrunc <2 x float> %812 to <2 x bfloat>, !dbg !42
  %814 = insertelement <2 x float> poison, float %772, i64 0, !dbg !42
  %815 = insertelement <2 x float> %814, float %773, i64 1, !dbg !42
  %816 = fptrunc <2 x float> %815 to <2 x bfloat>, !dbg !42
  %817 = insertelement <2 x float> poison, float %774, i64 0, !dbg !42
  %818 = insertelement <2 x float> %817, float %775, i64 1, !dbg !42
  %819 = fptrunc <2 x float> %818 to <2 x bfloat>, !dbg !42
  %820 = insertelement <2 x float> poison, float %776, i64 0, !dbg !42
  %821 = insertelement <2 x float> %820, float %777, i64 1, !dbg !42
  %822 = fptrunc <2 x float> %821 to <2 x bfloat>, !dbg !42
  %823 = insertelement <2 x float> poison, float %778, i64 0, !dbg !42
  %824 = insertelement <2 x float> %823, float %779, i64 1, !dbg !42
  %825 = fptrunc <2 x float> %824 to <2 x bfloat>, !dbg !42
  %826 = insertelement <2 x float> poison, float %780, i64 0, !dbg !42
  %827 = insertelement <2 x float> %826, float %781, i64 1, !dbg !42
  %828 = fptrunc <2 x float> %827 to <2 x bfloat>, !dbg !42
  %829 = insertelement <2 x float> poison, float %782, i64 0, !dbg !42
  %830 = insertelement <2 x float> %829, float %783, i64 1, !dbg !42
  %831 = fptrunc <2 x float> %830 to <2 x bfloat>, !dbg !42
  %832 = getelementptr bfloat, ptr addrspace(1) %568, i64 %594, !dbg !43
  %833 = getelementptr bfloat, ptr addrspace(1) %568, i64 %595, !dbg !43
  %834 = getelementptr bfloat, ptr addrspace(1) %568, i64 %596, !dbg !43
  %835 = getelementptr bfloat, ptr addrspace(1) %568, i64 %597, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %836 = bitcast <2 x bfloat> %786 to i32, !dbg !43
  %837 = bitcast <2 x bfloat> %789 to i32, !dbg !43
  %838 = bitcast <2 x bfloat> %792 to i32, !dbg !43
  %839 = bitcast <2 x bfloat> %795 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %228, i32 %836, i32 %837, i32 %838, i32 %839) #2, !dbg !43
  %840 = bitcast <2 x bfloat> %798 to i32, !dbg !43
  %841 = bitcast <2 x bfloat> %801 to i32, !dbg !43
  %842 = bitcast <2 x bfloat> %804 to i32, !dbg !43
  %843 = bitcast <2 x bfloat> %807 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %230, i32 %840, i32 %841, i32 %842, i32 %843) #2, !dbg !43
  %844 = bitcast <2 x bfloat> %810 to i32, !dbg !43
  %845 = bitcast <2 x bfloat> %813 to i32, !dbg !43
  %846 = bitcast <2 x bfloat> %816 to i32, !dbg !43
  %847 = bitcast <2 x bfloat> %819 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %232, i32 %844, i32 %845, i32 %846, i32 %847) #2, !dbg !43
  %848 = bitcast <2 x bfloat> %822 to i32, !dbg !43
  %849 = bitcast <2 x bfloat> %825 to i32, !dbg !43
  %850 = bitcast <2 x bfloat> %828 to i32, !dbg !43
  %851 = bitcast <2 x bfloat> %831 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %234, i32 %848, i32 %849, i32 %850, i32 %851) #2, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %852 = load <4 x i32>, ptr addrspace(3) %242, align 16, !dbg !43
  %853 = load <4 x i32>, ptr addrspace(3) %247, align 16, !dbg !43
  %854 = load <4 x i32>, ptr addrspace(3) %252, align 16, !dbg !43
  %.extract = load i32, ptr addrspace(3) %237, align 16, !dbg !43
  %.extract103 = load i32, ptr addrspace(3) %585, align 4, !dbg !43
  %.extract105 = load i32, ptr addrspace(3) %586, align 8, !dbg !43
  %.extract107 = load i32, ptr addrspace(3) %587, align 4, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract103, i32 %.extract105, i32 %.extract107, ptr addrspace(1) %832, i1 %590) #2, !dbg !43
  %.extract109 = extractelement <4 x i32> %852, i64 0, !dbg !43
  %.extract111 = extractelement <4 x i32> %852, i64 1, !dbg !43
  %.extract113 = extractelement <4 x i32> %852, i64 2, !dbg !43
  %.extract115 = extractelement <4 x i32> %852, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract109, i32 %.extract111, i32 %.extract113, i32 %.extract115, ptr addrspace(1) %833, i1 %591) #2, !dbg !43
  %.extract117 = extractelement <4 x i32> %853, i64 0, !dbg !43
  %.extract119 = extractelement <4 x i32> %853, i64 1, !dbg !43
  %.extract121 = extractelement <4 x i32> %853, i64 2, !dbg !43
  %.extract123 = extractelement <4 x i32> %853, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract117, i32 %.extract119, i32 %.extract121, i32 %.extract123, ptr addrspace(1) %834, i1 %592) #2, !dbg !43
  %.extract125 = extractelement <4 x i32> %854, i64 0, !dbg !43
  %.extract127 = extractelement <4 x i32> %854, i64 1, !dbg !43
  %.extract129 = extractelement <4 x i32> %854, i64 2, !dbg !43
  %.extract131 = extractelement <4 x i32> %854, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract125, i32 %.extract127, i32 %.extract129, i32 %.extract131, ptr addrspace(1) %835, i1 %593) #2, !dbg !43
  %855 = or disjoint i64 %indvars.iv164, %37, !dbg !36
  %856 = or disjoint i64 %855, %.idx, !dbg !36
  %857 = or disjoint i64 %855, %.idx2, !dbg !36
  %858 = or disjoint i64 %855, %.idx3, !dbg !36
  %859 = or disjoint i64 %855, %.idx4, !dbg !36
  %860 = getelementptr bfloat, ptr addrspace(1) %567, i64 %856, !dbg !36
  %861 = getelementptr bfloat, ptr addrspace(1) %567, i64 %857, !dbg !36
  %862 = getelementptr bfloat, ptr addrspace(1) %567, i64 %858, !dbg !36
  %863 = getelementptr bfloat, ptr addrspace(1) %567, i64 %859, !dbg !36
  %864 = and i1 %55, %589, !dbg !36
  %865 = and i1 %56, %589, !dbg !36
  %866 = and i1 %57, %589, !dbg !36
  %867 = and i1 %58, %589, !dbg !36
  %868 = select i1 %864, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %860, i32 %868) #2, !dbg !36
  %869 = select i1 %865, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %861, i32 %869) #2, !dbg !36
  %870 = select i1 %866, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %862, i32 %870) #2, !dbg !36
  %871 = select i1 %867, i32 16, i32 0, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %863, i32 %871) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  br i1 %589, label %588, label %872, !dbg !38

872:                                              ; preds = %588
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #5

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "wy_fast.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "recompute_w_u_fwd_kernel", linkageName: "recompute_w_u_fwd_kernel", scope: !1, file: !1, line: 144, type: !6, scopeLine: 144, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 166, column: 30, scope: !5)
!9 = !DILocation(line: 166, column: 48, scope: !5)
!10 = !DILocation(line: 173, column: 25, scope: !5)
!11 = !DILocation(line: 167, column: 33, scope: !5)
!12 = !DILocation(line: 174, column: 42, scope: !5)
!13 = !DILocation(line: 174, column: 38, scope: !5)
!14 = !DILocation(line: 174, column: 46, scope: !5)
!15 = !DILocation(line: 174, column: 70, scope: !5)
!16 = !DILocation(line: 174, column: 83, scope: !5)
!17 = !DILocation(line: 175, column: 21, scope: !5)
!18 = !DILocation(line: 177, column: 41, scope: !5)
!19 = !DILocation(line: 177, column: 48, scope: !5)
!20 = !DILocation(line: 177, column: 32, scope: !5)
!21 = !DILocation(line: 178, column: 18, scope: !5)
!22 = !DILocation(line: 181, column: 52, scope: !5)
!23 = !DILocation(line: 181, column: 36, scope: !5)
!24 = !DILocation(line: 182, column: 36, scope: !5)
!25 = !DILocation(line: 183, column: 22, scope: !5)
!26 = !DILocation(line: 184, column: 22, scope: !5)
!27 = !DILocation(line: 180, column: 21, scope: !5)
!28 = !DILocation(line: 185, column: 26, scope: !5)
!29 = !DILocation(line: 186, column: 29, scope: !5)
!30 = !DILocation(line: 186, column: 22, scope: !5)
!31 = !DILocation(line: 189, column: 37, scope: !5)
!32 = !DILocation(line: 190, column: 26, scope: !5)
!33 = !DILocation(line: 190, column: 18, scope: !5)
!34 = !DILocation(line: 193, column: 36, scope: !5)
!35 = !DILocation(line: 194, column: 36, scope: !5)
!36 = !DILocation(line: 195, column: 22, scope: !5)
!37 = !DILocation(line: 198, column: 20, scope: !5)
!38 = !DILocation(line: 192, column: 21, scope: !5)
!39 = !DILocation(line: 196, column: 21, scope: !5)
!40 = !DILocation(line: 202, column: 34, scope: !5)
!41 = !DILocation(line: 202, column: 26, scope: !5)
!42 = !DILocation(line: 203, column: 29, scope: !5)
!43 = !DILocation(line: 203, column: 22, scope: !5)
!44 = !DILocation(line: 192, column: 4, scope: !5)
