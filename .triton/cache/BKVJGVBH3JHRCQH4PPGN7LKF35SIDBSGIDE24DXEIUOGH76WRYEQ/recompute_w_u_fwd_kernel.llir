; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @recompute_w_u_fwd_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = and i32 %11, 65504, !dbg !10
  %13 = and i32 %11, 31, !dbg !11
  %14 = mul i32 %12, %7, !dbg !12
  %15 = sext i32 %14 to i64, !dbg !13
  %16 = getelementptr bfloat, ptr addrspace(1) %2, i64 %15, !dbg !13
  %17 = zext nneg i32 %13 to i64, !dbg !14
  %18 = getelementptr bfloat, ptr addrspace(1) %16, i64 %17, !dbg !14
  %19 = shl i32 %10, 6, !dbg !15
  %20 = sext i32 %7 to i64, !dbg !16
  %21 = sext i32 %19 to i64, !dbg !16
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !17
  %23 = lshr i32 %22, 5, !dbg !17
  %24 = and i32 %22, 32, !dbg !17
  %25 = icmp eq i32 %24, 0, !dbg !17
  %26 = lshr i32 %22, 3, !dbg !17
  %27 = and i32 %26, 15, !dbg !17
  %28 = or disjoint i32 %27, 16, !dbg !17
  %29 = or disjoint i32 %27, 32, !dbg !17
  %30 = or disjoint i32 %27, 48, !dbg !17
  %31 = shl nuw nsw i32 %22, 3, !dbg !17
  %32 = and i32 %31, 56, !dbg !17
  %33 = zext nneg i32 %27 to i64, !dbg !17
  %34 = zext nneg i32 %28 to i64, !dbg !17
  %35 = zext nneg i32 %29 to i64, !dbg !17
  %36 = zext nneg i32 %30 to i64, !dbg !17
  %37 = zext nneg i32 %32 to i64, !dbg !17
  %38 = or disjoint i64 %33, %21, !dbg !17
  %39 = or disjoint i64 %34, %21, !dbg !17
  %40 = or disjoint i64 %35, %21, !dbg !17
  %41 = or disjoint i64 %36, %21, !dbg !17
  %42 = shl nsw i64 %38, 5, !dbg !17
  %43 = shl nsw i64 %39, 5, !dbg !17
  %44 = shl nsw i64 %40, 5, !dbg !17
  %45 = shl nsw i64 %41, 5, !dbg !17
  %46 = getelementptr bfloat, ptr addrspace(1) %18, i64 %42, !dbg !17
  %47 = getelementptr bfloat, ptr addrspace(1) %18, i64 %43, !dbg !17
  %48 = getelementptr bfloat, ptr addrspace(1) %18, i64 %44, !dbg !17
  %49 = getelementptr bfloat, ptr addrspace(1) %18, i64 %45, !dbg !17
  %50 = icmp sgt i32 %19, -1, !dbg !17
  %51 = icmp slt i64 %38, %20, !dbg !17
  %52 = icmp slt i64 %39, %20, !dbg !17
  %53 = icmp slt i64 %40, %20, !dbg !17
  %54 = icmp slt i64 %41, %20, !dbg !17
  %55 = and i1 %50, %51, !dbg !17
  %56 = and i1 %50, %52, !dbg !17
  %57 = and i1 %50, %53, !dbg !17
  %58 = and i1 %50, %54, !dbg !17
  %59 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %55) #2, !dbg !17
  %60 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %47, i1 %56) #2, !dbg !17
  %61 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %48, i1 %57) #2, !dbg !17
  %62 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %49, i1 %58) #2, !dbg !17
  %63 = or disjoint i32 %14, %13, !dbg !18
  %64 = shl i32 %63, 6, !dbg !19
  %65 = sext i32 %64 to i64, !dbg !20
  %66 = getelementptr bfloat, ptr addrspace(1) %5, i64 %65, !dbg !20
  %.idx = shl nsw i64 %38, 12, !dbg !21
  %67 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx, !dbg !21
  %68 = getelementptr bfloat, ptr addrspace(1) %67, i64 %37, !dbg !21
  %.idx2 = shl nsw i64 %39, 12, !dbg !21
  %69 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx2, !dbg !21
  %70 = getelementptr bfloat, ptr addrspace(1) %69, i64 %37, !dbg !21
  %.idx3 = shl nsw i64 %40, 12, !dbg !21
  %71 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx3, !dbg !21
  %72 = getelementptr bfloat, ptr addrspace(1) %71, i64 %37, !dbg !21
  %.idx4 = shl nsw i64 %41, 12, !dbg !21
  %73 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx4, !dbg !21
  %74 = getelementptr bfloat, ptr addrspace(1) %73, i64 %37, !dbg !21
  %75 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %68, i1 %55) #2, !dbg !21
  %76 = extractvalue { i32, i32, i32, i32 } %75, 0, !dbg !21
  %77 = bitcast i32 %76 to <2 x bfloat>, !dbg !21
  %78 = extractvalue { i32, i32, i32, i32 } %75, 1, !dbg !21
  %79 = bitcast i32 %78 to <2 x bfloat>, !dbg !21
  %80 = extractvalue { i32, i32, i32, i32 } %75, 2, !dbg !21
  %81 = bitcast i32 %80 to <2 x bfloat>, !dbg !21
  %82 = shufflevector <2 x bfloat> %81, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %83 = extractvalue { i32, i32, i32, i32 } %75, 3, !dbg !21
  %84 = bitcast i32 %83 to <2 x bfloat>, !dbg !21
  %85 = shufflevector <2 x bfloat> %84, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %86 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %70, i1 %56) #2, !dbg !21
  %87 = extractvalue { i32, i32, i32, i32 } %86, 0, !dbg !21
  %88 = bitcast i32 %87 to <2 x bfloat>, !dbg !21
  %89 = extractvalue { i32, i32, i32, i32 } %86, 1, !dbg !21
  %90 = bitcast i32 %89 to <2 x bfloat>, !dbg !21
  %91 = extractvalue { i32, i32, i32, i32 } %86, 2, !dbg !21
  %92 = bitcast i32 %91 to <2 x bfloat>, !dbg !21
  %93 = shufflevector <2 x bfloat> %92, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %94 = extractvalue { i32, i32, i32, i32 } %86, 3, !dbg !21
  %95 = bitcast i32 %94 to <2 x bfloat>, !dbg !21
  %96 = shufflevector <2 x bfloat> %95, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %97 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %72, i1 %57) #2, !dbg !21
  %98 = extractvalue { i32, i32, i32, i32 } %97, 0, !dbg !21
  %99 = bitcast i32 %98 to <2 x bfloat>, !dbg !21
  %100 = extractvalue { i32, i32, i32, i32 } %97, 1, !dbg !21
  %101 = bitcast i32 %100 to <2 x bfloat>, !dbg !21
  %102 = extractvalue { i32, i32, i32, i32 } %97, 2, !dbg !21
  %103 = bitcast i32 %102 to <2 x bfloat>, !dbg !21
  %104 = shufflevector <2 x bfloat> %103, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %105 = extractvalue { i32, i32, i32, i32 } %97, 3, !dbg !21
  %106 = bitcast i32 %105 to <2 x bfloat>, !dbg !21
  %107 = shufflevector <2 x bfloat> %106, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %108 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %74, i1 %58) #2, !dbg !21
  %109 = extractvalue { i32, i32, i32, i32 } %108, 0, !dbg !21
  %110 = bitcast i32 %109 to <2 x bfloat>, !dbg !21
  %111 = extractvalue { i32, i32, i32, i32 } %108, 1, !dbg !21
  %112 = bitcast i32 %111 to <2 x bfloat>, !dbg !21
  %113 = extractvalue { i32, i32, i32, i32 } %108, 2, !dbg !21
  %114 = bitcast i32 %113 to <2 x bfloat>, !dbg !21
  %115 = shufflevector <2 x bfloat> %114, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %116 = extractvalue { i32, i32, i32, i32 } %108, 3, !dbg !21
  %117 = bitcast i32 %116 to <2 x bfloat>, !dbg !21
  %118 = shufflevector <2 x bfloat> %117, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %119 = select i1 %25, i32 0, i32 288, !dbg !21
  %120 = and i32 %22, 24, !dbg !21
  %121 = mul nuw nsw i32 %120, 9, !dbg !21
  %122 = xor i32 %121, %32, !dbg !21
  %123 = xor i32 %122, %119, !dbg !21
  %124 = and i32 %31, 512, !dbg !21
  %125 = or disjoint i32 %123, %124, !dbg !21
  %126 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 %125, !dbg !21
  %127 = shufflevector <2 x bfloat> %77, <2 x bfloat> %79, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %128 = shufflevector <8 x bfloat> %127, <8 x bfloat> %82, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %129 = shufflevector <8 x bfloat> %128, <8 x bfloat> %85, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %129, ptr addrspace(3) %126, align 16, !dbg !21
  %130 = or disjoint i32 %32, 1024, !dbg !21
  %131 = xor i32 %121, %130, !dbg !21
  %132 = xor i32 %131, %119, !dbg !21
  %133 = or disjoint i32 %132, %124, !dbg !21
  %134 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 %133, !dbg !21
  %135 = shufflevector <2 x bfloat> %88, <2 x bfloat> %90, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %136 = shufflevector <8 x bfloat> %135, <8 x bfloat> %93, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %137 = shufflevector <8 x bfloat> %136, <8 x bfloat> %96, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %137, ptr addrspace(3) %134, align 16, !dbg !21
  %138 = or disjoint i32 %32, 2048, !dbg !21
  %139 = xor i32 %121, %138, !dbg !21
  %140 = xor i32 %139, %119, !dbg !21
  %141 = or disjoint i32 %140, %124, !dbg !21
  %142 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 %141, !dbg !21
  %143 = shufflevector <2 x bfloat> %99, <2 x bfloat> %101, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %144 = shufflevector <8 x bfloat> %143, <8 x bfloat> %104, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %145 = shufflevector <8 x bfloat> %144, <8 x bfloat> %107, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %145, ptr addrspace(3) %142, align 16, !dbg !21
  %146 = or disjoint i32 %32, 3072, !dbg !21
  %147 = xor i32 %121, %146, !dbg !21
  %148 = xor i32 %147, %119, !dbg !21
  %149 = or disjoint i32 %148, %124, !dbg !21
  %150 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 %149, !dbg !21
  %151 = shufflevector <2 x bfloat> %110, <2 x bfloat> %112, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %152 = shufflevector <8 x bfloat> %151, <8 x bfloat> %115, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %153 = shufflevector <8 x bfloat> %152, <8 x bfloat> %118, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %153, ptr addrspace(3) %150, align 16, !dbg !21
  %154 = shl i32 %63, 7, !dbg !22
  %155 = sext i32 %154 to i64, !dbg !23
  %156 = getelementptr bfloat, ptr addrspace(1) %1, i64 %155, !dbg !23
  %157 = getelementptr bfloat, ptr addrspace(1) %4, i64 %155, !dbg !24
  %158 = or disjoint i64 %.idx, %37, !dbg !25
  %159 = or disjoint i64 %.idx2, %37, !dbg !25
  %160 = or disjoint i64 %.idx3, %37, !dbg !25
  %161 = or disjoint i64 %.idx4, %37, !dbg !25
  %162 = getelementptr bfloat, ptr addrspace(1) %156, i64 %158, !dbg !25
  %163 = getelementptr bfloat, ptr addrspace(1) %156, i64 %159, !dbg !25
  %164 = getelementptr bfloat, ptr addrspace(1) %156, i64 %160, !dbg !25
  %165 = getelementptr bfloat, ptr addrspace(1) %156, i64 %161, !dbg !25
  %166 = shl nuw nsw i32 %27, 6, !dbg !25
  %167 = or disjoint i32 %166, %32, !dbg !25
  %168 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %167, !dbg !25
  %169 = or disjoint i32 %167, 1024, !dbg !25
  %170 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %169, !dbg !25
  %171 = or disjoint i32 %167, 2048, !dbg !25
  %172 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %171, !dbg !25
  %173 = or disjoint i32 %167, 3072, !dbg !25
  %174 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %173, !dbg !25
  %175 = select i1 %55, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %162, i32 %175) #2, !dbg !25
  %176 = select i1 %56, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %163, i32 %176) #2, !dbg !25
  %177 = select i1 %57, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %164, i32 %177) #2, !dbg !25
  %178 = select i1 %58, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %165, i32 %178) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %179 = or disjoint i64 %37, 64, !dbg !25
  %180 = or disjoint i64 %.idx, %179, !dbg !25
  %181 = or disjoint i64 %.idx2, %179, !dbg !25
  %182 = or disjoint i64 %.idx3, %179, !dbg !25
  %183 = or disjoint i64 %.idx4, %179, !dbg !25
  %184 = getelementptr bfloat, ptr addrspace(1) %156, i64 %180, !dbg !25
  %185 = getelementptr bfloat, ptr addrspace(1) %156, i64 %181, !dbg !25
  %186 = getelementptr bfloat, ptr addrspace(1) %156, i64 %182, !dbg !25
  %187 = getelementptr bfloat, ptr addrspace(1) %156, i64 %183, !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %188 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %167, !dbg !25
  %189 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %169, !dbg !25
  %190 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %171, !dbg !25
  %191 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %173, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %184, i32 %175) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %189, ptr addrspace(1) %185, i32 %176) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %190, ptr addrspace(1) %186, i32 %177) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %191, ptr addrspace(1) %187, i32 %178) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %192 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %125
  %193 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %133
  %194 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %141
  %195 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %149
  %196 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600) to i32), 4
  %197 = and i32 %196, 16383
  %198 = zext nneg i32 %197 to i64
  %199 = or disjoint i64 %198, 4611686293338849280
  %200 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384) to i32), 4
  %201 = and i32 %200, 16383
  %202 = zext nneg i32 %201 to i64
  %203 = or disjoint i64 %202, 4611686293338849280
  %204 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600) to i32), i32 32), 4
  %205 = and i32 %204, 16383
  %206 = zext nneg i32 %205 to i64
  %207 = or disjoint i64 %206, 4611686293338849280
  %208 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384) to i32), i32 2048), 4
  %209 = and i32 %208, 16383
  %210 = zext nneg i32 %209 to i64
  %211 = or disjoint i64 %210, 4611686293338849280
  %212 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600) to i32), i32 64), 4
  %213 = and i32 %212, 16383
  %214 = zext nneg i32 %213 to i64
  %215 = or disjoint i64 %214, 4611686293338849280
  %216 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384) to i32), i32 4096), 4
  %217 = and i32 %216, 16383
  %218 = zext nneg i32 %217 to i64
  %219 = or disjoint i64 %218, 4611686293338849280
  %220 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600) to i32), i32 96), 4
  %221 = and i32 %220, 16383
  %222 = zext nneg i32 %221 to i64
  %223 = or disjoint i64 %222, 4611686293338849280
  %224 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384) to i32), i32 6144), 4
  %225 = and i32 %224, 16383
  %226 = zext nneg i32 %225 to i64
  %227 = or disjoint i64 %226, 4611686293338849280
  %228 = shl nuw nsw i32 %22, 6
  %229 = and i32 %228, 960
  %230 = lshr i32 %22, 1
  %231 = and i32 %230, 8
  %232 = or disjoint i32 %229, %231
  %233 = shl nuw nsw i32 %22, 5
  %234 = and i32 %233, 3072
  %235 = or disjoint i32 %232, %234
  %236 = and i32 %31, 1016
  %237 = lshr exact i32 %235, 3
  %238 = and i32 %237, 504
  %239 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %238
  %240 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %239, i32 %235
  %241 = ptrtoint ptr addrspace(3) %240 to i32
  %242 = getelementptr inbounds nuw i8, ptr addrspace(3) %240, i32 32
  %243 = ptrtoint ptr addrspace(3) %242 to i32
  %244 = getelementptr inbounds nuw i8, ptr addrspace(3) %240, i32 64
  %245 = ptrtoint ptr addrspace(3) %244 to i32
  %246 = getelementptr inbounds nuw i8, ptr addrspace(3) %240, i32 96
  %247 = ptrtoint ptr addrspace(3) %246 to i32
  %248 = and i32 %22, 120
  %249 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %248
  %250 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %249, i32 %236
  %251 = or disjoint i32 %236, 1024
  %252 = lshr exact i32 %251, 3
  %253 = and i32 %252, 248
  %254 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %253
  %255 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %254, i32 %251
  %256 = or disjoint i32 %236, 2048
  %257 = lshr exact i32 %256, 3
  %258 = and i32 %257, 376
  %259 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %258
  %260 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %259, i32 %256
  %261 = or disjoint i32 %236, 3072
  %262 = lshr exact i32 %261, 3
  %263 = and i32 %262, 504
  %264 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %263
  %265 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %264, i32 %261
  %266 = insertelement <8 x i16> poison, i16 %59, i64 0, !dbg !26
  %267 = bitcast <8 x i16> %266 to <8 x bfloat>, !dbg !26
  %268 = shufflevector <8 x bfloat> %267, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %269 = insertelement <8 x i16> poison, i16 %60, i64 0, !dbg !26
  %270 = bitcast <8 x i16> %269 to <8 x bfloat>, !dbg !26
  %271 = shufflevector <8 x bfloat> %270, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %272 = insertelement <8 x i16> poison, i16 %61, i64 0, !dbg !26
  %273 = bitcast <8 x i16> %272 to <8 x bfloat>, !dbg !26
  %274 = shufflevector <8 x bfloat> %273, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %275 = insertelement <8 x i16> poison, i16 %62, i64 0, !dbg !26
  %276 = bitcast <8 x i16> %275 to <8 x bfloat>, !dbg !26
  %277 = shufflevector <8 x bfloat> %276, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %278 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 4
  %279 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 8
  %280 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 12
  br label %281, !dbg !27

281:                                              ; preds = %9, %281
  %282 = phi i1 [ true, %9 ], [ false, %281 ]
  %indvars.iv = phi i64 [ 128, %9 ], [ 192, %281 ]
  %283 = phi i1 [ %55, %9 ], [ false, %281 ]
  %284 = phi i1 [ %56, %9 ], [ false, %281 ]
  %285 = phi i1 [ %57, %9 ], [ false, %281 ]
  %286 = phi i1 [ %58, %9 ], [ false, %281 ]
  %287 = phi i1 [ %55, %9 ], [ %283, %281 ]
  %288 = phi i1 [ %56, %9 ], [ %284, %281 ]
  %289 = phi i1 [ %57, %9 ], [ %285, %281 ]
  %290 = phi i1 [ %58, %9 ], [ %286, %281 ]
  %291 = phi i64 [ %180, %9 ], [ %558, %281 ]
  %292 = phi i64 [ %181, %9 ], [ %559, %281 ]
  %293 = phi i64 [ %182, %9 ], [ %560, %281 ]
  %294 = phi i64 [ %183, %9 ], [ %561, %281 ]
  %295 = phi i64 [ %158, %9 ], [ %291, %281 ]
  %296 = phi i64 [ %159, %9 ], [ %292, %281 ]
  %297 = phi i64 [ %160, %9 ], [ %293, %281 ]
  %298 = phi i64 [ %161, %9 ], [ %294, %281 ]
  %299 = phi i32 [ -1, %9 ], [ %303, %281 ]
  %300 = phi i32 [ 1, %9 ], [ %556, %281 ]
  %301 = add i32 %299, 1, !dbg !27
  %302 = icmp sgt i32 %301, 1, !dbg !27
  %303 = select i1 %302, i32 0, i32 %301, !dbg !27
  tail call void @llvm.nvvm.cp.async.wait.group(i32 1), !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %.idx53 = shl i32 %303, 13, !dbg !25
  %304 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx53, !dbg !25
  %305 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %304, i32 %167, !dbg !25
  %306 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %304, i32 %169, !dbg !25
  %307 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %304, i32 %171, !dbg !25
  %308 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %304, i32 %173, !dbg !25
  %309 = load <8 x bfloat>, ptr addrspace(3) %305, align 16, !dbg !25
  %310 = fmul <8 x bfloat> %309, %268, !dbg !26
  %311 = load <8 x bfloat>, ptr addrspace(3) %306, align 16, !dbg !25
  %312 = fmul <8 x bfloat> %311, %271, !dbg !26
  %313 = load <8 x bfloat>, ptr addrspace(3) %307, align 16, !dbg !25
  %314 = fmul <8 x bfloat> %313, %274, !dbg !26
  %315 = load <8 x bfloat>, ptr addrspace(3) %308, align 16, !dbg !25
  %316 = fmul <8 x bfloat> %315, %277, !dbg !26
  store <8 x bfloat> %310, ptr addrspace(3) %192, align 16, !dbg !26
  store <8 x bfloat> %312, ptr addrspace(3) %193, align 16, !dbg !26
  store <8 x bfloat> %314, ptr addrspace(3) %194, align 16, !dbg !26
  store <8 x bfloat> %316, ptr addrspace(3) %195, align 16, !dbg !26
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !28
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !28
  %317 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !28
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !28
  %318 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %199, i64 %203) #2, !dbg !28
  %319 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 0, !dbg !28
  %320 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 1, !dbg !28
  %321 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 2, !dbg !28
  %322 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 3, !dbg !28
  %323 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 4, !dbg !28
  %324 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 5, !dbg !28
  %325 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 6, !dbg !28
  %326 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 7, !dbg !28
  %327 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 8, !dbg !28
  %328 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 9, !dbg !28
  %329 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 10, !dbg !28
  %330 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 11, !dbg !28
  %331 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 12, !dbg !28
  %332 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 13, !dbg !28
  %333 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 14, !dbg !28
  %334 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 15, !dbg !28
  %335 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 16, !dbg !28
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 17, !dbg !28
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 18, !dbg !28
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 19, !dbg !28
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 20, !dbg !28
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 21, !dbg !28
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 22, !dbg !28
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 23, !dbg !28
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 24, !dbg !28
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 25, !dbg !28
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 26, !dbg !28
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 27, !dbg !28
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 28, !dbg !28
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 29, !dbg !28
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 30, !dbg !28
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %318, 31, !dbg !28
  %351 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %319, float %320, float %321, float %322, float %323, float %324, float %325, float %326, float %327, float %328, float %329, float %330, float %331, float %332, float %333, float %334, float %335, float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, i64 %207, i64 %211, i1 true) #2, !dbg !28
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 0, !dbg !28
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 1, !dbg !28
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 2, !dbg !28
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 3, !dbg !28
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 4, !dbg !28
  %357 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 5, !dbg !28
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 6, !dbg !28
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 7, !dbg !28
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 8, !dbg !28
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 9, !dbg !28
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 10, !dbg !28
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 11, !dbg !28
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 12, !dbg !28
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 13, !dbg !28
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 14, !dbg !28
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 15, !dbg !28
  %368 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 16, !dbg !28
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 17, !dbg !28
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 18, !dbg !28
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 19, !dbg !28
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 20, !dbg !28
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 21, !dbg !28
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 22, !dbg !28
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 23, !dbg !28
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 24, !dbg !28
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 25, !dbg !28
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 26, !dbg !28
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 27, !dbg !28
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 28, !dbg !28
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 29, !dbg !28
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 30, !dbg !28
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %351, 31, !dbg !28
  %384 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %352, float %353, float %354, float %355, float %356, float %357, float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, float %368, float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, i64 %215, i64 %219, i1 true) #2, !dbg !28
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 0, !dbg !28
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 1, !dbg !28
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 2, !dbg !28
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 3, !dbg !28
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 4, !dbg !28
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 5, !dbg !28
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 6, !dbg !28
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 7, !dbg !28
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 8, !dbg !28
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 9, !dbg !28
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 10, !dbg !28
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 11, !dbg !28
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 12, !dbg !28
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 13, !dbg !28
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 14, !dbg !28
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 15, !dbg !28
  %401 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 16, !dbg !28
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 17, !dbg !28
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 18, !dbg !28
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 19, !dbg !28
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 20, !dbg !28
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 21, !dbg !28
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 22, !dbg !28
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 23, !dbg !28
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 24, !dbg !28
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 25, !dbg !28
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 26, !dbg !28
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 27, !dbg !28
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 28, !dbg !28
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 29, !dbg !28
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 30, !dbg !28
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %384, 31, !dbg !28
  %417 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, float %401, float %402, float %403, float %404, float %405, float %406, float %407, float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, i64 %223, i64 %227, i1 true) #2, !dbg !28
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 0, !dbg !28
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 1, !dbg !28
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 2, !dbg !28
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 3, !dbg !28
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 4, !dbg !28
  %423 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 5, !dbg !28
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 6, !dbg !28
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 7, !dbg !28
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 8, !dbg !28
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 9, !dbg !28
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 10, !dbg !28
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 11, !dbg !28
  %430 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 12, !dbg !28
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 13, !dbg !28
  %432 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 14, !dbg !28
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 15, !dbg !28
  %434 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 16, !dbg !28
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 17, !dbg !28
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 18, !dbg !28
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 19, !dbg !28
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 20, !dbg !28
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 21, !dbg !28
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 22, !dbg !28
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 23, !dbg !28
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 24, !dbg !28
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 25, !dbg !28
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 26, !dbg !28
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 27, !dbg !28
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 28, !dbg !28
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 29, !dbg !28
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 30, !dbg !28
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %417, 31, !dbg !28
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !28
  %450 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %418, float %419, float %420, float %421, float %422, float %423, float %424, float %425, float %426, float %427, float %428, float %429, float %430, float %431, float %432, float %433, float %434, float %435, float %436, float %437, float %438, float %439, float %440, float %441, float %442, float %443, float %444, float %445, float %446, float %447, float %448, float %449, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 0, i32 0) #2, !dbg !28
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 0, !dbg !28
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 1, !dbg !28
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 2, !dbg !28
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 3, !dbg !28
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 4, !dbg !28
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 5, !dbg !28
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 6, !dbg !28
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 7, !dbg !28
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 8, !dbg !28
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 9, !dbg !28
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 10, !dbg !28
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 11, !dbg !28
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 12, !dbg !28
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 13, !dbg !28
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 14, !dbg !28
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 15, !dbg !28
  %467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 16, !dbg !28
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 17, !dbg !28
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 18, !dbg !28
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 19, !dbg !28
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 20, !dbg !28
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 21, !dbg !28
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 22, !dbg !28
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 23, !dbg !28
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 24, !dbg !28
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 25, !dbg !28
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 26, !dbg !28
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 27, !dbg !28
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 28, !dbg !28
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 29, !dbg !28
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 30, !dbg !28
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %450, 31, !dbg !28
  %483 = insertelement <2 x float> poison, float %451, i64 0, !dbg !29
  %484 = insertelement <2 x float> %483, float %452, i64 1, !dbg !29
  %485 = fptrunc <2 x float> %484 to <2 x bfloat>, !dbg !29
  %486 = insertelement <2 x float> poison, float %453, i64 0, !dbg !29
  %487 = insertelement <2 x float> %486, float %454, i64 1, !dbg !29
  %488 = fptrunc <2 x float> %487 to <2 x bfloat>, !dbg !29
  %489 = insertelement <2 x float> poison, float %455, i64 0, !dbg !29
  %490 = insertelement <2 x float> %489, float %456, i64 1, !dbg !29
  %491 = fptrunc <2 x float> %490 to <2 x bfloat>, !dbg !29
  %492 = insertelement <2 x float> poison, float %457, i64 0, !dbg !29
  %493 = insertelement <2 x float> %492, float %458, i64 1, !dbg !29
  %494 = fptrunc <2 x float> %493 to <2 x bfloat>, !dbg !29
  %495 = insertelement <2 x float> poison, float %459, i64 0, !dbg !29
  %496 = insertelement <2 x float> %495, float %460, i64 1, !dbg !29
  %497 = fptrunc <2 x float> %496 to <2 x bfloat>, !dbg !29
  %498 = insertelement <2 x float> poison, float %461, i64 0, !dbg !29
  %499 = insertelement <2 x float> %498, float %462, i64 1, !dbg !29
  %500 = fptrunc <2 x float> %499 to <2 x bfloat>, !dbg !29
  %501 = insertelement <2 x float> poison, float %463, i64 0, !dbg !29
  %502 = insertelement <2 x float> %501, float %464, i64 1, !dbg !29
  %503 = fptrunc <2 x float> %502 to <2 x bfloat>, !dbg !29
  %504 = insertelement <2 x float> poison, float %465, i64 0, !dbg !29
  %505 = insertelement <2 x float> %504, float %466, i64 1, !dbg !29
  %506 = fptrunc <2 x float> %505 to <2 x bfloat>, !dbg !29
  %507 = insertelement <2 x float> poison, float %467, i64 0, !dbg !29
  %508 = insertelement <2 x float> %507, float %468, i64 1, !dbg !29
  %509 = fptrunc <2 x float> %508 to <2 x bfloat>, !dbg !29
  %510 = insertelement <2 x float> poison, float %469, i64 0, !dbg !29
  %511 = insertelement <2 x float> %510, float %470, i64 1, !dbg !29
  %512 = fptrunc <2 x float> %511 to <2 x bfloat>, !dbg !29
  %513 = insertelement <2 x float> poison, float %471, i64 0, !dbg !29
  %514 = insertelement <2 x float> %513, float %472, i64 1, !dbg !29
  %515 = fptrunc <2 x float> %514 to <2 x bfloat>, !dbg !29
  %516 = insertelement <2 x float> poison, float %473, i64 0, !dbg !29
  %517 = insertelement <2 x float> %516, float %474, i64 1, !dbg !29
  %518 = fptrunc <2 x float> %517 to <2 x bfloat>, !dbg !29
  %519 = insertelement <2 x float> poison, float %475, i64 0, !dbg !29
  %520 = insertelement <2 x float> %519, float %476, i64 1, !dbg !29
  %521 = fptrunc <2 x float> %520 to <2 x bfloat>, !dbg !29
  %522 = insertelement <2 x float> poison, float %477, i64 0, !dbg !29
  %523 = insertelement <2 x float> %522, float %478, i64 1, !dbg !29
  %524 = fptrunc <2 x float> %523 to <2 x bfloat>, !dbg !29
  %525 = insertelement <2 x float> poison, float %479, i64 0, !dbg !29
  %526 = insertelement <2 x float> %525, float %480, i64 1, !dbg !29
  %527 = fptrunc <2 x float> %526 to <2 x bfloat>, !dbg !29
  %528 = insertelement <2 x float> poison, float %481, i64 0, !dbg !29
  %529 = insertelement <2 x float> %528, float %482, i64 1, !dbg !29
  %530 = fptrunc <2 x float> %529 to <2 x bfloat>, !dbg !29
  %531 = getelementptr bfloat, ptr addrspace(1) %157, i64 %295, !dbg !30
  %532 = getelementptr bfloat, ptr addrspace(1) %157, i64 %296, !dbg !30
  %533 = getelementptr bfloat, ptr addrspace(1) %157, i64 %297, !dbg !30
  %534 = getelementptr bfloat, ptr addrspace(1) %157, i64 %298, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %535 = bitcast <2 x bfloat> %485 to i32, !dbg !30
  %536 = bitcast <2 x bfloat> %488 to i32, !dbg !30
  %537 = bitcast <2 x bfloat> %491 to i32, !dbg !30
  %538 = bitcast <2 x bfloat> %494 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %241, i32 %535, i32 %536, i32 %537, i32 %538) #2, !dbg !30
  %539 = bitcast <2 x bfloat> %497 to i32, !dbg !30
  %540 = bitcast <2 x bfloat> %500 to i32, !dbg !30
  %541 = bitcast <2 x bfloat> %503 to i32, !dbg !30
  %542 = bitcast <2 x bfloat> %506 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %243, i32 %539, i32 %540, i32 %541, i32 %542) #2, !dbg !30
  %543 = bitcast <2 x bfloat> %509 to i32, !dbg !30
  %544 = bitcast <2 x bfloat> %512 to i32, !dbg !30
  %545 = bitcast <2 x bfloat> %515 to i32, !dbg !30
  %546 = bitcast <2 x bfloat> %518 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %245, i32 %543, i32 %544, i32 %545, i32 %546) #2, !dbg !30
  %547 = bitcast <2 x bfloat> %521 to i32, !dbg !30
  %548 = bitcast <2 x bfloat> %524 to i32, !dbg !30
  %549 = bitcast <2 x bfloat> %527 to i32, !dbg !30
  %550 = bitcast <2 x bfloat> %530 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %247, i32 %547, i32 %548, i32 %549, i32 %550) #2, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %551 = load <4 x i32>, ptr addrspace(3) %255, align 16, !dbg !30
  %552 = load <4 x i32>, ptr addrspace(3) %260, align 16, !dbg !30
  %553 = load <4 x i32>, ptr addrspace(3) %265, align 16, !dbg !30
  %.extract135 = load i32, ptr addrspace(3) %250, align 16, !dbg !30
  %.extract137 = load i32, ptr addrspace(3) %278, align 4, !dbg !30
  %.extract139 = load i32, ptr addrspace(3) %279, align 8, !dbg !30
  %.extract141 = load i32, ptr addrspace(3) %280, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract135, i32 %.extract137, i32 %.extract139, i32 %.extract141, ptr addrspace(1) %531, i1 %287) #2, !dbg !30
  %.extract143 = extractelement <4 x i32> %551, i64 0, !dbg !30
  %.extract145 = extractelement <4 x i32> %551, i64 1, !dbg !30
  %.extract147 = extractelement <4 x i32> %551, i64 2, !dbg !30
  %.extract149 = extractelement <4 x i32> %551, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract143, i32 %.extract145, i32 %.extract147, i32 %.extract149, ptr addrspace(1) %532, i1 %288) #2, !dbg !30
  %.extract151 = extractelement <4 x i32> %552, i64 0, !dbg !30
  %.extract153 = extractelement <4 x i32> %552, i64 1, !dbg !30
  %.extract155 = extractelement <4 x i32> %552, i64 2, !dbg !30
  %.extract157 = extractelement <4 x i32> %552, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract151, i32 %.extract153, i32 %.extract155, i32 %.extract157, ptr addrspace(1) %533, i1 %289) #2, !dbg !30
  %.extract159 = extractelement <4 x i32> %553, i64 0, !dbg !30
  %.extract161 = extractelement <4 x i32> %553, i64 1, !dbg !30
  %.extract163 = extractelement <4 x i32> %553, i64 2, !dbg !30
  %.extract165 = extractelement <4 x i32> %553, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract159, i32 %.extract161, i32 %.extract163, i32 %.extract165, ptr addrspace(1) %534, i1 %290) #2, !dbg !30
  %554 = add i32 %300, 1, !dbg !27
  %555 = icmp sgt i32 %554, 1, !dbg !27
  %556 = select i1 %555, i32 0, i32 %554, !dbg !27
  %557 = or disjoint i64 %indvars.iv, %37, !dbg !25
  %558 = or disjoint i64 %557, %.idx, !dbg !25
  %559 = or disjoint i64 %557, %.idx2, !dbg !25
  %560 = or disjoint i64 %557, %.idx3, !dbg !25
  %561 = or disjoint i64 %557, %.idx4, !dbg !25
  %562 = getelementptr bfloat, ptr addrspace(1) %156, i64 %558, !dbg !25
  %563 = getelementptr bfloat, ptr addrspace(1) %156, i64 %559, !dbg !25
  %564 = getelementptr bfloat, ptr addrspace(1) %156, i64 %560, !dbg !25
  %565 = getelementptr bfloat, ptr addrspace(1) %156, i64 %561, !dbg !25
  %.idx102 = shl i32 %556, 13, !dbg !25
  %566 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx102, !dbg !25
  %567 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %566, i32 %167, !dbg !25
  %568 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %566, i32 %169, !dbg !25
  %569 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %566, i32 %171, !dbg !25
  %570 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %566, i32 %173, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %567, ptr addrspace(1) %562, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %568, ptr addrspace(1) %563, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %569, ptr addrspace(1) %564, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %570, ptr addrspace(1) %565, i32 0) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  br i1 %282, label %281, label %571, !dbg !27

571:                                              ; preds = %281
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %572 = sext i32 %63 to i64, !dbg !31
  %573 = getelementptr float, ptr addrspace(1) %6, i64 %572, !dbg !31
  %574 = getelementptr float, ptr addrspace(1) %573, i64 %42, !dbg !32
  %575 = getelementptr float, ptr addrspace(1) %573, i64 %43, !dbg !32
  %576 = getelementptr float, ptr addrspace(1) %573, i64 %44, !dbg !32
  %577 = getelementptr float, ptr addrspace(1) %573, i64 %45, !dbg !32
  %578 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %574, i1 %55) #2, !dbg !32
  %579 = bitcast i32 %578 to float, !dbg !32
  %580 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %575, i1 %56) #2, !dbg !32
  %581 = bitcast i32 %580 to float, !dbg !32
  %582 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %576, i1 %57) #2, !dbg !32
  %583 = bitcast i32 %582 to float, !dbg !32
  %584 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %577, i1 %58) #2, !dbg !32
  %585 = bitcast i32 %584 to float, !dbg !32
  %586 = fmul float %579, 0x3FF7154760000000, !dbg !33
  %587 = tail call float @llvm.nvvm.ex2.approx.f(float %586), !dbg !33
  %588 = fmul float %581, 0x3FF7154760000000, !dbg !33
  %589 = tail call float @llvm.nvvm.ex2.approx.f(float %588), !dbg !33
  %590 = fmul float %583, 0x3FF7154760000000, !dbg !33
  %591 = tail call float @llvm.nvvm.ex2.approx.f(float %590), !dbg !33
  %592 = fmul float %585, 0x3FF7154760000000, !dbg !33
  %593 = tail call float @llvm.nvvm.ex2.approx.f(float %592), !dbg !33
  %594 = getelementptr bfloat, ptr addrspace(1) %0, i64 %155, !dbg !34
  %595 = getelementptr bfloat, ptr addrspace(1) %3, i64 %155, !dbg !35
  %596 = getelementptr bfloat, ptr addrspace(1) %594, i64 %158, !dbg !36
  %597 = getelementptr bfloat, ptr addrspace(1) %594, i64 %159, !dbg !36
  %598 = getelementptr bfloat, ptr addrspace(1) %594, i64 %160, !dbg !36
  %599 = getelementptr bfloat, ptr addrspace(1) %594, i64 %161, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %596, i32 %175) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %597, i32 %176) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %598, i32 %177) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %599, i32 %178) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %600 = getelementptr bfloat, ptr addrspace(1) %594, i64 %180, !dbg !36
  %601 = getelementptr bfloat, ptr addrspace(1) %594, i64 %181, !dbg !36
  %602 = getelementptr bfloat, ptr addrspace(1) %594, i64 %182, !dbg !36
  %603 = getelementptr bfloat, ptr addrspace(1) %594, i64 %183, !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %600, i32 %175) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %189, ptr addrspace(1) %601, i32 %176) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %190, ptr addrspace(1) %602, i32 %177) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %191, ptr addrspace(1) %603, i32 %178) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %604 = insertelement <8 x float> poison, float %587, i64 0, !dbg !37
  %605 = shufflevector <8 x float> %604, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %606 = insertelement <8 x float> poison, float %589, i64 0, !dbg !37
  %607 = shufflevector <8 x float> %606, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %608 = insertelement <8 x float> poison, float %591, i64 0, !dbg !37
  %609 = shufflevector <8 x float> %608, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %610 = insertelement <8 x float> poison, float %593, i64 0, !dbg !37
  %611 = shufflevector <8 x float> %610, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %612 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 4
  %613 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 8
  %614 = getelementptr inbounds nuw i8, ptr addrspace(3) %250, i32 12
  br label %615, !dbg !38

615:                                              ; preds = %571, %615
  %616 = phi i1 [ true, %571 ], [ false, %615 ]
  %indvars.iv166 = phi i64 [ 128, %571 ], [ 192, %615 ]
  %617 = phi i1 [ %55, %571 ], [ false, %615 ]
  %618 = phi i1 [ %56, %571 ], [ false, %615 ]
  %619 = phi i1 [ %57, %571 ], [ false, %615 ]
  %620 = phi i1 [ %58, %571 ], [ false, %615 ]
  %621 = phi i1 [ %55, %571 ], [ %617, %615 ]
  %622 = phi i1 [ %56, %571 ], [ %618, %615 ]
  %623 = phi i1 [ %57, %571 ], [ %619, %615 ]
  %624 = phi i1 [ %58, %571 ], [ %620, %615 ]
  %625 = phi i64 [ %180, %571 ], [ %904, %615 ]
  %626 = phi i64 [ %181, %571 ], [ %905, %615 ]
  %627 = phi i64 [ %182, %571 ], [ %906, %615 ]
  %628 = phi i64 [ %183, %571 ], [ %907, %615 ]
  %629 = phi i64 [ %158, %571 ], [ %625, %615 ]
  %630 = phi i64 [ %159, %571 ], [ %626, %615 ]
  %631 = phi i64 [ %160, %571 ], [ %627, %615 ]
  %632 = phi i64 [ %161, %571 ], [ %628, %615 ]
  %633 = phi i32 [ -1, %571 ], [ %637, %615 ]
  %634 = phi i32 [ 1, %571 ], [ %902, %615 ]
  %635 = add i32 %633, 1, !dbg !38
  %636 = icmp sgt i32 %635, 1, !dbg !38
  %637 = select i1 %636, i32 0, i32 %635, !dbg !38
  tail call void @llvm.nvvm.cp.async.wait.group(i32 1), !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  %.idx5 = shl i32 %637, 13, !dbg !36
  %638 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx5, !dbg !36
  %639 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %638, i32 %167, !dbg !36
  %640 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %638, i32 %169, !dbg !36
  %641 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %638, i32 %171, !dbg !36
  %642 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %638, i32 %173, !dbg !36
  %643 = load <8 x bfloat>, ptr addrspace(3) %639, align 16, !dbg !36
  %644 = fmul <8 x bfloat> %643, %268, !dbg !39
  %645 = fpext <8 x bfloat> %644 to <8 x float>, !dbg !37
  %646 = fmul <8 x float> %605, %645, !dbg !37
  %647 = fptrunc <8 x float> %646 to <8 x bfloat>, !dbg !40
  %648 = load <8 x bfloat>, ptr addrspace(3) %640, align 16, !dbg !36
  %649 = fmul <8 x bfloat> %648, %271, !dbg !39
  %650 = fpext <8 x bfloat> %649 to <8 x float>, !dbg !37
  %651 = fmul <8 x float> %607, %650, !dbg !37
  %652 = fptrunc <8 x float> %651 to <8 x bfloat>, !dbg !40
  %653 = load <8 x bfloat>, ptr addrspace(3) %641, align 16, !dbg !36
  %654 = fmul <8 x bfloat> %653, %274, !dbg !39
  %655 = fpext <8 x bfloat> %654 to <8 x float>, !dbg !37
  %656 = fmul <8 x float> %609, %655, !dbg !37
  %657 = fptrunc <8 x float> %656 to <8 x bfloat>, !dbg !40
  %658 = load <8 x bfloat>, ptr addrspace(3) %642, align 16, !dbg !36
  %659 = fmul <8 x bfloat> %658, %277, !dbg !39
  %660 = fpext <8 x bfloat> %659 to <8 x float>, !dbg !37
  %661 = fmul <8 x float> %611, %660, !dbg !37
  %662 = fptrunc <8 x float> %661 to <8 x bfloat>, !dbg !40
  store <8 x bfloat> %647, ptr addrspace(3) %192, align 16, !dbg !40
  store <8 x bfloat> %652, ptr addrspace(3) %193, align 16, !dbg !40
  store <8 x bfloat> %657, ptr addrspace(3) %194, align 16, !dbg !40
  store <8 x bfloat> %662, ptr addrspace(3) %195, align 16, !dbg !40
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !41
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !41
  %663 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !41
  %664 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %199, i64 %203) #2, !dbg !41
  %665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 0, !dbg !41
  %666 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 1, !dbg !41
  %667 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 2, !dbg !41
  %668 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 3, !dbg !41
  %669 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 4, !dbg !41
  %670 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 5, !dbg !41
  %671 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 6, !dbg !41
  %672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 7, !dbg !41
  %673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 8, !dbg !41
  %674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 9, !dbg !41
  %675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 10, !dbg !41
  %676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 11, !dbg !41
  %677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 12, !dbg !41
  %678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 13, !dbg !41
  %679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 14, !dbg !41
  %680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 15, !dbg !41
  %681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 16, !dbg !41
  %682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 17, !dbg !41
  %683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 18, !dbg !41
  %684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 19, !dbg !41
  %685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 20, !dbg !41
  %686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 21, !dbg !41
  %687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 22, !dbg !41
  %688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 23, !dbg !41
  %689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 24, !dbg !41
  %690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 25, !dbg !41
  %691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 26, !dbg !41
  %692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 27, !dbg !41
  %693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 28, !dbg !41
  %694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 29, !dbg !41
  %695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 30, !dbg !41
  %696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %664, 31, !dbg !41
  %697 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %665, float %666, float %667, float %668, float %669, float %670, float %671, float %672, float %673, float %674, float %675, float %676, float %677, float %678, float %679, float %680, float %681, float %682, float %683, float %684, float %685, float %686, float %687, float %688, float %689, float %690, float %691, float %692, float %693, float %694, float %695, float %696, i64 %207, i64 %211, i1 true) #2, !dbg !41
  %698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 0, !dbg !41
  %699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 1, !dbg !41
  %700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 2, !dbg !41
  %701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 3, !dbg !41
  %702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 4, !dbg !41
  %703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 5, !dbg !41
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 6, !dbg !41
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 7, !dbg !41
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 8, !dbg !41
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 9, !dbg !41
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 10, !dbg !41
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 11, !dbg !41
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 12, !dbg !41
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 13, !dbg !41
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 14, !dbg !41
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 15, !dbg !41
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 16, !dbg !41
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 17, !dbg !41
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 18, !dbg !41
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 19, !dbg !41
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 20, !dbg !41
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 21, !dbg !41
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 22, !dbg !41
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 23, !dbg !41
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 24, !dbg !41
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 25, !dbg !41
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 26, !dbg !41
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 27, !dbg !41
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 28, !dbg !41
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 29, !dbg !41
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 30, !dbg !41
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %697, 31, !dbg !41
  %730 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %698, float %699, float %700, float %701, float %702, float %703, float %704, float %705, float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, float %718, float %719, float %720, float %721, float %722, float %723, float %724, float %725, float %726, float %727, float %728, float %729, i64 %215, i64 %219, i1 true) #2, !dbg !41
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 0, !dbg !41
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 1, !dbg !41
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 2, !dbg !41
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 3, !dbg !41
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 4, !dbg !41
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 5, !dbg !41
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 6, !dbg !41
  %738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 7, !dbg !41
  %739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 8, !dbg !41
  %740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 9, !dbg !41
  %741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 10, !dbg !41
  %742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 11, !dbg !41
  %743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 12, !dbg !41
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 13, !dbg !41
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 14, !dbg !41
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 15, !dbg !41
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 16, !dbg !41
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 17, !dbg !41
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 18, !dbg !41
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 19, !dbg !41
  %751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 20, !dbg !41
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 21, !dbg !41
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 22, !dbg !41
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 23, !dbg !41
  %755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 24, !dbg !41
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 25, !dbg !41
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 26, !dbg !41
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 27, !dbg !41
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 28, !dbg !41
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 29, !dbg !41
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 30, !dbg !41
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %730, 31, !dbg !41
  %763 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %731, float %732, float %733, float %734, float %735, float %736, float %737, float %738, float %739, float %740, float %741, float %742, float %743, float %744, float %745, float %746, float %747, float %748, float %749, float %750, float %751, float %752, float %753, float %754, float %755, float %756, float %757, float %758, float %759, float %760, float %761, float %762, i64 %223, i64 %227, i1 true) #2, !dbg !41
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 0, !dbg !41
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 1, !dbg !41
  %766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 2, !dbg !41
  %767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 3, !dbg !41
  %768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 4, !dbg !41
  %769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 5, !dbg !41
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 6, !dbg !41
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 7, !dbg !41
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 8, !dbg !41
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 9, !dbg !41
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 10, !dbg !41
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 11, !dbg !41
  %776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 12, !dbg !41
  %777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 13, !dbg !41
  %778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 14, !dbg !41
  %779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 15, !dbg !41
  %780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 16, !dbg !41
  %781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 17, !dbg !41
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 18, !dbg !41
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 19, !dbg !41
  %784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 20, !dbg !41
  %785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 21, !dbg !41
  %786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 22, !dbg !41
  %787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 23, !dbg !41
  %788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 24, !dbg !41
  %789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 25, !dbg !41
  %790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 26, !dbg !41
  %791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 27, !dbg !41
  %792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 28, !dbg !41
  %793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 29, !dbg !41
  %794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 30, !dbg !41
  %795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %763, 31, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !41
  %796 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %764, float %765, float %766, float %767, float %768, float %769, float %770, float %771, float %772, float %773, float %774, float %775, float %776, float %777, float %778, float %779, float %780, float %781, float %782, float %783, float %784, float %785, float %786, float %787, float %788, float %789, float %790, float %791, float %792, float %793, float %794, float %795, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 25600), i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 0, i32 0) #2, !dbg !41
  %797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 0, !dbg !41
  %798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 1, !dbg !41
  %799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 2, !dbg !41
  %800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 3, !dbg !41
  %801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 4, !dbg !41
  %802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 5, !dbg !41
  %803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 6, !dbg !41
  %804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 7, !dbg !41
  %805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 8, !dbg !41
  %806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 9, !dbg !41
  %807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 10, !dbg !41
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 11, !dbg !41
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 12, !dbg !41
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 13, !dbg !41
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 14, !dbg !41
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 15, !dbg !41
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 16, !dbg !41
  %814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 17, !dbg !41
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 18, !dbg !41
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 19, !dbg !41
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 20, !dbg !41
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 21, !dbg !41
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 22, !dbg !41
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 23, !dbg !41
  %821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 24, !dbg !41
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 25, !dbg !41
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 26, !dbg !41
  %824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 27, !dbg !41
  %825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 28, !dbg !41
  %826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 29, !dbg !41
  %827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 30, !dbg !41
  %828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %796, 31, !dbg !41
  %829 = insertelement <2 x float> poison, float %797, i64 0, !dbg !42
  %830 = insertelement <2 x float> %829, float %798, i64 1, !dbg !42
  %831 = fptrunc <2 x float> %830 to <2 x bfloat>, !dbg !42
  %832 = insertelement <2 x float> poison, float %799, i64 0, !dbg !42
  %833 = insertelement <2 x float> %832, float %800, i64 1, !dbg !42
  %834 = fptrunc <2 x float> %833 to <2 x bfloat>, !dbg !42
  %835 = insertelement <2 x float> poison, float %801, i64 0, !dbg !42
  %836 = insertelement <2 x float> %835, float %802, i64 1, !dbg !42
  %837 = fptrunc <2 x float> %836 to <2 x bfloat>, !dbg !42
  %838 = insertelement <2 x float> poison, float %803, i64 0, !dbg !42
  %839 = insertelement <2 x float> %838, float %804, i64 1, !dbg !42
  %840 = fptrunc <2 x float> %839 to <2 x bfloat>, !dbg !42
  %841 = insertelement <2 x float> poison, float %805, i64 0, !dbg !42
  %842 = insertelement <2 x float> %841, float %806, i64 1, !dbg !42
  %843 = fptrunc <2 x float> %842 to <2 x bfloat>, !dbg !42
  %844 = insertelement <2 x float> poison, float %807, i64 0, !dbg !42
  %845 = insertelement <2 x float> %844, float %808, i64 1, !dbg !42
  %846 = fptrunc <2 x float> %845 to <2 x bfloat>, !dbg !42
  %847 = insertelement <2 x float> poison, float %809, i64 0, !dbg !42
  %848 = insertelement <2 x float> %847, float %810, i64 1, !dbg !42
  %849 = fptrunc <2 x float> %848 to <2 x bfloat>, !dbg !42
  %850 = insertelement <2 x float> poison, float %811, i64 0, !dbg !42
  %851 = insertelement <2 x float> %850, float %812, i64 1, !dbg !42
  %852 = fptrunc <2 x float> %851 to <2 x bfloat>, !dbg !42
  %853 = insertelement <2 x float> poison, float %813, i64 0, !dbg !42
  %854 = insertelement <2 x float> %853, float %814, i64 1, !dbg !42
  %855 = fptrunc <2 x float> %854 to <2 x bfloat>, !dbg !42
  %856 = insertelement <2 x float> poison, float %815, i64 0, !dbg !42
  %857 = insertelement <2 x float> %856, float %816, i64 1, !dbg !42
  %858 = fptrunc <2 x float> %857 to <2 x bfloat>, !dbg !42
  %859 = insertelement <2 x float> poison, float %817, i64 0, !dbg !42
  %860 = insertelement <2 x float> %859, float %818, i64 1, !dbg !42
  %861 = fptrunc <2 x float> %860 to <2 x bfloat>, !dbg !42
  %862 = insertelement <2 x float> poison, float %819, i64 0, !dbg !42
  %863 = insertelement <2 x float> %862, float %820, i64 1, !dbg !42
  %864 = fptrunc <2 x float> %863 to <2 x bfloat>, !dbg !42
  %865 = insertelement <2 x float> poison, float %821, i64 0, !dbg !42
  %866 = insertelement <2 x float> %865, float %822, i64 1, !dbg !42
  %867 = fptrunc <2 x float> %866 to <2 x bfloat>, !dbg !42
  %868 = insertelement <2 x float> poison, float %823, i64 0, !dbg !42
  %869 = insertelement <2 x float> %868, float %824, i64 1, !dbg !42
  %870 = fptrunc <2 x float> %869 to <2 x bfloat>, !dbg !42
  %871 = insertelement <2 x float> poison, float %825, i64 0, !dbg !42
  %872 = insertelement <2 x float> %871, float %826, i64 1, !dbg !42
  %873 = fptrunc <2 x float> %872 to <2 x bfloat>, !dbg !42
  %874 = insertelement <2 x float> poison, float %827, i64 0, !dbg !42
  %875 = insertelement <2 x float> %874, float %828, i64 1, !dbg !42
  %876 = fptrunc <2 x float> %875 to <2 x bfloat>, !dbg !42
  %877 = getelementptr bfloat, ptr addrspace(1) %595, i64 %629, !dbg !43
  %878 = getelementptr bfloat, ptr addrspace(1) %595, i64 %630, !dbg !43
  %879 = getelementptr bfloat, ptr addrspace(1) %595, i64 %631, !dbg !43
  %880 = getelementptr bfloat, ptr addrspace(1) %595, i64 %632, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %881 = bitcast <2 x bfloat> %831 to i32, !dbg !43
  %882 = bitcast <2 x bfloat> %834 to i32, !dbg !43
  %883 = bitcast <2 x bfloat> %837 to i32, !dbg !43
  %884 = bitcast <2 x bfloat> %840 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %241, i32 %881, i32 %882, i32 %883, i32 %884) #2, !dbg !43
  %885 = bitcast <2 x bfloat> %843 to i32, !dbg !43
  %886 = bitcast <2 x bfloat> %846 to i32, !dbg !43
  %887 = bitcast <2 x bfloat> %849 to i32, !dbg !43
  %888 = bitcast <2 x bfloat> %852 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %243, i32 %885, i32 %886, i32 %887, i32 %888) #2, !dbg !43
  %889 = bitcast <2 x bfloat> %855 to i32, !dbg !43
  %890 = bitcast <2 x bfloat> %858 to i32, !dbg !43
  %891 = bitcast <2 x bfloat> %861 to i32, !dbg !43
  %892 = bitcast <2 x bfloat> %864 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %245, i32 %889, i32 %890, i32 %891, i32 %892) #2, !dbg !43
  %893 = bitcast <2 x bfloat> %867 to i32, !dbg !43
  %894 = bitcast <2 x bfloat> %870 to i32, !dbg !43
  %895 = bitcast <2 x bfloat> %873 to i32, !dbg !43
  %896 = bitcast <2 x bfloat> %876 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %247, i32 %893, i32 %894, i32 %895, i32 %896) #2, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %897 = load <4 x i32>, ptr addrspace(3) %255, align 16, !dbg !43
  %898 = load <4 x i32>, ptr addrspace(3) %260, align 16, !dbg !43
  %899 = load <4 x i32>, ptr addrspace(3) %265, align 16, !dbg !43
  %.extract = load i32, ptr addrspace(3) %250, align 16, !dbg !43
  %.extract105 = load i32, ptr addrspace(3) %612, align 4, !dbg !43
  %.extract107 = load i32, ptr addrspace(3) %613, align 8, !dbg !43
  %.extract109 = load i32, ptr addrspace(3) %614, align 4, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract105, i32 %.extract107, i32 %.extract109, ptr addrspace(1) %877, i1 %621) #2, !dbg !43
  %.extract111 = extractelement <4 x i32> %897, i64 0, !dbg !43
  %.extract113 = extractelement <4 x i32> %897, i64 1, !dbg !43
  %.extract115 = extractelement <4 x i32> %897, i64 2, !dbg !43
  %.extract117 = extractelement <4 x i32> %897, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract111, i32 %.extract113, i32 %.extract115, i32 %.extract117, ptr addrspace(1) %878, i1 %622) #2, !dbg !43
  %.extract119 = extractelement <4 x i32> %898, i64 0, !dbg !43
  %.extract121 = extractelement <4 x i32> %898, i64 1, !dbg !43
  %.extract123 = extractelement <4 x i32> %898, i64 2, !dbg !43
  %.extract125 = extractelement <4 x i32> %898, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract119, i32 %.extract121, i32 %.extract123, i32 %.extract125, ptr addrspace(1) %879, i1 %623) #2, !dbg !43
  %.extract127 = extractelement <4 x i32> %899, i64 0, !dbg !43
  %.extract129 = extractelement <4 x i32> %899, i64 1, !dbg !43
  %.extract131 = extractelement <4 x i32> %899, i64 2, !dbg !43
  %.extract133 = extractelement <4 x i32> %899, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract127, i32 %.extract129, i32 %.extract131, i32 %.extract133, ptr addrspace(1) %880, i1 %624) #2, !dbg !43
  %900 = add i32 %634, 1, !dbg !38
  %901 = icmp sgt i32 %900, 1, !dbg !38
  %902 = select i1 %901, i32 0, i32 %900, !dbg !38
  %903 = or disjoint i64 %indvars.iv166, %37, !dbg !36
  %904 = or disjoint i64 %903, %.idx, !dbg !36
  %905 = or disjoint i64 %903, %.idx2, !dbg !36
  %906 = or disjoint i64 %903, %.idx3, !dbg !36
  %907 = or disjoint i64 %903, %.idx4, !dbg !36
  %908 = getelementptr bfloat, ptr addrspace(1) %594, i64 %904, !dbg !36
  %909 = getelementptr bfloat, ptr addrspace(1) %594, i64 %905, !dbg !36
  %910 = getelementptr bfloat, ptr addrspace(1) %594, i64 %906, !dbg !36
  %911 = getelementptr bfloat, ptr addrspace(1) %594, i64 %907, !dbg !36
  %.idx52 = shl i32 %902, 13, !dbg !36
  %912 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx52, !dbg !36
  %913 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %912, i32 %167, !dbg !36
  %914 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %912, i32 %169, !dbg !36
  %915 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %912, i32 %171, !dbg !36
  %916 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %912, i32 %173, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %913, ptr addrspace(1) %908, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %914, ptr addrspace(1) %909, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %915, ptr addrspace(1) %910, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %916, ptr addrspace(1) %911, i32 0) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  br i1 %616, label %615, label %917, !dbg !38

917:                                              ; preds = %615
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #5

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "wy_fast.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "recompute_w_u_fwd_kernel", linkageName: "recompute_w_u_fwd_kernel", scope: !1, file: !1, line: 144, type: !6, scopeLine: 144, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 166, column: 30, scope: !5)
!9 = !DILocation(line: 166, column: 48, scope: !5)
!10 = !DILocation(line: 173, column: 25, scope: !5)
!11 = !DILocation(line: 167, column: 33, scope: !5)
!12 = !DILocation(line: 174, column: 42, scope: !5)
!13 = !DILocation(line: 174, column: 38, scope: !5)
!14 = !DILocation(line: 174, column: 46, scope: !5)
!15 = !DILocation(line: 174, column: 70, scope: !5)
!16 = !DILocation(line: 174, column: 83, scope: !5)
!17 = !DILocation(line: 175, column: 21, scope: !5)
!18 = !DILocation(line: 177, column: 41, scope: !5)
!19 = !DILocation(line: 177, column: 48, scope: !5)
!20 = !DILocation(line: 177, column: 32, scope: !5)
!21 = !DILocation(line: 178, column: 18, scope: !5)
!22 = !DILocation(line: 181, column: 52, scope: !5)
!23 = !DILocation(line: 181, column: 36, scope: !5)
!24 = !DILocation(line: 182, column: 36, scope: !5)
!25 = !DILocation(line: 183, column: 22, scope: !5)
!26 = !DILocation(line: 184, column: 22, scope: !5)
!27 = !DILocation(line: 180, column: 21, scope: !5)
!28 = !DILocation(line: 185, column: 26, scope: !5)
!29 = !DILocation(line: 186, column: 29, scope: !5)
!30 = !DILocation(line: 186, column: 22, scope: !5)
!31 = !DILocation(line: 189, column: 37, scope: !5)
!32 = !DILocation(line: 190, column: 26, scope: !5)
!33 = !DILocation(line: 190, column: 18, scope: !5)
!34 = !DILocation(line: 193, column: 36, scope: !5)
!35 = !DILocation(line: 194, column: 36, scope: !5)
!36 = !DILocation(line: 195, column: 22, scope: !5)
!37 = !DILocation(line: 198, column: 20, scope: !5)
!38 = !DILocation(line: 192, column: 21, scope: !5)
!39 = !DILocation(line: 196, column: 21, scope: !5)
!40 = !DILocation(line: 202, column: 34, scope: !5)
!41 = !DILocation(line: 202, column: 26, scope: !5)
!42 = !DILocation(line: 203, column: 29, scope: !5)
!43 = !DILocation(line: 203, column: 22, scope: !5)
!44 = !DILocation(line: 192, column: 4, scope: !5)
