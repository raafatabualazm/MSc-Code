//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 128
{
	.reg .pred 	%p<110>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<1004>;
	.reg .b64 	%rd<164>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r79, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd14, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd30, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r107, %ctaid.x;
	ld.param.b64 	%rd31, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r108, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r109, %r108, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r110, %r108, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r111, %r107, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r112, %r1, 5, 1;
	bfe.u32 	%r113, %r1, 3, 4;
	or.b32 	%r114, %r113, 16;
	or.b32 	%r115, %r113, 32;
	or.b32 	%r116, %r113, 48;
	shr.u32 	%r3, %r1, 2;
	bfe.u32 	%r117, %r1, 2, 3;
	shr.u32 	%r118, %r1, 1;
	and.b32 	%r119, %r118, 48;
	or.b32 	%r4, %r119, %r117;
	or.b32 	%r5, %r4, 8;
	shl.b32 	%r120, %r1, 3;
	and.b32 	%r121, %r120, 56;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r122, %r109, %r79;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r122;
	mul.wide.s32 	%rd32, %r122, 2;
	add.s64 	%rd33, %rd31, %rd32;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r110;
	mul.wide.u32 	%rd34, %r110, 2;
	add.s64 	%rd35, %rd33, %rd34;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r79;
	cvt.s64.s32 	%rd4, %r111;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd36, %r113;
	cvt.u64.u32 	%rd37, %r114;
	cvt.u64.u32 	%rd38, %r115;
	cvt.u64.u32 	%rd39, %r116;
	cvt.u64.u32 	%rd40, %r4;
	cvt.u64.u32 	%rd41, %r5;
	cvt.u64.u32 	%rd5, %r121;
	or.b64 	%rd42, %rd36, %rd4;
	or.b64 	%rd43, %rd37, %rd4;
	or.b64 	%rd44, %rd38, %rd4;
	or.b64 	%rd45, %rd39, %rd4;
	or.b64 	%rd46, %rd40, %rd4;
	or.b64 	%rd47, %rd41, %rd4;
	shl.b64 	%rd6, %rd46, 5;
	shl.b64 	%rd7, %rd47, 5;
	shl.b64 	%rd48, %rd46, 6;
	add.s64 	%rd15, %rd35, %rd48;
	shl.b64 	%rd49, %rd47, 6;
	add.s64 	%rd16, %rd35, %rd49;
	setp.gt.s32 	%p7, %r111, -1;
	setp.lt.s64 	%p8, %rd46, %rd3;
	setp.lt.s64 	%p9, %rd47, %rd3;
	and.pred 	%p21, %p7, %p8;
	and.pred 	%p22, %p7, %p9;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p21 ld.global.b16 { %rs3 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p22 ld.global.b16 { %rs4 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r122, %r110;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r123, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd50, %r123, 2;
	add.s64 	%rd51, %rd30, %rd50;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p10, %rd42, %rd3;
	setp.lt.s64 	%p11, %rd43, %rd3;
	setp.lt.s64 	%p12, %rd44, %rd3;
	setp.lt.s64 	%p13, %rd45, %rd3;
	shl.b64 	%rd52, %rd42, 13;
	add.s64 	%rd8, %rd51, %rd52;
	mul.wide.u32 	%rd53, %r121, 2;
	add.s64 	%rd17, %rd8, %rd53;
	shl.b64 	%rd54, %rd43, 13;
	add.s64 	%rd9, %rd51, %rd54;
	add.s64 	%rd18, %rd9, %rd53;
	shl.b64 	%rd55, %rd44, 13;
	add.s64 	%rd10, %rd51, %rd55;
	add.s64 	%rd19, %rd10, %rd53;
	shl.b64 	%rd56, %rd45, 13;
	add.s64 	%rd11, %rd51, %rd56;
	add.s64 	%rd20, %rd11, %rd53;
	and.b32 	%r124, %r112, 288;
	and.b32 	%r125, %r1, 24;
	mul.lo.s32 	%r126, %r125, 9;
	xor.b32 	%r127, %r126, %r121;
	xor.b32 	%r128, %r127, %r124;
	and.b32 	%r129, %r120, 512;
	or.b32 	%r7, %r128, %r129;
	shl.b32 	%r130, %r7, 1;
	mov.b32 	%r131, global_smem;
	add.s32 	%r80, %r131, %r130;
	or.b32 	%r132, %r121, 1024;
	xor.b32 	%r133, %r126, %r132;
	xor.b32 	%r134, %r133, %r124;
	or.b32 	%r8, %r134, %r129;
	shl.b32 	%r135, %r8, 1;
	add.s32 	%r82, %r131, %r135;
	or.b32 	%r136, %r121, 2048;
	xor.b32 	%r137, %r126, %r136;
	xor.b32 	%r138, %r137, %r124;
	or.b32 	%r9, %r138, %r129;
	shl.b32 	%r139, %r9, 1;
	add.s32 	%r84, %r131, %r139;
	or.b32 	%r140, %r121, 3072;
	xor.b32 	%r141, %r126, %r140;
	xor.b32 	%r142, %r141, %r124;
	or.b32 	%r10, %r142, %r129;
	shl.b32 	%r143, %r10, 1;
	add.s32 	%r86, %r131, %r143;
	selp.b32 	%r144, 16, 0, %p10;
	selp.b32 	%r89, %r144, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd17 + 0 ], 0x10, %r89;
	// end inline asm
	selp.b32 	%r145, 16, 0, %p11;
	selp.b32 	%r91, %r145, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r82 + 0 ], [ %rd18 + 0 ], 0x10, %r91;
	// end inline asm
	selp.b32 	%r146, 16, 0, %p12;
	selp.b32 	%r93, %r146, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r84 + 0 ], [ %rd19 + 0 ], 0x10, %r93;
	// end inline asm
	selp.b32 	%r147, 16, 0, %p13;
	selp.b32 	%r95, %r147, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r86 + 0 ], [ %rd20 + 0 ], 0x10, %r95;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd21, %rd17, 128;
	add.s64 	%rd22, %rd18, 128;
	add.s64 	%rd23, %rd19, 128;
	add.s64 	%rd24, %rd20, 128;
	bar.sync 	0;
	add.s32 	%r148, %r131, 8192;
	add.s32 	%r88, %r148, %r130;
	add.s32 	%r90, %r148, %r135;
	add.s32 	%r92, %r148, %r139;
	add.s32 	%r94, %r148, %r143;
	// begin inline asm
	cp.async.cg.shared.global [ %r88 + 0 ], [ %rd21 + 0 ], 0x10, %r89;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r90 + 0 ], [ %rd22 + 0 ], 0x10, %r91;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r92 + 0 ], [ %rd23 + 0 ], 0x10, %r93;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r94 + 0 ], [ %rd24 + 0 ], 0x10, %r95;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd25, %rd17, 256;
	add.s64 	%rd26, %rd18, 256;
	add.s64 	%rd27, %rd19, 256;
	add.s64 	%rd28, %rd20, 256;
	bar.sync 	0;
	add.s32 	%r149, %r131, 16384;
	add.s32 	%r96, %r149, %r130;
	add.s32 	%r98, %r149, %r135;
	add.s32 	%r100, %r149, %r139;
	add.s32 	%r102, %r149, %r143;
	mov.b32 	%r97, 0;
	// begin inline asm
	cp.async.cg.shared.global [ %r96 + 0 ], [ %rd25 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r98 + 0 ], [ %rd26 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r100 + 0 ], [ %rd27 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r102 + 0 ], [ %rd28 + 0 ], 0x10, %r97;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r972, 0f00000000;
	mov.b32 	%r971, 2;
	mov.b32 	%r970, -1;
	mov.b64 	%rd163, 0;
	mov.pred 	%p14, -1;
	mov.pred 	%p109, %p14;
	mov.b32 	%r973, %r972;
	mov.b32 	%r974, %r972;
	mov.b32 	%r975, %r972;
	mov.b32 	%r976, %r972;
	mov.b32 	%r977, %r972;
	mov.b32 	%r978, %r972;
	mov.b32 	%r979, %r972;
	mov.b32 	%r980, %r972;
	mov.b32 	%r981, %r972;
	mov.b32 	%r982, %r972;
	mov.b32 	%r983, %r972;
	mov.b32 	%r984, %r972;
	mov.b32 	%r985, %r972;
	mov.b32 	%r986, %r972;
	mov.b32 	%r987, %r972;
	mov.b32 	%r988, %r972;
	mov.b32 	%r989, %r972;
	mov.b32 	%r990, %r972;
	mov.b32 	%r991, %r972;
	mov.b32 	%r992, %r972;
	mov.b32 	%r993, %r972;
	mov.b32 	%r994, %r972;
	mov.b32 	%r995, %r972;
	mov.b32 	%r996, %r972;
	mov.b32 	%r997, %r972;
	mov.b32 	%r998, %r972;
	mov.b32 	%r999, %r972;
	mov.b32 	%r1000, %r972;
	mov.b32 	%r1001, %r972;
	mov.b32 	%r1002, %r972;
	mov.b32 	%r1003, %r972;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p3, %p109;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r490, %r970, 1;
	setp.gt.s32 	%p19, %r490, 3;
	selp.b32 	%r970, 0, %r490, %p19;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r491, %r970, 13;
	add.s32 	%r441, %r131, %r491;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r493, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r494, %r441, 4, 14;
	cvt.u64.u32 	%rd70, %r494;
	or.b64 	%rd57, %rd70, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003}, %rd57, %rd57, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r495, %r441, 32;
	bfe.u32 	%r496, %r495, 4, 14;
	cvt.u64.u32 	%rd71, %r496;
	or.b64 	%rd59, %rd71, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003}, %rd59, %rd59, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r497, %r441, 64;
	bfe.u32 	%r498, %r497, 4, 14;
	cvt.u64.u32 	%rd72, %r498;
	or.b64 	%rd61, %rd72, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003}, %rd61, %rd61, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r499, %r441, 96;
	bfe.u32 	%r500, %r499, 4, 14;
	cvt.u64.u32 	%rd73, %r500;
	or.b64 	%rd63, %rd73, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003}, %rd63, %rd63, %p14, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r439, %r97;
	mov.b32 	%r440, %r97;
	mov.b32 	%r442, %r97;
	mov.b32 	%r443, %r97;
	mov.b32 	%r438, %r441;
	// begin inline asm
	// wait for regs: %r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003,%r438,%r439,%r440,%r441,%r442,%r443
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r501, %r971, 1;
	setp.gt.s32 	%p20, %r501, 3;
	selp.b32 	%r971, 0, %r501, %p20;
	add.s64 	%rd74, %rd163, %rd5;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b64 	%rd75, %rd74, 1;
	add.s64 	%rd76, %rd8, %rd75;
	add.s64 	%rd65, %rd76, 384;
	add.s64 	%rd77, %rd9, %rd75;
	add.s64 	%rd66, %rd77, 384;
	add.s64 	%rd78, %rd10, %rd75;
	add.s64 	%rd67, %rd78, 384;
	add.s64 	%rd79, %rd11, %rd75;
	add.s64 	%rd68, %rd79, 384;
	shl.b32 	%r502, %r971, 13;
	add.s32 	%r503, %r131, %r502;
	bar.sync 	0;
	add.s32 	%r482, %r503, %r130;
	add.s32 	%r484, %r503, %r135;
	add.s32 	%r486, %r503, %r139;
	add.s32 	%r488, %r503, %r143;
	// begin inline asm
	cp.async.cg.shared.global [ %r482 + 0 ], [ %rd65 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r484 + 0 ], [ %rd66 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r486 + 0 ], [ %rd67 + 0 ], 0x10, %r97;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r488 + 0 ], [ %rd68 + 0 ], 0x10, %r97;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd163, 64;
	mov.pred 	%p109, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r622, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p47, %r622, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r623, %r1, 1;
	and.b32 	%r624, %r623, 6;
	or.b32 	%r625, %r624, 57;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd106, %r625;
	or.b64 	%rd107, %rd106, %rd4;
	setp.lt.s64 	%p48, %rd107, %rd3;
	and.pred 	%p38, %p47, %p48;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r626, %r624, 56;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd108, %r626;
	or.b64 	%rd109, %rd108, %rd4;
	setp.lt.s64 	%p49, %rd109, %rd3;
	and.pred 	%p37, %p47, %p49;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r627, %r624, 1;
	shr.u32 	%r628, %r1, 4;
	bfe.u32 	%r629, %r1, 4, 3;
	shl.b32 	%r630, %r1, 2;
	and.b32 	%r631, %r630, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r632, %r625, %r622;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p50, %r632, %r79;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r633, %r626, %r622;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p51, %r633, %r79;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r634, %r624, 25;
	or.b32 	%r635, %r624, 24;
	or.b32 	%r636, %r624, 32;
	or.b32 	%r637, %r624, 33;
	or.b32 	%r638, %r624, 40;
	or.b32 	%r639, %r624, 41;
	or.b32 	%r640, %r624, 48;
	or.b32 	%r641, %r624, 49;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd110, %r641;
	or.b64 	%rd111, %rd110, %rd4;
	setp.lt.s64 	%p52, %rd111, %rd3;
	and.pred 	%p36, %p47, %p52;
	cvt.u64.u32 	%rd112, %r640;
	or.b64 	%rd113, %rd112, %rd4;
	setp.lt.s64 	%p53, %rd113, %rd3;
	and.pred 	%p35, %p47, %p53;
	cvt.u64.u32 	%rd114, %r639;
	or.b64 	%rd115, %rd114, %rd4;
	setp.lt.s64 	%p54, %rd115, %rd3;
	and.pred 	%p34, %p47, %p54;
	cvt.u64.u32 	%rd116, %r638;
	or.b64 	%rd117, %rd116, %rd4;
	setp.lt.s64 	%p55, %rd117, %rd3;
	and.pred 	%p33, %p47, %p55;
	cvt.u64.u32 	%rd118, %r637;
	or.b64 	%rd119, %rd118, %rd4;
	setp.lt.s64 	%p56, %rd119, %rd3;
	and.pred 	%p32, %p47, %p56;
	cvt.u64.u32 	%rd120, %r636;
	or.b64 	%rd121, %rd120, %rd4;
	setp.lt.s64 	%p57, %rd121, %rd3;
	and.pred 	%p31, %p47, %p57;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r642, %r624, 17;
	or.b32 	%r643, %r624, 16;
	or.b32 	%r644, %r624, 9;
	or.b32 	%r645, %r624, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r646, %r4, %r622;
	or.b32 	%r647, %r5, %r622;
	or.b32 	%r648, %r636, %r622;
	or.b32 	%r649, %r637, %r622;
	or.b32 	%r650, %r638, %r622;
	or.b32 	%r651, %r639, %r622;
	or.b32 	%r652, %r640, %r622;
	or.b32 	%r653, %r641, %r622;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p58, %r653, %r79;
	setp.lt.s32 	%p59, %r652, %r79;
	setp.lt.s32 	%p60, %r651, %r79;
	setp.lt.s32 	%p61, %r650, %r79;
	setp.lt.s32 	%p62, %r649, %r79;
	setp.lt.s32 	%p63, %r648, %r79;
	setp.lt.s32 	%p64, %r647, %r79;
	setp.lt.s32 	%p65, %r646, %r79;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r983,%r984,%r985,%r986,%r987,%r988,%r989,%r990,%r991,%r992,%r993,%r994,%r995,%r996,%r997,%r998,%r999,%r1000,%r1001,%r1002,%r1003
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd122, %rd1, 2;
	add.s64 	%rd123, %rd13, %rd122;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd124, %rd2, 2;
	add.s64 	%rd125, %rd123, %rd124;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd126, %rd6, 2;
	add.s64 	%rd80, %rd125, %rd126;
	shl.b64 	%rd127, %rd7, 2;
	add.s64 	%rd81, %rd125, %rd127;
	shl.b64 	%rd128, %rd121, 7;
	add.s64 	%rd90, %rd125, %rd128;
	shl.b64 	%rd129, %rd119, 7;
	add.s64 	%rd91, %rd125, %rd129;
	shl.b64 	%rd130, %rd117, 7;
	add.s64 	%rd92, %rd125, %rd130;
	shl.b64 	%rd131, %rd115, 7;
	add.s64 	%rd93, %rd125, %rd131;
	shl.b64 	%rd132, %rd113, 7;
	add.s64 	%rd94, %rd125, %rd132;
	shl.b64 	%rd133, %rd111, 7;
	add.s64 	%rd95, %rd125, %rd133;
	shl.b64 	%rd134, %rd109, 7;
	add.s64 	%rd96, %rd125, %rd134;
	shl.b64 	%rd135, %rd107, 7;
	add.s64 	%rd97, %rd125, %rd135;
	// begin inline asm
	mov.u32 %r572, 0x0;
	@%p21 ld.global.b32 { %r572 }, [ %rd80 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r573, 0x0;
	@%p22 ld.global.b32 { %r573 }, [ %rd81 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r654, %rs3;
	cvt.f32.bf16 	%r655, %rs4;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p66, %r4, %r624;
	setp.gt.u32 	%p67, %r4, %r627;
	setp.gt.u32 	%p68, %r4, %r645;
	setp.gt.u32 	%p69, %r4, %r644;
	setp.gt.u32 	%p70, %r5, %r644;
	setp.gt.u32 	%p71, %r4, %r643;
	setp.gt.u32 	%p72, %r4, %r642;
	setp.gt.u32 	%p73, %r5, %r643;
	setp.gt.u32 	%p74, %r5, %r642;
	setp.gt.u32 	%p75, %r4, %r635;
	setp.gt.u32 	%p76, %r4, %r634;
	setp.gt.u32 	%p77, %r5, %r635;
	setp.gt.u32 	%p78, %r5, %r634;
	setp.gt.u32 	%p79, %r4, %r636;
	setp.gt.u32 	%p80, %r4, %r637;
	setp.gt.u32 	%p81, %r5, %r636;
	setp.gt.u32 	%p82, %r5, %r637;
	setp.gt.u32 	%p83, %r4, %r638;
	setp.gt.u32 	%p84, %r4, %r639;
	setp.gt.u32 	%p85, %r5, %r638;
	setp.gt.u32 	%p86, %r5, %r639;
	setp.gt.u32 	%p87, %r4, %r640;
	setp.gt.u32 	%p88, %r4, %r641;
	setp.gt.u32 	%p89, %r5, %r640;
	setp.gt.u32 	%p90, %r5, %r641;
	setp.gt.u32 	%p91, %r5, %r626;
	setp.gt.u32 	%p92, %r5, %r625;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r656, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd136, %r656, 4;
	add.s64 	%rd137, %rd14, %rd136;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r657, %r628, %r622;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r658, %r627, %r622;
	or.b32 	%r659, %r624, %r622;
	or.b32 	%r660, %r634, %r622;
	or.b32 	%r661, %r635, %r622;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r662, %r642, %r622;
	or.b32 	%r663, %r643, %r622;
	or.b32 	%r664, %r644, %r622;
	or.b32 	%r665, %r645, %r622;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r666, %r629, %r622;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r667, %r666, 8;
	or.b32 	%r668, %r666, 16;
	or.b32 	%r669, %r666, 24;
	or.b32 	%r670, %r666, 32;
	or.b32 	%r671, %r666, 40;
	or.b32 	%r672, %r666, 48;
	or.b32 	%r673, %r657, 56;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p93, %r673, %r79;
	setp.lt.s32 	%p94, %r672, %r79;
	setp.lt.s32 	%p95, %r671, %r79;
	setp.lt.s32 	%p96, %r670, %r79;
	setp.lt.s32 	%p97, %r669, %r79;
	setp.lt.s32 	%p98, %r668, %r79;
	setp.lt.s32 	%p99, %r667, %r79;
	setp.lt.s32 	%p100, %r666, %r79;
	setp.lt.s32 	%p101, %r665, %r79;
	setp.lt.s32 	%p102, %r664, %r79;
	setp.lt.s32 	%p103, %r663, %r79;
	setp.lt.s32 	%p104, %r662, %r79;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p105, %r661, %r79;
	setp.lt.s32 	%p106, %r660, %r79;
	setp.lt.s32 	%p107, %r659, %r79;
	setp.lt.s32 	%p108, %r658, %r79;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p24, %p47, %p108;
	and.pred 	%p23, %p47, %p107;
	and.pred 	%p30, %p47, %p106;
	and.pred 	%p29, %p47, %p105;
	and.pred 	%p28, %p47, %p104;
	and.pred 	%p27, %p47, %p103;
	and.pred 	%p26, %p47, %p102;
	and.pred 	%p25, %p47, %p101;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd138, %r659, 128;
	add.s64 	%rd82, %rd125, %rd138;
	mul.wide.s32 	%rd139, %r658, 128;
	add.s64 	%rd83, %rd125, %rd139;
	mul.wide.s32 	%rd140, %r665, 128;
	add.s64 	%rd84, %rd125, %rd140;
	mul.wide.s32 	%rd141, %r664, 128;
	add.s64 	%rd85, %rd125, %rd141;
	mul.wide.s32 	%rd142, %r663, 128;
	add.s64 	%rd86, %rd125, %rd142;
	mul.wide.s32 	%rd143, %r662, 128;
	add.s64 	%rd87, %rd125, %rd143;
	mul.wide.s32 	%rd144, %r661, 128;
	add.s64 	%rd88, %rd125, %rd144;
	mul.wide.s32 	%rd145, %r660, 128;
	add.s64 	%rd89, %rd125, %rd145;
	// begin inline asm
	mov.u32 %r574, 0x0;
	@%p23 ld.global.b32 { %r574 }, [ %rd82 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r575, 0x0;
	@%p24 ld.global.b32 { %r575 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r576, 0x0;
	@%p25 ld.global.b32 { %r576 }, [ %rd84 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r577, 0x0;
	@%p26 ld.global.b32 { %r577 }, [ %rd85 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r578, 0x0;
	@%p27 ld.global.b32 { %r578 }, [ %rd86 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r579, 0x0;
	@%p28 ld.global.b32 { %r579 }, [ %rd87 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r580, 0x0;
	@%p29 ld.global.b32 { %r580 }, [ %rd88 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r581, 0x0;
	@%p30 ld.global.b32 { %r581 }, [ %rd89 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r582, 0x0;
	@%p31 ld.global.b32 { %r582 }, [ %rd90 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r583, 0x0;
	@%p32 ld.global.b32 { %r583 }, [ %rd91 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r584, 0x0;
	@%p33 ld.global.b32 { %r584 }, [ %rd92 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r585, 0x0;
	@%p34 ld.global.b32 { %r585 }, [ %rd93 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r586, 0x0;
	@%p35 ld.global.b32 { %r586 }, [ %rd94 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r587, 0x0;
	@%p36 ld.global.b32 { %r587 }, [ %rd95 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r588, 0x0;
	@%p37 ld.global.b32 { %r588 }, [ %rd96 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r589, 0x0;
	@%p38 ld.global.b32 { %r589 }, [ %rd97 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r674, %r572, %r574;
	sub.f32 	%r675, %r572, %r575;
	sub.f32 	%r676, %r573, %r574;
	sub.f32 	%r677, %r573, %r575;
	sub.f32 	%r678, %r572, %r576;
	sub.f32 	%r679, %r572, %r577;
	sub.f32 	%r680, %r573, %r576;
	sub.f32 	%r681, %r573, %r577;
	sub.f32 	%r682, %r572, %r578;
	sub.f32 	%r683, %r572, %r579;
	sub.f32 	%r684, %r573, %r578;
	sub.f32 	%r685, %r573, %r579;
	sub.f32 	%r686, %r572, %r580;
	sub.f32 	%r687, %r572, %r581;
	sub.f32 	%r688, %r573, %r580;
	sub.f32 	%r689, %r573, %r581;
	sub.f32 	%r690, %r572, %r582;
	sub.f32 	%r691, %r572, %r583;
	sub.f32 	%r692, %r573, %r582;
	sub.f32 	%r693, %r573, %r583;
	sub.f32 	%r694, %r572, %r584;
	sub.f32 	%r695, %r572, %r585;
	sub.f32 	%r696, %r573, %r584;
	sub.f32 	%r697, %r573, %r585;
	sub.f32 	%r698, %r572, %r586;
	sub.f32 	%r699, %r572, %r587;
	sub.f32 	%r700, %r573, %r586;
	sub.f32 	%r701, %r573, %r587;
	sub.f32 	%r702, %r573, %r588;
	sub.f32 	%r703, %r573, %r589;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r704, %r674, 0f3FB8AA3B;
	ex2.approx.f32 	%r705, %r704;
	mul.f32 	%r706, %r675, 0f3FB8AA3B;
	ex2.approx.f32 	%r707, %r706;
	mul.f32 	%r708, %r676, 0f3FB8AA3B;
	ex2.approx.f32 	%r709, %r708;
	mul.f32 	%r710, %r677, 0f3FB8AA3B;
	ex2.approx.f32 	%r711, %r710;
	mul.f32 	%r712, %r678, 0f3FB8AA3B;
	ex2.approx.f32 	%r713, %r712;
	mul.f32 	%r714, %r679, 0f3FB8AA3B;
	ex2.approx.f32 	%r715, %r714;
	mul.f32 	%r716, %r680, 0f3FB8AA3B;
	ex2.approx.f32 	%r717, %r716;
	mul.f32 	%r718, %r681, 0f3FB8AA3B;
	ex2.approx.f32 	%r719, %r718;
	mul.f32 	%r720, %r682, 0f3FB8AA3B;
	ex2.approx.f32 	%r721, %r720;
	mul.f32 	%r722, %r683, 0f3FB8AA3B;
	ex2.approx.f32 	%r723, %r722;
	mul.f32 	%r724, %r684, 0f3FB8AA3B;
	ex2.approx.f32 	%r725, %r724;
	mul.f32 	%r726, %r685, 0f3FB8AA3B;
	ex2.approx.f32 	%r727, %r726;
	mul.f32 	%r728, %r686, 0f3FB8AA3B;
	ex2.approx.f32 	%r729, %r728;
	mul.f32 	%r730, %r687, 0f3FB8AA3B;
	ex2.approx.f32 	%r731, %r730;
	mul.f32 	%r732, %r688, 0f3FB8AA3B;
	ex2.approx.f32 	%r733, %r732;
	mul.f32 	%r734, %r689, 0f3FB8AA3B;
	ex2.approx.f32 	%r735, %r734;
	mul.f32 	%r736, %r690, 0f3FB8AA3B;
	ex2.approx.f32 	%r737, %r736;
	mul.f32 	%r738, %r691, 0f3FB8AA3B;
	ex2.approx.f32 	%r739, %r738;
	mul.f32 	%r740, %r692, 0f3FB8AA3B;
	ex2.approx.f32 	%r741, %r740;
	mul.f32 	%r742, %r693, 0f3FB8AA3B;
	ex2.approx.f32 	%r743, %r742;
	mul.f32 	%r744, %r694, 0f3FB8AA3B;
	ex2.approx.f32 	%r745, %r744;
	mul.f32 	%r746, %r695, 0f3FB8AA3B;
	ex2.approx.f32 	%r747, %r746;
	mul.f32 	%r748, %r696, 0f3FB8AA3B;
	ex2.approx.f32 	%r749, %r748;
	mul.f32 	%r750, %r697, 0f3FB8AA3B;
	ex2.approx.f32 	%r751, %r750;
	mul.f32 	%r752, %r698, 0f3FB8AA3B;
	ex2.approx.f32 	%r753, %r752;
	mul.f32 	%r754, %r699, 0f3FB8AA3B;
	ex2.approx.f32 	%r755, %r754;
	mul.f32 	%r756, %r700, 0f3FB8AA3B;
	ex2.approx.f32 	%r757, %r756;
	mul.f32 	%r758, %r701, 0f3FB8AA3B;
	ex2.approx.f32 	%r759, %r758;
	mul.f32 	%r760, %r702, 0f3FB8AA3B;
	ex2.approx.f32 	%r761, %r760;
	mul.f32 	%r762, %r703, 0f3FB8AA3B;
	ex2.approx.f32 	%r763, %r762;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r764, %r972, %r705;
	mul.f32 	%r765, %r973, %r707;
	mul.f32 	%r766, %r974, %r709;
	mul.f32 	%r767, %r975, %r711;
	mul.f32 	%r768, %r976, %r713;
	mul.f32 	%r769, %r977, %r715;
	mul.f32 	%r770, %r978, %r717;
	mul.f32 	%r771, %r979, %r719;
	mul.f32 	%r772, %r980, %r721;
	mul.f32 	%r773, %r981, %r723;
	mul.f32 	%r774, %r982, %r725;
	mul.f32 	%r775, %r983, %r727;
	mul.f32 	%r776, %r984, %r729;
	mul.f32 	%r777, %r985, %r731;
	mul.f32 	%r778, %r986, %r733;
	mul.f32 	%r779, %r987, %r735;
	mul.f32 	%r780, %r988, %r737;
	mul.f32 	%r781, %r989, %r739;
	mul.f32 	%r782, %r990, %r741;
	mul.f32 	%r783, %r991, %r743;
	mul.f32 	%r784, %r992, %r745;
	mul.f32 	%r785, %r993, %r747;
	mul.f32 	%r786, %r994, %r749;
	mul.f32 	%r787, %r995, %r751;
	mul.f32 	%r788, %r996, %r753;
	mul.f32 	%r789, %r997, %r755;
	mul.f32 	%r790, %r998, %r757;
	mul.f32 	%r791, %r999, %r759;
	mul.f32 	%r792, %r1002, %r761;
	mul.f32 	%r793, %r1003, %r763;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r794, %r764, %r654;
	mul.f32 	%r795, %r765, %r654;
	mul.f32 	%r796, %r766, %r655;
	mul.f32 	%r797, %r767, %r655;
	mul.f32 	%r798, %r768, %r654;
	mul.f32 	%r799, %r769, %r654;
	mul.f32 	%r800, %r770, %r655;
	mul.f32 	%r801, %r771, %r655;
	mul.f32 	%r802, %r772, %r654;
	mul.f32 	%r803, %r773, %r654;
	mul.f32 	%r804, %r774, %r655;
	mul.f32 	%r805, %r775, %r655;
	mul.f32 	%r806, %r776, %r654;
	mul.f32 	%r807, %r777, %r654;
	mul.f32 	%r808, %r778, %r655;
	mul.f32 	%r809, %r779, %r655;
	mul.f32 	%r810, %r780, %r654;
	mul.f32 	%r811, %r781, %r654;
	mul.f32 	%r812, %r782, %r655;
	mul.f32 	%r813, %r783, %r655;
	mul.f32 	%r814, %r784, %r654;
	mul.f32 	%r815, %r785, %r654;
	mul.f32 	%r816, %r786, %r655;
	mul.f32 	%r817, %r787, %r655;
	mul.f32 	%r818, %r788, %r654;
	mul.f32 	%r819, %r789, %r654;
	mul.f32 	%r820, %r790, %r655;
	mul.f32 	%r821, %r791, %r655;
	mul.f32 	%r822, %r792, %r655;
	mul.f32 	%r823, %r793, %r655;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd146, %r666, 8192;
	add.s64 	%rd147, %rd137, %rd146;
	mul.wide.u32 	%rd148, %r631, 4;
	add.s64 	%rd98, %rd147, %rd148;
	mul.wide.s32 	%rd149, %r667, 8192;
	add.s64 	%rd150, %rd137, %rd149;
	add.s64 	%rd99, %rd150, %rd148;
	mul.wide.s32 	%rd151, %r668, 8192;
	add.s64 	%rd152, %rd137, %rd151;
	add.s64 	%rd100, %rd152, %rd148;
	mul.wide.s32 	%rd153, %r669, 8192;
	add.s64 	%rd154, %rd137, %rd153;
	add.s64 	%rd101, %rd154, %rd148;
	mul.wide.s32 	%rd155, %r670, 8192;
	add.s64 	%rd156, %rd137, %rd155;
	add.s64 	%rd102, %rd156, %rd148;
	mul.wide.s32 	%rd157, %r671, 8192;
	add.s64 	%rd158, %rd137, %rd157;
	add.s64 	%rd103, %rd158, %rd148;
	mul.wide.s32 	%rd159, %r672, 8192;
	add.s64 	%rd160, %rd137, %rd159;
	add.s64 	%rd104, %rd160, %rd148;
	mul.wide.s32 	%rd161, %r673, 8192;
	add.s64 	%rd162, %rd137, %rd161;
	add.s64 	%rd105, %rd162, %rd148;
	and.pred 	%p39, %p47, %p100;
	and.pred 	%p40, %p47, %p99;
	and.pred 	%p41, %p47, %p98;
	and.pred 	%p42, %p47, %p97;
	and.pred 	%p43, %p47, %p96;
	and.pred 	%p44, %p47, %p95;
	and.pred 	%p45, %p47, %p94;
	and.pred 	%p46, %p47, %p93;
	shl.b32 	%r824, %r1, 4;
	and.b32 	%r825, %r824, 448;
	shl.b32 	%r826, %r1, 5;
	and.b32 	%r827, %r826, 3072;
	or.b32 	%r828, %r827, %r825;
	or.b32 	%r829, %r828, %r624;
	and.b32 	%r830, %r630, 508;
	shr.u32 	%r831, %r828, 2;
	add.s32 	%r833, %r131, %r831;
	shl.b32 	%r834, %r829, 2;
	add.s32 	%r835, %r833, %r834;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r836, %r794, 0, %p107;
	selp.b32 	%r837, %r836, 0, %p66;
	selp.b32 	%r838, %r837, 0, %p65;
	selp.b32 	%r839, %r795, 0, %p108;
	selp.b32 	%r840, %r839, 0, %p67;
	selp.b32 	%r841, %r840, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835], {%r838, %r841};
	or.b32 	%r842, %r828, 512;
	shr.u32 	%r843, %r842, 2;
	add.s32 	%r844, %r131, %r843;
	add.s32 	%r845, %r844, %r834;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r846, %r796, 0, %p107;
	selp.b32 	%r847, %r846, 0, %p64;
	selp.b32 	%r848, %r797, 0, %p108;
	selp.b32 	%r849, %r848, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2048], {%r847, %r849};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r850, %r798, 0, %p101;
	selp.b32 	%r851, %r850, 0, %p68;
	selp.b32 	%r852, %r851, 0, %p65;
	selp.b32 	%r853, %r799, 0, %p102;
	selp.b32 	%r854, %r853, 0, %p69;
	selp.b32 	%r855, %r854, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+32], {%r852, %r855};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r856, %r800, 0, %p101;
	selp.b32 	%r857, %r856, 0, %p66;
	selp.b32 	%r858, %r857, 0, %p64;
	selp.b32 	%r859, %r801, 0, %p102;
	selp.b32 	%r860, %r859, 0, %p70;
	selp.b32 	%r861, %r860, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2080], {%r858, %r861};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r862, %r802, 0, %p103;
	selp.b32 	%r863, %r862, 0, %p71;
	selp.b32 	%r864, %r863, 0, %p65;
	selp.b32 	%r865, %r803, 0, %p104;
	selp.b32 	%r866, %r865, 0, %p72;
	selp.b32 	%r867, %r866, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+64], {%r864, %r867};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r868, %r804, 0, %p103;
	selp.b32 	%r869, %r868, 0, %p73;
	selp.b32 	%r870, %r869, 0, %p64;
	selp.b32 	%r871, %r805, 0, %p104;
	selp.b32 	%r872, %r871, 0, %p74;
	selp.b32 	%r873, %r872, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2112], {%r870, %r873};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r874, %r806, 0, %p105;
	selp.b32 	%r875, %r874, 0, %p75;
	selp.b32 	%r876, %r875, 0, %p65;
	selp.b32 	%r877, %r807, 0, %p106;
	selp.b32 	%r878, %r877, 0, %p76;
	selp.b32 	%r879, %r878, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+96], {%r876, %r879};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r880, %r808, 0, %p105;
	selp.b32 	%r881, %r880, 0, %p77;
	selp.b32 	%r882, %r881, 0, %p64;
	selp.b32 	%r883, %r809, 0, %p106;
	selp.b32 	%r884, %r883, 0, %p78;
	selp.b32 	%r885, %r884, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2144], {%r882, %r885};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r886, %r810, 0, %p63;
	selp.b32 	%r887, %r886, 0, %p79;
	selp.b32 	%r888, %r887, 0, %p65;
	selp.b32 	%r889, %r811, 0, %p62;
	selp.b32 	%r890, %r889, 0, %p80;
	selp.b32 	%r891, %r890, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+128], {%r888, %r891};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r892, %r812, 0, %p63;
	selp.b32 	%r893, %r892, 0, %p81;
	selp.b32 	%r894, %r893, 0, %p64;
	selp.b32 	%r895, %r813, 0, %p62;
	selp.b32 	%r896, %r895, 0, %p82;
	selp.b32 	%r897, %r896, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2176], {%r894, %r897};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r898, %r814, 0, %p61;
	selp.b32 	%r899, %r898, 0, %p83;
	selp.b32 	%r900, %r899, 0, %p65;
	selp.b32 	%r901, %r815, 0, %p60;
	selp.b32 	%r902, %r901, 0, %p84;
	selp.b32 	%r903, %r902, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+160], {%r900, %r903};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r904, %r816, 0, %p61;
	selp.b32 	%r905, %r904, 0, %p85;
	selp.b32 	%r906, %r905, 0, %p64;
	selp.b32 	%r907, %r817, 0, %p60;
	selp.b32 	%r908, %r907, 0, %p86;
	selp.b32 	%r909, %r908, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2208], {%r906, %r909};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r910, %r818, 0, %p59;
	selp.b32 	%r911, %r910, 0, %p87;
	selp.b32 	%r912, %r911, 0, %p65;
	selp.b32 	%r913, %r819, 0, %p58;
	selp.b32 	%r914, %r913, 0, %p88;
	selp.b32 	%r915, %r914, 0, %p65;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r835+192], {%r912, %r915};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r916, %r820, 0, %p59;
	selp.b32 	%r917, %r916, 0, %p89;
	selp.b32 	%r918, %r917, 0, %p64;
	selp.b32 	%r919, %r821, 0, %p58;
	selp.b32 	%r920, %r919, 0, %p90;
	selp.b32 	%r921, %r920, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2240], {%r918, %r921};
	mov.b32 	%r922, 0;
	st.shared.v2.b32 	[%r835+224], {%r922, %r922};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r923, %r822, 0, %p51;
	selp.b32 	%r924, %r923, 0, %p91;
	selp.b32 	%r925, %r924, 0, %p64;
	selp.b32 	%r926, %r823, 0, %p50;
	selp.b32 	%r927, %r926, 0, %p92;
	selp.b32 	%r928, %r927, 0, %p64;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r845+2272], {%r925, %r928};
	bar.sync 	0;
	and.b32 	%r929, %r3, 28;
	shl.b32 	%r930, %r929, 2;
	add.s32 	%r931, %r131, %r930;
	shl.b32 	%r932, %r830, 2;
	add.s32 	%r933, %r931, %r932;
	ld.shared.v4.b32 	{%r590, %r591, %r592, %r593}, [%r933];
	or.b32 	%r934, %r830, 512;
	shr.u32 	%r935, %r934, 2;
	and.b32 	%r936, %r935, 240;
	add.s32 	%r937, %r131, %r936;
	add.s32 	%r938, %r937, %r932;
	ld.shared.v4.b32 	{%r594, %r595, %r596, %r597}, [%r938+2048];
	or.b32 	%r939, %r830, 1024;
	shr.u32 	%r940, %r939, 2;
	and.b32 	%r941, %r940, 368;
	add.s32 	%r942, %r131, %r941;
	add.s32 	%r943, %r942, %r932;
	ld.shared.v4.b32 	{%r598, %r599, %r600, %r601}, [%r943+4096];
	or.b32 	%r944, %r830, 1536;
	shr.u32 	%r945, %r944, 2;
	and.b32 	%r946, %r945, 496;
	add.s32 	%r947, %r131, %r946;
	add.s32 	%r948, %r947, %r932;
	ld.shared.v4.b32 	{%r602, %r603, %r604, %r605}, [%r948+6144];
	or.b32 	%r949, %r830, 2048;
	shr.u32 	%r950, %r949, 2;
	and.b32 	%r951, %r950, 624;
	add.s32 	%r952, %r131, %r951;
	add.s32 	%r953, %r952, %r932;
	ld.shared.v4.b32 	{%r606, %r607, %r608, %r609}, [%r953+8192];
	or.b32 	%r954, %r830, 2560;
	shr.u32 	%r955, %r954, 2;
	and.b32 	%r956, %r955, 752;
	add.s32 	%r957, %r131, %r956;
	add.s32 	%r958, %r957, %r932;
	ld.shared.v4.b32 	{%r610, %r611, %r612, %r613}, [%r958+10240];
	or.b32 	%r959, %r830, 3072;
	shr.u32 	%r960, %r959, 2;
	and.b32 	%r961, %r960, 880;
	add.s32 	%r962, %r131, %r961;
	add.s32 	%r963, %r962, %r932;
	ld.shared.v4.b32 	{%r614, %r615, %r616, %r617}, [%r963+12288];
	or.b32 	%r964, %r630, 3584;
	shr.u32 	%r965, %r964, 2;
	and.b32 	%r966, %r965, 1008;
	add.s32 	%r967, %r131, %r966;
	shl.b32 	%r968, %r964, 2;
	add.s32 	%r969, %r967, %r968;
	ld.shared.v4.b32 	{%r618, %r619, %r620, %r621}, [%r969];
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd98 + 0 ], { %r590, %r591, %r592, %r593 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd99 + 0 ], { %r594, %r595, %r596, %r597 };
	// end inline asm
	// begin inline asm
	@%p41 st.global.v4.b32 [ %rd100 + 0 ], { %r598, %r599, %r600, %r601 };
	// end inline asm
	// begin inline asm
	@%p42 st.global.v4.b32 [ %rd101 + 0 ], { %r602, %r603, %r604, %r605 };
	// end inline asm
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd102 + 0 ], { %r606, %r607, %r608, %r609 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd103 + 0 ], { %r610, %r611, %r612, %r613 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd104 + 0 ], { %r614, %r615, %r616, %r617 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd105 + 0 ], { %r618, %r619, %r620, %r621 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
