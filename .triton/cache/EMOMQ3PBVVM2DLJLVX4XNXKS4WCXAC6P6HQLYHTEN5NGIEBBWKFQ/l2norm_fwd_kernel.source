#loc = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0)
#loc21 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":284:0)
#loc23 = loc(unknown)
#loc26 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0)
module {
  tt.func public @l2norm_fwd_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg3: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc2)
    %c8_i32_0 = arith.constant 8 : i32 loc(#loc2)
    %1 = arith.extsi %0 : i32 to i64 loc(#loc2)
    %2 = arith.extsi %c8_i32_0 : i32 to i64 loc(#loc2)
    %3 = arith.muli %1, %2 : i64 loc(#loc2)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc2)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc2)
    %4 = arith.cmpi sle, %3, %c2147483647_i64 : i64 loc(#loc2)
    %5 = arith.cmpi sge, %3, %c-2147483648_i64 : i64 loc(#loc2)
    %6 = arith.andi %4, %5 : i1 loc(#loc2)
    %7 = arith.muli %0, %c8_i32_0 : i32 loc(#loc2)
    %c49152_i64 = arith.constant 49152 : i64 loc(#loc3)
    %c128_i64 = arith.constant 128 : i64 loc(#loc3)
    %c128_i64_1 = arith.constant 128 : i64 loc(#loc3)
    %c1_i64 = arith.constant 1 : i64 loc(#loc3)
    %c0_i32 = arith.constant 0 : i32 loc(#loc3)
    %8 = tt.make_tensor_ptr %arg0, [%c49152_i64, %c128_i64], [%c128_i64_1, %c1_i64], [%7, %c0_i32] {order = array<i32: 1, 0>} : <tensor<8x128xbf16>> loc(#loc3)
    %c8_i32_2 = arith.constant 8 : i32 loc(#loc4)
    %c8_i32_3 = arith.constant 8 : i32 loc(#loc4)
    %9 = arith.extsi %0 : i32 to i64 loc(#loc4)
    %10 = arith.extsi %c8_i32_3 : i32 to i64 loc(#loc4)
    %11 = arith.muli %9, %10 : i64 loc(#loc4)
    %c2147483647_i64_4 = arith.constant 2147483647 : i64 loc(#loc4)
    %c-2147483648_i64_5 = arith.constant -2147483648 : i64 loc(#loc4)
    %12 = arith.cmpi sle, %11, %c2147483647_i64_4 : i64 loc(#loc4)
    %13 = arith.cmpi sge, %11, %c-2147483648_i64_5 : i64 loc(#loc4)
    %14 = arith.andi %12, %13 : i1 loc(#loc4)
    %15 = arith.muli %0, %c8_i32_3 : i32 loc(#loc4)
    %c49152_i64_6 = arith.constant 49152 : i64 loc(#loc5)
    %c128_i64_7 = arith.constant 128 : i64 loc(#loc5)
    %c128_i64_8 = arith.constant 128 : i64 loc(#loc5)
    %c1_i64_9 = arith.constant 1 : i64 loc(#loc5)
    %c0_i32_10 = arith.constant 0 : i32 loc(#loc5)
    %16 = tt.make_tensor_ptr %arg1, [%c49152_i64_6, %c128_i64_7], [%c128_i64_8, %c1_i64_9], [%15, %c0_i32_10] {order = array<i32: 1, 0>} : <tensor<8x128xbf16>> loc(#loc5)
    %c8_i32_11 = arith.constant 8 : i32 loc(#loc6)
    %c8_i32_12 = arith.constant 8 : i32 loc(#loc6)
    %17 = arith.extsi %0 : i32 to i64 loc(#loc6)
    %18 = arith.extsi %c8_i32_12 : i32 to i64 loc(#loc6)
    %19 = arith.muli %17, %18 : i64 loc(#loc6)
    %c2147483647_i64_13 = arith.constant 2147483647 : i64 loc(#loc6)
    %c-2147483648_i64_14 = arith.constant -2147483648 : i64 loc(#loc6)
    %20 = arith.cmpi sle, %19, %c2147483647_i64_13 : i64 loc(#loc6)
    %21 = arith.cmpi sge, %19, %c-2147483648_i64_14 : i64 loc(#loc6)
    %22 = arith.andi %20, %21 : i1 loc(#loc6)
    %23 = arith.muli %0, %c8_i32_12 : i32 loc(#loc6)
    %c49152_i64_15 = arith.constant 49152 : i64 loc(#loc7)
    %c1_i64_16 = arith.constant 1 : i64 loc(#loc7)
    %24 = tt.make_tensor_ptr %arg2, [%c49152_i64_15], [%c1_i64_16], [%23] {order = array<i32: 0>} : <tensor<8xf32>> loc(#loc7)
    %25 = tt.load %8 {boundaryCheck = array<i32: 0, 1>} : !tt.ptr<tensor<8x128xbf16>> loc(#loc8)
    %26 = arith.extf %25 : tensor<8x128xbf16> to tensor<8x128xf32> loc(#loc9)
    %27 = arith.mulf %26, %26 : tensor<8x128xf32> loc(#loc10)
    %28 = tt.call @"triton.language.standard.sum__fp32S8_128S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%27) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc11)
    %29 = tt.splat %arg3 : f32 -> tensor<8xf32> loc(#loc12)
    %30 = arith.addf %28, %29 : tensor<8xf32> loc(#loc12)
    %31 = math.sqrt %30 : tensor<8xf32> loc(#loc13)
    %c1_i32 = arith.constant 1 : i32 loc(#loc14)
    %cst = arith.constant 1.000000e+00 : f32 loc(#loc14)
    %cst_17 = arith.constant dense<1.000000e+00> : tensor<8xf32> loc(#loc14)
    %32 = arith.divf %cst_17, %31 : tensor<8xf32> loc(#loc14)
    %33 = tt.expand_dims %32 {axis = 1 : i32} : tensor<8xf32> -> tensor<8x1xf32> loc(#loc15)
    %34 = tt.broadcast %33 : tensor<8x1xf32> -> tensor<8x128xf32> loc(#loc16)
    %35 = arith.mulf %26, %34 : tensor<8x128xf32> loc(#loc16)
    %36 = arith.truncf %35 : tensor<8x128xf32> to tensor<8x128xbf16> loc(#loc17)
    tt.store %16, %36 {boundaryCheck = array<i32: 0, 1>} : !tt.ptr<tensor<8x128xbf16>> loc(#loc18)
    tt.store %24, %32 {boundaryCheck = array<i32: 0>} : !tt.ptr<tensor<8xf32>> loc(#loc19)
    tt.return loc(#loc20)
  } loc(#loc)
  tt.func private @"triton.language.standard.sum__fp32S8_128S__(1,)cconstexpr_1__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<8x128xf32> loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":284:0)) -> tensor<8xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 1 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc22)
      tt.reduce.return %2 : f32 loc(#loc22)
    }) : (tensor<8x128xf32>) -> tensor<8xf32> loc(#loc22)
    tt.return %0 : tensor<8xf32> loc(#loc24)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<8xf32> loc(#loc25)
    tt.return %1 : tensor<8xf32> loc(#loc25)
  } loc(#loc21)
  tt.func private @triton.language.standard._sum_combine__fp32_fp32__(%arg0: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0), %arg1: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0)) -> f32 attributes {noinline = false} {
    %0 = arith.addf %arg0, %arg1 : f32 loc(#loc27)
    tt.return %0 : f32 loc(#loc28)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc29)
    tt.return %1 : f32 loc(#loc29)
  } loc(#loc26)
} loc(#loc)
#loc1 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":98:24)
#loc2 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":99:54)
#loc3 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":99:72)
#loc4 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":100:54)
#loc5 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":100:72)
#loc6 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":101:56)
#loc7 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":101:69)
#loc8 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":103:18)
#loc9 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":103:49)
#loc10 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:38)
#loc11 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:43)
#loc12 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:48)
#loc13 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:25)
#loc14 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:17)
#loc15 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":105:23)
#loc16 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":105:16)
#loc17 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":107:25)
#loc18 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":107:18)
#loc19 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":108:21)
#loc20 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":108:4)
#loc22 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:36)
#loc24 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:11)
#loc25 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:4)
#loc27 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:15)
#loc28 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:11)
#loc29 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:4)
