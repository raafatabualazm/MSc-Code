//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 256
{
	.reg .pred 	%p<64>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<485>;
	.reg .b64 	%rd<101>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r45, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd12, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd19, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r53, %ctaid.x;
	ld.param.b64 	%rd20, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r54, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r55, %r54, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r56, %r54, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r57, %r53, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r58, %r1, 3, 1;
	bfe.s32 	%r59, %r1, 4, 1;
	bfe.u32 	%r60, %r1, 2, 3;
	bfe.u32 	%r61, %r1, 2, 5;
	and.b32 	%r3, %r1, 128;
	shr.u32 	%r4, %r3, 2;
	or.b32 	%r62, %r61, %r4;
	shr.u32 	%r63, %r1, 1;
	and.b32 	%r64, %r63, 48;
	or.b32 	%r5, %r64, %r60;
	or.b32 	%r6, %r5, 8;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r65, %r55, %r45;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r65;
	mul.wide.s32 	%rd21, %r65, 2;
	add.s64 	%rd22, %rd20, %rd21;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r56;
	mul.wide.u32 	%rd23, %r56, 2;
	add.s64 	%rd24, %rd22, %rd23;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r45;
	cvt.s64.s32 	%rd4, %r57;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd25, %r62;
	cvt.u64.u32 	%rd26, %r5;
	cvt.u64.u32 	%rd27, %r6;
	or.b64 	%rd28, %rd26, %rd4;
	or.b64 	%rd29, %rd27, %rd4;
	shl.b64 	%rd5, %rd28, 5;
	shl.b64 	%rd6, %rd29, 5;
	shl.b64 	%rd30, %rd28, 6;
	add.s64 	%rd14, %rd24, %rd30;
	shl.b64 	%rd31, %rd29, 6;
	add.s64 	%rd15, %rd24, %rd31;
	setp.gt.s32 	%p6, %r57, -1;
	setp.lt.s64 	%p7, %rd28, %rd3;
	setp.lt.s64 	%p8, %rd29, %rd3;
	and.pred 	%p16, %p6, %p7;
	and.pred 	%p17, %p6, %p8;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p16 ld.global.b16 { %rs3 }, [ %rd14 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p17 ld.global.b16 { %rs4 }, [ %rd15 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r7, %r65, %r56;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r66, %r7, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd32, %r66, 2;
	add.s64 	%rd33, %rd19, %rd32;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r67, %r1, 3;
	and.b32 	%r68, %r67, 24;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	or.b64 	%rd34, %rd4, %rd25;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p9, %rd34, %rd3;
	and.pred 	%p3, %p6, %p9;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	shl.b64 	%rd35, %rd34, 13;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd36, %rd33, %rd35;
	mul.wide.u32 	%rd37, %r68, 2;
	add.s64 	%rd16, %rd36, %rd37;
	and.b32 	%r69, %r67, 56;
	and.b32 	%r70, %r58, 72;
	xor.b32 	%r71, %r70, %r69;
	and.b32 	%r72, %r59, 144;
	xor.b32 	%r73, %r71, %r72;
	and.b32 	%r74, %r67, 1792;
	or.b32 	%r75, %r73, %r74;
	shl.b32 	%r76, %r75, 1;
	mov.b32 	%r77, global_smem;
	add.s32 	%r46, %r77, %r76;
	selp.b32 	%r47, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r46 + 0 ], [ %rd16 + 0 ], 0x10, %r47;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd17, %rd16, 64;
	bar.sync 	0;
	add.s32 	%r48, %r46, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r48 + 0 ], [ %rd17 + 0 ], 0x10, %r47;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	and.b32 	%r78, %r1, 3;
	mul.wide.u32 	%rd38, %r78, 16;
	or.b64 	%rd39, %rd35, %rd38;
	shr.u32 	%r79, %r54, 5;
	mul.lo.s32 	%r80, %r45, %r79;
	shl.b32 	%r81, %r80, 12;
	shl.b32 	%r82, %r56, 7;
	or.b32 	%r83, %r81, %r82;
	mul.wide.s32 	%rd40, %r83, 2;
	add.s64 	%rd41, %rd39, %rd40;
	add.s64 	%rd42, %rd41, %rd19;
	add.s64 	%rd99, %rd42, 128;
	mov.b32 	%r469, 0f00000000;
	mov.b32 	%r468, 1;
	mov.b32 	%r467, -1;
	mov.b64 	%rd100, 0;
	mov.b32 	%r470, %r469;
	mov.b32 	%r471, %r469;
	mov.b32 	%r472, %r469;
	mov.b32 	%r473, %r469;
	mov.b32 	%r474, %r469;
	mov.b32 	%r475, %r469;
	mov.b32 	%r476, %r469;
	mov.b32 	%r477, %r469;
	mov.b32 	%r478, %r469;
	mov.b32 	%r479, %r469;
	mov.b32 	%r480, %r469;
	mov.b32 	%r481, %r469;
	mov.b32 	%r482, %r469;
	mov.b32 	%r483, %r469;
	mov.b32 	%r484, %r469;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r194, %r467, 1;
	setp.gt.s32 	%p12, %r194, 2;
	selp.b32 	%r467, 0, %r194, %p12;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	1;
	bar.sync 	0;
	shl.b32 	%r195, %r467, 12;
	add.s32 	%r164, %r77, %r195;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r197, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r198, %r164, 4, 14;
	cvt.u64.u32 	%rd48, %r198;
	or.b64 	%rd43, %rd48, -9223371899399045120;
	shl.b32 	%r199, %r197, 9;
	and.b32 	%r200, %r199, 2048;
	add.s32 	%r201, %r200, %r164;
	bfe.u32 	%r202, %r201, 4, 14;
	cvt.u64.u32 	%rd49, %r202;
	or.b64 	%rd44, %rd49, -9223371899399045120;
	mov.pred 	%p10, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477,%r478,%r479,%r480,%r481,%r482,%r483,%r484}, %rd43, %rd44, %p10, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r203, %r164, 32;
	bfe.u32 	%r204, %r203, 4, 14;
	cvt.u64.u32 	%rd50, %r204;
	or.b64 	%rd45, %rd50, -9223371899399045120;
	add.s32 	%r205, %r203, %r200;
	bfe.u32 	%r206, %r205, 4, 14;
	cvt.u64.u32 	%rd51, %r206;
	or.b64 	%rd46, %rd51, -9223371899399045120;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477,%r478,%r479,%r480,%r481,%r482,%r483,%r484}, %rd45, %rd46, %p10, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r169, 0;
	mov.b32 	%r165, %r169;
	mov.b32 	%r166, %r169;
	mov.b32 	%r168, %r169;
	mov.b32 	%r167, %r164;
	// begin inline asm
	// wait for regs: %r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477,%r478,%r479,%r480,%r481,%r482,%r483,%r484,%r164,%r165,%r166,%r167,%r168,%r169
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r207, %r468, 1;
	setp.gt.s32 	%p13, %r207, 2;
	selp.b32 	%r468, 0, %r207, %p13;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.u64 	%p14, %rd100, 2;
	shl.b32 	%r208, %r468, 12;
	bar.sync 	0;
	add.s32 	%r192, %r46, %r208;
	selp.b32 	%r209, 16, 0, %p14;
	selp.b32 	%r193, %r209, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r192 + 0 ], [ %rd99 + 0 ], 0x10, %r193;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s64 	%rd100, %rd100, 1;
	add.s64 	%rd99, %rd99, 64;
	setp.ne.s64 	%p15, %rd100, 4;
	@%p15 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r268, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p30, %r268, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r269, %r1, 1;
	and.b32 	%r270, %r269, 6;
	shr.u32 	%r271, %r1, 4;
	shl.b32 	%r272, %r1, 2;
	and.b32 	%r273, %r272, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r274, %r6, %r268;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p31, %r274, %r45;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r275, %r5, %r268;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p32, %r275, %r45;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r469,%r470,%r471,%r472,%r473,%r474,%r475,%r476,%r477,%r478,%r479,%r480,%r481,%r482,%r483,%r484
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd66, %rd1, 2;
	add.s64 	%rd67, %rd12, %rd66;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd68, %rd2, 2;
	add.s64 	%rd69, %rd67, %rd68;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd70, %rd5, 2;
	add.s64 	%rd52, %rd69, %rd70;
	shl.b64 	%rd71, %rd6, 2;
	add.s64 	%rd53, %rd69, %rd71;
	// begin inline asm
	mov.u32 %r242, 0x0;
	@%p16 ld.global.b32 { %r242 }, [ %rd52 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r243, 0x0;
	@%p17 ld.global.b32 { %r243 }, [ %rd53 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r276, %rs3;
	cvt.f32.bf16 	%r277, %rs4;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r278, %r7, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd72, %r278, 4;
	add.s64 	%rd73, %rd13, %rd72;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r279, %r1, 4, 4;
	or.b32 	%r280, %r271, %r268;
	or.b32 	%r281, %r270, %r4;
	or.b32 	%r282, %r281, 25;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd74, %r282;
	or.b64 	%rd75, %rd74, %rd4;
	setp.lt.s64 	%p33, %rd75, %rd3;
	and.pred 	%p25, %p30, %p33;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r283, %r281, 24;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd76, %r283;
	or.b64 	%rd77, %rd76, %rd4;
	setp.lt.s64 	%p34, %rd77, %rd3;
	and.pred 	%p24, %p30, %p34;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r284, %r281, 17;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd78, %r284;
	or.b64 	%rd79, %rd78, %rd4;
	setp.lt.s64 	%p35, %rd79, %rd3;
	and.pred 	%p23, %p30, %p35;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r285, %r281, 16;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd80, %r285;
	or.b64 	%rd81, %rd80, %rd4;
	setp.lt.s64 	%p36, %rd81, %rd3;
	and.pred 	%p22, %p30, %p36;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r286, %r281, 9;
	or.b32 	%r287, %r281, 8;
	or.b32 	%r288, %r281, 1;
	or.b32 	%r289, %r279, %r268;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r290, %r289, 16;
	or.b32 	%r291, %r289, 32;
	or.b32 	%r292, %r280, 48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p37, %r292, %r45;
	setp.lt.s32 	%p38, %r291, %r45;
	setp.lt.s32 	%p39, %r290, %r45;
	setp.lt.s32 	%p40, %r289, %r45;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r293, %r286, %r268;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p41, %r293, %r45;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p21, %p30, %p41;
	or.b32 	%r294, %r287, %r268;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p42, %r294, %r45;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p20, %p30, %p42;
	or.b32 	%r295, %r288, %r268;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p43, %r295, %r45;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p19, %p30, %p43;
	or.b32 	%r296, %r281, %r268;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p44, %r296, %r45;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p18, %p30, %p44;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r297, %r285, %r268;
	or.b32 	%r298, %r284, %r268;
	or.b32 	%r299, %r283, %r268;
	or.b32 	%r300, %r282, %r268;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p45, %r300, %r45;
	setp.lt.s32 	%p46, %r299, %r45;
	setp.lt.s32 	%p47, %r298, %r45;
	setp.lt.s32 	%p48, %r297, %r45;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd82, %r296, 128;
	add.s64 	%rd54, %rd69, %rd82;
	mul.wide.s32 	%rd83, %r295, 128;
	add.s64 	%rd55, %rd69, %rd83;
	mul.wide.s32 	%rd84, %r294, 128;
	add.s64 	%rd56, %rd69, %rd84;
	mul.wide.s32 	%rd85, %r293, 128;
	add.s64 	%rd57, %rd69, %rd85;
	shl.b64 	%rd86, %rd81, 7;
	add.s64 	%rd58, %rd69, %rd86;
	shl.b64 	%rd87, %rd79, 7;
	add.s64 	%rd59, %rd69, %rd87;
	shl.b64 	%rd88, %rd77, 7;
	add.s64 	%rd60, %rd69, %rd88;
	shl.b64 	%rd89, %rd75, 7;
	add.s64 	%rd61, %rd69, %rd89;
	// begin inline asm
	mov.u32 %r244, 0x0;
	@%p18 ld.global.b32 { %r244 }, [ %rd54 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r245, 0x0;
	@%p19 ld.global.b32 { %r245 }, [ %rd55 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r246, 0x0;
	@%p20 ld.global.b32 { %r246 }, [ %rd56 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r247, 0x0;
	@%p21 ld.global.b32 { %r247 }, [ %rd57 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r248, 0x0;
	@%p22 ld.global.b32 { %r248 }, [ %rd58 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r249, 0x0;
	@%p23 ld.global.b32 { %r249 }, [ %rd59 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r250, 0x0;
	@%p24 ld.global.b32 { %r250 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r251, 0x0;
	@%p25 ld.global.b32 { %r251 }, [ %rd61 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r301, %r242, %r244;
	sub.f32 	%r302, %r242, %r245;
	sub.f32 	%r303, %r243, %r244;
	sub.f32 	%r304, %r243, %r245;
	sub.f32 	%r305, %r242, %r246;
	sub.f32 	%r306, %r242, %r247;
	sub.f32 	%r307, %r243, %r246;
	sub.f32 	%r308, %r243, %r247;
	sub.f32 	%r309, %r242, %r248;
	sub.f32 	%r310, %r242, %r249;
	sub.f32 	%r311, %r243, %r248;
	sub.f32 	%r312, %r243, %r249;
	sub.f32 	%r313, %r242, %r250;
	sub.f32 	%r314, %r242, %r251;
	sub.f32 	%r315, %r243, %r250;
	sub.f32 	%r316, %r243, %r251;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r317, %r301, 0f3FB8AA3B;
	ex2.approx.f32 	%r318, %r317;
	mul.f32 	%r319, %r302, 0f3FB8AA3B;
	ex2.approx.f32 	%r320, %r319;
	mul.f32 	%r321, %r303, 0f3FB8AA3B;
	ex2.approx.f32 	%r322, %r321;
	mul.f32 	%r323, %r304, 0f3FB8AA3B;
	ex2.approx.f32 	%r324, %r323;
	mul.f32 	%r325, %r305, 0f3FB8AA3B;
	ex2.approx.f32 	%r326, %r325;
	mul.f32 	%r327, %r306, 0f3FB8AA3B;
	ex2.approx.f32 	%r328, %r327;
	mul.f32 	%r329, %r307, 0f3FB8AA3B;
	ex2.approx.f32 	%r330, %r329;
	mul.f32 	%r331, %r308, 0f3FB8AA3B;
	ex2.approx.f32 	%r332, %r331;
	mul.f32 	%r333, %r309, 0f3FB8AA3B;
	ex2.approx.f32 	%r334, %r333;
	mul.f32 	%r335, %r310, 0f3FB8AA3B;
	ex2.approx.f32 	%r336, %r335;
	mul.f32 	%r337, %r311, 0f3FB8AA3B;
	ex2.approx.f32 	%r338, %r337;
	mul.f32 	%r339, %r312, 0f3FB8AA3B;
	ex2.approx.f32 	%r340, %r339;
	mul.f32 	%r341, %r313, 0f3FB8AA3B;
	ex2.approx.f32 	%r342, %r341;
	mul.f32 	%r343, %r314, 0f3FB8AA3B;
	ex2.approx.f32 	%r344, %r343;
	mul.f32 	%r345, %r315, 0f3FB8AA3B;
	ex2.approx.f32 	%r346, %r345;
	mul.f32 	%r347, %r316, 0f3FB8AA3B;
	ex2.approx.f32 	%r348, %r347;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r349, %r469, %r318;
	mul.f32 	%r350, %r470, %r320;
	mul.f32 	%r351, %r471, %r322;
	mul.f32 	%r352, %r472, %r324;
	mul.f32 	%r353, %r473, %r326;
	mul.f32 	%r354, %r474, %r328;
	mul.f32 	%r355, %r475, %r330;
	mul.f32 	%r356, %r476, %r332;
	mul.f32 	%r357, %r477, %r334;
	mul.f32 	%r358, %r478, %r336;
	mul.f32 	%r359, %r479, %r338;
	mul.f32 	%r360, %r480, %r340;
	mul.f32 	%r361, %r481, %r342;
	mul.f32 	%r362, %r482, %r344;
	mul.f32 	%r363, %r483, %r346;
	mul.f32 	%r364, %r484, %r348;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r365, %r349, %r276;
	mul.f32 	%r366, %r350, %r276;
	mul.f32 	%r367, %r351, %r277;
	mul.f32 	%r368, %r352, %r277;
	mul.f32 	%r369, %r353, %r276;
	mul.f32 	%r370, %r354, %r276;
	mul.f32 	%r371, %r355, %r277;
	mul.f32 	%r372, %r356, %r277;
	mul.f32 	%r373, %r357, %r276;
	mul.f32 	%r374, %r358, %r276;
	mul.f32 	%r375, %r359, %r277;
	mul.f32 	%r376, %r360, %r277;
	mul.f32 	%r377, %r361, %r276;
	mul.f32 	%r378, %r362, %r276;
	mul.f32 	%r379, %r363, %r277;
	mul.f32 	%r380, %r364, %r277;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p49, %r5, %r281;
	setp.gt.u32 	%p50, %r5, %r288;
	setp.gt.u32 	%p51, %r6, %r281;
	setp.gt.u32 	%p52, %r6, %r288;
	setp.gt.u32 	%p53, %r5, %r287;
	setp.gt.u32 	%p54, %r5, %r286;
	setp.gt.u32 	%p55, %r6, %r286;
	setp.gt.u32 	%p56, %r5, %r285;
	setp.gt.u32 	%p57, %r5, %r284;
	setp.gt.u32 	%p58, %r6, %r285;
	setp.gt.u32 	%p59, %r6, %r284;
	setp.gt.u32 	%p60, %r5, %r283;
	setp.gt.u32 	%p61, %r5, %r282;
	setp.gt.u32 	%p62, %r6, %r283;
	setp.gt.u32 	%p63, %r6, %r282;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd90, %r289, 8192;
	add.s64 	%rd91, %rd73, %rd90;
	mul.wide.u32 	%rd92, %r273, 4;
	add.s64 	%rd62, %rd91, %rd92;
	mul.wide.s32 	%rd93, %r290, 8192;
	add.s64 	%rd94, %rd73, %rd93;
	add.s64 	%rd63, %rd94, %rd92;
	mul.wide.s32 	%rd95, %r291, 8192;
	add.s64 	%rd96, %rd73, %rd95;
	add.s64 	%rd64, %rd96, %rd92;
	mul.wide.s32 	%rd97, %r292, 8192;
	add.s64 	%rd98, %rd73, %rd97;
	add.s64 	%rd65, %rd98, %rd92;
	and.pred 	%p26, %p30, %p40;
	and.pred 	%p27, %p30, %p39;
	and.pred 	%p28, %p30, %p38;
	and.pred 	%p29, %p30, %p37;
	shl.b32 	%r381, %r1, 4;
	and.b32 	%r382, %r381, 448;
	shl.b32 	%r383, %r1, 5;
	and.b32 	%r384, %r383, 3072;
	or.b32 	%r385, %r384, %r382;
	or.b32 	%r386, %r281, %r385;
	and.b32 	%r387, %r272, 508;
	shl.b32 	%r388, %r3, 2;
	or.b32 	%r389, %r387, %r388;
	shr.u32 	%r390, %r385, 2;
	add.s32 	%r392, %r77, %r390;
	shl.b32 	%r393, %r386, 2;
	add.s32 	%r394, %r392, %r393;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r395, %r365, 0, %p44;
	selp.b32 	%r396, %r395, 0, %p49;
	selp.b32 	%r397, %r396, 0, %p32;
	selp.b32 	%r398, %r366, 0, %p43;
	selp.b32 	%r399, %r398, 0, %p50;
	selp.b32 	%r400, %r399, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r394], {%r397, %r400};
	or.b32 	%r401, %r385, 512;
	shr.u32 	%r402, %r401, 2;
	add.s32 	%r403, %r77, %r402;
	add.s32 	%r404, %r403, %r393;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r405, %r367, 0, %p44;
	selp.b32 	%r406, %r405, 0, %p51;
	selp.b32 	%r407, %r406, 0, %p31;
	selp.b32 	%r408, %r368, 0, %p43;
	selp.b32 	%r409, %r408, 0, %p52;
	selp.b32 	%r410, %r409, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r404+2048], {%r407, %r410};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r411, %r369, 0, %p42;
	selp.b32 	%r412, %r411, 0, %p53;
	selp.b32 	%r413, %r412, 0, %p32;
	selp.b32 	%r414, %r370, 0, %p41;
	selp.b32 	%r415, %r414, 0, %p54;
	selp.b32 	%r416, %r415, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r394+32], {%r413, %r416};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r417, %r371, 0, %p42;
	selp.b32 	%r418, %r417, 0, %p49;
	selp.b32 	%r419, %r418, 0, %p31;
	selp.b32 	%r420, %r372, 0, %p41;
	selp.b32 	%r421, %r420, 0, %p55;
	selp.b32 	%r422, %r421, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r404+2080], {%r419, %r422};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r423, %r373, 0, %p48;
	selp.b32 	%r424, %r423, 0, %p56;
	selp.b32 	%r425, %r424, 0, %p32;
	selp.b32 	%r426, %r374, 0, %p47;
	selp.b32 	%r427, %r426, 0, %p57;
	selp.b32 	%r428, %r427, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r394+64], {%r425, %r428};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r429, %r375, 0, %p48;
	selp.b32 	%r430, %r429, 0, %p58;
	selp.b32 	%r431, %r430, 0, %p31;
	selp.b32 	%r432, %r376, 0, %p47;
	selp.b32 	%r433, %r432, 0, %p59;
	selp.b32 	%r434, %r433, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r404+2112], {%r431, %r434};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r435, %r377, 0, %p46;
	selp.b32 	%r436, %r435, 0, %p60;
	selp.b32 	%r437, %r436, 0, %p32;
	selp.b32 	%r438, %r378, 0, %p45;
	selp.b32 	%r439, %r438, 0, %p61;
	selp.b32 	%r440, %r439, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r394+96], {%r437, %r440};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r441, %r379, 0, %p46;
	selp.b32 	%r442, %r441, 0, %p62;
	selp.b32 	%r443, %r442, 0, %p31;
	selp.b32 	%r444, %r380, 0, %p45;
	selp.b32 	%r445, %r444, 0, %p63;
	selp.b32 	%r446, %r445, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r404+2144], {%r443, %r446};
	bar.sync 	0;
	shr.u32 	%r447, %r389, 2;
	and.b32 	%r448, %r447, 240;
	add.s32 	%r449, %r77, %r448;
	shl.b32 	%r450, %r389, 2;
	add.s32 	%r451, %r449, %r450;
	or.b32 	%r452, %r389, 1024;
	shr.u32 	%r453, %r452, 2;
	and.b32 	%r454, %r453, 496;
	add.s32 	%r455, %r77, %r454;
	add.s32 	%r456, %r455, %r450;
	ld.shared.v4.b32 	{%r256, %r257, %r258, %r259}, [%r456+4096];
	or.b32 	%r457, %r389, 2048;
	shr.u32 	%r458, %r457, 2;
	and.b32 	%r459, %r458, 752;
	add.s32 	%r460, %r77, %r459;
	add.s32 	%r461, %r460, %r450;
	ld.shared.v4.b32 	{%r260, %r261, %r262, %r263}, [%r461+8192];
	or.b32 	%r462, %r389, 3072;
	shr.u32 	%r463, %r462, 2;
	and.b32 	%r464, %r463, 1008;
	add.s32 	%r465, %r77, %r464;
	add.s32 	%r466, %r465, %r450;
	ld.shared.v4.b32 	{%r264, %r265, %r266, %r267}, [%r466+12288];
	ld.shared.v4.b32 	{%r252, %r253, %r254, %r255}, [%r451];
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd62 + 0 ], { %r252, %r253, %r254, %r255 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd63 + 0 ], { %r256, %r257, %r258, %r259 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd64 + 0 ], { %r260, %r261, %r262, %r263 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd65 + 0 ], { %r264, %r265, %r266, %r267 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
