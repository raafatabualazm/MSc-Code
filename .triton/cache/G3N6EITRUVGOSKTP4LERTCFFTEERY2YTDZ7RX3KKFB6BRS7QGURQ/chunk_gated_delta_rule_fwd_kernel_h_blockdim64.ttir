#loc = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0)
module {
  tt.func public @chunk_gated_delta_rule_fwd_kernel_h_blockdim64(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg3: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg4: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0), %arg7: i32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":36:0)) attributes {noinline = false} {
    %cst = arith.constant dense<4096> : tensor<1x64xi64> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<64xi64> loc(#loc1)
    %cst_1 = arith.constant dense<32> : tensor<64xi64> loc(#loc1)
    %cst_2 = arith.constant dense<4096> : tensor<64x1xi64> loc(#loc1)
    %cst_3 = arith.constant dense<64> : tensor<64xi64> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<1x64xi64> loc(#loc1)
    %cst_5 = arith.constant dense<0> : tensor<1x64xi64> loc(#loc1)
    %cst_6 = arith.constant dense<0> : tensor<64x1xi64> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<64x1xi64> loc(#loc1)
    %c63_i32 = arith.constant 63 : i32 loc(#loc1)
    %c16384_i32 = arith.constant 16384 : i32 loc(#loc1)
    %cst_8 = arith.constant dense<0.000000e+00> : tensor<64xf32> loc(#loc1)
    %cst_9 = arith.constant dense<0.000000e+00> : tensor<64x64xf32> loc(#loc1)
    %c64_i32 = arith.constant 64 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %c524288_i32 = arith.constant 524288 : i32 loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.divsi %1, %c32_i32 : i32 loc(#loc4)
    %3 = arith.remsi %1, %c32_i32 : i32 loc(#loc5)
    %4 = arith.muli %2, %arg7 : i32 loc(#loc6)
    %5 = arith.addi %arg7, %c63_i32 : i32 loc(#loc75)
    %6 = arith.divsi %5, %c64_i32 : i32 loc(#loc76)
    %7 = arith.muli %2, %6 : i32 loc(#loc10)
    %8 = arith.muli %7, %c32_i32 : i32 loc(#loc11)
    %9 = arith.addi %8, %3 : i32 loc(#loc12)
    %10 = arith.muli %9, %c16384_i32 : i32 loc(#loc13)
    %11 = tt.addptr %arg5, %10 : !tt.ptr<bf16>, i32 loc(#loc14)
    %12 = arith.muli %4, %c32_i32 : i32 loc(#loc15)
    %13 = arith.addi %12, %3 : i32 loc(#loc16)
    %14 = arith.muli %13, %c128_i32 : i32 loc(#loc17)
    %15 = tt.addptr %arg1, %14 : !tt.ptr<bf16>, i32 loc(#loc18)
    %16 = tt.addptr %arg0, %14 : !tt.ptr<bf16>, i32 loc(#loc19)
    %17 = tt.addptr %arg2, %14 : !tt.ptr<bf16>, i32 loc(#loc20)
    %18 = tt.addptr %arg3, %14 : !tt.ptr<bf16>, i32 loc(#loc21)
    %19 = arith.muli %1, %c16384_i32 : i32 loc(#loc22)
    %20 = tt.addptr %arg6, %19 : !tt.ptr<f32>, i32 loc(#loc23)
    %21:2 = scf.for %arg8 = %c0_i32 to %6 step %c1_i32 iter_args(%arg9 = %cst_9, %arg10 = %cst_9) -> (tensor<64x64xf32>, tensor<64x64xf32>)  : i32 {
      %56 = arith.muli %arg8, %c524288_i32 : i32 loc(#loc25)
      %57 = tt.addptr %11, %56 : !tt.ptr<bf16>, i32 loc(#loc26)
      %58 = arith.muli %0, %c64_i32 : i32 loc(#loc27)
      %59 = arith.extsi %58 : i32 to i64 loc(#loc28)
      %60 = arith.truncf %arg9 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc29)
      %61 = tt.splat %57 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc30)
      %62 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc30)
      %63 = arith.extsi %62 : tensor<64xi32> to tensor<64xi64> loc(#loc30)
      %64 = tt.expand_dims %63 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc30)
      %65 = arith.muli %64, %cst_7 : tensor<64x1xi64> loc(#loc30)
      %66 = tt.broadcast %65 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc30)
      %67 = tt.splat %59 : i64 -> tensor<64xi64> loc(#loc30)
      %68 = arith.addi %67, %63 : tensor<64xi64> loc(#loc30)
      %69 = tt.expand_dims %68 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc30)
      %70 = tt.broadcast %69 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc30)
      %71 = arith.addi %66, %70 : tensor<64x64xi64> loc(#loc30)
      %72 = tt.addptr %61, %71 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc30)
      %73 = arith.cmpi sge, %64, %cst_6 : tensor<64x1xi64> loc(#loc30)
      %74 = arith.cmpi slt, %64, %cst_7 : tensor<64x1xi64> loc(#loc30)
      %75 = arith.andi %73, %74 : tensor<64x1xi1> loc(#loc30)
      %76 = tt.broadcast %75 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc30)
      %77 = arith.cmpi sge, %69, %cst_5 : tensor<1x64xi64> loc(#loc30)
      %78 = arith.cmpi slt, %69, %cst_4 : tensor<1x64xi64> loc(#loc30)
      %79 = arith.andi %77, %78 : tensor<1x64xi1> loc(#loc30)
      %80 = tt.broadcast %79 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc30)
      %81 = arith.andi %76, %80 : tensor<64x64xi1> loc(#loc30)
      tt.store %72, %60, %81 : tensor<64x64x!tt.ptr<bf16>> loc(#loc30)
      %82 = arith.truncf %arg10 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc31)
      %83 = arith.addi %63, %cst_3 : tensor<64xi64> loc(#loc32)
      %84 = tt.expand_dims %83 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc32)
      %85 = arith.muli %84, %cst_7 : tensor<64x1xi64> loc(#loc32)
      %86 = tt.broadcast %85 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc32)
      %87 = arith.addi %86, %70 : tensor<64x64xi64> loc(#loc32)
      %88 = tt.addptr %61, %87 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc32)
      %89 = arith.cmpi sge, %84, %cst_6 : tensor<64x1xi64> loc(#loc32)
      %90 = arith.cmpi slt, %84, %cst_7 : tensor<64x1xi64> loc(#loc32)
      %91 = arith.andi %89, %90 : tensor<64x1xi1> loc(#loc32)
      %92 = tt.broadcast %91 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc32)
      %93 = arith.andi %92, %80 : tensor<64x64xi1> loc(#loc32)
      tt.store %88, %82, %93 : tensor<64x64x!tt.ptr<bf16>> loc(#loc32)
      %94 = arith.muli %arg8, %c64_i32 : i32 loc(#loc33)
      %95 = arith.extsi %arg7 : i32 to i64 loc(#loc34)
      %96 = arith.extsi %94 : i32 to i64 loc(#loc34)
      %97 = tt.splat %17 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc35)
      %98 = tt.splat %96 : i64 -> tensor<64xi64> loc(#loc35)
      %99 = arith.addi %98, %63 : tensor<64xi64> loc(#loc35)
      %100 = tt.expand_dims %99 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc35)
      %101 = arith.muli %100, %cst_2 : tensor<64x1xi64> loc(#loc35)
      %102 = tt.broadcast %101 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc35)
      %103 = tt.expand_dims %63 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc35)
      %104 = tt.broadcast %103 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc35)
      %105 = arith.addi %102, %104 : tensor<64x64xi64> loc(#loc35)
      %106 = tt.addptr %97, %105 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc35)
      %107 = arith.cmpi sge, %100, %cst_6 : tensor<64x1xi64> loc(#loc35)
      %108 = tt.splat %95 : i64 -> tensor<64x1xi64> loc(#loc35)
      %109 = arith.cmpi slt, %100, %108 : tensor<64x1xi64> loc(#loc35)
      %110 = arith.andi %107, %109 : tensor<64x1xi1> loc(#loc35)
      %111 = tt.broadcast %110 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc35)
      %112 = arith.cmpi sge, %103, %cst_5 : tensor<1x64xi64> loc(#loc35)
      %113 = arith.cmpi slt, %103, %cst_4 : tensor<1x64xi64> loc(#loc35)
      %114 = arith.andi %112, %113 : tensor<1x64xi1> loc(#loc35)
      %115 = tt.broadcast %114 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc35)
      %116 = arith.andi %111, %115 : tensor<64x64xi1> loc(#loc35)
      %117 = tt.load %106, %116 : tensor<64x64x!tt.ptr<bf16>> loc(#loc35)
      %118 = tt.dot %117, %60, %cst_9, inputPrecision = tf32 : tensor<64x64xbf16> * tensor<64x64xbf16> -> tensor<64x64xf32> loc(#loc36)
      %119 = tt.expand_dims %83 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc37)
      %120 = tt.broadcast %119 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc37)
      %121 = arith.addi %102, %120 : tensor<64x64xi64> loc(#loc37)
      %122 = tt.addptr %97, %121 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc37)
      %123 = arith.cmpi sge, %119, %cst_5 : tensor<1x64xi64> loc(#loc37)
      %124 = arith.cmpi slt, %119, %cst_4 : tensor<1x64xi64> loc(#loc37)
      %125 = arith.andi %123, %124 : tensor<1x64xi1> loc(#loc37)
      %126 = tt.broadcast %125 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc37)
      %127 = arith.andi %111, %126 : tensor<64x64xi1> loc(#loc37)
      %128 = tt.load %122, %127 : tensor<64x64x!tt.ptr<bf16>> loc(#loc37)
      %129 = tt.dot %128, %82, %118, inputPrecision = tf32 : tensor<64x64xbf16> * tensor<64x64xbf16> -> tensor<64x64xf32> loc(#loc38)
      %130 = tt.splat %15 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc39)
      %131 = arith.addi %102, %70 : tensor<64x64xi64> loc(#loc39)
      %132 = tt.addptr %130, %131 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc39)
      %133 = arith.andi %111, %80 : tensor<64x64xi1> loc(#loc39)
      %134 = tt.load %132, %133 : tensor<64x64x!tt.ptr<bf16>> loc(#loc39)
      %135 = arith.extf %134 : tensor<64x64xbf16> to tensor<64x64xf32> loc(#loc40)
      %136 = arith.subf %135, %129 : tensor<64x64xf32> loc(#loc40)
      %137 = arith.truncf %136 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc41)
      %138 = tt.splat %18 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc42)
      %139 = tt.addptr %138, %131 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc42)
      tt.store %139, %137, %133 : tensor<64x64x!tt.ptr<bf16>> loc(#loc42)
      %140 = arith.addi %arg8, %c1_i32 : i32 loc(#loc43)
      %141 = arith.muli %140, %c64_i32 : i32 loc(#loc44)
      %142 = arith.minsi %141, %arg7 : i32 loc(#loc45)
      %143 = arith.subi %142, %c1_i32 : i32 loc(#loc46)
      %144 = tt.splat %94 : i32 -> tensor<64xi32> loc(#loc47)
      %145 = arith.addi %144, %62 : tensor<64xi32> loc(#loc47)
      %146 = tt.splat %arg7 : i32 -> tensor<64xi32> loc(#loc48)
      %147 = arith.cmpi slt, %145, %146 : tensor<64xi32> loc(#loc48)
      %148 = tt.addptr %arg4, %12 : !tt.ptr<f32>, i32 loc(#loc49)
      %149 = arith.muli %143, %c32_i32 : i32 loc(#loc50)
      %150 = tt.addptr %148, %149 : !tt.ptr<f32>, i32 loc(#loc51)
      %151 = tt.addptr %150, %3 : !tt.ptr<f32>, i32 loc(#loc52)
      %152 = tt.load %151 : !tt.ptr<f32> loc(#loc53)
      %153 = tt.addptr %148, %3 : !tt.ptr<f32>, i32 loc(#loc54)
      %154 = tt.splat %153 : !tt.ptr<f32> -> tensor<64x!tt.ptr<f32>> loc(#loc55)
      %155 = arith.muli %99, %cst_1 : tensor<64xi64> loc(#loc55)
      %156 = tt.addptr %154, %155 : tensor<64x!tt.ptr<f32>>, tensor<64xi64> loc(#loc55)
      %157 = arith.cmpi sge, %99, %cst_0 : tensor<64xi64> loc(#loc55)
      %158 = tt.splat %95 : i64 -> tensor<64xi64> loc(#loc55)
      %159 = arith.cmpi slt, %99, %158 : tensor<64xi64> loc(#loc55)
      %160 = arith.andi %157, %159 : tensor<64xi1> loc(#loc55)
      %161 = tt.load %156, %160 : tensor<64x!tt.ptr<f32>> loc(#loc55)
      %162 = tt.splat %152 : f32 -> tensor<64xf32> loc(#loc56)
      %163 = arith.subf %162, %161 : tensor<64xf32> loc(#loc56)
      %164 = math.exp %163 : tensor<64xf32> loc(#loc57)
      %165 = arith.select %147, %164, %cst_8 : tensor<64xi1>, tensor<64xf32> loc(#loc58)
      %166 = tt.expand_dims %165 {axis = 1 : i32} : tensor<64xf32> -> tensor<64x1xf32> loc(#loc59)
      %167 = tt.broadcast %166 : tensor<64x1xf32> -> tensor<64x64xf32> loc(#loc60)
      %168 = arith.mulf %136, %167 : tensor<64x64xf32> loc(#loc60)
      %169 = math.exp %152 : f32 loc(#loc61)
      %170 = tt.splat %169 : f32 -> tensor<64x64xf32> loc(#loc62)
      %171 = arith.mulf %arg9, %170 : tensor<64x64xf32> loc(#loc62)
      %172 = arith.mulf %arg10, %170 : tensor<64x64xf32> loc(#loc63)
      %173 = arith.truncf %168 : tensor<64x64xf32> to tensor<64x64xbf16> loc(#loc64)
      %174 = tt.splat %16 : !tt.ptr<bf16> -> tensor<64x64x!tt.ptr<bf16>> loc(#loc65)
      %175 = tt.broadcast %64 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc65)
      %176 = tt.expand_dims %99 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc65)
      %177 = arith.muli %176, %cst : tensor<1x64xi64> loc(#loc65)
      %178 = tt.broadcast %177 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc65)
      %179 = arith.addi %175, %178 : tensor<64x64xi64> loc(#loc65)
      %180 = tt.addptr %174, %179 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc65)
      %181 = arith.cmpi sge, %176, %cst_5 : tensor<1x64xi64> loc(#loc65)
      %182 = tt.splat %95 : i64 -> tensor<1x64xi64> loc(#loc65)
      %183 = arith.cmpi slt, %176, %182 : tensor<1x64xi64> loc(#loc65)
      %184 = arith.andi %181, %183 : tensor<1x64xi1> loc(#loc65)
      %185 = tt.broadcast %184 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc65)
      %186 = arith.andi %76, %185 : tensor<64x64xi1> loc(#loc65)
      %187 = tt.load %180, %186 : tensor<64x64x!tt.ptr<bf16>> loc(#loc65)
      %188 = tt.dot %187, %173, %171, inputPrecision = tf32 : tensor<64x64xbf16> * tensor<64x64xbf16> -> tensor<64x64xf32> loc(#loc66)
      %189 = tt.broadcast %84 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc67)
      %190 = arith.addi %189, %178 : tensor<64x64xi64> loc(#loc67)
      %191 = tt.addptr %174, %190 : tensor<64x64x!tt.ptr<bf16>>, tensor<64x64xi64> loc(#loc67)
      %192 = arith.andi %92, %185 : tensor<64x64xi1> loc(#loc67)
      %193 = tt.load %191, %192 : tensor<64x64x!tt.ptr<bf16>> loc(#loc67)
      %194 = tt.dot %193, %173, %172, inputPrecision = tf32 : tensor<64x64xbf16> * tensor<64x64xbf16> -> tensor<64x64xf32> loc(#loc68)
      scf.yield %188, %194 : tensor<64x64xf32>, tensor<64x64xf32> loc(#loc69)
    } loc(#loc24)
    %22 = arith.muli %0, %c64_i32 : i32 loc(#loc70)
    %23 = arith.extsi %22 : i32 to i64 loc(#loc71)
    %24 = tt.splat %20 : !tt.ptr<f32> -> tensor<64x64x!tt.ptr<f32>> loc(#loc72)
    %25 = tt.make_range {end = 64 : i32, start = 0 : i32} : tensor<64xi32> loc(#loc72)
    %26 = arith.extsi %25 : tensor<64xi32> to tensor<64xi64> loc(#loc72)
    %27 = tt.expand_dims %26 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc72)
    %28 = arith.muli %27, %cst_7 : tensor<64x1xi64> loc(#loc72)
    %29 = tt.broadcast %28 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc72)
    %30 = tt.splat %23 : i64 -> tensor<64xi64> loc(#loc72)
    %31 = arith.addi %30, %26 : tensor<64xi64> loc(#loc72)
    %32 = tt.expand_dims %31 {axis = 0 : i32} : tensor<64xi64> -> tensor<1x64xi64> loc(#loc72)
    %33 = tt.broadcast %32 : tensor<1x64xi64> -> tensor<64x64xi64> loc(#loc72)
    %34 = arith.addi %29, %33 : tensor<64x64xi64> loc(#loc72)
    %35 = tt.addptr %24, %34 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi64> loc(#loc72)
    %36 = arith.cmpi sge, %27, %cst_6 : tensor<64x1xi64> loc(#loc72)
    %37 = arith.cmpi slt, %27, %cst_7 : tensor<64x1xi64> loc(#loc72)
    %38 = arith.andi %36, %37 : tensor<64x1xi1> loc(#loc72)
    %39 = tt.broadcast %38 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc72)
    %40 = arith.cmpi sge, %32, %cst_5 : tensor<1x64xi64> loc(#loc72)
    %41 = arith.cmpi slt, %32, %cst_4 : tensor<1x64xi64> loc(#loc72)
    %42 = arith.andi %40, %41 : tensor<1x64xi1> loc(#loc72)
    %43 = tt.broadcast %42 : tensor<1x64xi1> -> tensor<64x64xi1> loc(#loc72)
    %44 = arith.andi %39, %43 : tensor<64x64xi1> loc(#loc72)
    tt.store %35, %21#0, %44 : tensor<64x64x!tt.ptr<f32>> loc(#loc72)
    %45 = arith.addi %26, %cst_3 : tensor<64xi64> loc(#loc73)
    %46 = tt.expand_dims %45 {axis = 1 : i32} : tensor<64xi64> -> tensor<64x1xi64> loc(#loc73)
    %47 = arith.muli %46, %cst_7 : tensor<64x1xi64> loc(#loc73)
    %48 = tt.broadcast %47 : tensor<64x1xi64> -> tensor<64x64xi64> loc(#loc73)
    %49 = arith.addi %48, %33 : tensor<64x64xi64> loc(#loc73)
    %50 = tt.addptr %24, %49 : tensor<64x64x!tt.ptr<f32>>, tensor<64x64xi64> loc(#loc73)
    %51 = arith.cmpi sge, %46, %cst_6 : tensor<64x1xi64> loc(#loc73)
    %52 = arith.cmpi slt, %46, %cst_7 : tensor<64x1xi64> loc(#loc73)
    %53 = arith.andi %51, %52 : tensor<64x1xi1> loc(#loc73)
    %54 = tt.broadcast %53 : tensor<64x1xi1> -> tensor<64x64xi1> loc(#loc73)
    %55 = arith.andi %54, %43 : tensor<64x64xi1> loc(#loc73)
    tt.store %50, %21#1, %55 : tensor<64x64x!tt.ptr<f32>> loc(#loc73)
    tt.return loc(#loc74)
  } loc(#loc)
} loc(#loc)
#loc1 = loc(unknown)
#loc2 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":61:30)
#loc3 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":61:48)
#loc4 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":62:23)
#loc5 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":62:33)
#loc6 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":69:25)
#loc7 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":40:22)
#loc8 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":70:24)
#loc9 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":40:28)
#loc10 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":71:20)
#loc11 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":83:16)
#loc12 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":83:20)
#loc13 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":83:29)
#loc14 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":83:9)
#loc15 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":84:16)
#loc16 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":84:20)
#loc17 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":84:27)
#loc18 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":84:9)
#loc19 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":85:9)
#loc20 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":86:9)
#loc21 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":88:17)
#loc22 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":95:27)
#loc23 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":95:18)
#loc24 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":112:21)
#loc25 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":113:43)
#loc26 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":113:37)
#loc27 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":113:79)
#loc28 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":113:94)
#loc29 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":114:31)
#loc30 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":114:23)
#loc31 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":117:35)
#loc32 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":117:27)
#loc33 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":125:65)
#loc34 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":125:83)
#loc35 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":126:22)
#loc36 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":127:26)
#loc37 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":130:26)
#loc38 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":131:31)
#loc39 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":141:22)
#loc40 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":141:52)
#loc41 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":145:33)
#loc42 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":145:26)
#loc43 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":147:30)
#loc44 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":147:35)
#loc45 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":147:39)
#loc46 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":147:44)
#loc47 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":149:30)
#loc48 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":149:50)
#loc49 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":150:35)
#loc50 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":150:56)
#loc51 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":150:45)
#loc52 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":150:60)
#loc53 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":150:31)
#loc54 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":151:50)
#loc55 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":152:26)
#loc56 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":153:53)
#loc57 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":153:42)
#loc58 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":153:59)
#loc59 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":153:62)
#loc60 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":153:24)
#loc61 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":154:27)
#loc62 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":155:20)
#loc63 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":157:24)
#loc64 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":179:21)
#loc65 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":182:22)
#loc66 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":186:28)
#loc67 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":189:26)
#loc68 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":193:32)
#loc69 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":201:8)
#loc70 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":210:63)
#loc71 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":210:78)
#loc72 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":211:23)
#loc73 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":214:27)
#loc74 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_delta_h.py":209:4)
#loc75 = loc(callsite(#loc7 at #loc8))
#loc76 = loc(callsite(#loc9 at #loc8))
