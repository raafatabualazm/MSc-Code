//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_local_cumsum_scalar_kernel // -- Begin function chunk_local_cumsum_scalar_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_local_cumsum_scalar_kernel
.visible .entry chunk_local_cumsum_scalar_kernel(
	.param .u64 .ptr .global .align 1 chunk_local_cumsum_scalar_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_local_cumsum_scalar_kernel_param_1,
	.param .u32 chunk_local_cumsum_scalar_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_local_cumsum_scalar_kernel_param_3
)
.reqntid 128
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<37>;
	.reg .b64 	%rd<16>;
	.loc	1 28 0                          // cumsum.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // cumsum.py:28:0

// %bb.0:
	ld.param.b64 	%rd3, [chunk_local_cumsum_scalar_kernel_param_0];
	ld.param.b64 	%rd4, [chunk_local_cumsum_scalar_kernel_param_1];
$L__tmp0:
	.loc	1 43 30                         // cumsum.py:43:30
	mov.u32 	%r5, %ctaid.x;
	ld.param.b32 	%r6, [chunk_local_cumsum_scalar_kernel_param_2];
	.loc	1 43 48                         // cumsum.py:43:48
	mov.u32 	%r7, %ctaid.y;
	.loc	1 50 25                         // cumsum.py:50:25
	and.b32 	%r8, %r7, 65504;
	.loc	1 44 33                         // cumsum.py:44:33
	and.b32 	%r9, %r7, 31;
	.loc	1 56 40                         // cumsum.py:56:40
	mul.lo.s32 	%r10, %r8, %r6;
	.loc	1 56 36                         // cumsum.py:56:36
	mul.wide.s32 	%rd5, %r10, 4;
	add.s64 	%rd6, %rd3, %rd5;
	.loc	1 56 44                         // cumsum.py:56:44
	mul.wide.u32 	%rd7, %r9, 4;
	add.s64 	%rd8, %rd6, %rd7;
	.loc	1 56 68                         // cumsum.py:56:68
	shl.b32 	%r11, %r5, 6;
	.loc	1 56 81                         // cumsum.py:56:81
	cvt.s64.s32 	%rd9, %r6;
	cvt.s64.s32 	%rd10, %r11;
	.loc	1 57 36                         // cumsum.py:57:36
	add.s64 	%rd11, %rd4, %rd5;
	.loc	1 57 44                         // cumsum.py:57:44
	add.s64 	%rd12, %rd11, %rd7;
	.loc	1 59 18                         // cumsum.py:59:18
	mov.u32 	%r12, %tid.x;
	and.b32 	%r13, %r12, 31;
	bfe.u32 	%r14, %r12, 5, 1;
	and.b32 	%r15, %r12, 63;
	cvt.u64.u32 	%rd13, %r15;
	or.b64 	%rd14, %rd10, %rd13;
	shl.b64 	%rd15, %rd14, 7;
	add.s64 	%rd1, %rd8, %rd15;
	setp.gt.s32 	%p4, %r11, -1;
	setp.lt.s64 	%p5, %rd14, %rd9;
	and.pred 	%p1, %p4, %p5;
	// begin inline asm
	mov.u32 %r1, 0x0;
	@%p1 ld.global.b32 { %r1 }, [ %rd1 + 0 ];
	// end inline asm
$L__tmp1:
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	and.b32 	%r16, %r12, 64;
	setp.eq.s32 	%p6, %r16, 0;
	shfl.sync.up.b32 	%r17, %r1, 1, 0, -1;
	setp.eq.s32 	%p7, %r13, 0;
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r18, %r1, %r17;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r19, %r1, %r18, %p7;
	shfl.sync.up.b32 	%r20, %r19, 2, 0, -1;
	setp.gt.u32 	%p8, %r13, 1;
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r21, %r19, %r20;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r22, %r21, %r19, %p8;
	shfl.sync.up.b32 	%r23, %r22, 4, 0, -1;
	setp.gt.u32 	%p9, %r13, 3;
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r24, %r22, %r23;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r25, %r24, %r22, %p9;
	shfl.sync.up.b32 	%r26, %r25, 8, 0, -1;
	setp.gt.u32 	%p10, %r13, 7;
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r27, %r25, %r26;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r28, %r27, %r25, %p10;
	shfl.sync.up.b32 	%r29, %r28, 16, 0, -1;
	setp.gt.u32 	%p11, %r13, 15;
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r30, %r28, %r29;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r3, %r30, %r28, %p11;
	and.b32 	%r31, %r12, 95;
	setp.eq.s32 	%p2, %r31, 31;
	shl.b32 	%r32, %r14, 2;
	mov.b32 	%r33, global_smem;
	add.s32 	%r2, %r33, %r32;
	// begin inline asm
	@%p2 st.shared.b32 [ %r2 + 0 ], %r3;
	// end inline asm
	bar.sync 	0;
	setp.eq.s32 	%p12, %r14, 0;
	ld.shared.b32 	%r34, [global_smem];
	.loc	2 260 15                        // standard.py:260:15 @[ cumsum.py:60:20 ]
	add.f32 	%r35, %r34, %r3;
	.loc	2 340 60                        // standard.py:340:60 @[ cumsum.py:60:20 ]
	selp.f32 	%r4, %r3, %r35, %p12;
	shfl.sync.up.b32 	%r36, %r4, 1, 0, -1;
$L__tmp2:
	.loc	1 66 18                         // cumsum.py:66:18
	add.s64 	%rd2, %rd12, %rd15;
	and.pred 	%p3, %p6, %p1;
	// begin inline asm
	@%p3 st.global.b32 [ %rd2 + 0 ], { %r4 };
	// end inline asm
	.loc	1 66 4                          // cumsum.py:66:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/utils/cumsum.py"
	.file	2 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 194                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xbb DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 117
.b8 109
.b8 115
.b8 117
.b8 109
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 117
.b8 116
.b8 105
.b8 108
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x74:0x23 DW_TAG_subprogram
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 108
.b8 111
.b8 99
.b8 97
.b8 108
.b8 95
.b8 99
.b8 117
.b8 109
.b8 115
.b8 117
.b8 109
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 97
.b8 114
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x97:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 116                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xac:0x18 DW_TAG_inlined_subroutine
.b32 116                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 60                                  // DW_AT_call_line
.b8 20                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
