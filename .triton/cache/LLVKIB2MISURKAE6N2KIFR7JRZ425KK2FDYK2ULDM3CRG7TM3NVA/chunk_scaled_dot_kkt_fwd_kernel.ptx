//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 128
{
	.reg .pred 	%p<107>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<1050>;
	.reg .b64 	%rd<145>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b64 	%rd53, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
	ld.param.b64 	%rd54, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r627, %ctaid.x;
	ld.param.b64 	%rd55, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r628, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r629, %r628, 65504;
	ld.param.b64 	%rd56, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r630, %r628, 31;
	ld.param.b32 	%r631, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r632, %r627, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r633, %tid.x;
	shr.u32 	%r634, %r633, 5;
	bfe.s32 	%r635, %r633, 4, 1;
	bfe.s32 	%r636, %r633, 5, 1;
	bfe.s32 	%r637, %r633, 6, 1;
	shr.u32 	%r638, %r633, 4;
	bfe.u32 	%r639, %r633, 4, 3;
	or.b32 	%r640, %r638, 56;
	bfe.u32 	%r641, %r633, 2, 3;
	shr.u32 	%r642, %r633, 1;
	and.b32 	%r643, %r642, 48;
	or.b32 	%r644, %r643, %r641;
	or.b32 	%r645, %r644, 8;
	shl.b32 	%r646, %r633, 1;
	shl.b32 	%r647, %r633, 2;
	and.b32 	%r648, %r647, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r649, %r644, %r632;
	or.b32 	%r650, %r645, %r632;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p44, %r649, %r631;
	setp.lt.s32 	%p45, %r650, %r631;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	and.b32 	%r651, %r646, 6;
	or.b32 	%r652, %r651, 1;
	or.b32 	%r653, %r651, 8;
	or.b32 	%r654, %r651, 9;
	or.b32 	%r655, %r651, 25;
	or.b32 	%r656, %r651, 24;
	or.b32 	%r657, %r651, 17;
	or.b32 	%r658, %r651, 16;
	or.b32 	%r659, %r651, 56;
	or.b32 	%r660, %r651, 49;
	or.b32 	%r661, %r651, 48;
	or.b32 	%r662, %r651, 41;
	or.b32 	%r663, %r651, 40;
	or.b32 	%r664, %r651, 33;
	or.b32 	%r665, %r651, 32;
	or.b32 	%r666, %r651, 57;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r667, %r666, %r632;
	or.b32 	%r668, %r651, %r632;
	or.b32 	%r669, %r652, %r632;
	or.b32 	%r670, %r653, %r632;
	or.b32 	%r671, %r654, %r632;
	or.b32 	%r672, %r658, %r632;
	or.b32 	%r673, %r657, %r632;
	or.b32 	%r674, %r656, %r632;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p46, %r674, %r631;
	setp.lt.s32 	%p47, %r673, %r631;
	setp.lt.s32 	%p48, %r672, %r631;
	setp.lt.s32 	%p49, %r671, %r631;
	setp.lt.s32 	%p50, %r670, %r631;
	setp.lt.s32 	%p51, %r669, %r631;
	setp.lt.s32 	%p52, %r668, %r631;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r675, %r629, %r631;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	mul.wide.s32 	%rd57, %r675, 2;
	add.s64 	%rd58, %rd55, %rd57;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	mul.wide.u32 	%rd59, %r630, 2;
	add.s64 	%rd60, %rd58, %rd59;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd61, %r631;
	cvt.s64.s32 	%rd62, %r632;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd63, %r640;
	cvt.u64.u32 	%rd64, %r644;
	cvt.u64.u32 	%rd65, %r645;
	cvt.u64.u32 	%rd66, %r651;
	cvt.u64.u32 	%rd67, %r652;
	cvt.u64.u32 	%rd68, %r653;
	cvt.u64.u32 	%rd69, %r654;
	cvt.u64.u32 	%rd70, %r658;
	cvt.u64.u32 	%rd71, %r657;
	cvt.u64.u32 	%rd72, %r656;
	or.b64 	%rd73, %rd63, %rd62;
	or.b64 	%rd74, %rd64, %rd62;
	or.b64 	%rd75, %rd65, %rd62;
	or.b64 	%rd76, %rd66, %rd62;
	or.b64 	%rd77, %rd67, %rd62;
	or.b64 	%rd78, %rd68, %rd62;
	or.b64 	%rd79, %rd69, %rd62;
	or.b64 	%rd80, %rd70, %rd62;
	or.b64 	%rd81, %rd71, %rd62;
	or.b64 	%rd82, %rd72, %rd62;
	shl.b64 	%rd83, %rd74, 6;
	add.s64 	%rd1, %rd60, %rd83;
	shl.b64 	%rd84, %rd75, 6;
	add.s64 	%rd2, %rd60, %rd84;
	setp.gt.s32 	%p53, %r632, -1;
	setp.lt.s64 	%p54, %rd74, %rd61;
	setp.lt.s64 	%p55, %rd75, %rd61;
	setp.lt.s64 	%p56, %rd76, %rd61;
	setp.lt.s64 	%p57, %rd77, %rd61;
	setp.lt.s64 	%p58, %rd78, %rd61;
	setp.lt.s64 	%p59, %rd79, %rd61;
	setp.lt.s64 	%p60, %rd80, %rd61;
	setp.lt.s64 	%p61, %rd81, %rd61;
	setp.lt.s64 	%p62, %rd82, %rd61;
	and.pred 	%p1, %p53, %p54;
	and.pred 	%p2, %p53, %p55;
	and.pred 	%p20, %p53, %p56;
	and.pred 	%p21, %p53, %p57;
	and.pred 	%p22, %p53, %p58;
	and.pred 	%p23, %p53, %p59;
	and.pred 	%p24, %p53, %p60;
	and.pred 	%p25, %p53, %p61;
	and.pred 	%p26, %p53, %p62;
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p1 ld.global.b16 { %rs1 }, [ %rd1 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs2, 0x0;
	@%p2 ld.global.b16 { %rs2 }, [ %rd2 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r676, %r675, %r630;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r677, %r676, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd85, %r677, 2;
	add.s64 	%rd86, %rd53, %rd85;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r678, %r633, 3;
	and.b32 	%r679, %r678, 56;
	and.b32 	%r680, %r678, 120;
	shl.b64 	%rd87, %rd73, 13;
	add.s64 	%rd88, %rd86, %rd87;
	mul.wide.u32 	%rd89, %r680, 2;
	add.s64 	%rd10, %rd88, %rd89;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r681, %r655, %r632;
	or.b32 	%r682, %r665, %r632;
	or.b32 	%r683, %r664, %r632;
	or.b32 	%r684, %r663, %r632;
	or.b32 	%r685, %r662, %r632;
	or.b32 	%r686, %r661, %r632;
	or.b32 	%r687, %r660, %r632;
	or.b32 	%r688, %r659, %r632;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r689, %r639, %r632;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r690, %r689, 8;
	or.b32 	%r691, %r689, 16;
	or.b32 	%r692, %r689, 24;
	or.b32 	%r693, %r689, 32;
	or.b32 	%r694, %r689, 40;
	or.b32 	%r695, %r689, 48;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s32 	%p63, %r695, %r631;
	setp.lt.s32 	%p64, %r694, %r631;
	setp.lt.s32 	%p65, %r693, %r631;
	setp.lt.s32 	%p66, %r692, %r631;
	setp.lt.s32 	%p67, %r691, %r631;
	setp.lt.s32 	%p68, %r690, %r631;
	setp.lt.s32 	%p69, %r689, %r631;
	setp.lt.s32 	%p70, %r667, %r631;
	setp.lt.s32 	%p71, %r688, %r631;
	setp.lt.s32 	%p72, %r687, %r631;
	setp.lt.s32 	%p73, %r686, %r631;
	setp.lt.s32 	%p74, %r685, %r631;
	setp.lt.s32 	%p75, %r684, %r631;
	setp.lt.s32 	%p76, %r683, %r631;
	setp.lt.s32 	%p77, %r682, %r631;
	setp.lt.s32 	%p78, %r681, %r631;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p27, %p53, %p78;
	and.pred 	%p28, %p53, %p77;
	and.pred 	%p29, %p53, %p76;
	and.pred 	%p30, %p53, %p75;
	and.pred 	%p31, %p53, %p74;
	and.pred 	%p32, %p53, %p73;
	and.pred 	%p33, %p53, %p72;
	and.pred 	%p34, %p53, %p71;
	and.pred 	%p35, %p53, %p70;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	mul.wide.s32 	%rd90, %r689, 8192;
	add.s64 	%rd91, %rd86, %rd90;
	add.s64 	%rd3, %rd91, %rd89;
	mul.wide.s32 	%rd92, %r690, 8192;
	add.s64 	%rd93, %rd86, %rd92;
	add.s64 	%rd4, %rd93, %rd89;
	mul.wide.s32 	%rd94, %r691, 8192;
	add.s64 	%rd95, %rd86, %rd94;
	add.s64 	%rd5, %rd95, %rd89;
	mul.wide.s32 	%rd96, %r692, 8192;
	add.s64 	%rd97, %rd86, %rd96;
	add.s64 	%rd6, %rd97, %rd89;
	mul.wide.s32 	%rd98, %r693, 8192;
	add.s64 	%rd99, %rd86, %rd98;
	add.s64 	%rd7, %rd99, %rd89;
	mul.wide.s32 	%rd100, %r694, 8192;
	add.s64 	%rd101, %rd86, %rd100;
	add.s64 	%rd8, %rd101, %rd89;
	mul.wide.s32 	%rd102, %r695, 8192;
	add.s64 	%rd103, %rd86, %rd102;
	add.s64 	%rd9, %rd103, %rd89;
	setp.lt.s64 	%p79, %rd73, %rd61;
	and.pred 	%p3, %p53, %p69;
	and.pred 	%p4, %p53, %p68;
	and.pred 	%p5, %p53, %p67;
	and.pred 	%p6, %p53, %p66;
	and.pred 	%p7, %p53, %p65;
	and.pred 	%p8, %p53, %p64;
	and.pred 	%p9, %p53, %p63;
	and.pred 	%p10, %p53, %p79;
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	mov.u32 %r3, 0x0;
	mov.u32 %r4, 0x0;
	@%p3 ld.global.v4.b32 { %r1, %r2, %r3, %r4 }, [ %rd3 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r5, 0x0;
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	mov.u32 %r8, 0x0;
	@%p4 ld.global.v4.b32 { %r5, %r6, %r7, %r8 }, [ %rd4 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r9, 0x0;
	mov.u32 %r10, 0x0;
	mov.u32 %r11, 0x0;
	mov.u32 %r12, 0x0;
	@%p5 ld.global.v4.b32 { %r9, %r10, %r11, %r12 }, [ %rd5 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r13, 0x0;
	mov.u32 %r14, 0x0;
	mov.u32 %r15, 0x0;
	mov.u32 %r16, 0x0;
	@%p6 ld.global.v4.b32 { %r13, %r14, %r15, %r16 }, [ %rd6 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r17, 0x0;
	mov.u32 %r18, 0x0;
	mov.u32 %r19, 0x0;
	mov.u32 %r20, 0x0;
	@%p7 ld.global.v4.b32 { %r17, %r18, %r19, %r20 }, [ %rd7 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r21, 0x0;
	mov.u32 %r22, 0x0;
	mov.u32 %r23, 0x0;
	mov.u32 %r24, 0x0;
	@%p8 ld.global.v4.b32 { %r21, %r22, %r23, %r24 }, [ %rd8 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r25, 0x0;
	mov.u32 %r26, 0x0;
	mov.u32 %r27, 0x0;
	mov.u32 %r28, 0x0;
	@%p9 ld.global.v4.b32 { %r25, %r26, %r27, %r28 }, [ %rd9 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r29, 0x0;
	mov.u32 %r30, 0x0;
	mov.u32 %r31, 0x0;
	mov.u32 %r32, 0x0;
	@%p10 ld.global.v4.b32 { %r29, %r30, %r31, %r32 }, [ %rd10 + 0 ];
	// end inline asm
	shl.b32 	%r696, %r633, 9;
	and.b32 	%r697, %r696, 4096;
	or.b32 	%r698, %r679, %r697;
	and.b32 	%r699, %r635, 72;
	and.b32 	%r700, %r636, 144;
	and.b32 	%r701, %r637, 288;
	or.b32 	%r702, %r700, %r699;
	xor.b32 	%r703, %r702, %r698;
	xor.b32 	%r704, %r703, %r701;
	shl.b32 	%r705, %r704, 1;
	mov.b32 	%r706, global_smem;
	add.s32 	%r707, %r706, %r705;
	st.shared.v4.b32 	[%r707], {%r1, %r2, %r3, %r4};
	or.b32 	%r708, %r698, 512;
	or.b32 	%r709, %r702, %r701;
	xor.b32 	%r710, %r709, %r708;
	shl.b32 	%r711, %r710, 1;
	add.s32 	%r712, %r706, %r711;
	st.shared.v4.b32 	[%r712], {%r5, %r6, %r7, %r8};
	or.b32 	%r713, %r698, 1024;
	xor.b32 	%r714, %r709, %r713;
	shl.b32 	%r715, %r714, 1;
	add.s32 	%r716, %r706, %r715;
	st.shared.v4.b32 	[%r716], {%r9, %r10, %r11, %r12};
	or.b32 	%r717, %r698, 1536;
	xor.b32 	%r718, %r709, %r717;
	shl.b32 	%r719, %r718, 1;
	add.s32 	%r720, %r706, %r719;
	st.shared.v4.b32 	[%r720], {%r13, %r14, %r15, %r16};
	or.b32 	%r721, %r698, 2048;
	xor.b32 	%r722, %r709, %r721;
	shl.b32 	%r723, %r722, 1;
	add.s32 	%r724, %r706, %r723;
	st.shared.v4.b32 	[%r724], {%r17, %r18, %r19, %r20};
	or.b32 	%r725, %r698, 2560;
	xor.b32 	%r726, %r709, %r725;
	shl.b32 	%r727, %r726, 1;
	add.s32 	%r728, %r706, %r727;
	st.shared.v4.b32 	[%r728], {%r21, %r22, %r23, %r24};
	or.b32 	%r729, %r698, 3072;
	xor.b32 	%r730, %r709, %r729;
	shl.b32 	%r731, %r730, 1;
	add.s32 	%r732, %r706, %r731;
	st.shared.v4.b32 	[%r732], {%r25, %r26, %r27, %r28};
	or.b32 	%r733, %r698, 3584;
	xor.b32 	%r734, %r709, %r733;
	shl.b32 	%r735, %r734, 1;
	add.s32 	%r736, %r706, %r735;
	st.shared.v4.b32 	[%r736], {%r29, %r30, %r31, %r32};
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	// begin inline asm
	fence.proxy.async.shared::cta;
	// end inline asm
	bar.sync 	0;
	shfl.sync.idx.b32 	%r737, %r634, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r738, %r706, 4, 14;
	cvt.u64.u32 	%rd104, %r738;
	or.b64 	%rd11, %rd104, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd11, %rd11, 0, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r739, %r706, 32;
	bfe.u32 	%r740, %r739, 4, 14;
	cvt.u64.u32 	%rd105, %r740;
	or.b64 	%rd13, %rd105, 4611686293338849280;
	mov.pred 	%p11, -1;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd13, %rd13, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r741, %r706, 64;
	bfe.u32 	%r742, %r741, 4, 14;
	cvt.u64.u32 	%rd106, %r742;
	or.b64 	%rd15, %rd106, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd15, %rd15, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r743, %r706, 96;
	bfe.u32 	%r744, %r743, 4, 14;
	cvt.u64.u32 	%rd107, %r744;
	or.b64 	%rd17, %rd107, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd17, %rd17, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r745, %r706, 8192;
	bfe.u32 	%r746, %r745, 4, 14;
	cvt.u64.u32 	%rd108, %r746;
	or.b64 	%rd19, %rd108, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd19, %rd19, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r747, %r706, 8224;
	bfe.u32 	%r748, %r747, 4, 14;
	cvt.u64.u32 	%rd109, %r748;
	or.b64 	%rd21, %rd109, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd21, %rd21, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r749, %r706, 8256;
	bfe.u32 	%r750, %r749, 4, 14;
	cvt.u64.u32 	%rd110, %r750;
	or.b64 	%rd23, %rd110, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd23, %rd23, %p11, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r751, %r706, 8288;
	bfe.u32 	%r752, %r751, 4, 14;
	cvt.u64.u32 	%rd111, %r752;
	or.b64 	%rd25, %rd111, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160}, %rd25, %rd25, %p11, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	// begin inline asm
	// wait for regs: %r129,%r130,%r131,%r132,%r133,%r134,%r135,%r136,%r137,%r138,%r139,%r140,%r141,%r142,%r143,%r144,%r145,%r146,%r147,%r148,%r149,%r150,%r151,%r152,%r153,%r154,%r155,%r156,%r157,%r158,%r159,%r160
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	mul.wide.s32 	%rd112, %r675, 4;
	add.s64 	%rd113, %rd54, %rd112;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	mul.wide.u32 	%rd114, %r630, 4;
	add.s64 	%rd115, %rd113, %rd114;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd116, %rd74, 7;
	add.s64 	%rd27, %rd115, %rd116;
	shl.b64 	%rd117, %rd75, 7;
	add.s64 	%rd28, %rd115, %rd117;
	shl.b64 	%rd118, %rd76, 7;
	add.s64 	%rd29, %rd115, %rd118;
	shl.b64 	%rd119, %rd77, 7;
	add.s64 	%rd30, %rd115, %rd119;
	shl.b64 	%rd120, %rd78, 7;
	add.s64 	%rd31, %rd115, %rd120;
	shl.b64 	%rd121, %rd79, 7;
	add.s64 	%rd32, %rd115, %rd121;
	shl.b64 	%rd122, %rd80, 7;
	add.s64 	%rd33, %rd115, %rd122;
	shl.b64 	%rd123, %rd81, 7;
	add.s64 	%rd34, %rd115, %rd123;
	shl.b64 	%rd124, %rd82, 7;
	add.s64 	%rd35, %rd115, %rd124;
	mul.wide.s32 	%rd125, %r681, 128;
	add.s64 	%rd36, %rd115, %rd125;
	mul.wide.s32 	%rd126, %r682, 128;
	add.s64 	%rd37, %rd115, %rd126;
	mul.wide.s32 	%rd127, %r683, 128;
	add.s64 	%rd38, %rd115, %rd127;
	mul.wide.s32 	%rd128, %r684, 128;
	add.s64 	%rd39, %rd115, %rd128;
	mul.wide.s32 	%rd129, %r685, 128;
	add.s64 	%rd40, %rd115, %rd129;
	mul.wide.s32 	%rd130, %r686, 128;
	add.s64 	%rd41, %rd115, %rd130;
	mul.wide.s32 	%rd131, %r687, 128;
	add.s64 	%rd42, %rd115, %rd131;
	mul.wide.s32 	%rd132, %r688, 128;
	add.s64 	%rd43, %rd115, %rd132;
	mul.wide.s32 	%rd133, %r667, 128;
	add.s64 	%rd44, %rd115, %rd133;
	// begin inline asm
	mov.u32 %r577, 0x0;
	@%p1 ld.global.b32 { %r577 }, [ %rd27 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r578, 0x0;
	@%p2 ld.global.b32 { %r578 }, [ %rd28 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r579, 0x0;
	@%p20 ld.global.b32 { %r579 }, [ %rd29 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r580, 0x0;
	@%p21 ld.global.b32 { %r580 }, [ %rd30 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r581, 0x0;
	@%p22 ld.global.b32 { %r581 }, [ %rd31 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r582, 0x0;
	@%p23 ld.global.b32 { %r582 }, [ %rd32 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r583, 0x0;
	@%p24 ld.global.b32 { %r583 }, [ %rd33 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r584, 0x0;
	@%p25 ld.global.b32 { %r584 }, [ %rd34 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r585, 0x0;
	@%p26 ld.global.b32 { %r585 }, [ %rd35 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r586, 0x0;
	@%p27 ld.global.b32 { %r586 }, [ %rd36 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r587, 0x0;
	@%p28 ld.global.b32 { %r587 }, [ %rd37 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r588, 0x0;
	@%p29 ld.global.b32 { %r588 }, [ %rd38 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r589, 0x0;
	@%p30 ld.global.b32 { %r589 }, [ %rd39 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r590, 0x0;
	@%p31 ld.global.b32 { %r590 }, [ %rd40 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r591, 0x0;
	@%p32 ld.global.b32 { %r591 }, [ %rd41 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r592, 0x0;
	@%p33 ld.global.b32 { %r592 }, [ %rd42 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r593, 0x0;
	@%p34 ld.global.b32 { %r593 }, [ %rd43 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r594, 0x0;
	@%p35 ld.global.b32 { %r594 }, [ %rd44 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r753, %r577, %r579;
	sub.f32 	%r754, %r577, %r580;
	sub.f32 	%r755, %r578, %r579;
	sub.f32 	%r756, %r578, %r580;
	sub.f32 	%r757, %r577, %r581;
	sub.f32 	%r758, %r577, %r582;
	sub.f32 	%r759, %r578, %r581;
	sub.f32 	%r760, %r578, %r582;
	sub.f32 	%r761, %r577, %r583;
	sub.f32 	%r762, %r577, %r584;
	sub.f32 	%r763, %r578, %r583;
	sub.f32 	%r764, %r578, %r584;
	sub.f32 	%r765, %r577, %r585;
	sub.f32 	%r766, %r577, %r586;
	sub.f32 	%r767, %r578, %r585;
	sub.f32 	%r768, %r578, %r586;
	sub.f32 	%r769, %r577, %r587;
	sub.f32 	%r770, %r577, %r588;
	sub.f32 	%r771, %r578, %r587;
	sub.f32 	%r772, %r578, %r588;
	sub.f32 	%r773, %r577, %r589;
	sub.f32 	%r774, %r577, %r590;
	sub.f32 	%r775, %r578, %r589;
	sub.f32 	%r776, %r578, %r590;
	sub.f32 	%r777, %r577, %r591;
	sub.f32 	%r778, %r577, %r592;
	sub.f32 	%r779, %r578, %r591;
	sub.f32 	%r780, %r578, %r592;
	sub.f32 	%r781, %r578, %r593;
	sub.f32 	%r782, %r578, %r594;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r783, %r753, 0f3FB8AA3B;
	ex2.approx.f32 	%r784, %r783;
	mul.f32 	%r785, %r754, 0f3FB8AA3B;
	ex2.approx.f32 	%r786, %r785;
	mul.f32 	%r787, %r755, 0f3FB8AA3B;
	ex2.approx.f32 	%r788, %r787;
	mul.f32 	%r789, %r756, 0f3FB8AA3B;
	ex2.approx.f32 	%r790, %r789;
	mul.f32 	%r791, %r757, 0f3FB8AA3B;
	ex2.approx.f32 	%r792, %r791;
	mul.f32 	%r793, %r758, 0f3FB8AA3B;
	ex2.approx.f32 	%r794, %r793;
	mul.f32 	%r795, %r759, 0f3FB8AA3B;
	ex2.approx.f32 	%r796, %r795;
	mul.f32 	%r797, %r760, 0f3FB8AA3B;
	ex2.approx.f32 	%r798, %r797;
	mul.f32 	%r799, %r761, 0f3FB8AA3B;
	ex2.approx.f32 	%r800, %r799;
	mul.f32 	%r801, %r762, 0f3FB8AA3B;
	ex2.approx.f32 	%r802, %r801;
	mul.f32 	%r803, %r763, 0f3FB8AA3B;
	ex2.approx.f32 	%r804, %r803;
	mul.f32 	%r805, %r764, 0f3FB8AA3B;
	ex2.approx.f32 	%r806, %r805;
	mul.f32 	%r807, %r765, 0f3FB8AA3B;
	ex2.approx.f32 	%r808, %r807;
	mul.f32 	%r809, %r766, 0f3FB8AA3B;
	ex2.approx.f32 	%r810, %r809;
	mul.f32 	%r811, %r767, 0f3FB8AA3B;
	ex2.approx.f32 	%r812, %r811;
	mul.f32 	%r813, %r768, 0f3FB8AA3B;
	ex2.approx.f32 	%r814, %r813;
	mul.f32 	%r815, %r769, 0f3FB8AA3B;
	ex2.approx.f32 	%r816, %r815;
	mul.f32 	%r817, %r770, 0f3FB8AA3B;
	ex2.approx.f32 	%r818, %r817;
	mul.f32 	%r819, %r771, 0f3FB8AA3B;
	ex2.approx.f32 	%r820, %r819;
	mul.f32 	%r821, %r772, 0f3FB8AA3B;
	ex2.approx.f32 	%r822, %r821;
	mul.f32 	%r823, %r773, 0f3FB8AA3B;
	ex2.approx.f32 	%r824, %r823;
	mul.f32 	%r825, %r774, 0f3FB8AA3B;
	ex2.approx.f32 	%r826, %r825;
	mul.f32 	%r827, %r775, 0f3FB8AA3B;
	ex2.approx.f32 	%r828, %r827;
	mul.f32 	%r829, %r776, 0f3FB8AA3B;
	ex2.approx.f32 	%r830, %r829;
	mul.f32 	%r831, %r777, 0f3FB8AA3B;
	ex2.approx.f32 	%r832, %r831;
	mul.f32 	%r833, %r778, 0f3FB8AA3B;
	ex2.approx.f32 	%r834, %r833;
	mul.f32 	%r835, %r779, 0f3FB8AA3B;
	ex2.approx.f32 	%r836, %r835;
	mul.f32 	%r837, %r780, 0f3FB8AA3B;
	ex2.approx.f32 	%r838, %r837;
	mul.f32 	%r839, %r781, 0f3FB8AA3B;
	ex2.approx.f32 	%r840, %r839;
	mul.f32 	%r841, %r782, 0f3FB8AA3B;
	ex2.approx.f32 	%r842, %r841;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r843, %r129, %r784;
	mul.f32 	%r844, %r130, %r786;
	mul.f32 	%r845, %r131, %r788;
	mul.f32 	%r846, %r132, %r790;
	mul.f32 	%r847, %r133, %r792;
	mul.f32 	%r848, %r134, %r794;
	mul.f32 	%r849, %r135, %r796;
	mul.f32 	%r850, %r136, %r798;
	mul.f32 	%r851, %r137, %r800;
	mul.f32 	%r852, %r138, %r802;
	mul.f32 	%r853, %r139, %r804;
	mul.f32 	%r854, %r140, %r806;
	mul.f32 	%r855, %r141, %r808;
	mul.f32 	%r856, %r142, %r810;
	mul.f32 	%r857, %r143, %r812;
	mul.f32 	%r858, %r144, %r814;
	mul.f32 	%r859, %r145, %r816;
	mul.f32 	%r860, %r146, %r818;
	mul.f32 	%r861, %r147, %r820;
	mul.f32 	%r862, %r148, %r822;
	mul.f32 	%r863, %r149, %r824;
	mul.f32 	%r864, %r150, %r826;
	mul.f32 	%r865, %r151, %r828;
	mul.f32 	%r866, %r152, %r830;
	mul.f32 	%r867, %r153, %r832;
	mul.f32 	%r868, %r154, %r834;
	mul.f32 	%r869, %r155, %r836;
	mul.f32 	%r870, %r156, %r838;
	mul.f32 	%r871, %r159, %r840;
	mul.f32 	%r872, %r160, %r842;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r873, %rs1;
	cvt.f32.bf16 	%r874, %rs2;
	mul.f32 	%r875, %r843, %r873;
	mul.f32 	%r876, %r844, %r873;
	mul.f32 	%r877, %r845, %r874;
	mul.f32 	%r878, %r846, %r874;
	mul.f32 	%r879, %r847, %r873;
	mul.f32 	%r880, %r848, %r873;
	mul.f32 	%r881, %r849, %r874;
	mul.f32 	%r882, %r850, %r874;
	mul.f32 	%r883, %r851, %r873;
	mul.f32 	%r884, %r852, %r873;
	mul.f32 	%r885, %r853, %r874;
	mul.f32 	%r886, %r854, %r874;
	mul.f32 	%r887, %r855, %r873;
	mul.f32 	%r888, %r856, %r873;
	mul.f32 	%r889, %r857, %r874;
	mul.f32 	%r890, %r858, %r874;
	mul.f32 	%r891, %r859, %r873;
	mul.f32 	%r892, %r860, %r873;
	mul.f32 	%r893, %r861, %r874;
	mul.f32 	%r894, %r862, %r874;
	mul.f32 	%r895, %r863, %r873;
	mul.f32 	%r896, %r864, %r873;
	mul.f32 	%r897, %r865, %r874;
	mul.f32 	%r898, %r866, %r874;
	mul.f32 	%r899, %r867, %r873;
	mul.f32 	%r900, %r868, %r873;
	mul.f32 	%r901, %r869, %r874;
	mul.f32 	%r902, %r870, %r874;
	mul.f32 	%r903, %r871, %r874;
	mul.f32 	%r904, %r872, %r874;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p80, %r644, %r651;
	setp.gt.u32 	%p81, %r644, %r652;
	setp.gt.u32 	%p82, %r644, %r653;
	setp.gt.u32 	%p83, %r644, %r654;
	setp.gt.u32 	%p84, %r645, %r654;
	setp.gt.u32 	%p85, %r644, %r658;
	setp.gt.u32 	%p86, %r644, %r657;
	setp.gt.u32 	%p87, %r645, %r658;
	setp.gt.u32 	%p88, %r645, %r657;
	setp.gt.u32 	%p89, %r644, %r656;
	setp.gt.u32 	%p90, %r644, %r655;
	setp.gt.u32 	%p91, %r645, %r656;
	setp.gt.u32 	%p92, %r645, %r655;
	setp.gt.u32 	%p93, %r644, %r665;
	setp.gt.u32 	%p94, %r644, %r664;
	setp.gt.u32 	%p95, %r645, %r665;
	setp.gt.u32 	%p96, %r645, %r664;
	setp.gt.u32 	%p97, %r644, %r663;
	setp.gt.u32 	%p98, %r644, %r662;
	setp.gt.u32 	%p99, %r645, %r663;
	setp.gt.u32 	%p100, %r645, %r662;
	setp.gt.u32 	%p101, %r644, %r661;
	setp.gt.u32 	%p102, %r644, %r660;
	setp.gt.u32 	%p103, %r645, %r661;
	setp.gt.u32 	%p104, %r645, %r660;
	setp.gt.u32 	%p105, %r645, %r659;
	setp.gt.u32 	%p106, %r645, %r666;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r905, %r676, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd134, %r905, 4;
	add.s64 	%rd135, %rd56, %rd134;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	add.s64 	%rd136, %rd135, %rd90;
	mul.wide.u32 	%rd137, %r648, 4;
	add.s64 	%rd45, %rd136, %rd137;
	add.s64 	%rd138, %rd135, %rd92;
	add.s64 	%rd46, %rd138, %rd137;
	add.s64 	%rd139, %rd135, %rd94;
	add.s64 	%rd47, %rd139, %rd137;
	add.s64 	%rd140, %rd135, %rd96;
	add.s64 	%rd48, %rd140, %rd137;
	add.s64 	%rd141, %rd135, %rd98;
	add.s64 	%rd49, %rd141, %rd137;
	add.s64 	%rd142, %rd135, %rd100;
	add.s64 	%rd50, %rd142, %rd137;
	add.s64 	%rd143, %rd135, %rd102;
	add.s64 	%rd51, %rd143, %rd137;
	add.s64 	%rd144, %rd135, %rd87;
	add.s64 	%rd52, %rd144, %rd137;
	bar.sync 	0;
	shl.b32 	%r906, %r633, 4;
	and.b32 	%r907, %r906, 448;
	shl.b32 	%r908, %r633, 5;
	and.b32 	%r909, %r908, 3072;
	or.b32 	%r910, %r909, %r907;
	or.b32 	%r911, %r910, %r651;
	and.b32 	%r912, %r647, 508;
	shr.u32 	%r913, %r910, 2;
	add.s32 	%r914, %r706, %r913;
	shl.b32 	%r915, %r911, 2;
	add.s32 	%r916, %r914, %r915;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r917, %r875, 0, %p52;
	selp.b32 	%r918, %r917, 0, %p80;
	selp.b32 	%r919, %r918, 0, %p44;
	selp.b32 	%r920, %r876, 0, %p51;
	selp.b32 	%r921, %r920, 0, %p81;
	selp.b32 	%r922, %r921, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916], {%r919, %r922};
	or.b32 	%r923, %r910, 512;
	shr.u32 	%r924, %r923, 2;
	add.s32 	%r925, %r706, %r924;
	add.s32 	%r926, %r925, %r915;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r927, %r877, 0, %p52;
	selp.b32 	%r928, %r927, 0, %p45;
	selp.b32 	%r929, %r878, 0, %p51;
	selp.b32 	%r930, %r929, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2048], {%r928, %r930};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r931, %r879, 0, %p50;
	selp.b32 	%r932, %r931, 0, %p82;
	selp.b32 	%r933, %r932, 0, %p44;
	selp.b32 	%r934, %r880, 0, %p49;
	selp.b32 	%r935, %r934, 0, %p83;
	selp.b32 	%r936, %r935, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+32], {%r933, %r936};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r937, %r881, 0, %p50;
	selp.b32 	%r938, %r937, 0, %p80;
	selp.b32 	%r939, %r938, 0, %p45;
	selp.b32 	%r940, %r882, 0, %p49;
	selp.b32 	%r941, %r940, 0, %p84;
	selp.b32 	%r942, %r941, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2080], {%r939, %r942};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r943, %r883, 0, %p48;
	selp.b32 	%r944, %r943, 0, %p85;
	selp.b32 	%r945, %r944, 0, %p44;
	selp.b32 	%r946, %r884, 0, %p47;
	selp.b32 	%r947, %r946, 0, %p86;
	selp.b32 	%r948, %r947, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+64], {%r945, %r948};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r949, %r885, 0, %p48;
	selp.b32 	%r950, %r949, 0, %p87;
	selp.b32 	%r951, %r950, 0, %p45;
	selp.b32 	%r952, %r886, 0, %p47;
	selp.b32 	%r953, %r952, 0, %p88;
	selp.b32 	%r954, %r953, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2112], {%r951, %r954};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r955, %r887, 0, %p46;
	selp.b32 	%r956, %r955, 0, %p89;
	selp.b32 	%r957, %r956, 0, %p44;
	selp.b32 	%r958, %r888, 0, %p78;
	selp.b32 	%r959, %r958, 0, %p90;
	selp.b32 	%r960, %r959, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+96], {%r957, %r960};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r961, %r889, 0, %p46;
	selp.b32 	%r962, %r961, 0, %p91;
	selp.b32 	%r963, %r962, 0, %p45;
	selp.b32 	%r964, %r890, 0, %p78;
	selp.b32 	%r965, %r964, 0, %p92;
	selp.b32 	%r966, %r965, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2144], {%r963, %r966};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r967, %r891, 0, %p77;
	selp.b32 	%r968, %r967, 0, %p93;
	selp.b32 	%r969, %r968, 0, %p44;
	selp.b32 	%r970, %r892, 0, %p76;
	selp.b32 	%r971, %r970, 0, %p94;
	selp.b32 	%r972, %r971, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+128], {%r969, %r972};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r973, %r893, 0, %p77;
	selp.b32 	%r974, %r973, 0, %p95;
	selp.b32 	%r975, %r974, 0, %p45;
	selp.b32 	%r976, %r894, 0, %p76;
	selp.b32 	%r977, %r976, 0, %p96;
	selp.b32 	%r978, %r977, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2176], {%r975, %r978};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r979, %r895, 0, %p75;
	selp.b32 	%r980, %r979, 0, %p97;
	selp.b32 	%r981, %r980, 0, %p44;
	selp.b32 	%r982, %r896, 0, %p74;
	selp.b32 	%r983, %r982, 0, %p98;
	selp.b32 	%r984, %r983, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+160], {%r981, %r984};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r985, %r897, 0, %p75;
	selp.b32 	%r986, %r985, 0, %p99;
	selp.b32 	%r987, %r986, 0, %p45;
	selp.b32 	%r988, %r898, 0, %p74;
	selp.b32 	%r989, %r988, 0, %p100;
	selp.b32 	%r990, %r989, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2208], {%r987, %r990};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r991, %r899, 0, %p73;
	selp.b32 	%r992, %r991, 0, %p101;
	selp.b32 	%r993, %r992, 0, %p44;
	selp.b32 	%r994, %r900, 0, %p72;
	selp.b32 	%r995, %r994, 0, %p102;
	selp.b32 	%r996, %r995, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r916+192], {%r993, %r996};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r997, %r901, 0, %p73;
	selp.b32 	%r998, %r997, 0, %p103;
	selp.b32 	%r999, %r998, 0, %p45;
	selp.b32 	%r1000, %r902, 0, %p72;
	selp.b32 	%r1001, %r1000, 0, %p104;
	selp.b32 	%r1002, %r1001, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2240], {%r999, %r1002};
	mov.b32 	%r1003, 0;
	st.shared.v2.b32 	[%r916+224], {%r1003, %r1003};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1004, %r903, 0, %p71;
	selp.b32 	%r1005, %r1004, 0, %p105;
	selp.b32 	%r1006, %r1005, 0, %p45;
	selp.b32 	%r1007, %r904, 0, %p70;
	selp.b32 	%r1008, %r1007, 0, %p106;
	selp.b32 	%r1009, %r1008, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r926+2272], {%r1006, %r1009};
	bar.sync 	0;
	and.b32 	%r1010, %r633, 112;
	add.s32 	%r1011, %r706, %r1010;
	shl.b32 	%r1012, %r912, 2;
	add.s32 	%r1013, %r1011, %r1012;
	ld.shared.v4.b32 	{%r595, %r596, %r597, %r598}, [%r1013];
	or.b32 	%r1014, %r912, 512;
	shr.u32 	%r1015, %r1014, 2;
	and.b32 	%r1016, %r1015, 240;
	add.s32 	%r1017, %r706, %r1016;
	add.s32 	%r1018, %r1017, %r1012;
	ld.shared.v4.b32 	{%r599, %r600, %r601, %r602}, [%r1018+2048];
	or.b32 	%r1019, %r912, 1024;
	shr.u32 	%r1020, %r1019, 2;
	and.b32 	%r1021, %r1020, 368;
	add.s32 	%r1022, %r706, %r1021;
	add.s32 	%r1023, %r1022, %r1012;
	ld.shared.v4.b32 	{%r603, %r604, %r605, %r606}, [%r1023+4096];
	or.b32 	%r1024, %r912, 1536;
	shr.u32 	%r1025, %r1024, 2;
	and.b32 	%r1026, %r1025, 496;
	add.s32 	%r1027, %r706, %r1026;
	add.s32 	%r1028, %r1027, %r1012;
	ld.shared.v4.b32 	{%r607, %r608, %r609, %r610}, [%r1028+6144];
	or.b32 	%r1029, %r912, 2048;
	shr.u32 	%r1030, %r1029, 2;
	and.b32 	%r1031, %r1030, 624;
	add.s32 	%r1032, %r706, %r1031;
	add.s32 	%r1033, %r1032, %r1012;
	ld.shared.v4.b32 	{%r611, %r612, %r613, %r614}, [%r1033+8192];
	or.b32 	%r1034, %r912, 2560;
	shr.u32 	%r1035, %r1034, 2;
	and.b32 	%r1036, %r1035, 752;
	add.s32 	%r1037, %r706, %r1036;
	add.s32 	%r1038, %r1037, %r1012;
	ld.shared.v4.b32 	{%r615, %r616, %r617, %r618}, [%r1038+10240];
	or.b32 	%r1039, %r912, 3072;
	shr.u32 	%r1040, %r1039, 2;
	and.b32 	%r1041, %r1040, 880;
	add.s32 	%r1042, %r706, %r1041;
	add.s32 	%r1043, %r1042, %r1012;
	ld.shared.v4.b32 	{%r619, %r620, %r621, %r622}, [%r1043+12288];
	or.b32 	%r1044, %r647, 3584;
	shr.u32 	%r1045, %r1044, 2;
	and.b32 	%r1046, %r1045, 1008;
	add.s32 	%r1047, %r706, %r1046;
	shl.b32 	%r1048, %r1044, 2;
	add.s32 	%r1049, %r1047, %r1048;
	ld.shared.v4.b32 	{%r623, %r624, %r625, %r626}, [%r1049];
	// begin inline asm
	@%p3 st.global.v4.b32 [ %rd45 + 0 ], { %r595, %r596, %r597, %r598 };
	// end inline asm
	// begin inline asm
	@%p4 st.global.v4.b32 [ %rd46 + 0 ], { %r599, %r600, %r601, %r602 };
	// end inline asm
	// begin inline asm
	@%p5 st.global.v4.b32 [ %rd47 + 0 ], { %r603, %r604, %r605, %r606 };
	// end inline asm
	// begin inline asm
	@%p6 st.global.v4.b32 [ %rd48 + 0 ], { %r607, %r608, %r609, %r610 };
	// end inline asm
	// begin inline asm
	@%p7 st.global.v4.b32 [ %rd49 + 0 ], { %r611, %r612, %r613, %r614 };
	// end inline asm
	// begin inline asm
	@%p8 st.global.v4.b32 [ %rd50 + 0 ], { %r615, %r616, %r617, %r618 };
	// end inline asm
	// begin inline asm
	@%p9 st.global.v4.b32 [ %rd51 + 0 ], { %r619, %r620, %r621, %r622 };
	// end inline asm
	// begin inline asm
	@%p10 st.global.v4.b32 [ %rd52 + 0 ], { %r623, %r624, %r625, %r626 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
