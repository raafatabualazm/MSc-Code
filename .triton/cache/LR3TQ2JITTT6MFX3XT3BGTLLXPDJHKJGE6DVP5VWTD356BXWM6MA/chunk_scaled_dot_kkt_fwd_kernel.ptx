//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 64
{
	.reg .pred 	%p<82>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<1881>;
	.reg .b64 	%rd<157>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r158, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd15, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd14, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd42, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r210, %ctaid.x;
	ld.param.b64 	%rd43, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r211, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r212, %r211, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r213, %r211, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r1, %r210, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r2, %tid.x;
	and.b32 	%r3, %r2, 16;
	and.b32 	%r4, %r2, 32;
	bfe.u32 	%r214, %r2, 3, 3;
	or.b32 	%r215, %r214, 8;
	or.b32 	%r216, %r214, 16;
	or.b32 	%r217, %r214, 24;
	or.b32 	%r218, %r214, 32;
	or.b32 	%r219, %r214, 40;
	or.b32 	%r220, %r214, 48;
	or.b32 	%r221, %r214, 56;
	bfe.s32 	%r222, %r2, 2, 1;
	shl.b32 	%r223, %r2, 3;
	and.b32 	%r224, %r223, 56;
	and.b32 	%r5, %r2, 63;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r225, %r212, %r158;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r225;
	mul.wide.s32 	%rd44, %r225, 2;
	add.s64 	%rd45, %rd43, %rd44;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r213;
	mul.wide.u32 	%rd46, %r213, 2;
	add.s64 	%rd47, %rd45, %rd46;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd48, %r158;
	cvt.s64.s32 	%rd49, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd50, %r214;
	cvt.u64.u32 	%rd51, %r215;
	cvt.u64.u32 	%rd52, %r216;
	cvt.u64.u32 	%rd53, %r217;
	cvt.u64.u32 	%rd54, %r218;
	cvt.u64.u32 	%rd55, %r219;
	cvt.u64.u32 	%rd56, %r220;
	cvt.u64.u32 	%rd57, %r221;
	cvt.u64.u32 	%rd3, %r224;
	cvt.u64.u32 	%rd58, %r5;
	or.b64 	%rd59, %rd50, %rd49;
	or.b64 	%rd60, %rd51, %rd49;
	or.b64 	%rd61, %rd52, %rd49;
	or.b64 	%rd62, %rd53, %rd49;
	or.b64 	%rd63, %rd54, %rd49;
	or.b64 	%rd64, %rd55, %rd49;
	or.b64 	%rd65, %rd56, %rd49;
	or.b64 	%rd66, %rd57, %rd49;
	or.b64 	%rd67, %rd49, %rd58;
	shl.b64 	%rd4, %rd67, 5;
	shl.b64 	%rd68, %rd67, 6;
	add.s64 	%rd16, %rd47, %rd68;
	setp.gt.s32 	%p5, %r1, -1;
	setp.lt.s64 	%p6, %rd67, %rd48;
	and.pred 	%p18, %p5, %p6;
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p18 ld.global.b16 { %rs1 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r225, %r213;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r226, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd69, %r226, 2;
	add.s64 	%rd70, %rd42, %rd69;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p7, %rd59, %rd48;
	setp.lt.s64 	%p8, %rd60, %rd48;
	setp.lt.s64 	%p9, %rd61, %rd48;
	setp.lt.s64 	%p10, %rd62, %rd48;
	setp.lt.s64 	%p11, %rd63, %rd48;
	setp.lt.s64 	%p12, %rd64, %rd48;
	setp.lt.s64 	%p13, %rd65, %rd48;
	setp.lt.s64 	%p14, %rd66, %rd48;
	shl.b64 	%rd71, %rd59, 13;
	add.s64 	%rd5, %rd70, %rd71;
	mul.wide.u32 	%rd72, %r224, 2;
	add.s64 	%rd17, %rd5, %rd72;
	shl.b64 	%rd73, %rd60, 13;
	add.s64 	%rd6, %rd70, %rd73;
	add.s64 	%rd18, %rd6, %rd72;
	shl.b64 	%rd74, %rd61, 13;
	add.s64 	%rd7, %rd70, %rd74;
	add.s64 	%rd19, %rd7, %rd72;
	shl.b64 	%rd75, %rd62, 13;
	add.s64 	%rd8, %rd70, %rd75;
	add.s64 	%rd20, %rd8, %rd72;
	shl.b64 	%rd76, %rd63, 13;
	add.s64 	%rd9, %rd70, %rd76;
	add.s64 	%rd21, %rd9, %rd72;
	shl.b64 	%rd77, %rd64, 13;
	add.s64 	%rd10, %rd70, %rd77;
	add.s64 	%rd22, %rd10, %rd72;
	shl.b64 	%rd78, %rd65, 13;
	add.s64 	%rd11, %rd70, %rd78;
	add.s64 	%rd23, %rd11, %rd72;
	shl.b64 	%rd79, %rd66, 13;
	add.s64 	%rd12, %rd70, %rd79;
	add.s64 	%rd24, %rd12, %rd72;
	xor.b32 	%r227, %r223, %r2;
	and.b32 	%r228, %r227, 56;
	shl.b32 	%r229, %r214, 6;
	or.b32 	%r7, %r228, %r229;
	shl.b32 	%r230, %r7, 1;
	mov.b32 	%r231, global_smem;
	add.s32 	%r159, %r231, %r230;
	add.s32 	%r161, %r159, 1024;
	add.s32 	%r163, %r159, 2048;
	add.s32 	%r165, %r159, 3072;
	add.s32 	%r167, %r159, 4096;
	add.s32 	%r169, %r159, 5120;
	add.s32 	%r171, %r159, 6144;
	add.s32 	%r173, %r159, 7168;
	selp.b32 	%r232, 16, 0, %p7;
	selp.b32 	%r176, %r232, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r159 + 0 ], [ %rd17 + 0 ], 0x10, %r176;
	// end inline asm
	selp.b32 	%r233, 16, 0, %p8;
	selp.b32 	%r178, %r233, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r161 + 0 ], [ %rd18 + 0 ], 0x10, %r178;
	// end inline asm
	selp.b32 	%r234, 16, 0, %p9;
	selp.b32 	%r180, %r234, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r163 + 0 ], [ %rd19 + 0 ], 0x10, %r180;
	// end inline asm
	selp.b32 	%r235, 16, 0, %p10;
	selp.b32 	%r182, %r235, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r165 + 0 ], [ %rd20 + 0 ], 0x10, %r182;
	// end inline asm
	selp.b32 	%r236, 16, 0, %p11;
	selp.b32 	%r184, %r236, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r167 + 0 ], [ %rd21 + 0 ], 0x10, %r184;
	// end inline asm
	selp.b32 	%r237, 16, 0, %p12;
	selp.b32 	%r186, %r237, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r169 + 0 ], [ %rd22 + 0 ], 0x10, %r186;
	// end inline asm
	selp.b32 	%r238, 16, 0, %p13;
	selp.b32 	%r188, %r238, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r171 + 0 ], [ %rd23 + 0 ], 0x10, %r188;
	// end inline asm
	selp.b32 	%r239, 16, 0, %p14;
	selp.b32 	%r190, %r239, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r173 + 0 ], [ %rd24 + 0 ], 0x10, %r190;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd25, %rd17, 128;
	add.s64 	%rd26, %rd18, 128;
	add.s64 	%rd27, %rd19, 128;
	add.s64 	%rd28, %rd20, 128;
	add.s64 	%rd29, %rd21, 128;
	add.s64 	%rd30, %rd22, 128;
	add.s64 	%rd31, %rd23, 128;
	add.s64 	%rd32, %rd24, 128;
	bar.sync 	0;
	add.s32 	%r175, %r159, 8192;
	add.s32 	%r177, %r159, 9216;
	add.s32 	%r179, %r159, 10240;
	add.s32 	%r181, %r159, 11264;
	add.s32 	%r183, %r159, 12288;
	add.s32 	%r185, %r159, 13312;
	add.s32 	%r187, %r159, 14336;
	add.s32 	%r189, %r159, 15360;
	// begin inline asm
	cp.async.cg.shared.global [ %r175 + 0 ], [ %rd25 + 0 ], 0x10, %r176;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r177 + 0 ], [ %rd26 + 0 ], 0x10, %r178;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r179 + 0 ], [ %rd27 + 0 ], 0x10, %r180;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r181 + 0 ], [ %rd28 + 0 ], 0x10, %r182;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r183 + 0 ], [ %rd29 + 0 ], 0x10, %r184;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r185 + 0 ], [ %rd30 + 0 ], 0x10, %r186;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r187 + 0 ], [ %rd31 + 0 ], 0x10, %r188;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r189 + 0 ], [ %rd32 + 0 ], 0x10, %r190;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd33, %rd17, 256;
	add.s64 	%rd34, %rd18, 256;
	add.s64 	%rd35, %rd19, 256;
	add.s64 	%rd36, %rd20, 256;
	add.s64 	%rd37, %rd21, 256;
	add.s64 	%rd38, %rd22, 256;
	add.s64 	%rd39, %rd23, 256;
	add.s64 	%rd40, %rd24, 256;
	bar.sync 	0;
	add.s32 	%r191, %r159, 16384;
	add.s32 	%r193, %r159, 17408;
	add.s32 	%r195, %r159, 18432;
	add.s32 	%r197, %r159, 19456;
	add.s32 	%r199, %r159, 20480;
	add.s32 	%r201, %r159, 21504;
	add.s32 	%r203, %r159, 22528;
	add.s32 	%r205, %r159, 23552;
	mov.b32 	%r192, 0;
	// begin inline asm
	cp.async.cg.shared.global [ %r191 + 0 ], [ %rd33 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r193 + 0 ], [ %rd34 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r195 + 0 ], [ %rd35 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r197 + 0 ], [ %rd36 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r199 + 0 ], [ %rd37 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r201 + 0 ], [ %rd38 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r203 + 0 ], [ %rd39 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r205 + 0 ], [ %rd40 + 0 ], 0x10, %r192;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r240, %r2, 3;
	mul.lo.s32 	%r241, %r240, 72;
	and.b32 	%r242, %r222, 288;
	xor.b32 	%r243, %r242, %r241;
	and.b32 	%r244, %r2, 24;
	xor.b32 	%r245, %r243, %r244;
	shl.b32 	%r246, %r4, 4;
	or.b32 	%r8, %r245, %r246;
	xor.b32 	%r9, %r8, 32;
	xor.b32 	%r10, %r8, 1056;
	xor.b32 	%r11, %r8, 2080;
	xor.b32 	%r12, %r8, 3104;
	shl.b32 	%r247, %r2, 6;
	and.b32 	%r248, %r247, 512;
	or.b32 	%r249, %r243, %r248;
	shr.u32 	%r250, %r3, 1;
	xor.b32 	%r13, %r249, %r250;
	xor.b32 	%r14, %r13, 16;
	xor.b32 	%r15, %r13, 32;
	xor.b32 	%r16, %r13, 48;
	xor.b32 	%r17, %r13, 1040;
	xor.b32 	%r18, %r13, 1056;
	xor.b32 	%r19, %r13, 1072;
	xor.b32 	%r20, %r13, 2064;
	xor.b32 	%r21, %r13, 2080;
	xor.b32 	%r22, %r13, 2096;
	xor.b32 	%r23, %r13, 3088;
	xor.b32 	%r24, %r13, 3104;
	xor.b32 	%r25, %r13, 3120;
	mov.b32 	%r1817, 0f00000000;
	mov.b32 	%r1816, 2;
	mov.b32 	%r1815, -1;
	mov.b64 	%rd156, 0;
	mov.pred 	%p81, -1;
	shl.b32 	%r1288, %r9, 1;
	shl.b32 	%r1289, %r10, 1;
	shl.b32 	%r1290, %r11, 1;
	shl.b32 	%r1291, %r12, 1;
	shl.b32 	%r1293, %r14, 1;
	shl.b32 	%r1294, %r15, 1;
	shl.b32 	%r1295, %r16, 1;
	shl.b32 	%r1296, %r17, 1;
	shl.b32 	%r1297, %r18, 1;
	shl.b32 	%r1298, %r19, 1;
	shl.b32 	%r1299, %r20, 1;
	shl.b32 	%r1300, %r21, 1;
	shl.b32 	%r1301, %r22, 1;
	shl.b32 	%r1302, %r23, 1;
	shl.b32 	%r1303, %r24, 1;
	shl.b32 	%r1304, %r25, 1;
	mov.b32 	%r1818, %r1817;
	mov.b32 	%r1819, %r1817;
	mov.b32 	%r1820, %r1817;
	mov.b32 	%r1821, %r1817;
	mov.b32 	%r1822, %r1817;
	mov.b32 	%r1823, %r1817;
	mov.b32 	%r1824, %r1817;
	mov.b32 	%r1825, %r1817;
	mov.b32 	%r1826, %r1817;
	mov.b32 	%r1827, %r1817;
	mov.b32 	%r1828, %r1817;
	mov.b32 	%r1829, %r1817;
	mov.b32 	%r1830, %r1817;
	mov.b32 	%r1831, %r1817;
	mov.b32 	%r1832, %r1817;
	mov.b32 	%r1833, %r1817;
	mov.b32 	%r1834, %r1817;
	mov.b32 	%r1835, %r1817;
	mov.b32 	%r1836, %r1817;
	mov.b32 	%r1837, %r1817;
	mov.b32 	%r1838, %r1817;
	mov.b32 	%r1839, %r1817;
	mov.b32 	%r1840, %r1817;
	mov.b32 	%r1841, %r1817;
	mov.b32 	%r1842, %r1817;
	mov.b32 	%r1843, %r1817;
	mov.b32 	%r1844, %r1817;
	mov.b32 	%r1845, %r1817;
	mov.b32 	%r1846, %r1817;
	mov.b32 	%r1847, %r1817;
	mov.b32 	%r1848, %r1817;
	mov.b32 	%r1849, %r1817;
	mov.b32 	%r1850, %r1817;
	mov.b32 	%r1851, %r1817;
	mov.b32 	%r1852, %r1817;
	mov.b32 	%r1853, %r1817;
	mov.b32 	%r1854, %r1817;
	mov.b32 	%r1855, %r1817;
	mov.b32 	%r1856, %r1817;
	mov.b32 	%r1857, %r1817;
	mov.b32 	%r1858, %r1817;
	mov.b32 	%r1859, %r1817;
	mov.b32 	%r1860, %r1817;
	mov.b32 	%r1861, %r1817;
	mov.b32 	%r1862, %r1817;
	mov.b32 	%r1863, %r1817;
	mov.b32 	%r1864, %r1817;
	mov.b32 	%r1865, %r1817;
	mov.b32 	%r1866, %r1817;
	mov.b32 	%r1867, %r1817;
	mov.b32 	%r1868, %r1817;
	mov.b32 	%r1869, %r1817;
	mov.b32 	%r1870, %r1817;
	mov.b32 	%r1871, %r1817;
	mov.b32 	%r1872, %r1817;
	mov.b32 	%r1873, %r1817;
	mov.b32 	%r1874, %r1817;
	mov.b32 	%r1875, %r1817;
	mov.b32 	%r1876, %r1817;
	mov.b32 	%r1877, %r1817;
	mov.b32 	%r1878, %r1817;
	mov.b32 	%r1879, %r1817;
	mov.b32 	%r1880, %r1817;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p2, %p81;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r1283, %r1815, 1;
	setp.gt.s32 	%p16, %r1283, 2;
	selp.b32 	%r1815, 0, %r1283, %p16;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r1284, %r1815, 13;
	add.s32 	%r1286, %r231, %r1284;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shl.b32 	%r1287, %r8, 1;
	add.s32 	%r255, %r1286, %r1287;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r383, %r384, %r607, %r608}, [%r255];
	// end inline asm
	add.s32 	%r260, %r1286, %r1288;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r831, %r832, %r1055, %r1056}, [%r260];
	// end inline asm
	add.s32 	%r265, %r255, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r397, %r398, %r621, %r622}, [%r265];
	// end inline asm
	add.s32 	%r270, %r1286, %r1289;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r845, %r846, %r1069, %r1070}, [%r270];
	// end inline asm
	add.s32 	%r275, %r255, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r411, %r412, %r635, %r636}, [%r275];
	// end inline asm
	add.s32 	%r280, %r1286, %r1290;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r859, %r860, %r1083, %r1084}, [%r280];
	// end inline asm
	add.s32 	%r285, %r255, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r425, %r426, %r649, %r650}, [%r285];
	// end inline asm
	add.s32 	%r290, %r1286, %r1291;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r873, %r874, %r1097, %r1098}, [%r290];
	// end inline asm
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r1292, %r13, 1;
	add.s32 	%r295, %r1286, %r1292;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r379, %r380, %r381, %r382}, [%r295];
	// end inline asm
	add.s32 	%r300, %r1286, %r1293;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r603, %r604, %r605, %r606}, [%r300];
	// end inline asm
	add.s32 	%r305, %r1286, %r1294;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r827, %r828, %r829, %r830}, [%r305];
	// end inline asm
	add.s32 	%r310, %r1286, %r1295;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1051, %r1052, %r1053, %r1054}, [%r310];
	// end inline asm
	add.s32 	%r315, %r295, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r435, %r436, %r437, %r438}, [%r315];
	// end inline asm
	add.s32 	%r320, %r1286, %r1296;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r659, %r660, %r661, %r662}, [%r320];
	// end inline asm
	add.s32 	%r325, %r1286, %r1297;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r883, %r884, %r885, %r886}, [%r325];
	// end inline asm
	add.s32 	%r330, %r1286, %r1298;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1107, %r1108, %r1109, %r1110}, [%r330];
	// end inline asm
	add.s32 	%r335, %r295, 4096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r491, %r492, %r493, %r494}, [%r335];
	// end inline asm
	add.s32 	%r340, %r1286, %r1299;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r715, %r716, %r717, %r718}, [%r340];
	// end inline asm
	add.s32 	%r345, %r1286, %r1300;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r939, %r940, %r941, %r942}, [%r345];
	// end inline asm
	add.s32 	%r350, %r1286, %r1301;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1163, %r1164, %r1165, %r1166}, [%r350];
	// end inline asm
	add.s32 	%r355, %r295, 6144;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r547, %r548, %r549, %r550}, [%r355];
	// end inline asm
	add.s32 	%r360, %r1286, %r1302;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r771, %r772, %r773, %r774}, [%r360];
	// end inline asm
	add.s32 	%r365, %r1286, %r1303;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r995, %r996, %r997, %r998}, [%r365];
	// end inline asm
	add.s32 	%r370, %r1286, %r1304;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1219, %r1220, %r1221, %r1222}, [%r370];
	// end inline asm
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1817, %r1818, %r1819, %r1820 }, { %r379, %r380, %r381, %r382 }, { %r383, %r384 }, { %r1817, %r1818, %r1819, %r1820 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1821, %r1822, %r1823, %r1824 }, { %r379, %r380, %r381, %r382 }, { %r397, %r398 }, { %r1821, %r1822, %r1823, %r1824 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1825, %r1826, %r1827, %r1828 }, { %r379, %r380, %r381, %r382 }, { %r411, %r412 }, { %r1825, %r1826, %r1827, %r1828 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1829, %r1830, %r1831, %r1832 }, { %r379, %r380, %r381, %r382 }, { %r425, %r426 }, { %r1829, %r1830, %r1831, %r1832 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1833, %r1834, %r1835, %r1836 }, { %r435, %r436, %r437, %r438 }, { %r383, %r384 }, { %r1833, %r1834, %r1835, %r1836 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1837, %r1838, %r1839, %r1840 }, { %r435, %r436, %r437, %r438 }, { %r397, %r398 }, { %r1837, %r1838, %r1839, %r1840 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1841, %r1842, %r1843, %r1844 }, { %r435, %r436, %r437, %r438 }, { %r411, %r412 }, { %r1841, %r1842, %r1843, %r1844 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1845, %r1846, %r1847, %r1848 }, { %r435, %r436, %r437, %r438 }, { %r425, %r426 }, { %r1845, %r1846, %r1847, %r1848 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1849, %r1850, %r1851, %r1852 }, { %r491, %r492, %r493, %r494 }, { %r383, %r384 }, { %r1849, %r1850, %r1851, %r1852 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1853, %r1854, %r1855, %r1856 }, { %r491, %r492, %r493, %r494 }, { %r397, %r398 }, { %r1853, %r1854, %r1855, %r1856 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1857, %r1858, %r1859, %r1860 }, { %r491, %r492, %r493, %r494 }, { %r411, %r412 }, { %r1857, %r1858, %r1859, %r1860 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1861, %r1862, %r1863, %r1864 }, { %r491, %r492, %r493, %r494 }, { %r425, %r426 }, { %r1861, %r1862, %r1863, %r1864 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1865, %r1866, %r1867, %r1868 }, { %r547, %r548, %r549, %r550 }, { %r383, %r384 }, { %r1865, %r1866, %r1867, %r1868 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1869, %r1870, %r1871, %r1872 }, { %r547, %r548, %r549, %r550 }, { %r397, %r398 }, { %r1869, %r1870, %r1871, %r1872 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1873, %r1874, %r1875, %r1876 }, { %r547, %r548, %r549, %r550 }, { %r411, %r412 }, { %r1873, %r1874, %r1875, %r1876 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1877, %r1878, %r1879, %r1880 }, { %r547, %r548, %r549, %r550 }, { %r425, %r426 }, { %r1877, %r1878, %r1879, %r1880 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1817, %r1818, %r1819, %r1820 }, { %r603, %r604, %r605, %r606 }, { %r607, %r608 }, { %r1817, %r1818, %r1819, %r1820 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1821, %r1822, %r1823, %r1824 }, { %r603, %r604, %r605, %r606 }, { %r621, %r622 }, { %r1821, %r1822, %r1823, %r1824 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1825, %r1826, %r1827, %r1828 }, { %r603, %r604, %r605, %r606 }, { %r635, %r636 }, { %r1825, %r1826, %r1827, %r1828 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1829, %r1830, %r1831, %r1832 }, { %r603, %r604, %r605, %r606 }, { %r649, %r650 }, { %r1829, %r1830, %r1831, %r1832 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1833, %r1834, %r1835, %r1836 }, { %r659, %r660, %r661, %r662 }, { %r607, %r608 }, { %r1833, %r1834, %r1835, %r1836 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1837, %r1838, %r1839, %r1840 }, { %r659, %r660, %r661, %r662 }, { %r621, %r622 }, { %r1837, %r1838, %r1839, %r1840 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1841, %r1842, %r1843, %r1844 }, { %r659, %r660, %r661, %r662 }, { %r635, %r636 }, { %r1841, %r1842, %r1843, %r1844 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1845, %r1846, %r1847, %r1848 }, { %r659, %r660, %r661, %r662 }, { %r649, %r650 }, { %r1845, %r1846, %r1847, %r1848 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1849, %r1850, %r1851, %r1852 }, { %r715, %r716, %r717, %r718 }, { %r607, %r608 }, { %r1849, %r1850, %r1851, %r1852 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1853, %r1854, %r1855, %r1856 }, { %r715, %r716, %r717, %r718 }, { %r621, %r622 }, { %r1853, %r1854, %r1855, %r1856 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1857, %r1858, %r1859, %r1860 }, { %r715, %r716, %r717, %r718 }, { %r635, %r636 }, { %r1857, %r1858, %r1859, %r1860 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1861, %r1862, %r1863, %r1864 }, { %r715, %r716, %r717, %r718 }, { %r649, %r650 }, { %r1861, %r1862, %r1863, %r1864 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1865, %r1866, %r1867, %r1868 }, { %r771, %r772, %r773, %r774 }, { %r607, %r608 }, { %r1865, %r1866, %r1867, %r1868 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1869, %r1870, %r1871, %r1872 }, { %r771, %r772, %r773, %r774 }, { %r621, %r622 }, { %r1869, %r1870, %r1871, %r1872 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1873, %r1874, %r1875, %r1876 }, { %r771, %r772, %r773, %r774 }, { %r635, %r636 }, { %r1873, %r1874, %r1875, %r1876 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1877, %r1878, %r1879, %r1880 }, { %r771, %r772, %r773, %r774 }, { %r649, %r650 }, { %r1877, %r1878, %r1879, %r1880 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1817, %r1818, %r1819, %r1820 }, { %r827, %r828, %r829, %r830 }, { %r831, %r832 }, { %r1817, %r1818, %r1819, %r1820 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1821, %r1822, %r1823, %r1824 }, { %r827, %r828, %r829, %r830 }, { %r845, %r846 }, { %r1821, %r1822, %r1823, %r1824 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1825, %r1826, %r1827, %r1828 }, { %r827, %r828, %r829, %r830 }, { %r859, %r860 }, { %r1825, %r1826, %r1827, %r1828 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1829, %r1830, %r1831, %r1832 }, { %r827, %r828, %r829, %r830 }, { %r873, %r874 }, { %r1829, %r1830, %r1831, %r1832 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1833, %r1834, %r1835, %r1836 }, { %r883, %r884, %r885, %r886 }, { %r831, %r832 }, { %r1833, %r1834, %r1835, %r1836 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1837, %r1838, %r1839, %r1840 }, { %r883, %r884, %r885, %r886 }, { %r845, %r846 }, { %r1837, %r1838, %r1839, %r1840 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1841, %r1842, %r1843, %r1844 }, { %r883, %r884, %r885, %r886 }, { %r859, %r860 }, { %r1841, %r1842, %r1843, %r1844 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1845, %r1846, %r1847, %r1848 }, { %r883, %r884, %r885, %r886 }, { %r873, %r874 }, { %r1845, %r1846, %r1847, %r1848 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1849, %r1850, %r1851, %r1852 }, { %r939, %r940, %r941, %r942 }, { %r831, %r832 }, { %r1849, %r1850, %r1851, %r1852 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1853, %r1854, %r1855, %r1856 }, { %r939, %r940, %r941, %r942 }, { %r845, %r846 }, { %r1853, %r1854, %r1855, %r1856 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1857, %r1858, %r1859, %r1860 }, { %r939, %r940, %r941, %r942 }, { %r859, %r860 }, { %r1857, %r1858, %r1859, %r1860 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1861, %r1862, %r1863, %r1864 }, { %r939, %r940, %r941, %r942 }, { %r873, %r874 }, { %r1861, %r1862, %r1863, %r1864 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1865, %r1866, %r1867, %r1868 }, { %r995, %r996, %r997, %r998 }, { %r831, %r832 }, { %r1865, %r1866, %r1867, %r1868 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1869, %r1870, %r1871, %r1872 }, { %r995, %r996, %r997, %r998 }, { %r845, %r846 }, { %r1869, %r1870, %r1871, %r1872 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1873, %r1874, %r1875, %r1876 }, { %r995, %r996, %r997, %r998 }, { %r859, %r860 }, { %r1873, %r1874, %r1875, %r1876 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1877, %r1878, %r1879, %r1880 }, { %r995, %r996, %r997, %r998 }, { %r873, %r874 }, { %r1877, %r1878, %r1879, %r1880 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1817, %r1818, %r1819, %r1820 }, { %r1051, %r1052, %r1053, %r1054 }, { %r1055, %r1056 }, { %r1817, %r1818, %r1819, %r1820 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1821, %r1822, %r1823, %r1824 }, { %r1051, %r1052, %r1053, %r1054 }, { %r1069, %r1070 }, { %r1821, %r1822, %r1823, %r1824 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1825, %r1826, %r1827, %r1828 }, { %r1051, %r1052, %r1053, %r1054 }, { %r1083, %r1084 }, { %r1825, %r1826, %r1827, %r1828 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1829, %r1830, %r1831, %r1832 }, { %r1051, %r1052, %r1053, %r1054 }, { %r1097, %r1098 }, { %r1829, %r1830, %r1831, %r1832 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1833, %r1834, %r1835, %r1836 }, { %r1107, %r1108, %r1109, %r1110 }, { %r1055, %r1056 }, { %r1833, %r1834, %r1835, %r1836 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1837, %r1838, %r1839, %r1840 }, { %r1107, %r1108, %r1109, %r1110 }, { %r1069, %r1070 }, { %r1837, %r1838, %r1839, %r1840 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1841, %r1842, %r1843, %r1844 }, { %r1107, %r1108, %r1109, %r1110 }, { %r1083, %r1084 }, { %r1841, %r1842, %r1843, %r1844 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1845, %r1846, %r1847, %r1848 }, { %r1107, %r1108, %r1109, %r1110 }, { %r1097, %r1098 }, { %r1845, %r1846, %r1847, %r1848 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1849, %r1850, %r1851, %r1852 }, { %r1163, %r1164, %r1165, %r1166 }, { %r1055, %r1056 }, { %r1849, %r1850, %r1851, %r1852 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1853, %r1854, %r1855, %r1856 }, { %r1163, %r1164, %r1165, %r1166 }, { %r1069, %r1070 }, { %r1853, %r1854, %r1855, %r1856 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1857, %r1858, %r1859, %r1860 }, { %r1163, %r1164, %r1165, %r1166 }, { %r1083, %r1084 }, { %r1857, %r1858, %r1859, %r1860 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1861, %r1862, %r1863, %r1864 }, { %r1163, %r1164, %r1165, %r1166 }, { %r1097, %r1098 }, { %r1861, %r1862, %r1863, %r1864 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1865, %r1866, %r1867, %r1868 }, { %r1219, %r1220, %r1221, %r1222 }, { %r1055, %r1056 }, { %r1865, %r1866, %r1867, %r1868 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1869, %r1870, %r1871, %r1872 }, { %r1219, %r1220, %r1221, %r1222 }, { %r1069, %r1070 }, { %r1869, %r1870, %r1871, %r1872 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1873, %r1874, %r1875, %r1876 }, { %r1219, %r1220, %r1221, %r1222 }, { %r1083, %r1084 }, { %r1873, %r1874, %r1875, %r1876 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1877, %r1878, %r1879, %r1880 }, { %r1219, %r1220, %r1221, %r1222 }, { %r1097, %r1098 }, { %r1877, %r1878, %r1879, %r1880 };
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r1305, %r1816, 1;
	setp.gt.s32 	%p17, %r1305, 2;
	selp.b32 	%r1816, 0, %r1305, %p17;
	add.s64 	%rd89, %rd156, %rd3;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b64 	%rd90, %rd89, 1;
	add.s64 	%rd91, %rd5, %rd90;
	add.s64 	%rd80, %rd91, 384;
	add.s64 	%rd92, %rd6, %rd90;
	add.s64 	%rd81, %rd92, 384;
	add.s64 	%rd93, %rd7, %rd90;
	add.s64 	%rd82, %rd93, 384;
	add.s64 	%rd94, %rd8, %rd90;
	add.s64 	%rd83, %rd94, 384;
	add.s64 	%rd95, %rd9, %rd90;
	add.s64 	%rd84, %rd95, 384;
	add.s64 	%rd96, %rd10, %rd90;
	add.s64 	%rd85, %rd96, 384;
	add.s64 	%rd97, %rd11, %rd90;
	add.s64 	%rd86, %rd97, 384;
	add.s64 	%rd98, %rd12, %rd90;
	add.s64 	%rd87, %rd98, 384;
	shl.b32 	%r1306, %r1816, 13;
	add.s32 	%r1307, %r231, %r1306;
	bar.sync 	0;
	add.s32 	%r1267, %r1307, %r230;
	add.s32 	%r1269, %r1267, 1024;
	add.s32 	%r1271, %r1267, 2048;
	add.s32 	%r1273, %r1267, 3072;
	add.s32 	%r1275, %r1267, 4096;
	add.s32 	%r1277, %r1267, 5120;
	add.s32 	%r1279, %r1267, 6144;
	add.s32 	%r1281, %r1267, 7168;
	// begin inline asm
	cp.async.cg.shared.global [ %r1267 + 0 ], [ %rd80 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1269 + 0 ], [ %rd81 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1271 + 0 ], [ %rd82 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1273 + 0 ], [ %rd83 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1275 + 0 ], [ %rd84 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1277 + 0 ], [ %rd85 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1279 + 0 ], [ %rd86 + 0 ], 0x10, %r192;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1281 + 0 ], [ %rd87 + 0 ], 0x10, %r192;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd156, 64;
	mov.pred 	%p81, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p2 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shr.u32 	%r1374, %r2, 4;
	shl.b32 	%r1375, %r2, 2;
	and.b32 	%r1376, %r1375, 60;
	shl.b32 	%r1377, %r2, 1;
	and.b32 	%r1378, %r1377, 6;
	shr.u32 	%r1379, %r4, 2;
	bfe.u32 	%r1380, %r2, 2, 2;
	shr.u32 	%r1381, %r3, 2;
	or.b32 	%r1382, %r1378, %r1379;
	or.b32 	%r1383, %r1382, 49;
	or.b32 	%r1384, %r1382, 48;
	or.b32 	%r1385, %r1382, 33;
	or.b32 	%r1386, %r1382, 32;
	or.b32 	%r1387, %r1382, 17;
	or.b32 	%r1388, %r1382, 16;
	or.b32 	%r1389, %r1382, 1;
	or.b32 	%r1390, %r1380, %r1381;
	or.b32 	%r1391, %r1390, 56;
	or.b32 	%r1392, %r1390, 48;
	or.b32 	%r1393, %r1390, 40;
	or.b32 	%r1394, %r1390, 32;
	or.b32 	%r1395, %r1390, 24;
	or.b32 	%r1396, %r1390, 16;
	or.b32 	%r1397, %r1390, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r1398, %r1382, %r1;
	or.b32 	%r1399, %r1390, %r1;
	or.b32 	%r1400, %r1389, %r1;
	or.b32 	%r1401, %r1397, %r1;
	or.b32 	%r1402, %r1396, %r1;
	or.b32 	%r1403, %r1395, %r1;
	or.b32 	%r1404, %r1388, %r1;
	or.b32 	%r1405, %r1387, %r1;
	or.b32 	%r1406, %r1394, %r1;
	or.b32 	%r1407, %r1393, %r1;
	or.b32 	%r1408, %r1386, %r1;
	or.b32 	%r1409, %r1385, %r1;
	or.b32 	%r1410, %r1392, %r1;
	or.b32 	%r1411, %r1391, %r1;
	or.b32 	%r1412, %r1384, %r1;
	or.b32 	%r1413, %r1383, %r1;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p36, %r1413, %r158;
	setp.lt.s32 	%p37, %r1412, %r158;
	setp.lt.s32 	%p38, %r1411, %r158;
	setp.lt.s32 	%p39, %r1410, %r158;
	setp.lt.s32 	%p40, %r1409, %r158;
	setp.lt.s32 	%p41, %r1408, %r158;
	setp.lt.s32 	%p42, %r1407, %r158;
	setp.lt.s32 	%p43, %r1406, %r158;
	setp.lt.s32 	%p44, %r1405, %r158;
	setp.lt.s32 	%p45, %r1404, %r158;
	setp.lt.s32 	%p46, %r1403, %r158;
	setp.lt.s32 	%p47, %r1402, %r158;
	setp.lt.s32 	%p48, %r1401, %r158;
	setp.lt.s32 	%p49, %r1400, %r158;
	setp.lt.s32 	%p50, %r1399, %r158;
	setp.lt.s32 	%p51, %r1398, %r158;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd116, %rd1, 2;
	add.s64 	%rd117, %rd14, %rd116;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd118, %rd2, 2;
	add.s64 	%rd119, %rd117, %rd118;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd120, %rd4, 2;
	add.s64 	%rd99, %rd119, %rd120;
	// begin inline asm
	mov.u32 %r1309, 0x0;
	@%p18 ld.global.b32 { %r1309 }, [ %rd99 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	shl.b32 	%r1414, %r5, 2;
	add.s32 	%r1416, %r231, %r1414;
	st.shared.b32 	[%r1416], %r1309;
	bar.sync 	0;
	shl.b32 	%r1417, %r1390, 2;
	add.s32 	%r1418, %r231, %r1417;
	ld.shared.b32 	%r1419, [%r1418];
	ld.shared.b32 	%r1420, [%r1418+32];
	ld.shared.b32 	%r1421, [%r1418+64];
	ld.shared.b32 	%r1422, [%r1418+96];
	ld.shared.b32 	%r1423, [%r1418+128];
	ld.shared.b32 	%r1424, [%r1418+160];
	ld.shared.b32 	%r1425, [%r1418+192];
	ld.shared.b32 	%r1426, [%r1418+224];
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	bar.sync 	0;
	st.shared.b32 	[%r1416], %r1309;
	bar.sync 	0;
	shl.b32 	%r1427, %r1382, 2;
	add.s32 	%r1428, %r231, %r1427;
	ld.shared.v2.b32 	{%r1429, %r1430}, [%r1428];
	ld.shared.v2.b32 	{%r1431, %r1432}, [%r1428+64];
	ld.shared.v2.b32 	{%r1433, %r1434}, [%r1428+128];
	ld.shared.v2.b32 	{%r1435, %r1436}, [%r1428+192];
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r1437, %r1419, %r1429;
	sub.f32 	%r1438, %r1419, %r1430;
	sub.f32 	%r1439, %r1420, %r1429;
	sub.f32 	%r1440, %r1420, %r1430;
	sub.f32 	%r1441, %r1421, %r1429;
	sub.f32 	%r1442, %r1421, %r1430;
	sub.f32 	%r1443, %r1422, %r1429;
	sub.f32 	%r1444, %r1422, %r1430;
	sub.f32 	%r1445, %r1421, %r1431;
	sub.f32 	%r1446, %r1421, %r1432;
	sub.f32 	%r1447, %r1422, %r1431;
	sub.f32 	%r1448, %r1422, %r1432;
	sub.f32 	%r1449, %r1423, %r1429;
	sub.f32 	%r1450, %r1423, %r1430;
	sub.f32 	%r1451, %r1424, %r1429;
	sub.f32 	%r1452, %r1424, %r1430;
	sub.f32 	%r1453, %r1423, %r1431;
	sub.f32 	%r1454, %r1423, %r1432;
	sub.f32 	%r1455, %r1424, %r1431;
	sub.f32 	%r1456, %r1424, %r1432;
	sub.f32 	%r1457, %r1423, %r1433;
	sub.f32 	%r1458, %r1423, %r1434;
	sub.f32 	%r1459, %r1424, %r1433;
	sub.f32 	%r1460, %r1424, %r1434;
	sub.f32 	%r1461, %r1425, %r1429;
	sub.f32 	%r1462, %r1425, %r1430;
	sub.f32 	%r1463, %r1426, %r1429;
	sub.f32 	%r1464, %r1426, %r1430;
	sub.f32 	%r1465, %r1425, %r1431;
	sub.f32 	%r1466, %r1425, %r1432;
	sub.f32 	%r1467, %r1426, %r1431;
	sub.f32 	%r1468, %r1426, %r1432;
	sub.f32 	%r1469, %r1425, %r1433;
	sub.f32 	%r1470, %r1425, %r1434;
	sub.f32 	%r1471, %r1426, %r1433;
	sub.f32 	%r1472, %r1426, %r1434;
	sub.f32 	%r1473, %r1425, %r1435;
	sub.f32 	%r1474, %r1425, %r1436;
	sub.f32 	%r1475, %r1426, %r1435;
	sub.f32 	%r1476, %r1426, %r1436;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r1477, %r1437, 0f3FB8AA3B;
	ex2.approx.f32 	%r1478, %r1477;
	mul.f32 	%r1479, %r1438, 0f3FB8AA3B;
	ex2.approx.f32 	%r1480, %r1479;
	mul.f32 	%r1481, %r1439, 0f3FB8AA3B;
	ex2.approx.f32 	%r1482, %r1481;
	mul.f32 	%r1483, %r1440, 0f3FB8AA3B;
	ex2.approx.f32 	%r1484, %r1483;
	mul.f32 	%r1485, %r1441, 0f3FB8AA3B;
	ex2.approx.f32 	%r1486, %r1485;
	mul.f32 	%r1487, %r1442, 0f3FB8AA3B;
	ex2.approx.f32 	%r1488, %r1487;
	mul.f32 	%r1489, %r1443, 0f3FB8AA3B;
	ex2.approx.f32 	%r1490, %r1489;
	mul.f32 	%r1491, %r1444, 0f3FB8AA3B;
	ex2.approx.f32 	%r1492, %r1491;
	mul.f32 	%r1493, %r1445, 0f3FB8AA3B;
	ex2.approx.f32 	%r1494, %r1493;
	mul.f32 	%r1495, %r1446, 0f3FB8AA3B;
	ex2.approx.f32 	%r1496, %r1495;
	mul.f32 	%r1497, %r1447, 0f3FB8AA3B;
	ex2.approx.f32 	%r1498, %r1497;
	mul.f32 	%r1499, %r1448, 0f3FB8AA3B;
	ex2.approx.f32 	%r1500, %r1499;
	mul.f32 	%r1501, %r1449, 0f3FB8AA3B;
	ex2.approx.f32 	%r1502, %r1501;
	mul.f32 	%r1503, %r1450, 0f3FB8AA3B;
	ex2.approx.f32 	%r1504, %r1503;
	mul.f32 	%r1505, %r1451, 0f3FB8AA3B;
	ex2.approx.f32 	%r1506, %r1505;
	mul.f32 	%r1507, %r1452, 0f3FB8AA3B;
	ex2.approx.f32 	%r1508, %r1507;
	mul.f32 	%r1509, %r1453, 0f3FB8AA3B;
	ex2.approx.f32 	%r1510, %r1509;
	mul.f32 	%r1511, %r1454, 0f3FB8AA3B;
	ex2.approx.f32 	%r1512, %r1511;
	mul.f32 	%r1513, %r1455, 0f3FB8AA3B;
	ex2.approx.f32 	%r1514, %r1513;
	mul.f32 	%r1515, %r1456, 0f3FB8AA3B;
	ex2.approx.f32 	%r1516, %r1515;
	mul.f32 	%r1517, %r1457, 0f3FB8AA3B;
	ex2.approx.f32 	%r1518, %r1517;
	mul.f32 	%r1519, %r1458, 0f3FB8AA3B;
	ex2.approx.f32 	%r1520, %r1519;
	mul.f32 	%r1521, %r1459, 0f3FB8AA3B;
	ex2.approx.f32 	%r1522, %r1521;
	mul.f32 	%r1523, %r1460, 0f3FB8AA3B;
	ex2.approx.f32 	%r1524, %r1523;
	mul.f32 	%r1525, %r1461, 0f3FB8AA3B;
	ex2.approx.f32 	%r1526, %r1525;
	mul.f32 	%r1527, %r1462, 0f3FB8AA3B;
	ex2.approx.f32 	%r1528, %r1527;
	mul.f32 	%r1529, %r1463, 0f3FB8AA3B;
	ex2.approx.f32 	%r1530, %r1529;
	mul.f32 	%r1531, %r1464, 0f3FB8AA3B;
	ex2.approx.f32 	%r1532, %r1531;
	mul.f32 	%r1533, %r1465, 0f3FB8AA3B;
	ex2.approx.f32 	%r1534, %r1533;
	mul.f32 	%r1535, %r1466, 0f3FB8AA3B;
	ex2.approx.f32 	%r1536, %r1535;
	mul.f32 	%r1537, %r1467, 0f3FB8AA3B;
	ex2.approx.f32 	%r1538, %r1537;
	mul.f32 	%r1539, %r1468, 0f3FB8AA3B;
	ex2.approx.f32 	%r1540, %r1539;
	mul.f32 	%r1541, %r1469, 0f3FB8AA3B;
	ex2.approx.f32 	%r1542, %r1541;
	mul.f32 	%r1543, %r1470, 0f3FB8AA3B;
	ex2.approx.f32 	%r1544, %r1543;
	mul.f32 	%r1545, %r1471, 0f3FB8AA3B;
	ex2.approx.f32 	%r1546, %r1545;
	mul.f32 	%r1547, %r1472, 0f3FB8AA3B;
	ex2.approx.f32 	%r1548, %r1547;
	mul.f32 	%r1549, %r1473, 0f3FB8AA3B;
	ex2.approx.f32 	%r1550, %r1549;
	mul.f32 	%r1551, %r1474, 0f3FB8AA3B;
	ex2.approx.f32 	%r1552, %r1551;
	mul.f32 	%r1553, %r1475, 0f3FB8AA3B;
	ex2.approx.f32 	%r1554, %r1553;
	mul.f32 	%r1555, %r1476, 0f3FB8AA3B;
	ex2.approx.f32 	%r1556, %r1555;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r1557, %r1817, %r1478;
	mul.f32 	%r1558, %r1818, %r1480;
	mul.f32 	%r1559, %r1819, %r1482;
	mul.f32 	%r1560, %r1820, %r1484;
	mul.f32 	%r1561, %r1833, %r1486;
	mul.f32 	%r1562, %r1834, %r1488;
	mul.f32 	%r1563, %r1835, %r1490;
	mul.f32 	%r1564, %r1836, %r1492;
	mul.f32 	%r1565, %r1837, %r1494;
	mul.f32 	%r1566, %r1838, %r1496;
	mul.f32 	%r1567, %r1839, %r1498;
	mul.f32 	%r1568, %r1840, %r1500;
	mul.f32 	%r1569, %r1849, %r1502;
	mul.f32 	%r1570, %r1850, %r1504;
	mul.f32 	%r1571, %r1851, %r1506;
	mul.f32 	%r1572, %r1852, %r1508;
	mul.f32 	%r1573, %r1853, %r1510;
	mul.f32 	%r1574, %r1854, %r1512;
	mul.f32 	%r1575, %r1855, %r1514;
	mul.f32 	%r1576, %r1856, %r1516;
	mul.f32 	%r1577, %r1857, %r1518;
	mul.f32 	%r1578, %r1858, %r1520;
	mul.f32 	%r1579, %r1859, %r1522;
	mul.f32 	%r1580, %r1860, %r1524;
	mul.f32 	%r1581, %r1865, %r1526;
	mul.f32 	%r1582, %r1866, %r1528;
	mul.f32 	%r1583, %r1867, %r1530;
	mul.f32 	%r1584, %r1868, %r1532;
	mul.f32 	%r1585, %r1869, %r1534;
	mul.f32 	%r1586, %r1870, %r1536;
	mul.f32 	%r1587, %r1871, %r1538;
	mul.f32 	%r1588, %r1872, %r1540;
	mul.f32 	%r1589, %r1873, %r1542;
	mul.f32 	%r1590, %r1874, %r1544;
	mul.f32 	%r1591, %r1875, %r1546;
	mul.f32 	%r1592, %r1876, %r1548;
	mul.f32 	%r1593, %r1877, %r1550;
	mul.f32 	%r1594, %r1878, %r1552;
	mul.f32 	%r1595, %r1879, %r1554;
	mul.f32 	%r1596, %r1880, %r1556;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	bar.sync 	0;
	or.b32 	%r1597, %r1381, %r1379;
	shl.b32 	%r1598, %r5, 1;
	sub.s32 	%r1599, %r1416, %r1598;
	st.shared.b16 	[%r1599], %rs1;
	bar.sync 	0;
	shl.b32 	%r1600, %r1597, 1;
	add.s32 	%r1601, %r231, %r1600;
	ld.shared.v4.b16 	{%rs3, %rs4, %rs5, %rs6}, [%r1601];
	ld.shared.v4.b16 	{%rs7, %rs8, %rs9, %rs10}, [%r1601+32];
	ld.shared.v4.b16 	{%rs11, %rs12, %rs13, %rs14}, [%r1601+64];
	ld.shared.v4.b16 	{%rs15, %rs16, %rs17, %rs18}, [%r1601+96];
	cvt.f32.bf16 	%r1602, %rs3;
	cvt.f32.bf16 	%r1603, %rs4;
	cvt.f32.bf16 	%r1604, %rs5;
	cvt.f32.bf16 	%r1605, %rs6;
	cvt.f32.bf16 	%r1606, %rs7;
	cvt.f32.bf16 	%r1607, %rs8;
	cvt.f32.bf16 	%r1608, %rs9;
	cvt.f32.bf16 	%r1609, %rs10;
	cvt.f32.bf16 	%r1610, %rs11;
	cvt.f32.bf16 	%r1611, %rs12;
	cvt.f32.bf16 	%r1612, %rs13;
	cvt.f32.bf16 	%r1613, %rs14;
	cvt.f32.bf16 	%r1614, %rs15;
	cvt.f32.bf16 	%r1615, %rs16;
	cvt.f32.bf16 	%r1616, %rs17;
	cvt.f32.bf16 	%r1617, %rs18;
	bar.sync 	0;
	add.s32 	%r1618, %r1601, %r1600;
	st.shared.v4.b32 	[%r1618], {%r1602, %r1603, %r1604, %r1605};
	bar.sync 	0;
	ld.shared.b32 	%r1619, [%r1418];
	ld.shared.b32 	%r1620, [%r1418+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1618], {%r1606, %r1607, %r1608, %r1609};
	bar.sync 	0;
	ld.shared.b32 	%r1621, [%r1418];
	ld.shared.b32 	%r1622, [%r1418+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1618], {%r1610, %r1611, %r1612, %r1613};
	bar.sync 	0;
	ld.shared.b32 	%r1623, [%r1418];
	ld.shared.b32 	%r1624, [%r1418+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1618], {%r1614, %r1615, %r1616, %r1617};
	bar.sync 	0;
	ld.shared.b32 	%r1625, [%r1418];
	ld.shared.b32 	%r1626, [%r1418+32];
	mul.f32 	%r1627, %r1557, %r1619;
	mul.f32 	%r1628, %r1558, %r1619;
	mul.f32 	%r1629, %r1559, %r1620;
	mul.f32 	%r1630, %r1560, %r1620;
	mul.f32 	%r1631, %r1561, %r1621;
	mul.f32 	%r1632, %r1562, %r1621;
	mul.f32 	%r1633, %r1563, %r1622;
	mul.f32 	%r1634, %r1564, %r1622;
	mul.f32 	%r1635, %r1565, %r1621;
	mul.f32 	%r1636, %r1566, %r1621;
	mul.f32 	%r1637, %r1567, %r1622;
	mul.f32 	%r1638, %r1568, %r1622;
	mul.f32 	%r1639, %r1569, %r1623;
	mul.f32 	%r1640, %r1570, %r1623;
	mul.f32 	%r1641, %r1571, %r1624;
	mul.f32 	%r1642, %r1572, %r1624;
	mul.f32 	%r1643, %r1573, %r1623;
	mul.f32 	%r1644, %r1574, %r1623;
	mul.f32 	%r1645, %r1575, %r1624;
	mul.f32 	%r1646, %r1576, %r1624;
	mul.f32 	%r1647, %r1577, %r1623;
	mul.f32 	%r1648, %r1578, %r1623;
	mul.f32 	%r1649, %r1579, %r1624;
	mul.f32 	%r1650, %r1580, %r1624;
	mul.f32 	%r1651, %r1581, %r1625;
	mul.f32 	%r1652, %r1582, %r1625;
	mul.f32 	%r1653, %r1583, %r1626;
	mul.f32 	%r1654, %r1584, %r1626;
	mul.f32 	%r1655, %r1585, %r1625;
	mul.f32 	%r1656, %r1586, %r1625;
	mul.f32 	%r1657, %r1587, %r1626;
	mul.f32 	%r1658, %r1588, %r1626;
	mul.f32 	%r1659, %r1589, %r1625;
	mul.f32 	%r1660, %r1590, %r1625;
	mul.f32 	%r1661, %r1591, %r1626;
	mul.f32 	%r1662, %r1592, %r1626;
	mul.f32 	%r1663, %r1593, %r1625;
	mul.f32 	%r1664, %r1594, %r1625;
	mul.f32 	%r1665, %r1595, %r1626;
	mul.f32 	%r1666, %r1596, %r1626;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p52, %r1390, %r1382;
	setp.gt.u32 	%p53, %r1390, %r1389;
	setp.gt.u32 	%p54, %r1397, %r1382;
	setp.gt.u32 	%p55, %r1397, %r1389;
	setp.gt.u32 	%p56, %r1396, %r1387;
	setp.gt.u32 	%p57, %r1395, %r1388;
	setp.gt.u32 	%p58, %r1395, %r1387;
	setp.gt.u32 	%p59, %r1394, %r1385;
	setp.gt.u32 	%p60, %r1393, %r1386;
	setp.gt.u32 	%p61, %r1393, %r1385;
	setp.gt.u32 	%p62, %r1392, %r1383;
	setp.gt.u32 	%p63, %r1391, %r1384;
	setp.gt.u32 	%p64, %r1391, %r1383;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r1667, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd121, %r1667, 4;
	add.s64 	%rd122, %rd15, %rd121;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r1668, %r2, 4, 2;
	or.b32 	%r1669, %r1374, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1670, %r1669, 60;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r1671, %r1668, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1672, %r1671, 56;
	or.b32 	%r1673, %r1671, 52;
	or.b32 	%r1674, %r1671, 48;
	or.b32 	%r1675, %r1671, 44;
	or.b32 	%r1676, %r1671, 40;
	or.b32 	%r1677, %r1671, 36;
	or.b32 	%r1678, %r1671, 32;
	or.b32 	%r1679, %r1671, 28;
	or.b32 	%r1680, %r1671, 24;
	or.b32 	%r1681, %r1671, 20;
	or.b32 	%r1682, %r1671, 16;
	or.b32 	%r1683, %r1671, 12;
	or.b32 	%r1684, %r1671, 8;
	or.b32 	%r1685, %r1671, 4;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd123, %r1671, 8192;
	add.s64 	%rd124, %rd122, %rd123;
	mul.wide.u32 	%rd125, %r1376, 4;
	add.s64 	%rd100, %rd124, %rd125;
	mul.wide.s32 	%rd126, %r1685, 8192;
	add.s64 	%rd127, %rd122, %rd126;
	add.s64 	%rd101, %rd127, %rd125;
	mul.wide.s32 	%rd128, %r1684, 8192;
	add.s64 	%rd129, %rd122, %rd128;
	add.s64 	%rd102, %rd129, %rd125;
	mul.wide.s32 	%rd130, %r1683, 8192;
	add.s64 	%rd131, %rd122, %rd130;
	add.s64 	%rd103, %rd131, %rd125;
	mul.wide.s32 	%rd132, %r1682, 8192;
	add.s64 	%rd133, %rd122, %rd132;
	add.s64 	%rd104, %rd133, %rd125;
	mul.wide.s32 	%rd134, %r1681, 8192;
	add.s64 	%rd135, %rd122, %rd134;
	add.s64 	%rd105, %rd135, %rd125;
	mul.wide.s32 	%rd136, %r1680, 8192;
	add.s64 	%rd137, %rd122, %rd136;
	add.s64 	%rd106, %rd137, %rd125;
	mul.wide.s32 	%rd138, %r1679, 8192;
	add.s64 	%rd139, %rd122, %rd138;
	add.s64 	%rd107, %rd139, %rd125;
	mul.wide.s32 	%rd140, %r1678, 8192;
	add.s64 	%rd141, %rd122, %rd140;
	add.s64 	%rd108, %rd141, %rd125;
	mul.wide.s32 	%rd142, %r1677, 8192;
	add.s64 	%rd143, %rd122, %rd142;
	add.s64 	%rd109, %rd143, %rd125;
	mul.wide.s32 	%rd144, %r1676, 8192;
	add.s64 	%rd145, %rd122, %rd144;
	add.s64 	%rd110, %rd145, %rd125;
	mul.wide.s32 	%rd146, %r1675, 8192;
	add.s64 	%rd147, %rd122, %rd146;
	add.s64 	%rd111, %rd147, %rd125;
	mul.wide.s32 	%rd148, %r1674, 8192;
	add.s64 	%rd149, %rd122, %rd148;
	add.s64 	%rd112, %rd149, %rd125;
	mul.wide.s32 	%rd150, %r1673, 8192;
	add.s64 	%rd151, %rd122, %rd150;
	add.s64 	%rd113, %rd151, %rd125;
	mul.wide.s32 	%rd152, %r1672, 8192;
	add.s64 	%rd153, %rd122, %rd152;
	add.s64 	%rd114, %rd153, %rd125;
	mul.wide.s32 	%rd154, %r1670, 8192;
	add.s64 	%rd155, %rd122, %rd154;
	add.s64 	%rd115, %rd155, %rd125;
	setp.lt.s32 	%p65, %r1670, %r158;
	setp.lt.s32 	%p66, %r1672, %r158;
	setp.lt.s32 	%p67, %r1673, %r158;
	setp.lt.s32 	%p68, %r1674, %r158;
	setp.lt.s32 	%p69, %r1675, %r158;
	setp.lt.s32 	%p70, %r1676, %r158;
	setp.lt.s32 	%p71, %r1677, %r158;
	setp.lt.s32 	%p72, %r1678, %r158;
	setp.lt.s32 	%p73, %r1679, %r158;
	setp.lt.s32 	%p74, %r1680, %r158;
	setp.lt.s32 	%p75, %r1681, %r158;
	setp.lt.s32 	%p76, %r1682, %r158;
	setp.lt.s32 	%p77, %r1683, %r158;
	setp.lt.s32 	%p78, %r1684, %r158;
	setp.lt.s32 	%p79, %r1685, %r158;
	setp.lt.s32 	%p80, %r1671, %r158;
	and.pred 	%p19, %p5, %p80;
	and.pred 	%p20, %p5, %p79;
	and.pred 	%p21, %p5, %p78;
	and.pred 	%p22, %p5, %p77;
	and.pred 	%p23, %p5, %p76;
	and.pred 	%p24, %p5, %p75;
	and.pred 	%p25, %p5, %p74;
	and.pred 	%p26, %p5, %p73;
	and.pred 	%p27, %p5, %p72;
	and.pred 	%p28, %p5, %p71;
	and.pred 	%p29, %p5, %p70;
	and.pred 	%p30, %p5, %p69;
	and.pred 	%p31, %p5, %p68;
	and.pred 	%p32, %p5, %p67;
	and.pred 	%p33, %p5, %p66;
	and.pred 	%p34, %p5, %p65;
	bar.sync 	0;
	shl.b32 	%r1686, %r2, 4;
	and.b32 	%r1687, %r1686, 448;
	or.b32 	%r1688, %r1382, %r1687;
	and.b32 	%r1689, %r1375, 252;
	shr.u32 	%r1690, %r1687, 2;
	add.s32 	%r1691, %r231, %r1690;
	shl.b32 	%r1692, %r1688, 2;
	add.s32 	%r1693, %r1691, %r1692;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1694, %r1627, 0, %p51;
	selp.b32 	%r1695, %r1694, 0, %p52;
	selp.b32 	%r1696, %r1695, 0, %p50;
	selp.b32 	%r1697, %r1628, 0, %p49;
	selp.b32 	%r1698, %r1697, 0, %p53;
	selp.b32 	%r1699, %r1698, 0, %p50;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693], {%r1696, %r1699};
	or.b32 	%r1700, %r1688, 512;
	shr.u32 	%r1701, %r1700, 2;
	and.b32 	%r1702, %r1701, 240;
	add.s32 	%r1703, %r231, %r1702;
	add.s32 	%r1704, %r1703, %r1692;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1705, %r1629, 0, %p51;
	selp.b32 	%r1706, %r1705, 0, %p54;
	selp.b32 	%r1707, %r1706, 0, %p48;
	selp.b32 	%r1708, %r1630, 0, %p49;
	selp.b32 	%r1709, %r1708, 0, %p55;
	selp.b32 	%r1710, %r1709, 0, %p48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2048], {%r1707, %r1710};
	mov.b32 	%r1711, 0;
	st.shared.v2.b32 	[%r1693+64], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2112], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1693+128], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2176], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1693+192], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2240], {%r1711, %r1711};
	bar.sync 	0;
	and.b32 	%r1712, %r2, 48;
	add.s32 	%r1713, %r231, %r1712;
	shl.b32 	%r1714, %r1689, 2;
	add.s32 	%r1715, %r1713, %r1714;
	ld.shared.v4.b32 	{%r1310, %r1311, %r1312, %r1313}, [%r1715];
	or.b32 	%r1716, %r1689, 256;
	shr.u32 	%r1717, %r1716, 2;
	and.b32 	%r1718, %r1717, 112;
	add.s32 	%r1719, %r231, %r1718;
	add.s32 	%r1720, %r1719, %r1714;
	ld.shared.v4.b32 	{%r1314, %r1315, %r1316, %r1317}, [%r1720+1024];
	or.b32 	%r1721, %r1689, 512;
	shr.u32 	%r1722, %r1721, 2;
	and.b32 	%r1723, %r1722, 176;
	add.s32 	%r1724, %r231, %r1723;
	add.s32 	%r1725, %r1724, %r1714;
	ld.shared.v4.b32 	{%r1318, %r1319, %r1320, %r1321}, [%r1725+2048];
	or.b32 	%r1726, %r1689, 768;
	shr.u32 	%r1727, %r1726, 2;
	and.b32 	%r1728, %r1727, 240;
	add.s32 	%r1729, %r231, %r1728;
	add.s32 	%r1730, %r1729, %r1714;
	ld.shared.v4.b32 	{%r1322, %r1323, %r1324, %r1325}, [%r1730+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1731, %r1631, 0, %p51;
	selp.b32 	%r1732, %r1731, 0, %p47;
	selp.b32 	%r1733, %r1632, 0, %p49;
	selp.b32 	%r1734, %r1733, 0, %p47;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693], {%r1732, %r1734};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1735, %r1633, 0, %p51;
	selp.b32 	%r1736, %r1735, 0, %p46;
	selp.b32 	%r1737, %r1634, 0, %p49;
	selp.b32 	%r1738, %r1737, 0, %p46;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2048], {%r1736, %r1738};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1739, %r1635, 0, %p45;
	selp.b32 	%r1740, %r1739, 0, %p52;
	selp.b32 	%r1741, %r1740, 0, %p47;
	selp.b32 	%r1742, %r1636, 0, %p44;
	selp.b32 	%r1743, %r1742, 0, %p56;
	selp.b32 	%r1744, %r1743, 0, %p47;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+64], {%r1741, %r1744};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1745, %r1637, 0, %p45;
	selp.b32 	%r1746, %r1745, 0, %p57;
	selp.b32 	%r1747, %r1746, 0, %p46;
	selp.b32 	%r1748, %r1638, 0, %p44;
	selp.b32 	%r1749, %r1748, 0, %p58;
	selp.b32 	%r1750, %r1749, 0, %p46;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2112], {%r1747, %r1750};
	st.shared.v2.b32 	[%r1693+128], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2176], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1693+192], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2240], {%r1711, %r1711};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1326, %r1327, %r1328, %r1329}, [%r1715];
	ld.shared.v4.b32 	{%r1330, %r1331, %r1332, %r1333}, [%r1720+1024];
	ld.shared.v4.b32 	{%r1334, %r1335, %r1336, %r1337}, [%r1725+2048];
	ld.shared.v4.b32 	{%r1338, %r1339, %r1340, %r1341}, [%r1730+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1751, %r1639, 0, %p51;
	selp.b32 	%r1752, %r1751, 0, %p43;
	selp.b32 	%r1753, %r1640, 0, %p49;
	selp.b32 	%r1754, %r1753, 0, %p43;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693], {%r1752, %r1754};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1755, %r1641, 0, %p51;
	selp.b32 	%r1756, %r1755, 0, %p42;
	selp.b32 	%r1757, %r1642, 0, %p49;
	selp.b32 	%r1758, %r1757, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2048], {%r1756, %r1758};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1759, %r1643, 0, %p45;
	selp.b32 	%r1760, %r1759, 0, %p43;
	selp.b32 	%r1761, %r1644, 0, %p44;
	selp.b32 	%r1762, %r1761, 0, %p43;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+64], {%r1760, %r1762};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1763, %r1645, 0, %p45;
	selp.b32 	%r1764, %r1763, 0, %p42;
	selp.b32 	%r1765, %r1646, 0, %p44;
	selp.b32 	%r1766, %r1765, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2112], {%r1764, %r1766};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1767, %r1647, 0, %p41;
	selp.b32 	%r1768, %r1767, 0, %p52;
	selp.b32 	%r1769, %r1768, 0, %p43;
	selp.b32 	%r1770, %r1648, 0, %p40;
	selp.b32 	%r1771, %r1770, 0, %p59;
	selp.b32 	%r1772, %r1771, 0, %p43;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+128], {%r1769, %r1772};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1773, %r1649, 0, %p41;
	selp.b32 	%r1774, %r1773, 0, %p60;
	selp.b32 	%r1775, %r1774, 0, %p42;
	selp.b32 	%r1776, %r1650, 0, %p40;
	selp.b32 	%r1777, %r1776, 0, %p61;
	selp.b32 	%r1778, %r1777, 0, %p42;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2176], {%r1775, %r1778};
	st.shared.v2.b32 	[%r1693+192], {%r1711, %r1711};
	st.shared.v2.b32 	[%r1704+2240], {%r1711, %r1711};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1342, %r1343, %r1344, %r1345}, [%r1715];
	ld.shared.v4.b32 	{%r1346, %r1347, %r1348, %r1349}, [%r1720+1024];
	ld.shared.v4.b32 	{%r1350, %r1351, %r1352, %r1353}, [%r1725+2048];
	ld.shared.v4.b32 	{%r1354, %r1355, %r1356, %r1357}, [%r1730+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1779, %r1651, 0, %p51;
	selp.b32 	%r1780, %r1779, 0, %p39;
	selp.b32 	%r1781, %r1652, 0, %p49;
	selp.b32 	%r1782, %r1781, 0, %p39;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693], {%r1780, %r1782};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1783, %r1653, 0, %p51;
	selp.b32 	%r1784, %r1783, 0, %p38;
	selp.b32 	%r1785, %r1654, 0, %p49;
	selp.b32 	%r1786, %r1785, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2048], {%r1784, %r1786};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1787, %r1655, 0, %p45;
	selp.b32 	%r1788, %r1787, 0, %p39;
	selp.b32 	%r1789, %r1656, 0, %p44;
	selp.b32 	%r1790, %r1789, 0, %p39;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+64], {%r1788, %r1790};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1791, %r1657, 0, %p45;
	selp.b32 	%r1792, %r1791, 0, %p38;
	selp.b32 	%r1793, %r1658, 0, %p44;
	selp.b32 	%r1794, %r1793, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2112], {%r1792, %r1794};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1795, %r1659, 0, %p41;
	selp.b32 	%r1796, %r1795, 0, %p39;
	selp.b32 	%r1797, %r1660, 0, %p40;
	selp.b32 	%r1798, %r1797, 0, %p39;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+128], {%r1796, %r1798};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1799, %r1661, 0, %p41;
	selp.b32 	%r1800, %r1799, 0, %p38;
	selp.b32 	%r1801, %r1662, 0, %p40;
	selp.b32 	%r1802, %r1801, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2176], {%r1800, %r1802};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1803, %r1663, 0, %p37;
	selp.b32 	%r1804, %r1803, 0, %p52;
	selp.b32 	%r1805, %r1804, 0, %p39;
	selp.b32 	%r1806, %r1664, 0, %p36;
	selp.b32 	%r1807, %r1806, 0, %p62;
	selp.b32 	%r1808, %r1807, 0, %p39;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1693+192], {%r1805, %r1808};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1809, %r1665, 0, %p37;
	selp.b32 	%r1810, %r1809, 0, %p63;
	selp.b32 	%r1811, %r1810, 0, %p38;
	selp.b32 	%r1812, %r1666, 0, %p36;
	selp.b32 	%r1813, %r1812, 0, %p64;
	selp.b32 	%r1814, %r1813, 0, %p38;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1704+2240], {%r1811, %r1814};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1358, %r1359, %r1360, %r1361}, [%r1715];
	ld.shared.v4.b32 	{%r1362, %r1363, %r1364, %r1365}, [%r1720+1024];
	ld.shared.v4.b32 	{%r1366, %r1367, %r1368, %r1369}, [%r1725+2048];
	ld.shared.v4.b32 	{%r1370, %r1371, %r1372, %r1373}, [%r1730+3072];
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd100 + 0 ], { %r1310, %r1311, %r1312, %r1313 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd101 + 0 ], { %r1314, %r1315, %r1316, %r1317 };
	// end inline asm
	// begin inline asm
	@%p21 st.global.v4.b32 [ %rd102 + 0 ], { %r1318, %r1319, %r1320, %r1321 };
	// end inline asm
	// begin inline asm
	@%p22 st.global.v4.b32 [ %rd103 + 0 ], { %r1322, %r1323, %r1324, %r1325 };
	// end inline asm
	// begin inline asm
	@%p23 st.global.v4.b32 [ %rd104 + 0 ], { %r1326, %r1327, %r1328, %r1329 };
	// end inline asm
	// begin inline asm
	@%p24 st.global.v4.b32 [ %rd105 + 0 ], { %r1330, %r1331, %r1332, %r1333 };
	// end inline asm
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd106 + 0 ], { %r1334, %r1335, %r1336, %r1337 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd107 + 0 ], { %r1338, %r1339, %r1340, %r1341 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd108 + 0 ], { %r1342, %r1343, %r1344, %r1345 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd109 + 0 ], { %r1346, %r1347, %r1348, %r1349 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd110 + 0 ], { %r1350, %r1351, %r1352, %r1353 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd111 + 0 ], { %r1354, %r1355, %r1356, %r1357 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd112 + 0 ], { %r1358, %r1359, %r1360, %r1361 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd113 + 0 ], { %r1362, %r1363, %r1364, %r1365 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd114 + 0 ], { %r1366, %r1367, %r1368, %r1369 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd115 + 0 ], { %r1370, %r1371, %r1372, %r1373 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
