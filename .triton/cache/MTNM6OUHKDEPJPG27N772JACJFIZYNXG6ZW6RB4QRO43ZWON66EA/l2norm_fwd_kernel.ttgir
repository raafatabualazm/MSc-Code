#blocked = #ttg.blocked<{sizePerThread = [1, 8], threadsPerWarp = [2, 16], warpsPerCTA = [2, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [2], order = [0]}>
#loc = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0)
#loc1 = loc(unknown)
#loc9 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:43)
#loc21 = loc(callsite(#loc1 at #loc9))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 2 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @l2norm_fwd_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg2: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0), %arg3: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":87:0)) attributes {noinline = false} {
    %cst = arith.constant dense<128> : tensor<16x1xi64, #blocked> loc(#loc1)
    %cst_0 = arith.constant dense<0> : tensor<16x1xi64, #blocked> loc(#loc1)
    %cst_1 = arith.constant dense<49152> : tensor<16x1xi64, #blocked> loc(#loc1)
    %cst_2 = arith.constant dense<0> : tensor<1x128xi64, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<1x128xi64, #blocked> loc(#loc1)
    %cst_4 = arith.constant dense<0> : tensor<16xi64, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<49152> : tensor<16xi64, #blocked1> loc(#loc1)
    %c16_i32 = arith.constant 16 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<1.000000e+00> : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = arith.muli %0, %c16_i32 : i32 loc(#loc3)
    %2 = arith.extsi %1 : i32 to i64 loc(#loc4)
    %3 = tt.splat %arg0 : !tt.ptr<bf16> -> tensor<16x128x!tt.ptr<bf16>, #blocked> loc(#loc5)
    %4 = tt.splat %2 : i64 -> tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %5 = tt.splat %2 : i64 -> tensor<16xi64, #blocked1> loc(#loc5)
    %6 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %7 = tt.make_range {end = 16 : i32, start = 0 : i32} : tensor<16xi32, #blocked1> loc(#loc5)
    %8 = arith.extsi %6 : tensor<16xi32, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %9 = arith.extsi %7 : tensor<16xi32, #blocked1> to tensor<16xi64, #blocked1> loc(#loc5)
    %10 = arith.addi %4, %8 : tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc5)
    %11 = arith.addi %5, %9 : tensor<16xi64, #blocked1> loc(#loc5)
    %12 = tt.expand_dims %10 {axis = 1 : i32} : tensor<16xi64, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xi64, #blocked> loc(#loc5)
    %13 = arith.muli %12, %cst : tensor<16x1xi64, #blocked> loc(#loc5)
    %14 = tt.broadcast %13 : tensor<16x1xi64, #blocked> -> tensor<16x128xi64, #blocked> loc(#loc5)
    %15 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc5)
    %16 = arith.extsi %15 : tensor<128xi32, #ttg.slice<{dim = 0, parent = #blocked}>> to tensor<128xi64, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc5)
    %17 = tt.expand_dims %16 {axis = 0 : i32} : tensor<128xi64, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x128xi64, #blocked> loc(#loc5)
    %18 = tt.broadcast %17 : tensor<1x128xi64, #blocked> -> tensor<16x128xi64, #blocked> loc(#loc5)
    %19 = arith.addi %14, %18 : tensor<16x128xi64, #blocked> loc(#loc5)
    %20 = tt.addptr %3, %19 : tensor<16x128x!tt.ptr<bf16>, #blocked>, tensor<16x128xi64, #blocked> loc(#loc5)
    %21 = arith.cmpi sge, %12, %cst_0 : tensor<16x1xi64, #blocked> loc(#loc5)
    %22 = arith.cmpi slt, %12, %cst_1 : tensor<16x1xi64, #blocked> loc(#loc5)
    %23 = arith.andi %21, %22 : tensor<16x1xi1, #blocked> loc(#loc5)
    %24 = tt.broadcast %23 : tensor<16x1xi1, #blocked> -> tensor<16x128xi1, #blocked> loc(#loc5)
    %25 = arith.cmpi sge, %17, %cst_2 : tensor<1x128xi64, #blocked> loc(#loc5)
    %26 = arith.cmpi slt, %17, %cst_3 : tensor<1x128xi64, #blocked> loc(#loc5)
    %27 = arith.andi %25, %26 : tensor<1x128xi1, #blocked> loc(#loc5)
    %28 = tt.broadcast %27 : tensor<1x128xi1, #blocked> -> tensor<16x128xi1, #blocked> loc(#loc5)
    %29 = arith.andi %24, %28 : tensor<16x128xi1, #blocked> loc(#loc5)
    %30 = tt.load %20, %29 : tensor<16x128x!tt.ptr<bf16>, #blocked> loc(#loc5)
    %31 = arith.extf %30 : tensor<16x128xbf16, #blocked> to tensor<16x128xf32, #blocked> loc(#loc6)
    %32 = arith.mulf %31, %31 : tensor<16x128xf32, #blocked> loc(#loc7)
    %33 = "tt.reduce"(%32) <{axis = 1 : i32}> ({
    ^bb0(%arg4: f32 loc(callsite(#loc1 at #loc9)), %arg5: f32 loc(callsite(#loc1 at #loc9))):
      %50 = arith.addf %arg4, %arg5 : f32 loc(#loc22)
      tt.reduce.return %50 : f32 loc(#loc20)
    }) : (tensor<16x128xf32, #blocked>) -> tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc20)
    %34 = tt.splat %arg3 : f32 -> tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc11)
    %35 = arith.addf %33, %34 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc11)
    %36 = math.sqrt %35 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc12)
    %37 = arith.divf %cst_6, %36 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc13)
    %38 = tt.expand_dims %37 {axis = 1 : i32} : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16x1xf32, #blocked> loc(#loc14)
    %39 = tt.broadcast %38 : tensor<16x1xf32, #blocked> -> tensor<16x128xf32, #blocked> loc(#loc15)
    %40 = arith.mulf %31, %39 : tensor<16x128xf32, #blocked> loc(#loc15)
    %41 = arith.truncf %40 : tensor<16x128xf32, #blocked> to tensor<16x128xbf16, #blocked> loc(#loc16)
    %42 = tt.splat %arg1 : !tt.ptr<bf16> -> tensor<16x128x!tt.ptr<bf16>, #blocked> loc(#loc17)
    %43 = tt.addptr %42, %19 : tensor<16x128x!tt.ptr<bf16>, #blocked>, tensor<16x128xi64, #blocked> loc(#loc17)
    tt.store %43, %41, %29 : tensor<16x128x!tt.ptr<bf16>, #blocked> loc(#loc17)
    %44 = tt.splat %arg2 : !tt.ptr<f32> -> tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc18)
    %45 = tt.addptr %44, %11 : tensor<16x!tt.ptr<f32>, #blocked1>, tensor<16xi64, #blocked1> loc(#loc18)
    %46 = arith.cmpi sge, %11, %cst_4 : tensor<16xi64, #blocked1> loc(#loc18)
    %47 = arith.cmpi slt, %11, %cst_5 : tensor<16xi64, #blocked1> loc(#loc18)
    %48 = arith.andi %46, %47 : tensor<16xi1, #blocked1> loc(#loc18)
    %49 = ttg.convert_layout %37 : tensor<16xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<16xf32, #blocked1> loc(#loc18)
    tt.store %45, %49, %48 : tensor<16x!tt.ptr<f32>, #blocked1> loc(#loc18)
    tt.return loc(#loc19)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":98:24)
#loc3 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":99:54)
#loc4 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":99:72)
#loc5 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":103:18)
#loc6 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":103:49)
#loc7 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:38)
#loc8 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:36)
#loc10 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:15)
#loc11 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:48)
#loc12 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:25)
#loc13 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":104:17)
#loc14 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":105:23)
#loc15 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":105:16)
#loc16 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":107:25)
#loc17 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":107:18)
#loc18 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":108:21)
#loc19 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/l2norm.py":108:4)
#loc20 = loc(callsite(#loc8 at #loc9))
#loc22 = loc(callsite(#loc10 at #loc20))
