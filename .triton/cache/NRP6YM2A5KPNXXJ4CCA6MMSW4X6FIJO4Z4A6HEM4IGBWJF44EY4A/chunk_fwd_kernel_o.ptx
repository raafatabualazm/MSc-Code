//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_fwd_kernel_o      // -- Begin function chunk_fwd_kernel_o
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_fwd_kernel_o
.visible .entry chunk_fwd_kernel_o(
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_0,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_1,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_2,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_3,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_4,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_5,
	.param .f32 chunk_fwd_kernel_o_param_6,
	.param .u32 chunk_fwd_kernel_o_param_7,
	.param .u64 .ptr .global .align 1 chunk_fwd_kernel_o_param_8
)
.reqntid 64
{
	.reg .pred 	%p<70>;
	.reg .b16 	%rs<157>;
	.reg .b32 	%r<2160>;
	.reg .b64 	%rd<128>;
	.loc	1 32 0                          // chunk_o.py:32:0
$L__func_begin0:
	.loc	1 32 0                          // chunk_o.py:32:0

// %bb.0:
	ld.param.b32 	%r220, [chunk_fwd_kernel_o_param_7];
	ld.param.b32 	%r219, [chunk_fwd_kernel_o_param_6];
	ld.param.b64 	%rd25, [chunk_fwd_kernel_o_param_5];
	ld.param.b64 	%rd24, [chunk_fwd_kernel_o_param_4];
	ld.param.b64 	%rd23, [chunk_fwd_kernel_o_param_2];
	ld.param.b64 	%rd47, [chunk_fwd_kernel_o_param_0];
$L__tmp0:
	.loc	1 54 35                         // chunk_o.py:54:35
	mov.u32 	%r264, %ctaid.x;
	ld.param.b64 	%rd48, [chunk_fwd_kernel_o_param_1];
	.loc	1 54 53                         // chunk_o.py:54:53
	mov.u32 	%r265, %ctaid.y;
	ld.param.b64 	%rd49, [chunk_fwd_kernel_o_param_3];
	.loc	1 54 71                         // chunk_o.py:54:71
	mov.u32 	%r266, %ctaid.z;
	.loc	1 55 23                         // chunk_o.py:55:23
	shr.u32 	%r267, %r266, 5;
	.loc	1 55 33                         // chunk_o.py:55:33
	and.b32 	%r268, %r266, 31;
$L__tmp1:
	.loc	2 40 22                         // standard.py:40:22 @[ chunk_o.py:64:24 ]
	add.s32 	%r269, %r220, 63;
	.loc	2 40 28                         // standard.py:40:28 @[ chunk_o.py:64:24 ]
	shr.s32 	%r270, %r269, 31;
	shr.u32 	%r271, %r270, 26;
	add.s32 	%r272, %r269, %r271;
	shr.s32 	%r273, %r272, 6;
$L__tmp2:
	.loc	1 65 26                         // chunk_o.py:65:26
	mad.lo.s32 	%r274, %r273, %r267, %r265;
	.loc	1 66 25                         // chunk_o.py:66:25
	and.b32 	%r275, %r266, 65504;
	.loc	1 69 16                         // chunk_o.py:69:16
	mul.lo.s32 	%r276, %r275, %r220;
	.loc	1 69 20                         // chunk_o.py:69:20
	or.b32 	%r1, %r276, %r268;
	.loc	1 69 27                         // chunk_o.py:69:27
	shl.b32 	%r277, %r1, 7;
	.loc	1 69 9                          // chunk_o.py:69:9
	cvt.s64.s32 	%rd1, %r277;
	mul.wide.s32 	%rd50, %r277, 2;
	add.s64 	%rd51, %rd47, %rd50;
	.loc	1 70 9                          // chunk_o.py:70:9
	add.s64 	%rd52, %rd48, %rd50;
	.loc	1 73 17                         // chunk_o.py:73:17
	shl.b32 	%r278, %r274, 5;
	.loc	1 73 21                         // chunk_o.py:73:21
	or.b32 	%r279, %r278, %r268;
	.loc	1 73 9                          // chunk_o.py:73:9
	mul.wide.s32 	%rd53, %r279, 32768;
	add.s64 	%rd54, %rd49, %rd53;
	.loc	1 79 60                         // chunk_o.py:79:60
	shl.b32 	%r2, %r265, 6;
	.loc	1 79 85                         // chunk_o.py:79:85
	cvt.s64.s32 	%rd2, %r220;
	.loc	1 81 68                         // chunk_o.py:81:68
	shl.b32 	%r280, %r264, 5;
	.loc	1 81 83                         // chunk_o.py:81:83
	cvt.s64.s32 	%rd55, %r280;
	.loc	1 83 22                         // chunk_o.py:83:22
	mov.u32 	%r3, %tid.x;
	and.b32 	%r4, %r3, 4;
	bfe.s32 	%r281, %r3, 2, 1;
	and.b32 	%r5, %r3, 8;
	and.b32 	%r6, %r3, 16;
	and.b32 	%r7, %r3, 32;
	shr.u32 	%r8, %r3, 2;
	bfe.u32 	%r282, %r3, 2, 4;
	or.b32 	%r283, %r282, 16;
	or.b32 	%r284, %r282, %r2;
	cvt.u64.u32 	%rd3, %r284;
	or.b32 	%r285, %r283, %r2;
	cvt.u64.u32 	%rd4, %r285;
	or.b32 	%r9, %r284, 32;
	or.b32 	%r10, %r284, 48;
	mul.wide.u32 	%rd5, %r284, 4096;
	mul.wide.u32 	%rd6, %r285, 4096;
	mul.wide.u32 	%rd7, %r9, 4096;
	mul.wide.u32 	%rd8, %r10, 4096;
	bfe.s32 	%r286, %r3, 1, 1;
	shl.b32 	%r11, %r3, 3;
	and.b32 	%r287, %r11, 24;
	cvt.u64.u32 	%rd56, %r287;
	setp.lt.s64 	%p2, %rd3, %rd2;
	setp.lt.s64 	%p3, %rd4, %rd2;
	setp.lt.s32 	%p4, %r9, %r220;
	setp.lt.s32 	%p5, %r10, %r220;
	.loc	1 87 22                         // chunk_o.py:87:22
	or.b64 	%rd9, %rd56, %rd55;
	setp.gt.s32 	%p6, %r280, -1;
	setp.lt.s64 	%p7, %rd9, 128;
	and.pred 	%p1, %p6, %p7;
	.loc	1 83 22                         // chunk_o.py:83:22
	or.b64 	%rd57, %rd5, %rd56;
	or.b64 	%rd58, %rd6, %rd56;
	or.b64 	%rd59, %rd7, %rd56;
	or.b64 	%rd60, %rd8, %rd56;
	shl.b64 	%rd61, %rd57, 1;
	add.s64 	%rd26, %rd51, %rd61;
	shl.b64 	%rd62, %rd58, 1;
	add.s64 	%rd27, %rd51, %rd62;
	shl.b64 	%rd63, %rd59, 1;
	add.s64 	%rd28, %rd51, %rd63;
	shl.b64 	%rd64, %rd60, 1;
	add.s64 	%rd29, %rd51, %rd64;
	xor.b32 	%r288, %r11, %r3;
	and.b32 	%r289, %r288, 24;
	shl.b32 	%r290, %r282, 5;
	or.b32 	%r12, %r289, %r290;
	shl.b32 	%r291, %r12, 1;
	mov.b32 	%r292, global_smem;
	add.s32 	%r13, %r292, %r291;
	add.s32 	%r223, %r13, 1024;
	add.s32 	%r225, %r13, 2048;
	add.s32 	%r227, %r13, 3072;
	selp.b32 	%r222, 16, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r13 + 0 ], [ %rd26 + 0 ], 0x10, %r222;
	// end inline asm
	selp.b32 	%r224, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r223 + 0 ], [ %rd27 + 0 ], 0x10, %r224;
	// end inline asm
	selp.b32 	%r226, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r225 + 0 ], [ %rd28 + 0 ], 0x10, %r226;
	// end inline asm
	selp.b32 	%r228, 16, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r227 + 0 ], [ %rd29 + 0 ], 0x10, %r228;
	// end inline asm
	cp.async.commit_group;
	.loc	1 85 22                         // chunk_o.py:85:22
	add.s64 	%rd30, %rd52, %rd61;
	add.s64 	%rd31, %rd52, %rd62;
	add.s64 	%rd32, %rd52, %rd63;
	add.s64 	%rd33, %rd52, %rd64;
	add.s32 	%r293, %r292, 8192;
	add.s32 	%r229, %r293, %r291;
	add.s32 	%r231, %r229, 1024;
	add.s32 	%r233, %r229, 2048;
	add.s32 	%r235, %r229, 3072;
	// begin inline asm
	cp.async.cg.shared.global [ %r229 + 0 ], [ %rd30 + 0 ], 0x10, %r222;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r231 + 0 ], [ %rd31 + 0 ], 0x10, %r224;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r233 + 0 ], [ %rd32 + 0 ], 0x10, %r226;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r235 + 0 ], [ %rd33 + 0 ], 0x10, %r228;
	// end inline asm
	cp.async.commit_group;
	.loc	1 87 22                         // chunk_o.py:87:22
	mul.wide.u32 	%rd65, %r282, 256;
	add.s64 	%rd66, %rd54, %rd65;
	shl.b64 	%rd67, %rd9, 1;
	add.s64 	%rd34, %rd66, %rd67;
	mul.wide.u32 	%rd68, %r283, 256;
	add.s64 	%rd69, %rd54, %rd68;
	add.s64 	%rd35, %rd69, %rd67;
	add.s32 	%r237, %r13, 16384;
	add.s32 	%r239, %r13, 17408;
	selp.b32 	%r238, 16, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r237 + 0 ], [ %rd34 + 0 ], 0x10, %r238;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r239 + 0 ], [ %rd35 + 0 ], 0x10, %r238;
	// end inline asm
	cp.async.commit_group;
	.loc	1 83 22                         // chunk_o.py:83:22
	add.s64 	%rd36, %rd26, 64;
	add.s64 	%rd37, %rd27, 64;
	add.s64 	%rd38, %rd28, 64;
	add.s64 	%rd39, %rd29, 64;
	bar.sync 	0;
	add.s32 	%r241, %r13, 4096;
	add.s32 	%r243, %r13, 5120;
	add.s32 	%r245, %r13, 6144;
	add.s32 	%r247, %r13, 7168;
	// begin inline asm
	cp.async.cg.shared.global [ %r241 + 0 ], [ %rd36 + 0 ], 0x10, %r222;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r243 + 0 ], [ %rd37 + 0 ], 0x10, %r224;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r245 + 0 ], [ %rd38 + 0 ], 0x10, %r226;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r247 + 0 ], [ %rd39 + 0 ], 0x10, %r228;
	// end inline asm
	cp.async.commit_group;
	.loc	1 85 22                         // chunk_o.py:85:22
	add.s64 	%rd40, %rd30, 64;
	add.s64 	%rd41, %rd31, 64;
	add.s64 	%rd42, %rd32, 64;
	add.s64 	%rd43, %rd33, 64;
	add.s32 	%r249, %r13, 12288;
	add.s32 	%r251, %r13, 13312;
	add.s32 	%r253, %r13, 14336;
	add.s32 	%r255, %r13, 15360;
	// begin inline asm
	cp.async.cg.shared.global [ %r249 + 0 ], [ %rd40 + 0 ], 0x10, %r222;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r251 + 0 ], [ %rd41 + 0 ], 0x10, %r224;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r253 + 0 ], [ %rd42 + 0 ], 0x10, %r226;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r255 + 0 ], [ %rd43 + 0 ], 0x10, %r228;
	// end inline asm
	cp.async.commit_group;
	.loc	1 87 22                         // chunk_o.py:87:22
	add.s64 	%rd44, %rd34, 8192;
	add.s64 	%rd45, %rd35, 8192;
	add.s32 	%r257, %r13, 18432;
	add.s32 	%r259, %r13, 19456;
	// begin inline asm
	cp.async.cg.shared.global [ %r257 + 0 ], [ %rd44 + 0 ], 0x10, %r238;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r259 + 0 ], [ %rd45 + 0 ], 0x10, %r238;
	// end inline asm
	cp.async.commit_group;
	shl.b32 	%r294, %r3, 5;
	and.b32 	%r295, %r294, 32;
	and.b32 	%r296, %r286, 72;
	or.b32 	%r297, %r296, %r295;
	and.b32 	%r298, %r281, 144;
	or.b32 	%r299, %r297, %r298;
	shl.b32 	%r300, %r5, 5;
	or.b32 	%r301, %r299, %r300;
	shr.u32 	%r302, %r6, 1;
	shl.b32 	%r14, %r7, 4;
	or.b32 	%r303, %r302, %r14;
	xor.b32 	%r15, %r301, %r303;
	xor.b32 	%r16, %r15, 16;
	xor.b32 	%r17, %r15, 1040;
	and.b32 	%r304, %r3, 24;
	xor.b32 	%r305, %r299, %r304;
	and.b32 	%r306, %r294, 768;
	or.b32 	%r18, %r299, %r306;
	xor.b32 	%r19, %r18, 8;
	xor.b32 	%r20, %r18, 16;
	xor.b32 	%r21, %r18, 24;
	.loc	1 78 21                         // chunk_o.py:78:21
	shl.b32 	%r307, %r305, 1;
	add.s32 	%r22, %r293, %r307;
	mul.wide.u32 	%rd70, %r10, 8192;
	and.b32 	%r308, %r3, 3;
	mul.wide.u32 	%rd71, %r308, 16;
	or.b64 	%rd72, %rd70, %rd71;
	mul.lo.s32 	%r309, %r220, %r267;
	shl.b32 	%r310, %r309, 12;
	shl.b32 	%r311, %r268, 7;
	or.b32 	%r312, %r310, %r311;
	mul.wide.s32 	%rd73, %r312, 2;
	add.s64 	%rd74, %rd72, %rd73;
	or.b64 	%rd75, %rd74, 128;
	add.s64 	%rd10, %rd48, %rd75;
	add.s64 	%rd11, %rd47, %rd75;
	mul.wide.u32 	%rd76, %r9, 8192;
	or.b64 	%rd77, %rd76, %rd71;
	add.s64 	%rd78, %rd77, %rd73;
	or.b64 	%rd79, %rd78, 128;
	add.s64 	%rd12, %rd48, %rd79;
	add.s64 	%rd13, %rd47, %rd79;
	mul.wide.u32 	%rd80, %r265, 524288;
	mul.wide.u32 	%rd81, %r282, 8192;
	or.b64 	%rd82, %rd80, %rd81;
	or.b64 	%rd83, %rd82, %rd71;
	add.s64 	%rd84, %rd83, %rd73;
	add.s64 	%rd14, %rd48, %rd84;
	add.s64 	%rd15, %rd47, %rd84;
	or.b64 	%rd85, %rd53, %rd65;
	or.b64 	%rd86, %rd85, %rd71;
	mul.wide.s32 	%rd87, %r280, 2;
	add.s64 	%rd88, %rd86, %rd87;
	add.s64 	%rd89, %rd88, %rd49;
	add.s64 	%rd125, %rd89, 20480;
	mov.b32 	%r2064, 0f00000000;
	mov.b32 	%r2063, 1;
	mov.b32 	%r2062, -1;
	mov.b64 	%rd126, 0;
	shl.b32 	%r1091, %r16, 1;
	shl.b32 	%r1092, %r17, 1;
	mov.b64 	%rd127, %rd126;
	mov.b32 	%r2065, %r2064;
	mov.b32 	%r2066, %r2064;
	mov.b32 	%r2067, %r2064;
	mov.b32 	%r2068, %r2064;
	mov.b32 	%r2069, %r2064;
	mov.b32 	%r2070, %r2064;
	mov.b32 	%r2071, %r2064;
	mov.b32 	%r2072, %r2064;
	mov.b32 	%r2073, %r2064;
	mov.b32 	%r2074, %r2064;
	mov.b32 	%r2075, %r2064;
	mov.b32 	%r2076, %r2064;
	mov.b32 	%r2077, %r2064;
	mov.b32 	%r2078, %r2064;
	mov.b32 	%r2079, %r2064;
	mov.b32 	%r2080, %r2064;
	mov.b32 	%r2081, %r2064;
	mov.b32 	%r2082, %r2064;
	mov.b32 	%r2083, %r2064;
	mov.b32 	%r2084, %r2064;
	mov.b32 	%r2085, %r2064;
	mov.b32 	%r2086, %r2064;
	mov.b32 	%r2087, %r2064;
	mov.b32 	%r2088, %r2064;
	mov.b32 	%r2089, %r2064;
	mov.b32 	%r2090, %r2064;
	mov.b32 	%r2091, %r2064;
	mov.b32 	%r2092, %r2064;
	mov.b32 	%r2093, %r2064;
	mov.b32 	%r2094, %r2064;
	mov.b32 	%r2095, %r2064;
	mov.b32 	%r2096, %r2064;
	mov.b32 	%r2097, %r2064;
	mov.b32 	%r2098, %r2064;
	mov.b32 	%r2099, %r2064;
	mov.b32 	%r2100, %r2064;
	mov.b32 	%r2101, %r2064;
	mov.b32 	%r2102, %r2064;
	mov.b32 	%r2103, %r2064;
	mov.b32 	%r2104, %r2064;
	mov.b32 	%r2105, %r2064;
	mov.b32 	%r2106, %r2064;
	mov.b32 	%r2107, %r2064;
	mov.b32 	%r2108, %r2064;
	mov.b32 	%r2109, %r2064;
	mov.b32 	%r2110, %r2064;
	mov.b32 	%r2111, %r2064;
	mov.b32 	%r2112, %r2064;
	mov.b32 	%r2113, %r2064;
	mov.b32 	%r2114, %r2064;
	mov.b32 	%r2115, %r2064;
	mov.b32 	%r2116, %r2064;
	mov.b32 	%r2117, %r2064;
	mov.b32 	%r2118, %r2064;
	mov.b32 	%r2119, %r2064;
	mov.b32 	%r2120, %r2064;
	mov.b32 	%r2121, %r2064;
	mov.b32 	%r2122, %r2064;
	mov.b32 	%r2123, %r2064;
	mov.b32 	%r2124, %r2064;
	mov.b32 	%r2125, %r2064;
	mov.b32 	%r2126, %r2064;
	mov.b32 	%r2127, %r2064;
	mov.b32 	%r2128, %r2064;
	mov.b32 	%r2129, %r2064;
	mov.b32 	%r2130, %r2064;
	mov.b32 	%r2131, %r2064;
	mov.b32 	%r2132, %r2064;
	mov.b32 	%r2133, %r2064;
	mov.b32 	%r2134, %r2064;
	mov.b32 	%r2135, %r2064;
	mov.b32 	%r2136, %r2064;
	mov.b32 	%r2137, %r2064;
	mov.b32 	%r2138, %r2064;
	mov.b32 	%r2139, %r2064;
	mov.b32 	%r2140, %r2064;
	mov.b32 	%r2141, %r2064;
	mov.b32 	%r2142, %r2064;
	mov.b32 	%r2143, %r2064;
	mov.b32 	%r2144, %r2064;
	mov.b32 	%r2145, %r2064;
	mov.b32 	%r2146, %r2064;
	mov.b32 	%r2147, %r2064;
	mov.b32 	%r2148, %r2064;
	mov.b32 	%r2149, %r2064;
	mov.b32 	%r2150, %r2064;
	mov.b32 	%r2151, %r2064;
	mov.b32 	%r2152, %r2064;
	mov.b32 	%r2153, %r2064;
	mov.b32 	%r2154, %r2064;
	mov.b32 	%r2155, %r2064;
	mov.b32 	%r2156, %r2064;
	mov.b32 	%r2157, %r2064;
	mov.b32 	%r2158, %r2064;
	mov.b32 	%r2159, %r2064;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	setp.lt.u64 	%p12, %rd127, 2;
	add.s32 	%r1085, %r2062, 1;
	setp.gt.s32 	%p13, %r1085, 1;
	selp.b32 	%r2062, 0, %r1085, %p13;
	.loc	1 83 22                         // chunk_o.py:83:22
	cp.async.wait_group 	3;
	bar.sync 	0;
	shl.b32 	%r1086, %r2062, 11;
	shl.b32 	%r1087, %r2062, 12;
	add.s32 	%r1089, %r292, %r1087;
	shl.b32 	%r1090, %r15, 1;
	add.s32 	%r317, %r1089, %r1090;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r401, %r402, %r403, %r404}, [%r317];
	// end inline asm
	add.s32 	%r322, %r1089, %r1091;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r513, %r514, %r515, %r516}, [%r322];
	// end inline asm
	add.s32 	%r327, %r317, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r457, %r458, %r459, %r460}, [%r327];
	// end inline asm
	add.s32 	%r332, %r1089, %r1092;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r569, %r570, %r571, %r572}, [%r332];
	// end inline asm
	.loc	1 85 22                         // chunk_o.py:85:22
	add.s32 	%r337, %r22, %r1087;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r629, %r630, %r853, %r854}, [%r337];
	// end inline asm
	add.s32 	%r342, %r337, 512;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r643, %r644, %r867, %r868}, [%r342];
	// end inline asm
	add.s32 	%r347, %r337, 1024;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r657, %r658, %r881, %r882}, [%r347];
	// end inline asm
	add.s32 	%r352, %r337, 1536;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r671, %r672, %r895, %r896}, [%r352];
	// end inline asm
	add.s32 	%r357, %r337, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r685, %r686, %r909, %r910}, [%r357];
	// end inline asm
	add.s32 	%r362, %r337, 2560;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r699, %r700, %r923, %r924}, [%r362];
	// end inline asm
	add.s32 	%r367, %r337, 3072;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r713, %r714, %r937, %r938}, [%r367];
	// end inline asm
	add.s32 	%r372, %r337, 3584;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r727, %r728, %r951, %r952}, [%r372];
	// end inline asm
	.loc	1 87 22                         // chunk_o.py:87:22
	add.s32 	%r1093, %r292, 16384;
	add.s32 	%r1094, %r1093, %r1086;
	shl.b32 	%r1095, %r18, 1;
	add.s32 	%r377, %r1094, %r1095;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r405, %r406, %r517, %r518}, [%r377];
	// end inline asm
	shl.b32 	%r1096, %r19, 1;
	add.s32 	%r382, %r1094, %r1096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r419, %r420, %r531, %r532}, [%r382];
	// end inline asm
	shl.b32 	%r1097, %r20, 1;
	add.s32 	%r387, %r1094, %r1097;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r433, %r434, %r545, %r546}, [%r387];
	// end inline asm
	shl.b32 	%r1098, %r21, 1;
	add.s32 	%r392, %r1094, %r1098;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r447, %r448, %r559, %r560}, [%r392];
	// end inline asm
	.loc	1 90 27                         // chunk_o.py:90:27
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2128, %r2129, %r2130, %r2131 }, { %r401, %r402, %r403, %r404 }, { %r405, %r406 }, { %r2128, %r2129, %r2130, %r2131 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2132, %r2133, %r2134, %r2135 }, { %r401, %r402, %r403, %r404 }, { %r419, %r420 }, { %r2132, %r2133, %r2134, %r2135 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2136, %r2137, %r2138, %r2139 }, { %r401, %r402, %r403, %r404 }, { %r433, %r434 }, { %r2136, %r2137, %r2138, %r2139 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2140, %r2141, %r2142, %r2143 }, { %r401, %r402, %r403, %r404 }, { %r447, %r448 }, { %r2140, %r2141, %r2142, %r2143 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2144, %r2145, %r2146, %r2147 }, { %r457, %r458, %r459, %r460 }, { %r405, %r406 }, { %r2144, %r2145, %r2146, %r2147 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2148, %r2149, %r2150, %r2151 }, { %r457, %r458, %r459, %r460 }, { %r419, %r420 }, { %r2148, %r2149, %r2150, %r2151 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2152, %r2153, %r2154, %r2155 }, { %r457, %r458, %r459, %r460 }, { %r433, %r434 }, { %r2152, %r2153, %r2154, %r2155 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2156, %r2157, %r2158, %r2159 }, { %r457, %r458, %r459, %r460 }, { %r447, %r448 }, { %r2156, %r2157, %r2158, %r2159 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2128, %r2129, %r2130, %r2131 }, { %r513, %r514, %r515, %r516 }, { %r517, %r518 }, { %r2128, %r2129, %r2130, %r2131 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2132, %r2133, %r2134, %r2135 }, { %r513, %r514, %r515, %r516 }, { %r531, %r532 }, { %r2132, %r2133, %r2134, %r2135 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2136, %r2137, %r2138, %r2139 }, { %r513, %r514, %r515, %r516 }, { %r545, %r546 }, { %r2136, %r2137, %r2138, %r2139 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2140, %r2141, %r2142, %r2143 }, { %r513, %r514, %r515, %r516 }, { %r559, %r560 }, { %r2140, %r2141, %r2142, %r2143 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2144, %r2145, %r2146, %r2147 }, { %r569, %r570, %r571, %r572 }, { %r517, %r518 }, { %r2144, %r2145, %r2146, %r2147 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2148, %r2149, %r2150, %r2151 }, { %r569, %r570, %r571, %r572 }, { %r531, %r532 }, { %r2148, %r2149, %r2150, %r2151 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2152, %r2153, %r2154, %r2155 }, { %r569, %r570, %r571, %r572 }, { %r545, %r546 }, { %r2152, %r2153, %r2154, %r2155 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2156, %r2157, %r2158, %r2159 }, { %r569, %r570, %r571, %r572 }, { %r559, %r560 }, { %r2156, %r2157, %r2158, %r2159 };
	// end inline asm
	.loc	1 92 27                         // chunk_o.py:92:27
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2064, %r2065, %r2066, %r2067 }, { %r401, %r402, %r403, %r404 }, { %r629, %r630 }, { %r2064, %r2065, %r2066, %r2067 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2068, %r2069, %r2070, %r2071 }, { %r401, %r402, %r403, %r404 }, { %r643, %r644 }, { %r2068, %r2069, %r2070, %r2071 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2072, %r2073, %r2074, %r2075 }, { %r401, %r402, %r403, %r404 }, { %r657, %r658 }, { %r2072, %r2073, %r2074, %r2075 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2076, %r2077, %r2078, %r2079 }, { %r401, %r402, %r403, %r404 }, { %r671, %r672 }, { %r2076, %r2077, %r2078, %r2079 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2080, %r2081, %r2082, %r2083 }, { %r401, %r402, %r403, %r404 }, { %r685, %r686 }, { %r2080, %r2081, %r2082, %r2083 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2084, %r2085, %r2086, %r2087 }, { %r401, %r402, %r403, %r404 }, { %r699, %r700 }, { %r2084, %r2085, %r2086, %r2087 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2088, %r2089, %r2090, %r2091 }, { %r401, %r402, %r403, %r404 }, { %r713, %r714 }, { %r2088, %r2089, %r2090, %r2091 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2092, %r2093, %r2094, %r2095 }, { %r401, %r402, %r403, %r404 }, { %r727, %r728 }, { %r2092, %r2093, %r2094, %r2095 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2096, %r2097, %r2098, %r2099 }, { %r457, %r458, %r459, %r460 }, { %r629, %r630 }, { %r2096, %r2097, %r2098, %r2099 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2100, %r2101, %r2102, %r2103 }, { %r457, %r458, %r459, %r460 }, { %r643, %r644 }, { %r2100, %r2101, %r2102, %r2103 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2104, %r2105, %r2106, %r2107 }, { %r457, %r458, %r459, %r460 }, { %r657, %r658 }, { %r2104, %r2105, %r2106, %r2107 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2108, %r2109, %r2110, %r2111 }, { %r457, %r458, %r459, %r460 }, { %r671, %r672 }, { %r2108, %r2109, %r2110, %r2111 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2112, %r2113, %r2114, %r2115 }, { %r457, %r458, %r459, %r460 }, { %r685, %r686 }, { %r2112, %r2113, %r2114, %r2115 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2116, %r2117, %r2118, %r2119 }, { %r457, %r458, %r459, %r460 }, { %r699, %r700 }, { %r2116, %r2117, %r2118, %r2119 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2120, %r2121, %r2122, %r2123 }, { %r457, %r458, %r459, %r460 }, { %r713, %r714 }, { %r2120, %r2121, %r2122, %r2123 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2124, %r2125, %r2126, %r2127 }, { %r457, %r458, %r459, %r460 }, { %r727, %r728 }, { %r2124, %r2125, %r2126, %r2127 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2064, %r2065, %r2066, %r2067 }, { %r513, %r514, %r515, %r516 }, { %r853, %r854 }, { %r2064, %r2065, %r2066, %r2067 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2068, %r2069, %r2070, %r2071 }, { %r513, %r514, %r515, %r516 }, { %r867, %r868 }, { %r2068, %r2069, %r2070, %r2071 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2072, %r2073, %r2074, %r2075 }, { %r513, %r514, %r515, %r516 }, { %r881, %r882 }, { %r2072, %r2073, %r2074, %r2075 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2076, %r2077, %r2078, %r2079 }, { %r513, %r514, %r515, %r516 }, { %r895, %r896 }, { %r2076, %r2077, %r2078, %r2079 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2080, %r2081, %r2082, %r2083 }, { %r513, %r514, %r515, %r516 }, { %r909, %r910 }, { %r2080, %r2081, %r2082, %r2083 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2084, %r2085, %r2086, %r2087 }, { %r513, %r514, %r515, %r516 }, { %r923, %r924 }, { %r2084, %r2085, %r2086, %r2087 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2088, %r2089, %r2090, %r2091 }, { %r513, %r514, %r515, %r516 }, { %r937, %r938 }, { %r2088, %r2089, %r2090, %r2091 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2092, %r2093, %r2094, %r2095 }, { %r513, %r514, %r515, %r516 }, { %r951, %r952 }, { %r2092, %r2093, %r2094, %r2095 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2096, %r2097, %r2098, %r2099 }, { %r569, %r570, %r571, %r572 }, { %r853, %r854 }, { %r2096, %r2097, %r2098, %r2099 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2100, %r2101, %r2102, %r2103 }, { %r569, %r570, %r571, %r572 }, { %r867, %r868 }, { %r2100, %r2101, %r2102, %r2103 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2104, %r2105, %r2106, %r2107 }, { %r569, %r570, %r571, %r572 }, { %r881, %r882 }, { %r2104, %r2105, %r2106, %r2107 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2108, %r2109, %r2110, %r2111 }, { %r569, %r570, %r571, %r572 }, { %r895, %r896 }, { %r2108, %r2109, %r2110, %r2111 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2112, %r2113, %r2114, %r2115 }, { %r569, %r570, %r571, %r572 }, { %r909, %r910 }, { %r2112, %r2113, %r2114, %r2115 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2116, %r2117, %r2118, %r2119 }, { %r569, %r570, %r571, %r572 }, { %r923, %r924 }, { %r2116, %r2117, %r2118, %r2119 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2120, %r2121, %r2122, %r2123 }, { %r569, %r570, %r571, %r572 }, { %r937, %r938 }, { %r2120, %r2121, %r2122, %r2123 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r2124, %r2125, %r2126, %r2127 }, { %r569, %r570, %r571, %r572 }, { %r951, %r952 }, { %r2124, %r2125, %r2126, %r2127 };
	// end inline asm
	.loc	1 78 21                         // chunk_o.py:78:21
	add.s32 	%r1099, %r2063, 1;
	setp.gt.s32 	%p14, %r1099, 1;
	selp.b32 	%r2063, 0, %r1099, %p14;
	add.s64 	%rd100, %rd15, %rd126;
	add.s64 	%rd90, %rd100, 128;
	add.s64 	%rd91, %rd100, 131200;
	add.s64 	%rd92, %rd13, %rd126;
	.loc	1 83 22                         // chunk_o.py:83:22
	add.s64 	%rd93, %rd11, %rd126;
	shl.b32 	%r1100, %r2063, 11;
	shl.b32 	%r1101, %r2063, 12;
	add.s32 	%r1102, %r292, %r1101;
	bar.sync 	0;
	add.s32 	%r1065, %r1102, %r291;
	add.s32 	%r1067, %r1065, 1024;
	add.s32 	%r1069, %r1065, 2048;
	add.s32 	%r1071, %r1065, 3072;
	selp.b32 	%r1104, 16, 0, %p12;
	selp.b32 	%r1074, %r1104, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r1065 + 0 ], [ %rd90 + 0 ], 0x10, %r1074;
	// end inline asm
	selp.b32 	%r1076, %r1104, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r1067 + 0 ], [ %rd91 + 0 ], 0x10, %r1076;
	// end inline asm
	selp.b32 	%r1078, %r1104, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r1069 + 0 ], [ %rd92 + 0 ], 0x10, %r1078;
	// end inline asm
	selp.b32 	%r1080, %r1104, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r1071 + 0 ], [ %rd93 + 0 ], 0x10, %r1080;
	// end inline asm
	cp.async.commit_group;
	.loc	1 85 22                         // chunk_o.py:85:22
	add.s64 	%rd101, %rd14, %rd126;
	add.s64 	%rd94, %rd101, 128;
	add.s64 	%rd95, %rd101, 131200;
	add.s64 	%rd96, %rd12, %rd126;
	add.s64 	%rd97, %rd10, %rd126;
	add.s32 	%r1073, %r1065, 8192;
	add.s32 	%r1075, %r1065, 9216;
	add.s32 	%r1077, %r1065, 10240;
	add.s32 	%r1079, %r1065, 11264;
	// begin inline asm
	cp.async.cg.shared.global [ %r1073 + 0 ], [ %rd94 + 0 ], 0x10, %r1074;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1075 + 0 ], [ %rd95 + 0 ], 0x10, %r1076;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1077 + 0 ], [ %rd96 + 0 ], 0x10, %r1078;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1079 + 0 ], [ %rd97 + 0 ], 0x10, %r1080;
	// end inline asm
	cp.async.commit_group;
	.loc	1 87 22                         // chunk_o.py:87:22
	add.s64 	%rd98, %rd125, -4096;
	add.s32 	%r1105, %r1093, %r1100;
	add.s32 	%r1081, %r1105, %r291;
	add.s32 	%r1083, %r1081, 1024;
	selp.b32 	%r1084, %r1104, 0, %p1;
	// begin inline asm
	cp.async.cg.shared.global [ %r1081 + 0 ], [ %rd98 + 0 ], 0x10, %r1084;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r1083 + 0 ], [ %rd125 + 0 ], 0x10, %r1084;
	// end inline asm
	cp.async.commit_group;
	.loc	1 78 21                         // chunk_o.py:78:21
	add.s64 	%rd127, %rd127, 1;
	add.s64 	%rd126, %rd126, 64;
	add.s64 	%rd125, %rd125, 8192;
	setp.ne.s64 	%p15, %rd126, 256;
	@%p15 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 83 22                         // chunk_o.py:83:22
	and.b32 	%r1627, %r8, 7;
	.loc	1 72 9                          // chunk_o.py:72:9
	shl.b64 	%rd111, %rd1, 1;
	add.s64 	%rd112, %rd25, %rd111;
	.loc	1 71 9                          // chunk_o.py:71:9
	add.s64 	%rd113, %rd23, %rd111;
	.loc	1 78 21                         // chunk_o.py:78:21
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 95 13                         // chunk_o.py:95:13
	mul.wide.s32 	%rd114, %r1, 4;
	add.s64 	%rd115, %rd24, %rd114;
	.loc	1 97 22                         // chunk_o.py:97:22
	shr.u32 	%r1628, %r7, 1;
	or.b32 	%r1629, %r1627, %r1628;
	or.b32 	%r1630, %r1629, 8;
	or.b32 	%r1631, %r1629, 32;
	or.b32 	%r1632, %r1629, 40;
	shl.b32 	%r1633, %r3, 1;
	and.b32 	%r1634, %r1633, 6;
	or.b32 	%r1635, %r1634, 8;
	or.b32 	%r1636, %r1634, 9;
	or.b32 	%r1637, %r1634, 16;
	or.b32 	%r1638, %r1634, 17;
	or.b32 	%r1639, %r1634, 24;
	or.b32 	%r1640, %r1634, 25;
	or.b32 	%r1641, %r1634, 33;
	or.b32 	%r1642, %r1634, 40;
	or.b32 	%r1643, %r1634, 41;
	or.b32 	%r1644, %r1634, 48;
	or.b32 	%r1645, %r1634, 49;
	or.b32 	%r1646, %r1634, 56;
	or.b32 	%r1647, %r1634, 57;
	and.b32 	%r1648, %r3, 63;
	or.b32 	%r1649, %r2, %r1648;
	shl.b32 	%r1650, %r1649, 7;
	cvt.u64.u32 	%rd116, %r1650;
	add.s64 	%rd102, %rd115, %rd116;
	setp.lt.s32 	%p16, %r1649, %r220;
	// begin inline asm
	mov.u32 %r1106, 0x0;
	@%p16 ld.global.b32 { %r1106 }, [ %rd102 + 0 ];
	// end inline asm
	.loc	1 98 24                         // chunk_o.py:98:24
	shl.b32 	%r1651, %r1648, 2;
	add.s32 	%r1653, %r292, %r1651;
	st.shared.b32 	[%r1653], %r1106;
	bar.sync 	0;
	shl.b32 	%r1654, %r1629, 2;
	add.s32 	%r1655, %r292, %r1654;
	ld.shared.b32 	%r1656, [%r1655];
	ld.shared.b32 	%r1657, [%r1655+32];
	ld.shared.b32 	%r1658, [%r1655+128];
	ld.shared.b32 	%r1659, [%r1655+160];
	.loc	1 99 24                         // chunk_o.py:99:24
	bar.sync 	0;
	st.shared.b32 	[%r1653], %r1106;
	bar.sync 	0;
	shl.b32 	%r1660, %r1634, 2;
	add.s32 	%r1661, %r292, %r1660;
	ld.shared.v2.b32 	{%r1662, %r1663}, [%r1661];
	ld.shared.v2.b32 	{%r1664, %r1665}, [%r1661+32];
	ld.shared.v2.b32 	{%r1666, %r1667}, [%r1661+64];
	ld.shared.v2.b32 	{%r1668, %r1669}, [%r1661+96];
	ld.shared.v2.b32 	{%r1670, %r1671}, [%r1661+128];
	ld.shared.v2.b32 	{%r1672, %r1673}, [%r1661+160];
	ld.shared.v2.b32 	{%r1674, %r1675}, [%r1661+192];
	ld.shared.v2.b32 	{%r1676, %r1677}, [%r1661+224];
	.loc	1 98 24                         // chunk_o.py:98:24
	mul.f32 	%r1678, %r1656, 0f3FB8AA3B;
	ex2.approx.f32 	%r1679, %r1678;
	mul.f32 	%r1680, %r1657, 0f3FB8AA3B;
	ex2.approx.f32 	%r1681, %r1680;
	mul.f32 	%r1682, %r1658, 0f3FB8AA3B;
	ex2.approx.f32 	%r1683, %r1682;
	mul.f32 	%r1684, %r1659, 0f3FB8AA3B;
	ex2.approx.f32 	%r1685, %r1684;
	.loc	1 99 39                         // chunk_o.py:99:39
	sub.f32 	%r1686, %r1656, %r1662;
	sub.f32 	%r1687, %r1656, %r1663;
	sub.f32 	%r1688, %r1657, %r1662;
	sub.f32 	%r1689, %r1657, %r1663;
	sub.f32 	%r1690, %r1656, %r1664;
	sub.f32 	%r1691, %r1656, %r1665;
	sub.f32 	%r1692, %r1657, %r1664;
	sub.f32 	%r1693, %r1657, %r1665;
	sub.f32 	%r1694, %r1656, %r1666;
	sub.f32 	%r1695, %r1656, %r1667;
	sub.f32 	%r1696, %r1657, %r1666;
	sub.f32 	%r1697, %r1657, %r1667;
	sub.f32 	%r1698, %r1657, %r1668;
	sub.f32 	%r1699, %r1657, %r1669;
	sub.f32 	%r1700, %r1658, %r1662;
	sub.f32 	%r1701, %r1658, %r1663;
	sub.f32 	%r1702, %r1659, %r1662;
	sub.f32 	%r1703, %r1659, %r1663;
	sub.f32 	%r1704, %r1658, %r1664;
	sub.f32 	%r1705, %r1658, %r1665;
	sub.f32 	%r1706, %r1659, %r1664;
	sub.f32 	%r1707, %r1659, %r1665;
	sub.f32 	%r1708, %r1658, %r1666;
	sub.f32 	%r1709, %r1658, %r1667;
	sub.f32 	%r1710, %r1659, %r1666;
	sub.f32 	%r1711, %r1659, %r1667;
	sub.f32 	%r1712, %r1658, %r1668;
	sub.f32 	%r1713, %r1658, %r1669;
	sub.f32 	%r1714, %r1659, %r1668;
	sub.f32 	%r1715, %r1659, %r1669;
	sub.f32 	%r1716, %r1658, %r1670;
	sub.f32 	%r1717, %r1658, %r1671;
	sub.f32 	%r1718, %r1659, %r1670;
	sub.f32 	%r1719, %r1659, %r1671;
	sub.f32 	%r1720, %r1658, %r1672;
	sub.f32 	%r1721, %r1658, %r1673;
	sub.f32 	%r1722, %r1659, %r1672;
	sub.f32 	%r1723, %r1659, %r1673;
	sub.f32 	%r1724, %r1658, %r1674;
	sub.f32 	%r1725, %r1658, %r1675;
	sub.f32 	%r1726, %r1659, %r1674;
	sub.f32 	%r1727, %r1659, %r1675;
	sub.f32 	%r1728, %r1659, %r1676;
	sub.f32 	%r1729, %r1659, %r1677;
	.loc	1 99 24                         // chunk_o.py:99:24
	mul.f32 	%r1730, %r1686, 0f3FB8AA3B;
	ex2.approx.f32 	%r1731, %r1730;
	mul.f32 	%r1732, %r1687, 0f3FB8AA3B;
	ex2.approx.f32 	%r1733, %r1732;
	mul.f32 	%r1734, %r1688, 0f3FB8AA3B;
	ex2.approx.f32 	%r1735, %r1734;
	mul.f32 	%r1736, %r1689, 0f3FB8AA3B;
	ex2.approx.f32 	%r1737, %r1736;
	mul.f32 	%r1738, %r1690, 0f3FB8AA3B;
	ex2.approx.f32 	%r1739, %r1738;
	mul.f32 	%r1740, %r1691, 0f3FB8AA3B;
	ex2.approx.f32 	%r1741, %r1740;
	mul.f32 	%r1742, %r1692, 0f3FB8AA3B;
	ex2.approx.f32 	%r1743, %r1742;
	mul.f32 	%r1744, %r1693, 0f3FB8AA3B;
	ex2.approx.f32 	%r1745, %r1744;
	mul.f32 	%r1746, %r1694, 0f3FB8AA3B;
	ex2.approx.f32 	%r1747, %r1746;
	mul.f32 	%r1748, %r1695, 0f3FB8AA3B;
	ex2.approx.f32 	%r1749, %r1748;
	mul.f32 	%r1750, %r1696, 0f3FB8AA3B;
	ex2.approx.f32 	%r1751, %r1750;
	mul.f32 	%r1752, %r1697, 0f3FB8AA3B;
	ex2.approx.f32 	%r1753, %r1752;
	mul.f32 	%r1754, %r1698, 0f3FB8AA3B;
	ex2.approx.f32 	%r1755, %r1754;
	mul.f32 	%r1756, %r1699, 0f3FB8AA3B;
	ex2.approx.f32 	%r1757, %r1756;
	mul.f32 	%r1758, %r1700, 0f3FB8AA3B;
	ex2.approx.f32 	%r1759, %r1758;
	mul.f32 	%r1760, %r1701, 0f3FB8AA3B;
	ex2.approx.f32 	%r1761, %r1760;
	mul.f32 	%r1762, %r1702, 0f3FB8AA3B;
	ex2.approx.f32 	%r1763, %r1762;
	mul.f32 	%r1764, %r1703, 0f3FB8AA3B;
	ex2.approx.f32 	%r1765, %r1764;
	mul.f32 	%r1766, %r1704, 0f3FB8AA3B;
	ex2.approx.f32 	%r1767, %r1766;
	mul.f32 	%r1768, %r1705, 0f3FB8AA3B;
	ex2.approx.f32 	%r1769, %r1768;
	mul.f32 	%r1770, %r1706, 0f3FB8AA3B;
	ex2.approx.f32 	%r1771, %r1770;
	mul.f32 	%r1772, %r1707, 0f3FB8AA3B;
	ex2.approx.f32 	%r1773, %r1772;
	mul.f32 	%r1774, %r1708, 0f3FB8AA3B;
	ex2.approx.f32 	%r1775, %r1774;
	mul.f32 	%r1776, %r1709, 0f3FB8AA3B;
	ex2.approx.f32 	%r1777, %r1776;
	mul.f32 	%r1778, %r1710, 0f3FB8AA3B;
	ex2.approx.f32 	%r1779, %r1778;
	mul.f32 	%r1780, %r1711, 0f3FB8AA3B;
	ex2.approx.f32 	%r1781, %r1780;
	mul.f32 	%r1782, %r1712, 0f3FB8AA3B;
	ex2.approx.f32 	%r1783, %r1782;
	mul.f32 	%r1784, %r1713, 0f3FB8AA3B;
	ex2.approx.f32 	%r1785, %r1784;
	mul.f32 	%r1786, %r1714, 0f3FB8AA3B;
	ex2.approx.f32 	%r1787, %r1786;
	mul.f32 	%r1788, %r1715, 0f3FB8AA3B;
	ex2.approx.f32 	%r1789, %r1788;
	mul.f32 	%r1790, %r1716, 0f3FB8AA3B;
	ex2.approx.f32 	%r1791, %r1790;
	mul.f32 	%r1792, %r1717, 0f3FB8AA3B;
	ex2.approx.f32 	%r1793, %r1792;
	mul.f32 	%r1794, %r1718, 0f3FB8AA3B;
	ex2.approx.f32 	%r1795, %r1794;
	mul.f32 	%r1796, %r1719, 0f3FB8AA3B;
	ex2.approx.f32 	%r1797, %r1796;
	mul.f32 	%r1798, %r1720, 0f3FB8AA3B;
	ex2.approx.f32 	%r1799, %r1798;
	mul.f32 	%r1800, %r1721, 0f3FB8AA3B;
	ex2.approx.f32 	%r1801, %r1800;
	mul.f32 	%r1802, %r1722, 0f3FB8AA3B;
	ex2.approx.f32 	%r1803, %r1802;
	mul.f32 	%r1804, %r1723, 0f3FB8AA3B;
	ex2.approx.f32 	%r1805, %r1804;
	mul.f32 	%r1806, %r1724, 0f3FB8AA3B;
	ex2.approx.f32 	%r1807, %r1806;
	mul.f32 	%r1808, %r1725, 0f3FB8AA3B;
	ex2.approx.f32 	%r1809, %r1808;
	mul.f32 	%r1810, %r1726, 0f3FB8AA3B;
	ex2.approx.f32 	%r1811, %r1810;
	mul.f32 	%r1812, %r1727, 0f3FB8AA3B;
	ex2.approx.f32 	%r1813, %r1812;
	mul.f32 	%r1814, %r1728, 0f3FB8AA3B;
	ex2.approx.f32 	%r1815, %r1814;
	mul.f32 	%r1816, %r1729, 0f3FB8AA3B;
	ex2.approx.f32 	%r1817, %r1816;
	.loc	1 99 20                         // chunk_o.py:99:20
	mul.f32 	%r1818, %r2064, %r1731;
	mul.f32 	%r1819, %r2065, %r1733;
	mul.f32 	%r1820, %r2066, %r1735;
	mul.f32 	%r1821, %r2067, %r1737;
	mul.f32 	%r1822, %r2068, %r1739;
	mul.f32 	%r1823, %r2069, %r1741;
	mul.f32 	%r1824, %r2070, %r1743;
	mul.f32 	%r1825, %r2071, %r1745;
	mul.f32 	%r1826, %r2072, %r1747;
	mul.f32 	%r1827, %r2073, %r1749;
	mul.f32 	%r1828, %r2074, %r1751;
	mul.f32 	%r1829, %r2075, %r1753;
	mul.f32 	%r1830, %r2078, %r1755;
	mul.f32 	%r1831, %r2079, %r1757;
	mul.f32 	%r1832, %r2096, %r1759;
	mul.f32 	%r1833, %r2097, %r1761;
	mul.f32 	%r1834, %r2098, %r1763;
	mul.f32 	%r1835, %r2099, %r1765;
	mul.f32 	%r1836, %r2100, %r1767;
	mul.f32 	%r1837, %r2101, %r1769;
	mul.f32 	%r1838, %r2102, %r1771;
	mul.f32 	%r1839, %r2103, %r1773;
	mul.f32 	%r1840, %r2104, %r1775;
	mul.f32 	%r1841, %r2105, %r1777;
	mul.f32 	%r1842, %r2106, %r1779;
	mul.f32 	%r1843, %r2107, %r1781;
	mul.f32 	%r1844, %r2108, %r1783;
	mul.f32 	%r1845, %r2109, %r1785;
	mul.f32 	%r1846, %r2110, %r1787;
	mul.f32 	%r1847, %r2111, %r1789;
	mul.f32 	%r1848, %r2112, %r1791;
	mul.f32 	%r1849, %r2113, %r1793;
	mul.f32 	%r1850, %r2114, %r1795;
	mul.f32 	%r1851, %r2115, %r1797;
	mul.f32 	%r1852, %r2116, %r1799;
	mul.f32 	%r1853, %r2117, %r1801;
	mul.f32 	%r1854, %r2118, %r1803;
	mul.f32 	%r1855, %r2119, %r1805;
	mul.f32 	%r1856, %r2120, %r1807;
	mul.f32 	%r1857, %r2121, %r1809;
	mul.f32 	%r1858, %r2122, %r1811;
	mul.f32 	%r1859, %r2123, %r1813;
	mul.f32 	%r1860, %r2126, %r1815;
	mul.f32 	%r1861, %r2127, %r1817;
	.loc	1 107 21                        // chunk_o.py:107:21
	or.b32 	%r1862, %r1629, %r2;
	or.b32 	%r1863, %r1630, %r2;
	or.b32 	%r1864, %r1631, %r2;
	or.b32 	%r1865, %r1632, %r2;
	.loc	1 97 22                         // chunk_o.py:97:22
	or.b32 	%r1866, %r1634, %r2;
	.loc	1 107 21                        // chunk_o.py:107:21
	or.b32 	%r1867, %r1866, 1;
	or.b32 	%r1868, %r1635, %r2;
	or.b32 	%r1869, %r1636, %r2;
	or.b32 	%r1870, %r1637, %r2;
	or.b32 	%r1871, %r1638, %r2;
	or.b32 	%r1872, %r1639, %r2;
	or.b32 	%r1873, %r1640, %r2;
	or.b32 	%r1874, %r1866, 32;
	or.b32 	%r1875, %r1641, %r2;
	or.b32 	%r1876, %r1642, %r2;
	or.b32 	%r1877, %r1643, %r2;
	or.b32 	%r1878, %r1644, %r2;
	or.b32 	%r1879, %r1645, %r2;
	or.b32 	%r1880, %r1646, %r2;
	or.b32 	%r1881, %r1647, %r2;
	.loc	1 108 16                        // chunk_o.py:108:16
	setp.lt.s32 	%p29, %r1862, %r220;
	setp.lt.s32 	%p30, %r1863, %r220;
	setp.lt.s32 	%p31, %r1864, %r220;
	setp.lt.s32 	%p32, %r1865, %r220;
	setp.lt.s32 	%p33, %r1866, %r220;
	setp.lt.s32 	%p34, %r1867, %r220;
	setp.lt.s32 	%p35, %r1868, %r220;
	setp.lt.s32 	%p36, %r1869, %r220;
	setp.lt.s32 	%p37, %r1870, %r220;
	setp.lt.s32 	%p38, %r1871, %r220;
	setp.lt.s32 	%p39, %r1872, %r220;
	setp.lt.s32 	%p40, %r1873, %r220;
	setp.lt.s32 	%p41, %r1874, %r220;
	setp.lt.s32 	%p42, %r1875, %r220;
	setp.lt.s32 	%p43, %r1876, %r220;
	setp.lt.s32 	%p44, %r1877, %r220;
	setp.lt.s32 	%p45, %r1878, %r220;
	setp.lt.s32 	%p46, %r1879, %r220;
	setp.lt.s32 	%p47, %r1880, %r220;
	setp.lt.s32 	%p48, %r1881, %r220;
	.loc	1 109 27                        // chunk_o.py:109:27
	setp.ge.u32 	%p49, %r1629, %r1634;
	setp.gt.u32 	%p50, %r1629, %r1634;
	setp.ge.u32 	%p51, %r1629, %r1635;
	setp.ge.u32 	%p52, %r1629, %r1636;
	setp.ge.u32 	%p53, %r1630, %r1636;
	setp.ge.u32 	%p54, %r1629, %r1637;
	setp.ge.u32 	%p55, %r1629, %r1638;
	setp.ge.u32 	%p56, %r1630, %r1637;
	setp.ge.u32 	%p57, %r1630, %r1638;
	setp.ge.u32 	%p58, %r1630, %r1639;
	setp.ge.u32 	%p59, %r1630, %r1640;
	setp.ge.u32 	%p60, %r1631, %r1641;
	setp.ge.u32 	%p61, %r1631, %r1642;
	setp.ge.u32 	%p62, %r1631, %r1643;
	setp.ge.u32 	%p63, %r1632, %r1643;
	setp.ge.u32 	%p64, %r1631, %r1644;
	setp.ge.u32 	%p65, %r1631, %r1645;
	setp.ge.u32 	%p66, %r1632, %r1644;
	setp.ge.u32 	%p67, %r1632, %r1645;
	setp.ge.u32 	%p68, %r1632, %r1646;
	setp.ge.u32 	%p69, %r1632, %r1647;
	.loc	1 115 18                        // chunk_o.py:115:18
	add.s64 	%rd117, %rd5, %rd9;
	add.s64 	%rd118, %rd6, %rd9;
	add.s64 	%rd119, %rd7, %rd9;
	add.s64 	%rd120, %rd8, %rd9;
	shl.b64 	%rd121, %rd117, 1;
	add.s64 	%rd103, %rd113, %rd121;
	shl.b64 	%rd122, %rd118, 1;
	add.s64 	%rd104, %rd113, %rd122;
	shl.b64 	%rd123, %rd119, 1;
	add.s64 	%rd105, %rd113, %rd123;
	shl.b64 	%rd124, %rd120, 1;
	add.s64 	%rd106, %rd113, %rd124;
	and.pred 	%p17, %p1, %p2;
	and.pred 	%p18, %p1, %p3;
	and.pred 	%p19, %p1, %p4;
	and.pred 	%p20, %p1, %p5;
	// begin inline asm
	mov.u32 %r1107, 0x0;
	mov.u32 %r1108, 0x0;
	mov.u32 %r1109, 0x0;
	mov.u32 %r1110, 0x0;
	@%p17 ld.global.v4.b32 { %r1107, %r1108, %r1109, %r1110 }, [ %rd103 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1111, 0x0;
	mov.u32 %r1112, 0x0;
	mov.u32 %r1113, 0x0;
	mov.u32 %r1114, 0x0;
	@%p18 ld.global.v4.b32 { %r1111, %r1112, %r1113, %r1114 }, [ %rd104 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1115, 0x0;
	mov.u32 %r1116, 0x0;
	mov.u32 %r1117, 0x0;
	mov.u32 %r1118, 0x0;
	@%p19 ld.global.v4.b32 { %r1115, %r1116, %r1117, %r1118 }, [ %rd105 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r1119, 0x0;
	mov.u32 %r1120, 0x0;
	mov.u32 %r1121, 0x0;
	mov.u32 %r1122, 0x0;
	@%p20 ld.global.v4.b32 { %r1119, %r1120, %r1121, %r1122 }, [ %rd106 + 0 ];
	// end inline asm
	bar.sync 	0;
	st.shared.v4.b32 	[%r13], {%r1107, %r1108, %r1109, %r1110};
	st.shared.v4.b32 	[%r13+1024], {%r1111, %r1112, %r1113, %r1114};
	st.shared.v4.b32 	[%r13+2048], {%r1115, %r1116, %r1117, %r1118};
	st.shared.v4.b32 	[%r13+3072], {%r1119, %r1120, %r1121, %r1122};
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs1, %r1818;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs2, %rs1, 0x0000, %p33;
	selp.b16 	%rs3, %rs2, 0x0000, %p49;
	selp.b16 	%rs4, %rs3, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs5, %r1819;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs6, %rs5, 0x0000, %p34;
	selp.b16 	%rs7, %rs6, 0x0000, %p50;
	selp.b16 	%rs8, %rs7, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs9, %r1820;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs10, %rs9, 0x0000, %p33;
	selp.b16 	%rs11, %rs10, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs12, %r1821;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs13, %rs12, 0x0000, %p34;
	selp.b16 	%rs14, %rs13, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs15, %r1822;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs16, %rs15, 0x0000, %p35;
	selp.b16 	%rs17, %rs16, 0x0000, %p51;
	selp.b16 	%rs18, %rs17, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs19, %r1823;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs20, %rs19, 0x0000, %p36;
	selp.b16 	%rs21, %rs20, 0x0000, %p52;
	selp.b16 	%rs22, %rs21, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs23, %r1824;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs24, %rs23, 0x0000, %p35;
	selp.b16 	%rs25, %rs24, 0x0000, %p49;
	selp.b16 	%rs26, %rs25, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs27, %r1825;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs28, %rs27, 0x0000, %p36;
	selp.b16 	%rs29, %rs28, 0x0000, %p53;
	selp.b16 	%rs30, %rs29, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs31, %r1826;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs32, %rs31, 0x0000, %p37;
	selp.b16 	%rs33, %rs32, 0x0000, %p54;
	selp.b16 	%rs34, %rs33, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs35, %r1827;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs36, %rs35, 0x0000, %p38;
	selp.b16 	%rs37, %rs36, 0x0000, %p55;
	selp.b16 	%rs38, %rs37, 0x0000, %p29;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs39, %r1828;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs40, %rs39, 0x0000, %p37;
	selp.b16 	%rs41, %rs40, 0x0000, %p56;
	selp.b16 	%rs42, %rs41, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs43, %r1829;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs44, %rs43, 0x0000, %p38;
	selp.b16 	%rs45, %rs44, 0x0000, %p57;
	selp.b16 	%rs46, %rs45, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs47, %r1830;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs48, %rs47, 0x0000, %p39;
	selp.b16 	%rs49, %rs48, 0x0000, %p58;
	selp.b16 	%rs50, %rs49, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs51, %r1831;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs52, %rs51, 0x0000, %p40;
	selp.b16 	%rs53, %rs52, 0x0000, %p59;
	selp.b16 	%rs54, %rs53, 0x0000, %p30;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs55, %r1832;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs56, %rs55, 0x0000, %p33;
	selp.b16 	%rs57, %rs56, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs58, %r1833;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs59, %rs58, 0x0000, %p34;
	selp.b16 	%rs60, %rs59, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs61, %r1834;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs62, %rs61, 0x0000, %p33;
	selp.b16 	%rs63, %rs62, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs64, %r1835;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs65, %rs64, 0x0000, %p34;
	selp.b16 	%rs66, %rs65, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs67, %r1836;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs68, %rs67, 0x0000, %p35;
	selp.b16 	%rs69, %rs68, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs70, %r1837;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs71, %rs70, 0x0000, %p36;
	selp.b16 	%rs72, %rs71, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs73, %r1838;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs74, %rs73, 0x0000, %p35;
	selp.b16 	%rs75, %rs74, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs76, %r1839;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs77, %rs76, 0x0000, %p36;
	selp.b16 	%rs78, %rs77, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs79, %r1840;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs80, %rs79, 0x0000, %p37;
	selp.b16 	%rs81, %rs80, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs82, %r1841;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs83, %rs82, 0x0000, %p38;
	selp.b16 	%rs84, %rs83, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs85, %r1842;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs86, %rs85, 0x0000, %p37;
	selp.b16 	%rs87, %rs86, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs88, %r1843;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs89, %rs88, 0x0000, %p38;
	selp.b16 	%rs90, %rs89, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs91, %r1844;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs92, %rs91, 0x0000, %p39;
	selp.b16 	%rs93, %rs92, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs94, %r1845;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs95, %rs94, 0x0000, %p40;
	selp.b16 	%rs96, %rs95, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs97, %r1846;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs98, %rs97, 0x0000, %p39;
	selp.b16 	%rs99, %rs98, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs100, %r1847;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs101, %rs100, 0x0000, %p40;
	selp.b16 	%rs102, %rs101, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs103, %r1848;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs104, %rs103, 0x0000, %p41;
	selp.b16 	%rs105, %rs104, 0x0000, %p49;
	selp.b16 	%rs106, %rs105, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs107, %r1849;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs108, %rs107, 0x0000, %p42;
	selp.b16 	%rs109, %rs108, 0x0000, %p60;
	selp.b16 	%rs110, %rs109, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs111, %r1850;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs112, %rs111, 0x0000, %p41;
	selp.b16 	%rs113, %rs112, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs114, %r1851;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs115, %rs114, 0x0000, %p42;
	selp.b16 	%rs116, %rs115, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs117, %r1852;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs118, %rs117, 0x0000, %p43;
	selp.b16 	%rs119, %rs118, 0x0000, %p61;
	selp.b16 	%rs120, %rs119, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs121, %r1853;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs122, %rs121, 0x0000, %p44;
	selp.b16 	%rs123, %rs122, 0x0000, %p62;
	selp.b16 	%rs124, %rs123, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs125, %r1854;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs126, %rs125, 0x0000, %p43;
	selp.b16 	%rs127, %rs126, 0x0000, %p49;
	selp.b16 	%rs128, %rs127, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs129, %r1855;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs130, %rs129, 0x0000, %p44;
	selp.b16 	%rs131, %rs130, 0x0000, %p63;
	selp.b16 	%rs132, %rs131, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs133, %r1856;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs134, %rs133, 0x0000, %p45;
	selp.b16 	%rs135, %rs134, 0x0000, %p64;
	selp.b16 	%rs136, %rs135, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs137, %r1857;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs138, %rs137, 0x0000, %p46;
	selp.b16 	%rs139, %rs138, 0x0000, %p65;
	selp.b16 	%rs140, %rs139, 0x0000, %p31;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs141, %r1858;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs142, %rs141, 0x0000, %p45;
	selp.b16 	%rs143, %rs142, 0x0000, %p66;
	selp.b16 	%rs144, %rs143, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs145, %r1859;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs146, %rs145, 0x0000, %p46;
	selp.b16 	%rs147, %rs146, 0x0000, %p67;
	selp.b16 	%rs148, %rs147, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs149, %r1860;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs150, %rs149, 0x0000, %p47;
	selp.b16 	%rs151, %rs150, 0x0000, %p68;
	selp.b16 	%rs152, %rs151, 0x0000, %p32;
	.loc	1 118 38                        // chunk_o.py:118:38
	cvt.rn.bf16.f32 	%rs153, %r1861;
	.loc	1 110 29                        // chunk_o.py:110:29
	selp.b16 	%rs154, %rs153, 0x0000, %p48;
	selp.b16 	%rs155, %rs154, 0x0000, %p69;
	selp.b16 	%rs156, %rs155, 0x0000, %p32;
	.loc	1 115 18                        // chunk_o.py:115:18
	bar.sync 	0;
	add.s32 	%r1127, %r292, %r1095;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1175, %r1176, %r1287, %r1288}, [%r1127];
	// end inline asm
	add.s32 	%r1132, %r1127, 2048;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1399, %r1400, %r1511, %r1512}, [%r1132];
	// end inline asm
	add.s32 	%r1137, %r292, %r1096;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1189, %r1190, %r1301, %r1302}, [%r1137];
	// end inline asm
	xor.b32 	%r1884, %r18, 1032;
	shl.b32 	%r1885, %r1884, 1;
	add.s32 	%r1142, %r292, %r1885;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1413, %r1414, %r1525, %r1526}, [%r1142];
	// end inline asm
	add.s32 	%r1147, %r292, %r1097;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1203, %r1204, %r1315, %r1316}, [%r1147];
	// end inline asm
	xor.b32 	%r1887, %r18, 1040;
	shl.b32 	%r1888, %r1887, 1;
	add.s32 	%r1152, %r292, %r1888;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1427, %r1428, %r1539, %r1540}, [%r1152];
	// end inline asm
	add.s32 	%r1157, %r292, %r1098;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1217, %r1218, %r1329, %r1330}, [%r1157];
	// end inline asm
	xor.b32 	%r1890, %r18, 1048;
	shl.b32 	%r1891, %r1890, 1;
	add.s32 	%r1162, %r292, %r1891;
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.trans.shared.b16 {%r1441, %r1442, %r1553, %r1554}, [%r1162];
	// end inline asm
	.loc	1 118 50                        // chunk_o.py:118:50
	mov.b32 	%r1185, {%rs4, %rs8};
	mov.b32 	%r1186, {%rs11, %rs14};
	mov.b32 	%r1187, {%rs18, %rs22};
	mov.b32 	%r1188, {%rs26, %rs30};
	mov.b32 	%r1297, {%rs34, %rs38};
	mov.b32 	%r1298, {%rs42, %rs46};
	mov.b32 	%r1300, {%rs50, %rs54};
	mov.b32 	%r1241, {%rs57, %rs60};
	mov.b32 	%r1242, {%rs63, %rs66};
	mov.b32 	%r1243, {%rs69, %rs72};
	mov.b32 	%r1244, {%rs75, %rs78};
	mov.b32 	%r1353, {%rs81, %rs84};
	mov.b32 	%r1354, {%rs87, %rs90};
	mov.b32 	%r1355, {%rs93, %rs96};
	mov.b32 	%r1356, {%rs99, %rs102};
	mov.b32 	%r1465, {%rs106, %rs110};
	mov.b32 	%r1466, {%rs113, %rs116};
	mov.b32 	%r1467, {%rs120, %rs124};
	mov.b32 	%r1468, {%rs128, %rs132};
	mov.b32 	%r1577, {%rs136, %rs140};
	mov.b32 	%r1578, {%rs144, %rs148};
	mov.b32 	%r1580, {%rs152, %rs156};
	mov.b32 	%r1167, 0;
	mov.b32 	%r1275, %r1167;
	mov.b32 	%r1276, %r1167;
	mov.b32 	%r1277, %r1167;
	mov.b32 	%r1278, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1275, %r1276, %r1277, %r1278 }, { %r1185, %r1186, %r1187, %r1188 }, { %r1175, %r1176 }, { %r1275, %r1276, %r1277, %r1278 };
	// end inline asm
	mov.b32 	%r1289, %r1167;
	mov.b32 	%r1290, %r1167;
	mov.b32 	%r1291, %r1167;
	mov.b32 	%r1292, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1289, %r1290, %r1291, %r1292 }, { %r1185, %r1186, %r1187, %r1188 }, { %r1189, %r1190 }, { %r1289, %r1290, %r1291, %r1292 };
	// end inline asm
	mov.b32 	%r1303, %r1167;
	mov.b32 	%r1304, %r1167;
	mov.b32 	%r1305, %r1167;
	mov.b32 	%r1306, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1303, %r1304, %r1305, %r1306 }, { %r1185, %r1186, %r1187, %r1188 }, { %r1203, %r1204 }, { %r1303, %r1304, %r1305, %r1306 };
	// end inline asm
	mov.b32 	%r1317, %r1167;
	mov.b32 	%r1318, %r1167;
	mov.b32 	%r1319, %r1167;
	mov.b32 	%r1320, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1317, %r1318, %r1319, %r1320 }, { %r1185, %r1186, %r1187, %r1188 }, { %r1217, %r1218 }, { %r1317, %r1318, %r1319, %r1320 };
	// end inline asm
	mov.b32 	%r1331, %r1167;
	mov.b32 	%r1332, %r1167;
	mov.b32 	%r1333, %r1167;
	mov.b32 	%r1334, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1331, %r1332, %r1333, %r1334 }, { %r1241, %r1242, %r1243, %r1244 }, { %r1175, %r1176 }, { %r1331, %r1332, %r1333, %r1334 };
	// end inline asm
	mov.b32 	%r1345, %r1167;
	mov.b32 	%r1346, %r1167;
	mov.b32 	%r1347, %r1167;
	mov.b32 	%r1348, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1345, %r1346, %r1347, %r1348 }, { %r1241, %r1242, %r1243, %r1244 }, { %r1189, %r1190 }, { %r1345, %r1346, %r1347, %r1348 };
	// end inline asm
	mov.b32 	%r1359, %r1167;
	mov.b32 	%r1360, %r1167;
	mov.b32 	%r1361, %r1167;
	mov.b32 	%r1362, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1359, %r1360, %r1361, %r1362 }, { %r1241, %r1242, %r1243, %r1244 }, { %r1203, %r1204 }, { %r1359, %r1360, %r1361, %r1362 };
	// end inline asm
	mov.b32 	%r1373, %r1167;
	mov.b32 	%r1374, %r1167;
	mov.b32 	%r1375, %r1167;
	mov.b32 	%r1376, %r1167;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1373, %r1374, %r1375, %r1376 }, { %r1241, %r1242, %r1243, %r1244 }, { %r1217, %r1218 }, { %r1373, %r1374, %r1375, %r1376 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1275, %r1276, %r1277, %r1278 }, { %r1297, %r1298, %r1167, %r1300 }, { %r1287, %r1288 }, { %r1275, %r1276, %r1277, %r1278 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1289, %r1290, %r1291, %r1292 }, { %r1297, %r1298, %r1167, %r1300 }, { %r1301, %r1302 }, { %r1289, %r1290, %r1291, %r1292 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1303, %r1304, %r1305, %r1306 }, { %r1297, %r1298, %r1167, %r1300 }, { %r1315, %r1316 }, { %r1303, %r1304, %r1305, %r1306 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1317, %r1318, %r1319, %r1320 }, { %r1297, %r1298, %r1167, %r1300 }, { %r1329, %r1330 }, { %r1317, %r1318, %r1319, %r1320 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1331, %r1332, %r1333, %r1334 }, { %r1353, %r1354, %r1355, %r1356 }, { %r1287, %r1288 }, { %r1331, %r1332, %r1333, %r1334 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1345, %r1346, %r1347, %r1348 }, { %r1353, %r1354, %r1355, %r1356 }, { %r1301, %r1302 }, { %r1345, %r1346, %r1347, %r1348 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1359, %r1360, %r1361, %r1362 }, { %r1353, %r1354, %r1355, %r1356 }, { %r1315, %r1316 }, { %r1359, %r1360, %r1361, %r1362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1373, %r1374, %r1375, %r1376 }, { %r1353, %r1354, %r1355, %r1356 }, { %r1329, %r1330 }, { %r1373, %r1374, %r1375, %r1376 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1275, %r1276, %r1277, %r1278 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1399, %r1400 }, { %r1275, %r1276, %r1277, %r1278 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1289, %r1290, %r1291, %r1292 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1413, %r1414 }, { %r1289, %r1290, %r1291, %r1292 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1303, %r1304, %r1305, %r1306 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1427, %r1428 }, { %r1303, %r1304, %r1305, %r1306 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1317, %r1318, %r1319, %r1320 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1441, %r1442 }, { %r1317, %r1318, %r1319, %r1320 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1331, %r1332, %r1333, %r1334 }, { %r1465, %r1466, %r1467, %r1468 }, { %r1399, %r1400 }, { %r1331, %r1332, %r1333, %r1334 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1345, %r1346, %r1347, %r1348 }, { %r1465, %r1466, %r1467, %r1468 }, { %r1413, %r1414 }, { %r1345, %r1346, %r1347, %r1348 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1359, %r1360, %r1361, %r1362 }, { %r1465, %r1466, %r1467, %r1468 }, { %r1427, %r1428 }, { %r1359, %r1360, %r1361, %r1362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1373, %r1374, %r1375, %r1376 }, { %r1465, %r1466, %r1467, %r1468 }, { %r1441, %r1442 }, { %r1373, %r1374, %r1375, %r1376 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1275, %r1276, %r1277, %r1278 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1511, %r1512 }, { %r1275, %r1276, %r1277, %r1278 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1289, %r1290, %r1291, %r1292 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1525, %r1526 }, { %r1289, %r1290, %r1291, %r1292 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1303, %r1304, %r1305, %r1306 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1539, %r1540 }, { %r1303, %r1304, %r1305, %r1306 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1317, %r1318, %r1319, %r1320 }, { %r1167, %r1167, %r1167, %r1167 }, { %r1553, %r1554 }, { %r1317, %r1318, %r1319, %r1320 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1331, %r1332, %r1333, %r1334 }, { %r1577, %r1578, %r1167, %r1580 }, { %r1511, %r1512 }, { %r1331, %r1332, %r1333, %r1334 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1345, %r1346, %r1347, %r1348 }, { %r1577, %r1578, %r1167, %r1580 }, { %r1525, %r1526 }, { %r1345, %r1346, %r1347, %r1348 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1359, %r1360, %r1361, %r1362 }, { %r1577, %r1578, %r1167, %r1580 }, { %r1539, %r1540 }, { %r1359, %r1360, %r1361, %r1362 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1373, %r1374, %r1375, %r1376 }, { %r1577, %r1578, %r1167, %r1580 }, { %r1553, %r1554 }, { %r1373, %r1374, %r1375, %r1376 };
	// end inline asm
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1892, %r2129, %r1679;
	mul.f32 	%r1893, %r2128, %r1679;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1894, %r219, %r1276;
	mul.f32 	%r1895, %r219, %r1275;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1896, %r219, %r1893, %r1895;
	fma.rn.f32 	%r1897, %r219, %r1892, %r1894;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1898, %r1897, %r1896;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1899, %r2131, %r1681;
	mul.f32 	%r1900, %r2130, %r1681;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1901, %r219, %r1278;
	mul.f32 	%r1902, %r219, %r1277;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1903, %r219, %r1900, %r1902;
	fma.rn.f32 	%r1904, %r219, %r1899, %r1901;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1905, %r1904, %r1903;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1906, %r2133, %r1679;
	mul.f32 	%r1907, %r2132, %r1679;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1908, %r219, %r1290;
	mul.f32 	%r1909, %r219, %r1289;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1910, %r219, %r1907, %r1909;
	fma.rn.f32 	%r1911, %r219, %r1906, %r1908;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1912, %r1911, %r1910;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1913, %r2135, %r1681;
	mul.f32 	%r1914, %r2134, %r1681;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1915, %r219, %r1292;
	mul.f32 	%r1916, %r219, %r1291;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1917, %r219, %r1914, %r1916;
	fma.rn.f32 	%r1918, %r219, %r1913, %r1915;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1919, %r1918, %r1917;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1920, %r2137, %r1679;
	mul.f32 	%r1921, %r2136, %r1679;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1922, %r219, %r1304;
	mul.f32 	%r1923, %r219, %r1303;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1924, %r219, %r1921, %r1923;
	fma.rn.f32 	%r1925, %r219, %r1920, %r1922;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1926, %r1925, %r1924;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1927, %r2139, %r1681;
	mul.f32 	%r1928, %r2138, %r1681;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1929, %r219, %r1306;
	mul.f32 	%r1930, %r219, %r1305;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1931, %r219, %r1928, %r1930;
	fma.rn.f32 	%r1932, %r219, %r1927, %r1929;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1933, %r1932, %r1931;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1934, %r2141, %r1679;
	mul.f32 	%r1935, %r2140, %r1679;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1936, %r219, %r1318;
	mul.f32 	%r1937, %r219, %r1317;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1938, %r219, %r1935, %r1937;
	fma.rn.f32 	%r1939, %r219, %r1934, %r1936;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1940, %r1939, %r1938;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1941, %r2143, %r1681;
	mul.f32 	%r1942, %r2142, %r1681;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1943, %r219, %r1320;
	mul.f32 	%r1944, %r219, %r1319;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1945, %r219, %r1942, %r1944;
	fma.rn.f32 	%r1946, %r219, %r1941, %r1943;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1947, %r1946, %r1945;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1948, %r2145, %r1683;
	mul.f32 	%r1949, %r2144, %r1683;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1950, %r219, %r1332;
	mul.f32 	%r1951, %r219, %r1331;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1952, %r219, %r1949, %r1951;
	fma.rn.f32 	%r1953, %r219, %r1948, %r1950;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1954, %r1953, %r1952;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1955, %r2147, %r1685;
	mul.f32 	%r1956, %r2146, %r1685;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1957, %r219, %r1334;
	mul.f32 	%r1958, %r219, %r1333;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1959, %r219, %r1956, %r1958;
	fma.rn.f32 	%r1960, %r219, %r1955, %r1957;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1961, %r1960, %r1959;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1962, %r2149, %r1683;
	mul.f32 	%r1963, %r2148, %r1683;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1964, %r219, %r1346;
	mul.f32 	%r1965, %r219, %r1345;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1966, %r219, %r1963, %r1965;
	fma.rn.f32 	%r1967, %r219, %r1962, %r1964;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1968, %r1967, %r1966;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1969, %r2151, %r1685;
	mul.f32 	%r1970, %r2150, %r1685;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1971, %r219, %r1348;
	mul.f32 	%r1972, %r219, %r1347;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1973, %r219, %r1970, %r1972;
	fma.rn.f32 	%r1974, %r219, %r1969, %r1971;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1975, %r1974, %r1973;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1976, %r2153, %r1683;
	mul.f32 	%r1977, %r2152, %r1683;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1978, %r219, %r1360;
	mul.f32 	%r1979, %r219, %r1359;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1980, %r219, %r1977, %r1979;
	fma.rn.f32 	%r1981, %r219, %r1976, %r1978;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1982, %r1981, %r1980;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1983, %r2155, %r1685;
	mul.f32 	%r1984, %r2154, %r1685;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1985, %r219, %r1362;
	mul.f32 	%r1986, %r219, %r1361;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1987, %r219, %r1984, %r1986;
	fma.rn.f32 	%r1988, %r219, %r1983, %r1985;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1989, %r1988, %r1987;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1990, %r2157, %r1683;
	mul.f32 	%r1991, %r2156, %r1683;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1992, %r219, %r1374;
	mul.f32 	%r1993, %r219, %r1373;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r1994, %r219, %r1991, %r1993;
	fma.rn.f32 	%r1995, %r219, %r1990, %r1992;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r1996, %r1995, %r1994;
	.loc	1 98 20                         // chunk_o.py:98:20
	mul.f32 	%r1997, %r2159, %r1685;
	mul.f32 	%r1998, %r2158, %r1685;
	.loc	1 118 57                        // chunk_o.py:118:57
	mul.f32 	%r1999, %r219, %r1376;
	mul.f32 	%r2000, %r219, %r1375;
	.loc	1 118 24                        // chunk_o.py:118:24
	fma.rn.f32 	%r2001, %r219, %r1998, %r2000;
	fma.rn.f32 	%r2002, %r219, %r1997, %r1999;
	.loc	1 119 25                        // chunk_o.py:119:25
	cvt.rn.bf16x2.f32 	%r2003, %r2002, %r2001;
	.loc	1 119 18                        // chunk_o.py:119:18
	add.s64 	%rd107, %rd112, %rd121;
	add.s64 	%rd108, %rd112, %rd122;
	add.s64 	%rd109, %rd112, %rd123;
	add.s64 	%rd110, %rd112, %rd124;
	bar.sync 	0;
	shl.b32 	%r2004, %r4, 3;
	shl.b32 	%r2005, %r5, 3;
	shl.b32 	%r2006, %r6, 3;
	or.b32 	%r2007, %r2004, %r14;
	or.b32 	%r2008, %r2007, %r1634;
	or.b32 	%r2009, %r2008, %r2005;
	or.b32 	%r2010, %r2009, %r2006;
	and.b32 	%r2011, %r11, 312;
	or.b32 	%r2012, %r2005, %r2011;
	or.b32 	%r2013, %r2012, %r2006;
	shr.u32 	%r2014, %r2010, 1;
	and.b32 	%r2015, %r2014, 1073741808;
	add.s32 	%r2016, %r292, %r2015;
	shl.b32 	%r2017, %r2010, 1;
	add.s32 	%r2018, %r2016, %r2017;
	st.shared.b32 	[%r2018], %r1898;
	xor.b32 	%r2019, %r2010, 256;
	shr.u32 	%r2020, %r2019, 1;
	and.b32 	%r2021, %r2020, 2147483632;
	add.s32 	%r2022, %r292, %r2021;
	shl.b32 	%r2023, %r2019, 1;
	add.s32 	%r2024, %r2022, %r2023;
	st.shared.b32 	[%r2024], %r1905;
	xor.b32 	%r2025, %r2010, 8;
	shl.b32 	%r2026, %r2025, 1;
	add.s32 	%r2027, %r2016, %r2026;
	st.shared.b32 	[%r2027], %r1912;
	xor.b32 	%r2028, %r2010, 264;
	shr.u32 	%r2029, %r2028, 1;
	and.b32 	%r2030, %r2029, 2147483632;
	add.s32 	%r2031, %r292, %r2030;
	shl.b32 	%r2032, %r2028, 1;
	add.s32 	%r2033, %r2031, %r2032;
	st.shared.b32 	[%r2033], %r1919;
	xor.b32 	%r2034, %r2010, 16;
	shl.b32 	%r2035, %r2034, 1;
	add.s32 	%r2036, %r2016, %r2035;
	st.shared.b32 	[%r2036], %r1926;
	xor.b32 	%r2037, %r2010, 272;
	shr.u32 	%r2038, %r2037, 1;
	and.b32 	%r2039, %r2038, 2147483632;
	add.s32 	%r2040, %r292, %r2039;
	shl.b32 	%r2041, %r2037, 1;
	add.s32 	%r2042, %r2040, %r2041;
	st.shared.b32 	[%r2042], %r1933;
	xor.b32 	%r2043, %r2010, 24;
	shl.b32 	%r2044, %r2043, 1;
	add.s32 	%r2045, %r2016, %r2044;
	st.shared.b32 	[%r2045], %r1940;
	xor.b32 	%r2046, %r2010, 280;
	shr.u32 	%r2047, %r2046, 1;
	and.b32 	%r2048, %r2047, 2147483632;
	add.s32 	%r2049, %r292, %r2048;
	shl.b32 	%r2050, %r2046, 1;
	add.s32 	%r2051, %r2049, %r2050;
	st.shared.b32 	[%r2051], %r1947;
	bar.sync 	0;
	shr.u32 	%r2052, %r2013, 1;
	and.b32 	%r2053, %r2052, 240;
	add.s32 	%r2054, %r292, %r2053;
	shl.b32 	%r2055, %r2013, 1;
	add.s32 	%r2056, %r2054, %r2055;
	ld.shared.v4.b32 	{%r1611, %r1612, %r1613, %r1614}, [%r2056];
	or.b32 	%r2057, %r2013, 512;
	shr.u32 	%r2058, %r2057, 1;
	and.b32 	%r2059, %r2058, 496;
	add.s32 	%r2060, %r292, %r2059;
	add.s32 	%r2061, %r2060, %r2055;
	ld.shared.v4.b32 	{%r1615, %r1616, %r1617, %r1618}, [%r2061+1024];
	bar.sync 	0;
	st.shared.b32 	[%r2018], %r1954;
	st.shared.b32 	[%r2024], %r1961;
	st.shared.b32 	[%r2027], %r1968;
	st.shared.b32 	[%r2033], %r1975;
	st.shared.b32 	[%r2036], %r1982;
	st.shared.b32 	[%r2042], %r1989;
	st.shared.b32 	[%r2045], %r1996;
	st.shared.b32 	[%r2051], %r2003;
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1619, %r1620, %r1621, %r1622}, [%r2056];
	ld.shared.v4.b32 	{%r1623, %r1624, %r1625, %r1626}, [%r2061+1024];
	// begin inline asm
	@%p17 st.global.v4.b32 [ %rd107 + 0 ], { %r1611, %r1612, %r1613, %r1614 };
	// end inline asm
	// begin inline asm
	@%p18 st.global.v4.b32 [ %rd108 + 0 ], { %r1615, %r1616, %r1617, %r1618 };
	// end inline asm
	// begin inline asm
	@%p19 st.global.v4.b32 [ %rd109 + 0 ], { %r1619, %r1620, %r1621, %r1622 };
	// end inline asm
	// begin inline asm
	@%p20 st.global.v4.b32 [ %rd110 + 0 ], { %r1623, %r1624, %r1625, %r1626 };
	// end inline asm
	.loc	1 119 4                         // chunk_o.py:119:4
	ret;
$L__tmp3:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_o.py"
	.file	2 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 182                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xaf DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 111
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
.b8 2                                   // Abbrev [2] 0x76:0x15 DW_TAG_subprogram
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 95
.b8 111
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x8b:0x2e DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 118                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xa0:0x18 DW_TAG_inlined_subroutine
.b32 118                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 64                                  // DW_AT_call_line
.b8 24                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
