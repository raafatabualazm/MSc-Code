; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @recompute_w_u_fwd_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = and i32 %11, 65504, !dbg !10
  %13 = and i32 %11, 31, !dbg !11
  %14 = mul i32 %12, %7, !dbg !12
  %15 = sext i32 %14 to i64, !dbg !13
  %16 = getelementptr bfloat, ptr addrspace(1) %2, i64 %15, !dbg !13
  %17 = zext nneg i32 %13 to i64, !dbg !14
  %18 = getelementptr bfloat, ptr addrspace(1) %16, i64 %17, !dbg !14
  %19 = shl i32 %10, 6, !dbg !15
  %20 = sext i32 %7 to i64, !dbg !16
  %21 = sext i32 %19 to i64, !dbg !16
  %22 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !17
  %23 = lshr i32 %22, 5, !dbg !17
  %24 = and i32 %22, 32, !dbg !17
  %25 = icmp eq i32 %24, 0, !dbg !17
  %26 = lshr i32 %22, 3, !dbg !17
  %27 = and i32 %26, 15, !dbg !17
  %28 = or disjoint i32 %27, 16, !dbg !17
  %29 = or disjoint i32 %27, 32, !dbg !17
  %30 = or disjoint i32 %27, 48, !dbg !17
  %31 = shl nuw nsw i32 %22, 3, !dbg !17
  %32 = and i32 %31, 56, !dbg !17
  %33 = zext nneg i32 %27 to i64, !dbg !17
  %34 = zext nneg i32 %28 to i64, !dbg !17
  %35 = zext nneg i32 %29 to i64, !dbg !17
  %36 = zext nneg i32 %30 to i64, !dbg !17
  %37 = zext nneg i32 %32 to i64, !dbg !17
  %38 = or disjoint i64 %33, %21, !dbg !17
  %39 = or disjoint i64 %34, %21, !dbg !17
  %40 = or disjoint i64 %35, %21, !dbg !17
  %41 = or disjoint i64 %36, %21, !dbg !17
  %42 = shl nsw i64 %38, 5, !dbg !17
  %43 = shl nsw i64 %39, 5, !dbg !17
  %44 = shl nsw i64 %40, 5, !dbg !17
  %45 = shl nsw i64 %41, 5, !dbg !17
  %46 = getelementptr bfloat, ptr addrspace(1) %18, i64 %42, !dbg !17
  %47 = getelementptr bfloat, ptr addrspace(1) %18, i64 %43, !dbg !17
  %48 = getelementptr bfloat, ptr addrspace(1) %18, i64 %44, !dbg !17
  %49 = getelementptr bfloat, ptr addrspace(1) %18, i64 %45, !dbg !17
  %50 = icmp sgt i32 %19, -1, !dbg !17
  %51 = icmp slt i64 %38, %20, !dbg !17
  %52 = icmp slt i64 %39, %20, !dbg !17
  %53 = icmp slt i64 %40, %20, !dbg !17
  %54 = icmp slt i64 %41, %20, !dbg !17
  %55 = and i1 %50, %51, !dbg !17
  %56 = and i1 %50, %52, !dbg !17
  %57 = and i1 %50, %53, !dbg !17
  %58 = and i1 %50, %54, !dbg !17
  %59 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %46, i1 %55) #2, !dbg !17
  %60 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %47, i1 %56) #2, !dbg !17
  %61 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %48, i1 %57) #2, !dbg !17
  %62 = tail call i16 asm sideeffect "mov.u16 $0, 0x0;\0A\09@$2 ld.global.b16 { $0 }, [ $1 + 0 ];", "=c,l,b"(ptr addrspace(1) %49, i1 %58) #2, !dbg !17
  %63 = or disjoint i32 %14, %13, !dbg !18
  %64 = shl i32 %63, 6, !dbg !19
  %65 = sext i32 %64 to i64, !dbg !20
  %66 = getelementptr bfloat, ptr addrspace(1) %5, i64 %65, !dbg !20
  %.idx = shl nsw i64 %38, 12, !dbg !21
  %67 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx, !dbg !21
  %68 = getelementptr bfloat, ptr addrspace(1) %67, i64 %37, !dbg !21
  %.idx2 = shl nsw i64 %39, 12, !dbg !21
  %69 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx2, !dbg !21
  %70 = getelementptr bfloat, ptr addrspace(1) %69, i64 %37, !dbg !21
  %.idx3 = shl nsw i64 %40, 12, !dbg !21
  %71 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx3, !dbg !21
  %72 = getelementptr bfloat, ptr addrspace(1) %71, i64 %37, !dbg !21
  %.idx4 = shl nsw i64 %41, 12, !dbg !21
  %73 = getelementptr i8, ptr addrspace(1) %66, i64 %.idx4, !dbg !21
  %74 = getelementptr bfloat, ptr addrspace(1) %73, i64 %37, !dbg !21
  %75 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %68, i1 %55) #2, !dbg !21
  %76 = extractvalue { i32, i32, i32, i32 } %75, 0, !dbg !21
  %77 = bitcast i32 %76 to <2 x bfloat>, !dbg !21
  %78 = extractvalue { i32, i32, i32, i32 } %75, 1, !dbg !21
  %79 = bitcast i32 %78 to <2 x bfloat>, !dbg !21
  %80 = extractvalue { i32, i32, i32, i32 } %75, 2, !dbg !21
  %81 = bitcast i32 %80 to <2 x bfloat>, !dbg !21
  %82 = shufflevector <2 x bfloat> %81, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %83 = extractvalue { i32, i32, i32, i32 } %75, 3, !dbg !21
  %84 = bitcast i32 %83 to <2 x bfloat>, !dbg !21
  %85 = shufflevector <2 x bfloat> %84, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %86 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %70, i1 %56) #2, !dbg !21
  %87 = extractvalue { i32, i32, i32, i32 } %86, 0, !dbg !21
  %88 = bitcast i32 %87 to <2 x bfloat>, !dbg !21
  %89 = extractvalue { i32, i32, i32, i32 } %86, 1, !dbg !21
  %90 = bitcast i32 %89 to <2 x bfloat>, !dbg !21
  %91 = extractvalue { i32, i32, i32, i32 } %86, 2, !dbg !21
  %92 = bitcast i32 %91 to <2 x bfloat>, !dbg !21
  %93 = shufflevector <2 x bfloat> %92, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %94 = extractvalue { i32, i32, i32, i32 } %86, 3, !dbg !21
  %95 = bitcast i32 %94 to <2 x bfloat>, !dbg !21
  %96 = shufflevector <2 x bfloat> %95, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %97 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %72, i1 %57) #2, !dbg !21
  %98 = extractvalue { i32, i32, i32, i32 } %97, 0, !dbg !21
  %99 = bitcast i32 %98 to <2 x bfloat>, !dbg !21
  %100 = extractvalue { i32, i32, i32, i32 } %97, 1, !dbg !21
  %101 = bitcast i32 %100 to <2 x bfloat>, !dbg !21
  %102 = extractvalue { i32, i32, i32, i32 } %97, 2, !dbg !21
  %103 = bitcast i32 %102 to <2 x bfloat>, !dbg !21
  %104 = shufflevector <2 x bfloat> %103, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %105 = extractvalue { i32, i32, i32, i32 } %97, 3, !dbg !21
  %106 = bitcast i32 %105 to <2 x bfloat>, !dbg !21
  %107 = shufflevector <2 x bfloat> %106, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %108 = tail call { i32, i32, i32, i32 } asm sideeffect "mov.u32 $0, 0x0;\0A\09mov.u32 $1, 0x0;\0A\09mov.u32 $2, 0x0;\0A\09mov.u32 $3, 0x0;\0A\09@$5 ld.global.v4.b32 { $0, $1, $2, $3 }, [ $4 + 0 ];", "=r,=r,=r,=r,l,b"(ptr addrspace(1) %74, i1 %58) #2, !dbg !21
  %109 = extractvalue { i32, i32, i32, i32 } %108, 0, !dbg !21
  %110 = bitcast i32 %109 to <2 x bfloat>, !dbg !21
  %111 = extractvalue { i32, i32, i32, i32 } %108, 1, !dbg !21
  %112 = bitcast i32 %111 to <2 x bfloat>, !dbg !21
  %113 = extractvalue { i32, i32, i32, i32 } %108, 2, !dbg !21
  %114 = bitcast i32 %113 to <2 x bfloat>, !dbg !21
  %115 = shufflevector <2 x bfloat> %114, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %116 = extractvalue { i32, i32, i32, i32 } %108, 3, !dbg !21
  %117 = bitcast i32 %116 to <2 x bfloat>, !dbg !21
  %118 = shufflevector <2 x bfloat> %117, <2 x bfloat> poison, <8 x i32> <i32 0, i32 1, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison, i32 poison>
  %119 = select i1 %25, i32 0, i32 288, !dbg !21
  %120 = and i32 %22, 24, !dbg !21
  %121 = mul nuw nsw i32 %120, 9, !dbg !21
  %122 = xor i32 %121, %32, !dbg !21
  %123 = xor i32 %122, %119, !dbg !21
  %124 = and i32 %31, 512, !dbg !21
  %125 = or disjoint i32 %123, %124, !dbg !21
  %126 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 %125, !dbg !21
  %127 = shufflevector <2 x bfloat> %77, <2 x bfloat> %79, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %128 = shufflevector <8 x bfloat> %127, <8 x bfloat> %82, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %129 = shufflevector <8 x bfloat> %128, <8 x bfloat> %85, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %129, ptr addrspace(3) %126, align 16, !dbg !21
  %130 = or disjoint i32 %32, 1024, !dbg !21
  %131 = xor i32 %121, %130, !dbg !21
  %132 = xor i32 %131, %119, !dbg !21
  %133 = or disjoint i32 %132, %124, !dbg !21
  %134 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 %133, !dbg !21
  %135 = shufflevector <2 x bfloat> %88, <2 x bfloat> %90, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %136 = shufflevector <8 x bfloat> %135, <8 x bfloat> %93, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %137 = shufflevector <8 x bfloat> %136, <8 x bfloat> %96, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %137, ptr addrspace(3) %134, align 16, !dbg !21
  %138 = or disjoint i32 %32, 2048, !dbg !21
  %139 = xor i32 %121, %138, !dbg !21
  %140 = xor i32 %139, %119, !dbg !21
  %141 = or disjoint i32 %140, %124, !dbg !21
  %142 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 %141, !dbg !21
  %143 = shufflevector <2 x bfloat> %99, <2 x bfloat> %101, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %144 = shufflevector <8 x bfloat> %143, <8 x bfloat> %104, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %145 = shufflevector <8 x bfloat> %144, <8 x bfloat> %107, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %145, ptr addrspace(3) %142, align 16, !dbg !21
  %146 = or disjoint i32 %32, 3072, !dbg !21
  %147 = xor i32 %121, %146, !dbg !21
  %148 = xor i32 %147, %119, !dbg !21
  %149 = or disjoint i32 %148, %124, !dbg !21
  %150 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 %149, !dbg !21
  %151 = shufflevector <2 x bfloat> %110, <2 x bfloat> %112, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 poison, i32 poison, i32 poison, i32 poison>, !dbg !21
  %152 = shufflevector <8 x bfloat> %151, <8 x bfloat> %115, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 8, i32 9, i32 poison, i32 poison>, !dbg !21
  %153 = shufflevector <8 x bfloat> %152, <8 x bfloat> %118, <8 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 8, i32 9>, !dbg !21
  store <8 x bfloat> %153, ptr addrspace(3) %150, align 16, !dbg !21
  %154 = shl i32 %63, 7, !dbg !22
  %155 = sext i32 %154 to i64, !dbg !23
  %156 = getelementptr bfloat, ptr addrspace(1) %1, i64 %155, !dbg !23
  %157 = getelementptr bfloat, ptr addrspace(1) %4, i64 %155, !dbg !24
  %158 = or disjoint i64 %.idx, %37, !dbg !25
  %159 = or disjoint i64 %.idx2, %37, !dbg !25
  %160 = or disjoint i64 %.idx3, %37, !dbg !25
  %161 = or disjoint i64 %.idx4, %37, !dbg !25
  %162 = getelementptr bfloat, ptr addrspace(1) %156, i64 %158, !dbg !25
  %163 = getelementptr bfloat, ptr addrspace(1) %156, i64 %159, !dbg !25
  %164 = getelementptr bfloat, ptr addrspace(1) %156, i64 %160, !dbg !25
  %165 = getelementptr bfloat, ptr addrspace(1) %156, i64 %161, !dbg !25
  %166 = shl nuw nsw i32 %27, 6, !dbg !25
  %167 = or disjoint i32 %166, %32, !dbg !25
  %168 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %167, !dbg !25
  %169 = or disjoint i32 %167, 1024, !dbg !25
  %170 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %169, !dbg !25
  %171 = or disjoint i32 %167, 2048, !dbg !25
  %172 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %171, !dbg !25
  %173 = or disjoint i32 %167, 3072, !dbg !25
  %174 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %173, !dbg !25
  %175 = select i1 %55, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %162, i32 %175) #2, !dbg !25
  %176 = select i1 %56, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %163, i32 %176) #2, !dbg !25
  %177 = select i1 %57, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %164, i32 %177) #2, !dbg !25
  %178 = select i1 %58, i32 16, i32 0, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %165, i32 %178) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %179 = or disjoint i64 %37, 64, !dbg !25
  %180 = or disjoint i64 %.idx, %179, !dbg !25
  %181 = or disjoint i64 %.idx2, %179, !dbg !25
  %182 = or disjoint i64 %.idx3, %179, !dbg !25
  %183 = or disjoint i64 %.idx4, %179, !dbg !25
  %184 = getelementptr bfloat, ptr addrspace(1) %156, i64 %180, !dbg !25
  %185 = getelementptr bfloat, ptr addrspace(1) %156, i64 %181, !dbg !25
  %186 = getelementptr bfloat, ptr addrspace(1) %156, i64 %182, !dbg !25
  %187 = getelementptr bfloat, ptr addrspace(1) %156, i64 %183, !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %188 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %167, !dbg !25
  %189 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %169, !dbg !25
  %190 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %171, !dbg !25
  %191 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %173, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %184, i32 %175) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %189, ptr addrspace(1) %185, i32 %176) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %190, ptr addrspace(1) %186, i32 %177) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %191, ptr addrspace(1) %187, i32 %178) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %192 = or disjoint i64 %37, 128, !dbg !25
  %193 = or disjoint i64 %.idx, %192, !dbg !25
  %194 = or disjoint i64 %.idx2, %192, !dbg !25
  %195 = or disjoint i64 %.idx3, %192, !dbg !25
  %196 = or disjoint i64 %.idx4, %192, !dbg !25
  %197 = getelementptr bfloat, ptr addrspace(1) %156, i64 %193, !dbg !25
  %198 = getelementptr bfloat, ptr addrspace(1) %156, i64 %194, !dbg !25
  %199 = getelementptr bfloat, ptr addrspace(1) %156, i64 %195, !dbg !25
  %200 = getelementptr bfloat, ptr addrspace(1) %156, i64 %196, !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %201 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %167, !dbg !25
  %202 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %169, !dbg !25
  %203 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %171, !dbg !25
  %204 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 16384), i32 %173, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %201, ptr addrspace(1) %197, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %202, ptr addrspace(1) %198, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %203, ptr addrspace(1) %199, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %204, ptr addrspace(1) %200, i32 0) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  %205 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %125
  %206 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %133
  %207 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %141
  %208 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %149
  %209 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792) to i32), 4
  %210 = and i32 %209, 16383
  %211 = zext nneg i32 %210 to i64
  %212 = or disjoint i64 %211, 4611686293338849280
  %213 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576) to i32), 4
  %214 = and i32 %213, 16383
  %215 = zext nneg i32 %214 to i64
  %216 = or disjoint i64 %215, 4611686293338849280
  %217 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792) to i32), i32 32), 4
  %218 = and i32 %217, 16383
  %219 = zext nneg i32 %218 to i64
  %220 = or disjoint i64 %219, 4611686293338849280
  %221 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576) to i32), i32 2048), 4
  %222 = and i32 %221, 16383
  %223 = zext nneg i32 %222 to i64
  %224 = or disjoint i64 %223, 4611686293338849280
  %225 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792) to i32), i32 64), 4
  %226 = and i32 %225, 16383
  %227 = zext nneg i32 %226 to i64
  %228 = or disjoint i64 %227, 4611686293338849280
  %229 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576) to i32), i32 4096), 4
  %230 = and i32 %229, 16383
  %231 = zext nneg i32 %230 to i64
  %232 = or disjoint i64 %231, 4611686293338849280
  %233 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792) to i32), i32 96), 4
  %234 = and i32 %233, 16383
  %235 = zext nneg i32 %234 to i64
  %236 = or disjoint i64 %235, 4611686293338849280
  %237 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576) to i32), i32 6144), 4
  %238 = and i32 %237, 16383
  %239 = zext nneg i32 %238 to i64
  %240 = or disjoint i64 %239, 4611686293338849280
  %241 = shl nuw nsw i32 %22, 6
  %242 = and i32 %241, 960
  %243 = lshr i32 %22, 1
  %244 = and i32 %243, 8
  %245 = or disjoint i32 %242, %244
  %246 = shl nuw nsw i32 %22, 5
  %247 = and i32 %246, 3072
  %248 = or disjoint i32 %245, %247
  %249 = and i32 %31, 1016
  %250 = lshr exact i32 %248, 3
  %251 = and i32 %250, 504
  %252 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %251
  %253 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %252, i32 %248
  %254 = ptrtoint ptr addrspace(3) %253 to i32
  %255 = getelementptr inbounds nuw i8, ptr addrspace(3) %253, i32 32
  %256 = ptrtoint ptr addrspace(3) %255 to i32
  %257 = getelementptr inbounds nuw i8, ptr addrspace(3) %253, i32 64
  %258 = ptrtoint ptr addrspace(3) %257 to i32
  %259 = getelementptr inbounds nuw i8, ptr addrspace(3) %253, i32 96
  %260 = ptrtoint ptr addrspace(3) %259 to i32
  %261 = and i32 %22, 120
  %262 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %261
  %263 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %262, i32 %249
  %264 = or disjoint i32 %249, 1024
  %265 = lshr exact i32 %264, 3
  %266 = and i32 %265, 248
  %267 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %266
  %268 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %267, i32 %264
  %269 = or disjoint i32 %249, 2048
  %270 = lshr exact i32 %269, 3
  %271 = and i32 %270, 376
  %272 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %271
  %273 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %272, i32 %269
  %274 = or disjoint i32 %249, 3072
  %275 = lshr exact i32 %274, 3
  %276 = and i32 %275, 504
  %277 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %276
  %278 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %277, i32 %274
  %279 = insertelement <8 x i16> poison, i16 %59, i64 0, !dbg !26
  %280 = bitcast <8 x i16> %279 to <8 x bfloat>, !dbg !26
  %281 = shufflevector <8 x bfloat> %280, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %282 = insertelement <8 x i16> poison, i16 %60, i64 0, !dbg !26
  %283 = bitcast <8 x i16> %282 to <8 x bfloat>, !dbg !26
  %284 = shufflevector <8 x bfloat> %283, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %285 = insertelement <8 x i16> poison, i16 %61, i64 0, !dbg !26
  %286 = bitcast <8 x i16> %285 to <8 x bfloat>, !dbg !26
  %287 = shufflevector <8 x bfloat> %286, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %288 = insertelement <8 x i16> poison, i16 %62, i64 0, !dbg !26
  %289 = bitcast <8 x i16> %288 to <8 x bfloat>, !dbg !26
  %290 = shufflevector <8 x bfloat> %289, <8 x bfloat> poison, <8 x i32> zeroinitializer, !dbg !26
  %291 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 4
  %292 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 8
  %293 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 12
  br label %294, !dbg !27

294:                                              ; preds = %9, %294
  %295 = phi i1 [ true, %9 ], [ false, %294 ]
  %indvars.iv = phi i64 [ 192, %9 ], [ 256, %294 ]
  %296 = phi i1 [ %55, %9 ], [ false, %294 ]
  %297 = phi i1 [ %56, %9 ], [ false, %294 ]
  %298 = phi i1 [ %57, %9 ], [ false, %294 ]
  %299 = phi i1 [ %58, %9 ], [ false, %294 ]
  %300 = phi i1 [ %55, %9 ], [ %296, %294 ]
  %301 = phi i1 [ %56, %9 ], [ %297, %294 ]
  %302 = phi i1 [ %57, %9 ], [ %298, %294 ]
  %303 = phi i1 [ %58, %9 ], [ %299, %294 ]
  %304 = phi i64 [ %193, %9 ], [ %575, %294 ]
  %305 = phi i64 [ %194, %9 ], [ %576, %294 ]
  %306 = phi i64 [ %195, %9 ], [ %577, %294 ]
  %307 = phi i64 [ %196, %9 ], [ %578, %294 ]
  %308 = phi i64 [ %180, %9 ], [ %304, %294 ]
  %309 = phi i64 [ %181, %9 ], [ %305, %294 ]
  %310 = phi i64 [ %182, %9 ], [ %306, %294 ]
  %311 = phi i64 [ %183, %9 ], [ %307, %294 ]
  %312 = phi i64 [ %158, %9 ], [ %308, %294 ]
  %313 = phi i64 [ %159, %9 ], [ %309, %294 ]
  %314 = phi i64 [ %160, %9 ], [ %310, %294 ]
  %315 = phi i64 [ %161, %9 ], [ %311, %294 ]
  %316 = phi i32 [ -1, %9 ], [ %320, %294 ]
  %317 = phi i32 [ 2, %9 ], [ %573, %294 ]
  %318 = add i32 %316, 1, !dbg !27
  %319 = icmp sgt i32 %318, 2, !dbg !27
  %320 = select i1 %319, i32 0, i32 %318, !dbg !27
  tail call void @llvm.nvvm.cp.async.wait.group(i32 2), !dbg !25
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !25
  %.idx53 = shl i32 %320, 13, !dbg !25
  %321 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx53, !dbg !25
  %322 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %321, i32 %167, !dbg !25
  %323 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %321, i32 %169, !dbg !25
  %324 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %321, i32 %171, !dbg !25
  %325 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %321, i32 %173, !dbg !25
  %326 = load <8 x bfloat>, ptr addrspace(3) %322, align 16, !dbg !25
  %327 = fmul <8 x bfloat> %326, %281, !dbg !26
  %328 = load <8 x bfloat>, ptr addrspace(3) %323, align 16, !dbg !25
  %329 = fmul <8 x bfloat> %328, %284, !dbg !26
  %330 = load <8 x bfloat>, ptr addrspace(3) %324, align 16, !dbg !25
  %331 = fmul <8 x bfloat> %330, %287, !dbg !26
  %332 = load <8 x bfloat>, ptr addrspace(3) %325, align 16, !dbg !25
  %333 = fmul <8 x bfloat> %332, %290, !dbg !26
  store <8 x bfloat> %327, ptr addrspace(3) %205, align 16, !dbg !26
  store <8 x bfloat> %329, ptr addrspace(3) %206, align 16, !dbg !26
  store <8 x bfloat> %331, ptr addrspace(3) %207, align 16, !dbg !26
  store <8 x bfloat> %333, ptr addrspace(3) %208, align 16, !dbg !26
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !28
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !28
  %334 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !28
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !28
  %335 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %212, i64 %216) #2, !dbg !28
  %336 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 0, !dbg !28
  %337 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 1, !dbg !28
  %338 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 2, !dbg !28
  %339 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 3, !dbg !28
  %340 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 4, !dbg !28
  %341 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 5, !dbg !28
  %342 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 6, !dbg !28
  %343 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 7, !dbg !28
  %344 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 8, !dbg !28
  %345 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 9, !dbg !28
  %346 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 10, !dbg !28
  %347 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 11, !dbg !28
  %348 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 12, !dbg !28
  %349 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 13, !dbg !28
  %350 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 14, !dbg !28
  %351 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 15, !dbg !28
  %352 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 16, !dbg !28
  %353 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 17, !dbg !28
  %354 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 18, !dbg !28
  %355 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 19, !dbg !28
  %356 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 20, !dbg !28
  %357 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 21, !dbg !28
  %358 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 22, !dbg !28
  %359 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 23, !dbg !28
  %360 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 24, !dbg !28
  %361 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 25, !dbg !28
  %362 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 26, !dbg !28
  %363 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 27, !dbg !28
  %364 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 28, !dbg !28
  %365 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 29, !dbg !28
  %366 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 30, !dbg !28
  %367 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %335, 31, !dbg !28
  %368 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %336, float %337, float %338, float %339, float %340, float %341, float %342, float %343, float %344, float %345, float %346, float %347, float %348, float %349, float %350, float %351, float %352, float %353, float %354, float %355, float %356, float %357, float %358, float %359, float %360, float %361, float %362, float %363, float %364, float %365, float %366, float %367, i64 %220, i64 %224, i1 true) #2, !dbg !28
  %369 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 0, !dbg !28
  %370 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 1, !dbg !28
  %371 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 2, !dbg !28
  %372 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 3, !dbg !28
  %373 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 4, !dbg !28
  %374 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 5, !dbg !28
  %375 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 6, !dbg !28
  %376 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 7, !dbg !28
  %377 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 8, !dbg !28
  %378 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 9, !dbg !28
  %379 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 10, !dbg !28
  %380 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 11, !dbg !28
  %381 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 12, !dbg !28
  %382 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 13, !dbg !28
  %383 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 14, !dbg !28
  %384 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 15, !dbg !28
  %385 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 16, !dbg !28
  %386 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 17, !dbg !28
  %387 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 18, !dbg !28
  %388 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 19, !dbg !28
  %389 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 20, !dbg !28
  %390 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 21, !dbg !28
  %391 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 22, !dbg !28
  %392 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 23, !dbg !28
  %393 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 24, !dbg !28
  %394 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 25, !dbg !28
  %395 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 26, !dbg !28
  %396 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 27, !dbg !28
  %397 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 28, !dbg !28
  %398 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 29, !dbg !28
  %399 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 30, !dbg !28
  %400 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %368, 31, !dbg !28
  %401 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %369, float %370, float %371, float %372, float %373, float %374, float %375, float %376, float %377, float %378, float %379, float %380, float %381, float %382, float %383, float %384, float %385, float %386, float %387, float %388, float %389, float %390, float %391, float %392, float %393, float %394, float %395, float %396, float %397, float %398, float %399, float %400, i64 %228, i64 %232, i1 true) #2, !dbg !28
  %402 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 0, !dbg !28
  %403 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 1, !dbg !28
  %404 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 2, !dbg !28
  %405 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 3, !dbg !28
  %406 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 4, !dbg !28
  %407 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 5, !dbg !28
  %408 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 6, !dbg !28
  %409 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 7, !dbg !28
  %410 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 8, !dbg !28
  %411 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 9, !dbg !28
  %412 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 10, !dbg !28
  %413 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 11, !dbg !28
  %414 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 12, !dbg !28
  %415 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 13, !dbg !28
  %416 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 14, !dbg !28
  %417 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 15, !dbg !28
  %418 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 16, !dbg !28
  %419 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 17, !dbg !28
  %420 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 18, !dbg !28
  %421 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 19, !dbg !28
  %422 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 20, !dbg !28
  %423 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 21, !dbg !28
  %424 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 22, !dbg !28
  %425 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 23, !dbg !28
  %426 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 24, !dbg !28
  %427 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 25, !dbg !28
  %428 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 26, !dbg !28
  %429 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 27, !dbg !28
  %430 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 28, !dbg !28
  %431 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 29, !dbg !28
  %432 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 30, !dbg !28
  %433 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %401, 31, !dbg !28
  %434 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %402, float %403, float %404, float %405, float %406, float %407, float %408, float %409, float %410, float %411, float %412, float %413, float %414, float %415, float %416, float %417, float %418, float %419, float %420, float %421, float %422, float %423, float %424, float %425, float %426, float %427, float %428, float %429, float %430, float %431, float %432, float %433, i64 %236, i64 %240, i1 true) #2, !dbg !28
  %435 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 0, !dbg !28
  %436 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 1, !dbg !28
  %437 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 2, !dbg !28
  %438 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 3, !dbg !28
  %439 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 4, !dbg !28
  %440 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 5, !dbg !28
  %441 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 6, !dbg !28
  %442 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 7, !dbg !28
  %443 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 8, !dbg !28
  %444 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 9, !dbg !28
  %445 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 10, !dbg !28
  %446 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 11, !dbg !28
  %447 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 12, !dbg !28
  %448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 13, !dbg !28
  %449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 14, !dbg !28
  %450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 15, !dbg !28
  %451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 16, !dbg !28
  %452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 17, !dbg !28
  %453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 18, !dbg !28
  %454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 19, !dbg !28
  %455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 20, !dbg !28
  %456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 21, !dbg !28
  %457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 22, !dbg !28
  %458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 23, !dbg !28
  %459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 24, !dbg !28
  %460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 25, !dbg !28
  %461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 26, !dbg !28
  %462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 27, !dbg !28
  %463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 28, !dbg !28
  %464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 29, !dbg !28
  %465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 30, !dbg !28
  %466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %434, 31, !dbg !28
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !28
  %467 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %435, float %436, float %437, float %438, float %439, float %440, float %441, float %442, float %443, float %444, float %445, float %446, float %447, float %448, float %449, float %450, float %451, float %452, float %453, float %454, float %455, float %456, float %457, float %458, float %459, float %460, float %461, float %462, float %463, float %464, float %465, float %466, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 0, i32 0) #2, !dbg !28
  %468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 0, !dbg !28
  %469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 1, !dbg !28
  %470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 2, !dbg !28
  %471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 3, !dbg !28
  %472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 4, !dbg !28
  %473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 5, !dbg !28
  %474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 6, !dbg !28
  %475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 7, !dbg !28
  %476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 8, !dbg !28
  %477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 9, !dbg !28
  %478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 10, !dbg !28
  %479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 11, !dbg !28
  %480 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 12, !dbg !28
  %481 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 13, !dbg !28
  %482 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 14, !dbg !28
  %483 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 15, !dbg !28
  %484 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 16, !dbg !28
  %485 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 17, !dbg !28
  %486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 18, !dbg !28
  %487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 19, !dbg !28
  %488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 20, !dbg !28
  %489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 21, !dbg !28
  %490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 22, !dbg !28
  %491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 23, !dbg !28
  %492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 24, !dbg !28
  %493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 25, !dbg !28
  %494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 26, !dbg !28
  %495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 27, !dbg !28
  %496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 28, !dbg !28
  %497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 29, !dbg !28
  %498 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 30, !dbg !28
  %499 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %467, 31, !dbg !28
  %500 = insertelement <2 x float> poison, float %468, i64 0, !dbg !29
  %501 = insertelement <2 x float> %500, float %469, i64 1, !dbg !29
  %502 = fptrunc <2 x float> %501 to <2 x bfloat>, !dbg !29
  %503 = insertelement <2 x float> poison, float %470, i64 0, !dbg !29
  %504 = insertelement <2 x float> %503, float %471, i64 1, !dbg !29
  %505 = fptrunc <2 x float> %504 to <2 x bfloat>, !dbg !29
  %506 = insertelement <2 x float> poison, float %472, i64 0, !dbg !29
  %507 = insertelement <2 x float> %506, float %473, i64 1, !dbg !29
  %508 = fptrunc <2 x float> %507 to <2 x bfloat>, !dbg !29
  %509 = insertelement <2 x float> poison, float %474, i64 0, !dbg !29
  %510 = insertelement <2 x float> %509, float %475, i64 1, !dbg !29
  %511 = fptrunc <2 x float> %510 to <2 x bfloat>, !dbg !29
  %512 = insertelement <2 x float> poison, float %476, i64 0, !dbg !29
  %513 = insertelement <2 x float> %512, float %477, i64 1, !dbg !29
  %514 = fptrunc <2 x float> %513 to <2 x bfloat>, !dbg !29
  %515 = insertelement <2 x float> poison, float %478, i64 0, !dbg !29
  %516 = insertelement <2 x float> %515, float %479, i64 1, !dbg !29
  %517 = fptrunc <2 x float> %516 to <2 x bfloat>, !dbg !29
  %518 = insertelement <2 x float> poison, float %480, i64 0, !dbg !29
  %519 = insertelement <2 x float> %518, float %481, i64 1, !dbg !29
  %520 = fptrunc <2 x float> %519 to <2 x bfloat>, !dbg !29
  %521 = insertelement <2 x float> poison, float %482, i64 0, !dbg !29
  %522 = insertelement <2 x float> %521, float %483, i64 1, !dbg !29
  %523 = fptrunc <2 x float> %522 to <2 x bfloat>, !dbg !29
  %524 = insertelement <2 x float> poison, float %484, i64 0, !dbg !29
  %525 = insertelement <2 x float> %524, float %485, i64 1, !dbg !29
  %526 = fptrunc <2 x float> %525 to <2 x bfloat>, !dbg !29
  %527 = insertelement <2 x float> poison, float %486, i64 0, !dbg !29
  %528 = insertelement <2 x float> %527, float %487, i64 1, !dbg !29
  %529 = fptrunc <2 x float> %528 to <2 x bfloat>, !dbg !29
  %530 = insertelement <2 x float> poison, float %488, i64 0, !dbg !29
  %531 = insertelement <2 x float> %530, float %489, i64 1, !dbg !29
  %532 = fptrunc <2 x float> %531 to <2 x bfloat>, !dbg !29
  %533 = insertelement <2 x float> poison, float %490, i64 0, !dbg !29
  %534 = insertelement <2 x float> %533, float %491, i64 1, !dbg !29
  %535 = fptrunc <2 x float> %534 to <2 x bfloat>, !dbg !29
  %536 = insertelement <2 x float> poison, float %492, i64 0, !dbg !29
  %537 = insertelement <2 x float> %536, float %493, i64 1, !dbg !29
  %538 = fptrunc <2 x float> %537 to <2 x bfloat>, !dbg !29
  %539 = insertelement <2 x float> poison, float %494, i64 0, !dbg !29
  %540 = insertelement <2 x float> %539, float %495, i64 1, !dbg !29
  %541 = fptrunc <2 x float> %540 to <2 x bfloat>, !dbg !29
  %542 = insertelement <2 x float> poison, float %496, i64 0, !dbg !29
  %543 = insertelement <2 x float> %542, float %497, i64 1, !dbg !29
  %544 = fptrunc <2 x float> %543 to <2 x bfloat>, !dbg !29
  %545 = insertelement <2 x float> poison, float %498, i64 0, !dbg !29
  %546 = insertelement <2 x float> %545, float %499, i64 1, !dbg !29
  %547 = fptrunc <2 x float> %546 to <2 x bfloat>, !dbg !29
  %548 = getelementptr bfloat, ptr addrspace(1) %157, i64 %312, !dbg !30
  %549 = getelementptr bfloat, ptr addrspace(1) %157, i64 %313, !dbg !30
  %550 = getelementptr bfloat, ptr addrspace(1) %157, i64 %314, !dbg !30
  %551 = getelementptr bfloat, ptr addrspace(1) %157, i64 %315, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %552 = bitcast <2 x bfloat> %502 to i32, !dbg !30
  %553 = bitcast <2 x bfloat> %505 to i32, !dbg !30
  %554 = bitcast <2 x bfloat> %508 to i32, !dbg !30
  %555 = bitcast <2 x bfloat> %511 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %254, i32 %552, i32 %553, i32 %554, i32 %555) #2, !dbg !30
  %556 = bitcast <2 x bfloat> %514 to i32, !dbg !30
  %557 = bitcast <2 x bfloat> %517 to i32, !dbg !30
  %558 = bitcast <2 x bfloat> %520 to i32, !dbg !30
  %559 = bitcast <2 x bfloat> %523 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %256, i32 %556, i32 %557, i32 %558, i32 %559) #2, !dbg !30
  %560 = bitcast <2 x bfloat> %526 to i32, !dbg !30
  %561 = bitcast <2 x bfloat> %529 to i32, !dbg !30
  %562 = bitcast <2 x bfloat> %532 to i32, !dbg !30
  %563 = bitcast <2 x bfloat> %535 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %258, i32 %560, i32 %561, i32 %562, i32 %563) #2, !dbg !30
  %564 = bitcast <2 x bfloat> %538 to i32, !dbg !30
  %565 = bitcast <2 x bfloat> %541 to i32, !dbg !30
  %566 = bitcast <2 x bfloat> %544 to i32, !dbg !30
  %567 = bitcast <2 x bfloat> %547 to i32, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %260, i32 %564, i32 %565, i32 %566, i32 %567) #2, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %568 = load <4 x i32>, ptr addrspace(3) %268, align 16, !dbg !30
  %569 = load <4 x i32>, ptr addrspace(3) %273, align 16, !dbg !30
  %570 = load <4 x i32>, ptr addrspace(3) %278, align 16, !dbg !30
  %.extract135 = load i32, ptr addrspace(3) %263, align 16, !dbg !30
  %.extract137 = load i32, ptr addrspace(3) %291, align 4, !dbg !30
  %.extract139 = load i32, ptr addrspace(3) %292, align 8, !dbg !30
  %.extract141 = load i32, ptr addrspace(3) %293, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract135, i32 %.extract137, i32 %.extract139, i32 %.extract141, ptr addrspace(1) %548, i1 %300) #2, !dbg !30
  %.extract143 = extractelement <4 x i32> %568, i64 0, !dbg !30
  %.extract145 = extractelement <4 x i32> %568, i64 1, !dbg !30
  %.extract147 = extractelement <4 x i32> %568, i64 2, !dbg !30
  %.extract149 = extractelement <4 x i32> %568, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract143, i32 %.extract145, i32 %.extract147, i32 %.extract149, ptr addrspace(1) %549, i1 %301) #2, !dbg !30
  %.extract151 = extractelement <4 x i32> %569, i64 0, !dbg !30
  %.extract153 = extractelement <4 x i32> %569, i64 1, !dbg !30
  %.extract155 = extractelement <4 x i32> %569, i64 2, !dbg !30
  %.extract157 = extractelement <4 x i32> %569, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract151, i32 %.extract153, i32 %.extract155, i32 %.extract157, ptr addrspace(1) %550, i1 %302) #2, !dbg !30
  %.extract159 = extractelement <4 x i32> %570, i64 0, !dbg !30
  %.extract161 = extractelement <4 x i32> %570, i64 1, !dbg !30
  %.extract163 = extractelement <4 x i32> %570, i64 2, !dbg !30
  %.extract165 = extractelement <4 x i32> %570, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract159, i32 %.extract161, i32 %.extract163, i32 %.extract165, ptr addrspace(1) %551, i1 %303) #2, !dbg !30
  %571 = add i32 %317, 1, !dbg !27
  %572 = icmp sgt i32 %571, 2, !dbg !27
  %573 = select i1 %572, i32 0, i32 %571, !dbg !27
  %574 = or disjoint i64 %indvars.iv, %37, !dbg !25
  %575 = or disjoint i64 %574, %.idx, !dbg !25
  %576 = or disjoint i64 %574, %.idx2, !dbg !25
  %577 = or disjoint i64 %574, %.idx3, !dbg !25
  %578 = or disjoint i64 %574, %.idx4, !dbg !25
  %579 = getelementptr bfloat, ptr addrspace(1) %156, i64 %575, !dbg !25
  %580 = getelementptr bfloat, ptr addrspace(1) %156, i64 %576, !dbg !25
  %581 = getelementptr bfloat, ptr addrspace(1) %156, i64 %577, !dbg !25
  %582 = getelementptr bfloat, ptr addrspace(1) %156, i64 %578, !dbg !25
  %.idx102 = shl i32 %573, 13, !dbg !25
  %583 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx102, !dbg !25
  %584 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %583, i32 %167, !dbg !25
  %585 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %583, i32 %169, !dbg !25
  %586 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %583, i32 %171, !dbg !25
  %587 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %583, i32 %173, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %584, ptr addrspace(1) %579, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %585, ptr addrspace(1) %580, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %586, ptr addrspace(1) %581, i32 0) #2, !dbg !25
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %587, ptr addrspace(1) %582, i32 0) #2, !dbg !25
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !25
  br i1 %295, label %294, label %588, !dbg !27

588:                                              ; preds = %294
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !27
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !27
  %589 = sext i32 %63 to i64, !dbg !31
  %590 = getelementptr float, ptr addrspace(1) %6, i64 %589, !dbg !31
  %591 = getelementptr float, ptr addrspace(1) %590, i64 %42, !dbg !32
  %592 = getelementptr float, ptr addrspace(1) %590, i64 %43, !dbg !32
  %593 = getelementptr float, ptr addrspace(1) %590, i64 %44, !dbg !32
  %594 = getelementptr float, ptr addrspace(1) %590, i64 %45, !dbg !32
  %595 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %591, i1 %55) #2, !dbg !32
  %596 = bitcast i32 %595 to float, !dbg !32
  %597 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %592, i1 %56) #2, !dbg !32
  %598 = bitcast i32 %597 to float, !dbg !32
  %599 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %593, i1 %57) #2, !dbg !32
  %600 = bitcast i32 %599 to float, !dbg !32
  %601 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %594, i1 %58) #2, !dbg !32
  %602 = bitcast i32 %601 to float, !dbg !32
  %603 = fmul float %596, 0x3FF7154760000000, !dbg !33
  %604 = tail call float @llvm.nvvm.ex2.approx.f(float %603), !dbg !33
  %605 = fmul float %598, 0x3FF7154760000000, !dbg !33
  %606 = tail call float @llvm.nvvm.ex2.approx.f(float %605), !dbg !33
  %607 = fmul float %600, 0x3FF7154760000000, !dbg !33
  %608 = tail call float @llvm.nvvm.ex2.approx.f(float %607), !dbg !33
  %609 = fmul float %602, 0x3FF7154760000000, !dbg !33
  %610 = tail call float @llvm.nvvm.ex2.approx.f(float %609), !dbg !33
  %611 = getelementptr bfloat, ptr addrspace(1) %0, i64 %155, !dbg !34
  %612 = getelementptr bfloat, ptr addrspace(1) %3, i64 %155, !dbg !35
  %613 = getelementptr bfloat, ptr addrspace(1) %611, i64 %158, !dbg !36
  %614 = getelementptr bfloat, ptr addrspace(1) %611, i64 %159, !dbg !36
  %615 = getelementptr bfloat, ptr addrspace(1) %611, i64 %160, !dbg !36
  %616 = getelementptr bfloat, ptr addrspace(1) %611, i64 %161, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %168, ptr addrspace(1) %613, i32 %175) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %170, ptr addrspace(1) %614, i32 %176) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %172, ptr addrspace(1) %615, i32 %177) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %174, ptr addrspace(1) %616, i32 %178) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %617 = getelementptr bfloat, ptr addrspace(1) %611, i64 %180, !dbg !36
  %618 = getelementptr bfloat, ptr addrspace(1) %611, i64 %181, !dbg !36
  %619 = getelementptr bfloat, ptr addrspace(1) %611, i64 %182, !dbg !36
  %620 = getelementptr bfloat, ptr addrspace(1) %611, i64 %183, !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %617, i32 %175) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %189, ptr addrspace(1) %618, i32 %176) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %190, ptr addrspace(1) %619, i32 %177) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %191, ptr addrspace(1) %620, i32 %178) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %621 = getelementptr bfloat, ptr addrspace(1) %611, i64 %193, !dbg !36
  %622 = getelementptr bfloat, ptr addrspace(1) %611, i64 %194, !dbg !36
  %623 = getelementptr bfloat, ptr addrspace(1) %611, i64 %195, !dbg !36
  %624 = getelementptr bfloat, ptr addrspace(1) %611, i64 %196, !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %201, ptr addrspace(1) %621, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %202, ptr addrspace(1) %622, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %203, ptr addrspace(1) %623, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %204, ptr addrspace(1) %624, i32 0) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %625 = insertelement <8 x float> poison, float %604, i64 0, !dbg !37
  %626 = shufflevector <8 x float> %625, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %627 = insertelement <8 x float> poison, float %606, i64 0, !dbg !37
  %628 = shufflevector <8 x float> %627, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %629 = insertelement <8 x float> poison, float %608, i64 0, !dbg !37
  %630 = shufflevector <8 x float> %629, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %631 = insertelement <8 x float> poison, float %610, i64 0, !dbg !37
  %632 = shufflevector <8 x float> %631, <8 x float> poison, <8 x i32> zeroinitializer, !dbg !37
  %633 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 4
  %634 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 8
  %635 = getelementptr inbounds nuw i8, ptr addrspace(3) %263, i32 12
  br label %636, !dbg !38

636:                                              ; preds = %588, %636
  %637 = phi i1 [ true, %588 ], [ false, %636 ]
  %indvars.iv166 = phi i64 [ 192, %588 ], [ 256, %636 ]
  %638 = phi i1 [ %55, %588 ], [ false, %636 ]
  %639 = phi i1 [ %56, %588 ], [ false, %636 ]
  %640 = phi i1 [ %57, %588 ], [ false, %636 ]
  %641 = phi i1 [ %58, %588 ], [ false, %636 ]
  %642 = phi i1 [ %55, %588 ], [ %638, %636 ]
  %643 = phi i1 [ %56, %588 ], [ %639, %636 ]
  %644 = phi i1 [ %57, %588 ], [ %640, %636 ]
  %645 = phi i1 [ %58, %588 ], [ %641, %636 ]
  %646 = phi i64 [ %193, %588 ], [ %929, %636 ]
  %647 = phi i64 [ %194, %588 ], [ %930, %636 ]
  %648 = phi i64 [ %195, %588 ], [ %931, %636 ]
  %649 = phi i64 [ %196, %588 ], [ %932, %636 ]
  %650 = phi i64 [ %180, %588 ], [ %646, %636 ]
  %651 = phi i64 [ %181, %588 ], [ %647, %636 ]
  %652 = phi i64 [ %182, %588 ], [ %648, %636 ]
  %653 = phi i64 [ %183, %588 ], [ %649, %636 ]
  %654 = phi i64 [ %158, %588 ], [ %650, %636 ]
  %655 = phi i64 [ %159, %588 ], [ %651, %636 ]
  %656 = phi i64 [ %160, %588 ], [ %652, %636 ]
  %657 = phi i64 [ %161, %588 ], [ %653, %636 ]
  %658 = phi i32 [ -1, %588 ], [ %662, %636 ]
  %659 = phi i32 [ 2, %588 ], [ %927, %636 ]
  %660 = add i32 %658, 1, !dbg !38
  %661 = icmp sgt i32 %660, 2, !dbg !38
  %662 = select i1 %661, i32 0, i32 %660, !dbg !38
  tail call void @llvm.nvvm.cp.async.wait.group(i32 2), !dbg !36
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !36
  %.idx5 = shl i32 %662, 13, !dbg !36
  %663 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx5, !dbg !36
  %664 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %663, i32 %167, !dbg !36
  %665 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %663, i32 %169, !dbg !36
  %666 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %663, i32 %171, !dbg !36
  %667 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %663, i32 %173, !dbg !36
  %668 = load <8 x bfloat>, ptr addrspace(3) %664, align 16, !dbg !36
  %669 = fmul <8 x bfloat> %668, %281, !dbg !39
  %670 = fpext <8 x bfloat> %669 to <8 x float>, !dbg !37
  %671 = fmul <8 x float> %626, %670, !dbg !37
  %672 = fptrunc <8 x float> %671 to <8 x bfloat>, !dbg !40
  %673 = load <8 x bfloat>, ptr addrspace(3) %665, align 16, !dbg !36
  %674 = fmul <8 x bfloat> %673, %284, !dbg !39
  %675 = fpext <8 x bfloat> %674 to <8 x float>, !dbg !37
  %676 = fmul <8 x float> %628, %675, !dbg !37
  %677 = fptrunc <8 x float> %676 to <8 x bfloat>, !dbg !40
  %678 = load <8 x bfloat>, ptr addrspace(3) %666, align 16, !dbg !36
  %679 = fmul <8 x bfloat> %678, %287, !dbg !39
  %680 = fpext <8 x bfloat> %679 to <8 x float>, !dbg !37
  %681 = fmul <8 x float> %630, %680, !dbg !37
  %682 = fptrunc <8 x float> %681 to <8 x bfloat>, !dbg !40
  %683 = load <8 x bfloat>, ptr addrspace(3) %667, align 16, !dbg !36
  %684 = fmul <8 x bfloat> %683, %290, !dbg !39
  %685 = fpext <8 x bfloat> %684 to <8 x float>, !dbg !37
  %686 = fmul <8 x float> %632, %685, !dbg !37
  %687 = fptrunc <8 x float> %686 to <8 x bfloat>, !dbg !40
  store <8 x bfloat> %672, ptr addrspace(3) %205, align 16, !dbg !40
  store <8 x bfloat> %677, ptr addrspace(3) %206, align 16, !dbg !40
  store <8 x bfloat> %682, ptr addrspace(3) %207, align 16, !dbg !40
  store <8 x bfloat> %687, ptr addrspace(3) %208, align 16, !dbg !40
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !41
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !41
  %688 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %23, i32 0, i32 31), !dbg !41
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !41
  %689 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %212, i64 %216) #2, !dbg !41
  %690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 0, !dbg !41
  %691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 1, !dbg !41
  %692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 2, !dbg !41
  %693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 3, !dbg !41
  %694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 4, !dbg !41
  %695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 5, !dbg !41
  %696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 6, !dbg !41
  %697 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 7, !dbg !41
  %698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 8, !dbg !41
  %699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 9, !dbg !41
  %700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 10, !dbg !41
  %701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 11, !dbg !41
  %702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 12, !dbg !41
  %703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 13, !dbg !41
  %704 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 14, !dbg !41
  %705 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 15, !dbg !41
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 16, !dbg !41
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 17, !dbg !41
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 18, !dbg !41
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 19, !dbg !41
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 20, !dbg !41
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 21, !dbg !41
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 22, !dbg !41
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 23, !dbg !41
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 24, !dbg !41
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 25, !dbg !41
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 26, !dbg !41
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 27, !dbg !41
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 28, !dbg !41
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 29, !dbg !41
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 30, !dbg !41
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %689, 31, !dbg !41
  %722 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %690, float %691, float %692, float %693, float %694, float %695, float %696, float %697, float %698, float %699, float %700, float %701, float %702, float %703, float %704, float %705, float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, float %718, float %719, float %720, float %721, i64 %220, i64 %224, i1 true) #2, !dbg !41
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 0, !dbg !41
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 1, !dbg !41
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 2, !dbg !41
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 3, !dbg !41
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 4, !dbg !41
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 5, !dbg !41
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 6, !dbg !41
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 7, !dbg !41
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 8, !dbg !41
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 9, !dbg !41
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 10, !dbg !41
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 11, !dbg !41
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 12, !dbg !41
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 13, !dbg !41
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 14, !dbg !41
  %738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 15, !dbg !41
  %739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 16, !dbg !41
  %740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 17, !dbg !41
  %741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 18, !dbg !41
  %742 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 19, !dbg !41
  %743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 20, !dbg !41
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 21, !dbg !41
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 22, !dbg !41
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 23, !dbg !41
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 24, !dbg !41
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 25, !dbg !41
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 26, !dbg !41
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 27, !dbg !41
  %751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 28, !dbg !41
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 29, !dbg !41
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 30, !dbg !41
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %722, 31, !dbg !41
  %755 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %723, float %724, float %725, float %726, float %727, float %728, float %729, float %730, float %731, float %732, float %733, float %734, float %735, float %736, float %737, float %738, float %739, float %740, float %741, float %742, float %743, float %744, float %745, float %746, float %747, float %748, float %749, float %750, float %751, float %752, float %753, float %754, i64 %228, i64 %232, i1 true) #2, !dbg !41
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 0, !dbg !41
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 1, !dbg !41
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 2, !dbg !41
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 3, !dbg !41
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 4, !dbg !41
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 5, !dbg !41
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 6, !dbg !41
  %763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 7, !dbg !41
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 8, !dbg !41
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 9, !dbg !41
  %766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 10, !dbg !41
  %767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 11, !dbg !41
  %768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 12, !dbg !41
  %769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 13, !dbg !41
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 14, !dbg !41
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 15, !dbg !41
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 16, !dbg !41
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 17, !dbg !41
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 18, !dbg !41
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 19, !dbg !41
  %776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 20, !dbg !41
  %777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 21, !dbg !41
  %778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 22, !dbg !41
  %779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 23, !dbg !41
  %780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 24, !dbg !41
  %781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 25, !dbg !41
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 26, !dbg !41
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 27, !dbg !41
  %784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 28, !dbg !41
  %785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 29, !dbg !41
  %786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 30, !dbg !41
  %787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %755, 31, !dbg !41
  %788 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %756, float %757, float %758, float %759, float %760, float %761, float %762, float %763, float %764, float %765, float %766, float %767, float %768, float %769, float %770, float %771, float %772, float %773, float %774, float %775, float %776, float %777, float %778, float %779, float %780, float %781, float %782, float %783, float %784, float %785, float %786, float %787, i64 %236, i64 %240, i1 true) #2, !dbg !41
  %789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 0, !dbg !41
  %790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 1, !dbg !41
  %791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 2, !dbg !41
  %792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 3, !dbg !41
  %793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 4, !dbg !41
  %794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 5, !dbg !41
  %795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 6, !dbg !41
  %796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 7, !dbg !41
  %797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 8, !dbg !41
  %798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 9, !dbg !41
  %799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 10, !dbg !41
  %800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 11, !dbg !41
  %801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 12, !dbg !41
  %802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 13, !dbg !41
  %803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 14, !dbg !41
  %804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 15, !dbg !41
  %805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 16, !dbg !41
  %806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 17, !dbg !41
  %807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 18, !dbg !41
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 19, !dbg !41
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 20, !dbg !41
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 21, !dbg !41
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 22, !dbg !41
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 23, !dbg !41
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 24, !dbg !41
  %814 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 25, !dbg !41
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 26, !dbg !41
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 27, !dbg !41
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 28, !dbg !41
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 29, !dbg !41
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 30, !dbg !41
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %788, 31, !dbg !41
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !41
  %821 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %789, float %790, float %791, float %792, float %793, float %794, float %795, float %796, float %797, float %798, float %799, float %800, float %801, float %802, float %803, float %804, float %805, float %806, float %807, float %808, float %809, float %810, float %811, float %812, float %813, float %814, float %815, float %816, float %817, float %818, float %819, float %820, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 33792), i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 0, i32 0) #2, !dbg !41
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 0, !dbg !41
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 1, !dbg !41
  %824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 2, !dbg !41
  %825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 3, !dbg !41
  %826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 4, !dbg !41
  %827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 5, !dbg !41
  %828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 6, !dbg !41
  %829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 7, !dbg !41
  %830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 8, !dbg !41
  %831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 9, !dbg !41
  %832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 10, !dbg !41
  %833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 11, !dbg !41
  %834 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 12, !dbg !41
  %835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 13, !dbg !41
  %836 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 14, !dbg !41
  %837 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 15, !dbg !41
  %838 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 16, !dbg !41
  %839 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 17, !dbg !41
  %840 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 18, !dbg !41
  %841 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 19, !dbg !41
  %842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 20, !dbg !41
  %843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 21, !dbg !41
  %844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 22, !dbg !41
  %845 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 23, !dbg !41
  %846 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 24, !dbg !41
  %847 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 25, !dbg !41
  %848 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 26, !dbg !41
  %849 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 27, !dbg !41
  %850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 28, !dbg !41
  %851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 29, !dbg !41
  %852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 30, !dbg !41
  %853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %821, 31, !dbg !41
  %854 = insertelement <2 x float> poison, float %822, i64 0, !dbg !42
  %855 = insertelement <2 x float> %854, float %823, i64 1, !dbg !42
  %856 = fptrunc <2 x float> %855 to <2 x bfloat>, !dbg !42
  %857 = insertelement <2 x float> poison, float %824, i64 0, !dbg !42
  %858 = insertelement <2 x float> %857, float %825, i64 1, !dbg !42
  %859 = fptrunc <2 x float> %858 to <2 x bfloat>, !dbg !42
  %860 = insertelement <2 x float> poison, float %826, i64 0, !dbg !42
  %861 = insertelement <2 x float> %860, float %827, i64 1, !dbg !42
  %862 = fptrunc <2 x float> %861 to <2 x bfloat>, !dbg !42
  %863 = insertelement <2 x float> poison, float %828, i64 0, !dbg !42
  %864 = insertelement <2 x float> %863, float %829, i64 1, !dbg !42
  %865 = fptrunc <2 x float> %864 to <2 x bfloat>, !dbg !42
  %866 = insertelement <2 x float> poison, float %830, i64 0, !dbg !42
  %867 = insertelement <2 x float> %866, float %831, i64 1, !dbg !42
  %868 = fptrunc <2 x float> %867 to <2 x bfloat>, !dbg !42
  %869 = insertelement <2 x float> poison, float %832, i64 0, !dbg !42
  %870 = insertelement <2 x float> %869, float %833, i64 1, !dbg !42
  %871 = fptrunc <2 x float> %870 to <2 x bfloat>, !dbg !42
  %872 = insertelement <2 x float> poison, float %834, i64 0, !dbg !42
  %873 = insertelement <2 x float> %872, float %835, i64 1, !dbg !42
  %874 = fptrunc <2 x float> %873 to <2 x bfloat>, !dbg !42
  %875 = insertelement <2 x float> poison, float %836, i64 0, !dbg !42
  %876 = insertelement <2 x float> %875, float %837, i64 1, !dbg !42
  %877 = fptrunc <2 x float> %876 to <2 x bfloat>, !dbg !42
  %878 = insertelement <2 x float> poison, float %838, i64 0, !dbg !42
  %879 = insertelement <2 x float> %878, float %839, i64 1, !dbg !42
  %880 = fptrunc <2 x float> %879 to <2 x bfloat>, !dbg !42
  %881 = insertelement <2 x float> poison, float %840, i64 0, !dbg !42
  %882 = insertelement <2 x float> %881, float %841, i64 1, !dbg !42
  %883 = fptrunc <2 x float> %882 to <2 x bfloat>, !dbg !42
  %884 = insertelement <2 x float> poison, float %842, i64 0, !dbg !42
  %885 = insertelement <2 x float> %884, float %843, i64 1, !dbg !42
  %886 = fptrunc <2 x float> %885 to <2 x bfloat>, !dbg !42
  %887 = insertelement <2 x float> poison, float %844, i64 0, !dbg !42
  %888 = insertelement <2 x float> %887, float %845, i64 1, !dbg !42
  %889 = fptrunc <2 x float> %888 to <2 x bfloat>, !dbg !42
  %890 = insertelement <2 x float> poison, float %846, i64 0, !dbg !42
  %891 = insertelement <2 x float> %890, float %847, i64 1, !dbg !42
  %892 = fptrunc <2 x float> %891 to <2 x bfloat>, !dbg !42
  %893 = insertelement <2 x float> poison, float %848, i64 0, !dbg !42
  %894 = insertelement <2 x float> %893, float %849, i64 1, !dbg !42
  %895 = fptrunc <2 x float> %894 to <2 x bfloat>, !dbg !42
  %896 = insertelement <2 x float> poison, float %850, i64 0, !dbg !42
  %897 = insertelement <2 x float> %896, float %851, i64 1, !dbg !42
  %898 = fptrunc <2 x float> %897 to <2 x bfloat>, !dbg !42
  %899 = insertelement <2 x float> poison, float %852, i64 0, !dbg !42
  %900 = insertelement <2 x float> %899, float %853, i64 1, !dbg !42
  %901 = fptrunc <2 x float> %900 to <2 x bfloat>, !dbg !42
  %902 = getelementptr bfloat, ptr addrspace(1) %612, i64 %654, !dbg !43
  %903 = getelementptr bfloat, ptr addrspace(1) %612, i64 %655, !dbg !43
  %904 = getelementptr bfloat, ptr addrspace(1) %612, i64 %656, !dbg !43
  %905 = getelementptr bfloat, ptr addrspace(1) %612, i64 %657, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %906 = bitcast <2 x bfloat> %856 to i32, !dbg !43
  %907 = bitcast <2 x bfloat> %859 to i32, !dbg !43
  %908 = bitcast <2 x bfloat> %862 to i32, !dbg !43
  %909 = bitcast <2 x bfloat> %865 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %254, i32 %906, i32 %907, i32 %908, i32 %909) #2, !dbg !43
  %910 = bitcast <2 x bfloat> %868 to i32, !dbg !43
  %911 = bitcast <2 x bfloat> %871 to i32, !dbg !43
  %912 = bitcast <2 x bfloat> %874 to i32, !dbg !43
  %913 = bitcast <2 x bfloat> %877 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %256, i32 %910, i32 %911, i32 %912, i32 %913) #2, !dbg !43
  %914 = bitcast <2 x bfloat> %880 to i32, !dbg !43
  %915 = bitcast <2 x bfloat> %883 to i32, !dbg !43
  %916 = bitcast <2 x bfloat> %886 to i32, !dbg !43
  %917 = bitcast <2 x bfloat> %889 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %258, i32 %914, i32 %915, i32 %916, i32 %917) #2, !dbg !43
  %918 = bitcast <2 x bfloat> %892 to i32, !dbg !43
  %919 = bitcast <2 x bfloat> %895 to i32, !dbg !43
  %920 = bitcast <2 x bfloat> %898 to i32, !dbg !43
  %921 = bitcast <2 x bfloat> %901 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %260, i32 %918, i32 %919, i32 %920, i32 %921) #2, !dbg !43
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !43
  %922 = load <4 x i32>, ptr addrspace(3) %268, align 16, !dbg !43
  %923 = load <4 x i32>, ptr addrspace(3) %273, align 16, !dbg !43
  %924 = load <4 x i32>, ptr addrspace(3) %278, align 16, !dbg !43
  %.extract = load i32, ptr addrspace(3) %263, align 16, !dbg !43
  %.extract105 = load i32, ptr addrspace(3) %633, align 4, !dbg !43
  %.extract107 = load i32, ptr addrspace(3) %634, align 8, !dbg !43
  %.extract109 = load i32, ptr addrspace(3) %635, align 4, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract105, i32 %.extract107, i32 %.extract109, ptr addrspace(1) %902, i1 %642) #2, !dbg !43
  %.extract111 = extractelement <4 x i32> %922, i64 0, !dbg !43
  %.extract113 = extractelement <4 x i32> %922, i64 1, !dbg !43
  %.extract115 = extractelement <4 x i32> %922, i64 2, !dbg !43
  %.extract117 = extractelement <4 x i32> %922, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract111, i32 %.extract113, i32 %.extract115, i32 %.extract117, ptr addrspace(1) %903, i1 %643) #2, !dbg !43
  %.extract119 = extractelement <4 x i32> %923, i64 0, !dbg !43
  %.extract121 = extractelement <4 x i32> %923, i64 1, !dbg !43
  %.extract123 = extractelement <4 x i32> %923, i64 2, !dbg !43
  %.extract125 = extractelement <4 x i32> %923, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract119, i32 %.extract121, i32 %.extract123, i32 %.extract125, ptr addrspace(1) %904, i1 %644) #2, !dbg !43
  %.extract127 = extractelement <4 x i32> %924, i64 0, !dbg !43
  %.extract129 = extractelement <4 x i32> %924, i64 1, !dbg !43
  %.extract131 = extractelement <4 x i32> %924, i64 2, !dbg !43
  %.extract133 = extractelement <4 x i32> %924, i64 3, !dbg !43
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract127, i32 %.extract129, i32 %.extract131, i32 %.extract133, ptr addrspace(1) %905, i1 %645) #2, !dbg !43
  %925 = add i32 %659, 1, !dbg !38
  %926 = icmp sgt i32 %925, 2, !dbg !38
  %927 = select i1 %926, i32 0, i32 %925, !dbg !38
  %928 = or disjoint i64 %indvars.iv166, %37, !dbg !36
  %929 = or disjoint i64 %928, %.idx, !dbg !36
  %930 = or disjoint i64 %928, %.idx2, !dbg !36
  %931 = or disjoint i64 %928, %.idx3, !dbg !36
  %932 = or disjoint i64 %928, %.idx4, !dbg !36
  %933 = getelementptr bfloat, ptr addrspace(1) %611, i64 %929, !dbg !36
  %934 = getelementptr bfloat, ptr addrspace(1) %611, i64 %930, !dbg !36
  %935 = getelementptr bfloat, ptr addrspace(1) %611, i64 %931, !dbg !36
  %936 = getelementptr bfloat, ptr addrspace(1) %611, i64 %932, !dbg !36
  %.idx52 = shl i32 %927, 13, !dbg !36
  %937 = getelementptr i8, ptr addrspace(3) @global_smem, i32 %.idx52, !dbg !36
  %938 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %937, i32 %167, !dbg !36
  %939 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %937, i32 %169, !dbg !36
  %940 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %937, i32 %171, !dbg !36
  %941 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %937, i32 %173, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %938, ptr addrspace(1) %933, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %939, ptr addrspace(1) %934, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %940, ptr addrspace(1) %935, i32 0) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %941, ptr addrspace(1) %936, i32 0) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  br i1 %637, label %636, label %942, !dbg !38

942:                                              ; preds = %636
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !38
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !38
  ret void, !dbg !44
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #4

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #5

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }
attributes #5 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "wy_fast.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "recompute_w_u_fwd_kernel", linkageName: "recompute_w_u_fwd_kernel", scope: !1, file: !1, line: 144, type: !6, scopeLine: 144, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 166, column: 30, scope: !5)
!9 = !DILocation(line: 166, column: 48, scope: !5)
!10 = !DILocation(line: 173, column: 25, scope: !5)
!11 = !DILocation(line: 167, column: 33, scope: !5)
!12 = !DILocation(line: 174, column: 42, scope: !5)
!13 = !DILocation(line: 174, column: 38, scope: !5)
!14 = !DILocation(line: 174, column: 46, scope: !5)
!15 = !DILocation(line: 174, column: 70, scope: !5)
!16 = !DILocation(line: 174, column: 83, scope: !5)
!17 = !DILocation(line: 175, column: 21, scope: !5)
!18 = !DILocation(line: 177, column: 41, scope: !5)
!19 = !DILocation(line: 177, column: 48, scope: !5)
!20 = !DILocation(line: 177, column: 32, scope: !5)
!21 = !DILocation(line: 178, column: 18, scope: !5)
!22 = !DILocation(line: 181, column: 52, scope: !5)
!23 = !DILocation(line: 181, column: 36, scope: !5)
!24 = !DILocation(line: 182, column: 36, scope: !5)
!25 = !DILocation(line: 183, column: 22, scope: !5)
!26 = !DILocation(line: 184, column: 22, scope: !5)
!27 = !DILocation(line: 180, column: 21, scope: !5)
!28 = !DILocation(line: 185, column: 26, scope: !5)
!29 = !DILocation(line: 186, column: 29, scope: !5)
!30 = !DILocation(line: 186, column: 22, scope: !5)
!31 = !DILocation(line: 189, column: 37, scope: !5)
!32 = !DILocation(line: 190, column: 26, scope: !5)
!33 = !DILocation(line: 190, column: 18, scope: !5)
!34 = !DILocation(line: 193, column: 36, scope: !5)
!35 = !DILocation(line: 194, column: 36, scope: !5)
!36 = !DILocation(line: 195, column: 22, scope: !5)
!37 = !DILocation(line: 198, column: 20, scope: !5)
!38 = !DILocation(line: 192, column: 21, scope: !5)
!39 = !DILocation(line: 196, column: 21, scope: !5)
!40 = !DILocation(line: 202, column: 34, scope: !5)
!41 = !DILocation(line: 202, column: 26, scope: !5)
!42 = !DILocation(line: 203, column: 29, scope: !5)
!43 = !DILocation(line: 203, column: 22, scope: !5)
!44 = !DILocation(line: 192, column: 4, scope: !5)
