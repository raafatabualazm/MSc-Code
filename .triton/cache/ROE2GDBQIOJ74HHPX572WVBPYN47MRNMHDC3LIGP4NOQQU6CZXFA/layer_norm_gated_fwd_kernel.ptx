//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	layer_norm_gated_fwd_kernel // -- Begin function layer_norm_gated_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
.global .align 1 .b8 _$_str[11] = {95, 95, 67, 85, 68, 65, 95, 70, 84, 90};
.global .align 1 .b8 _$_str_$_2[17] = {95, 95, 67, 85, 68, 65, 95, 80, 82, 69, 67, 95, 83, 81, 82, 84};
                                        // @layer_norm_gated_fwd_kernel
.visible .entry layer_norm_gated_fwd_kernel(
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_3,
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_4,
	.param .f32 layer_norm_gated_fwd_kernel_param_5,
	.param .u32 layer_norm_gated_fwd_kernel_param_6,
	.param .u64 .ptr .global .align 1 layer_norm_gated_fwd_kernel_param_7
)
.reqntid 512
{
	.reg .pred 	%p<11>;
	.reg .b16 	%rs<13>;
	.reg .b32 	%r<93>;
	.reg .b64 	%rd<21>;
	.loc	1 33 0                          // fused_norm_gate.py:33:0
$L__func_begin0:
	.loc	1 33 0                          // fused_norm_gate.py:33:0

// %bb.0:                               // %__nv_sqrtf.exit
	ld.param.b64 	%rd6, [layer_norm_gated_fwd_kernel_param_0];
	ld.param.b64 	%rd7, [layer_norm_gated_fwd_kernel_param_1];
$L__tmp0:
	.loc	1 56 24                         // fused_norm_gate.py:56:24
	mov.u32 	%r10, %ctaid.x;
	ld.param.b64 	%rd8, [layer_norm_gated_fwd_kernel_param_2];
	.loc	1 58 23                         // fused_norm_gate.py:58:23
	mov.u32 	%r11, %tid.x;
	shl.b32 	%r12, %r11, 2;
	ld.param.b64 	%rd9, [layer_norm_gated_fwd_kernel_param_3];
	and.b32 	%r13, %r12, 124;
	ld.param.b64 	%rd10, [layer_norm_gated_fwd_kernel_param_4];
	.loc	1 61 54                         // fused_norm_gate.py:61:54
	shl.b32 	%r14, %r10, 4;
	ld.param.b32 	%r15, [layer_norm_gated_fwd_kernel_param_5];
	ld.param.s32 	%rd11, [layer_norm_gated_fwd_kernel_param_6];
	.loc	1 61 72                         // fused_norm_gate.py:61:72
	cvt.s64.s32 	%rd12, %r14;
	.loc	1 62 18                         // fused_norm_gate.py:62:18
	bfe.u32 	%r16, %r11, 5, 4;
	cvt.u64.u32 	%rd13, %r16;
	or.b64 	%rd14, %rd13, %rd12;
	shl.b64 	%rd15, %rd14, 8;
	mul.wide.u32 	%rd16, %r13, 2;
	or.b64 	%rd17, %rd15, %rd16;
	add.s64 	%rd1, %rd6, %rd17;
	setp.gt.s32 	%p6, %r14, -1;
	setp.lt.s64 	%p7, %rd14, %rd11;
	and.pred 	%p1, %p6, %p7;
	// begin inline asm
	mov.u32 %r1, 0x0;
	mov.u32 %r2, 0x0;
	@%p1 ld.global.v2.b32 { %r1, %r2 }, [ %rd1 + 0 ];
	// end inline asm
	.loc	1 62 49                         // fused_norm_gate.py:62:49
	mov.b32 	{%rs1, %rs2}, %r1;
	cvt.f32.bf16 	%r17, %rs1;
	cvt.f32.bf16 	%r18, %rs2;
	mov.b32 	{%rs3, %rs4}, %r2;
	cvt.f32.bf16 	%r19, %rs4;
	cvt.f32.bf16 	%r20, %rs3;
	.loc	1 77 32                         // fused_norm_gate.py:77:32
	mul.f32 	%r21, %r18, %r18;
$L__tmp1:
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	fma.rn.f32 	%r22, %r17, %r17, %r21;
	fma.rn.f32 	%r23, %r20, %r20, %r22;
	fma.rn.f32 	%r24, %r19, %r19, %r23;
	.loc	2 290 36                        // standard.py:290:36 @[ fused_norm_gate.py:77:23 ]
	shfl.sync.bfly.b32 	%r25, %r24, 16, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	add.f32 	%r26, %r24, %r25;
	.loc	2 290 36                        // standard.py:290:36 @[ fused_norm_gate.py:77:23 ]
	shfl.sync.bfly.b32 	%r27, %r26, 8, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	add.f32 	%r28, %r26, %r27;
	.loc	2 290 36                        // standard.py:290:36 @[ fused_norm_gate.py:77:23 ]
	shfl.sync.bfly.b32 	%r29, %r28, 4, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	add.f32 	%r30, %r28, %r29;
	.loc	2 290 36                        // standard.py:290:36 @[ fused_norm_gate.py:77:23 ]
	shfl.sync.bfly.b32 	%r31, %r30, 2, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	add.f32 	%r32, %r30, %r31;
	.loc	2 290 36                        // standard.py:290:36 @[ fused_norm_gate.py:77:23 ]
	shfl.sync.bfly.b32 	%r33, %r32, 1, 31, -1;
	.loc	2 260 15                        // standard.py:260:15 @[ fused_norm_gate.py:77:23 ]
	add.f32 	%r34, %r32, %r33;
	mov.b32 	%r35, 0f43000000;
$L__tmp2:
	.loc	1 77 50                         // fused_norm_gate.py:77:50
	div.full.f32 	%r36, %r34, %r35;
	.loc	1 78 33                         // fused_norm_gate.py:78:33
	add.f32 	%r37, %r15, %r36;
	.loc	1 78 25                         // fused_norm_gate.py:78:25
	sqrt.approx.ftz.f32 	%r38, %r37;
	.loc	1 62 18                         // fused_norm_gate.py:62:18
	and.b32 	%r39, %r11, 15;
	cvt.u64.u32 	%rd18, %r39;
	or.b64 	%rd19, %rd12, %rd18;
	mov.b32 	%r40, 0f3F800000;
	.loc	1 78 17                         // fused_norm_gate.py:78:17
	div.full.f32 	%r41, %r40, %r38;
	.loc	1 81 21                         // fused_norm_gate.py:81:21
	shl.b64 	%rd20, %rd19, 2;
	add.s64 	%rd2, %rd10, %rd20;
	setp.lt.s64 	%p8, %rd19, %rd11;
	shl.b32 	%r42, %r16, 2;
	mov.b32 	%r43, global_smem;
	add.s32 	%r44, %r43, %r42;
	st.shared.b32 	[%r44], %r41;
	bar.sync 	0;
	shl.b32 	%r45, %r39, 2;
	add.s32 	%r46, %r43, %r45;
	ld.shared.b32 	%r3, [%r46];
	and.b32 	%r47, %r11, 496;
	setp.eq.s32 	%p9, %r47, 0;
	and.pred 	%p10, %p9, %p8;
	and.pred 	%p2, %p6, %p10;
	// begin inline asm
	@%p2 st.global.b32 [ %rd2 + 0 ], { %r3 };
	// end inline asm
	.loc	1 84 26                         // fused_norm_gate.py:84:26
	add.s64 	%rd3, %rd9, %rd16;
	mov.pred 	%p3, -1;
	.loc	1 84 22                         // fused_norm_gate.py:84:22
	// begin inline asm
	mov.u32 %r4, 0x0;
	mov.u32 %r5, 0x0;
	@%p3 ld.global.v2.b32 { %r4, %r5 }, [ %rd3 + 0 ];
	// end inline asm
	.loc	1 94 18                         // fused_norm_gate.py:94:18
	add.s64 	%rd4, %rd7, %rd17;
	// begin inline asm
	mov.u32 %r6, 0x0;
	mov.u32 %r7, 0x0;
	@%p1 ld.global.v2.b32 { %r6, %r7 }, [ %rd4 + 0 ];
	// end inline asm
	.loc	1 84 44                         // fused_norm_gate.py:84:44
	mov.b32 	{%rs5, %rs6}, %r4;
	cvt.f32.bf16 	%r48, %rs6;
	cvt.f32.bf16 	%r49, %rs5;
	.loc	1 87 86                         // fused_norm_gate.py:87:86
	mul.f32 	%r50, %r41, %r18;
	mul.f32 	%r51, %r41, %r17;
	.loc	1 88 20                         // fused_norm_gate.py:88:20
	mul.f32 	%r52, %r51, %r49;
	mul.f32 	%r53, %r50, %r48;
	.loc	1 94 49                         // fused_norm_gate.py:94:49
	mov.b32 	{%rs7, %rs8}, %r6;
	cvt.f32.bf16 	%r54, %rs7;
	cvt.f32.bf16 	%r55, %rs8;
	.loc	1 98 20                         // fused_norm_gate.py:98:20
	mul.f32 	%r56, %r53, %r55;
	mul.f32 	%r57, %r52, %r54;
	mov.b32 	%r58, 0f00000000;
$L__tmp3:
	.loc	2 47 30                         // standard.py:47:30 @[ fused_norm_gate.py:98:37 ]
	sub.f32 	%r59, %r58, %r54;
	sub.f32 	%r60, %r58, %r55;
	.loc	2 47 29                         // standard.py:47:29 @[ fused_norm_gate.py:98:37 ]
	mul.f32 	%r61, %r59, 0f3FB8AA3B;
	ex2.approx.f32 	%r62, %r61;
	mul.f32 	%r63, %r60, 0f3FB8AA3B;
	ex2.approx.f32 	%r64, %r63;
	.loc	2 47 20                         // standard.py:47:20 @[ fused_norm_gate.py:98:37 ]
	add.f32 	%r65, %r62, 0f3F800000;
	add.f32 	%r66, %r64, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16 @[ fused_norm_gate.py:98:37 ]
	div.full.f32 	%r67, %r40, %r65;
	div.full.f32 	%r68, %r40, %r66;
$L__tmp4:
	.loc	1 98 26                         // fused_norm_gate.py:98:26
	mul.f32 	%r69, %r57, %r67;
	mul.f32 	%r70, %r56, %r68;
	.loc	1 104 25                        // fused_norm_gate.py:104:25
	cvt.rn.bf16x2.f32 	%r8, %r70, %r69;
	.loc	1 84 44                         // fused_norm_gate.py:84:44
	mov.b32 	{%rs9, %rs10}, %r5;
	cvt.f32.bf16 	%r71, %rs10;
	cvt.f32.bf16 	%r72, %rs9;
	.loc	1 87 86                         // fused_norm_gate.py:87:86
	mul.f32 	%r73, %r41, %r19;
	mul.f32 	%r74, %r41, %r20;
	.loc	1 88 20                         // fused_norm_gate.py:88:20
	mul.f32 	%r75, %r74, %r72;
	mul.f32 	%r76, %r73, %r71;
	.loc	1 94 49                         // fused_norm_gate.py:94:49
	mov.b32 	{%rs11, %rs12}, %r7;
	cvt.f32.bf16 	%r77, %rs11;
	cvt.f32.bf16 	%r78, %rs12;
	.loc	1 98 20                         // fused_norm_gate.py:98:20
	mul.f32 	%r79, %r76, %r78;
	mul.f32 	%r80, %r75, %r77;
$L__tmp5:
	.loc	2 47 30                         // standard.py:47:30 @[ fused_norm_gate.py:98:37 ]
	sub.f32 	%r81, %r58, %r77;
	sub.f32 	%r82, %r58, %r78;
	.loc	2 47 29                         // standard.py:47:29 @[ fused_norm_gate.py:98:37 ]
	mul.f32 	%r83, %r81, 0f3FB8AA3B;
	ex2.approx.f32 	%r84, %r83;
	mul.f32 	%r85, %r82, 0f3FB8AA3B;
	ex2.approx.f32 	%r86, %r85;
	.loc	2 47 20                         // standard.py:47:20 @[ fused_norm_gate.py:98:37 ]
	add.f32 	%r87, %r84, 0f3F800000;
	add.f32 	%r88, %r86, 0f3F800000;
	.loc	2 47 16                         // standard.py:47:16 @[ fused_norm_gate.py:98:37 ]
	div.full.f32 	%r89, %r40, %r87;
	div.full.f32 	%r90, %r40, %r88;
$L__tmp6:
	.loc	1 98 26                         // fused_norm_gate.py:98:26
	mul.f32 	%r91, %r80, %r89;
	mul.f32 	%r92, %r79, %r90;
	.loc	1 104 25                        // fused_norm_gate.py:104:25
	cvt.rn.bf16x2.f32 	%r9, %r92, %r91;
	.loc	1 104 18                        // fused_norm_gate.py:104:18
	add.s64 	%rd5, %rd8, %rd17;
	// begin inline asm
	@%p1 st.global.v2.b32 [ %rd5 + 0 ], { %r8, %r9 };
	// end inline asm
	.loc	1 104 4                         // fused_norm_gate.py:104:4
	ret;
$L__tmp7:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/modules/fused_norm_gate.py"
	.file	2 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 1                                   // DW_CHILDREN_yes
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 2                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 0                                   // DW_CHILDREN_no
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 32                                  // DW_AT_inline
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 3                                   // Abbreviation Code
.b8 46                                  // DW_TAG_subprogram
.b8 1                                   // DW_CHILDREN_yes
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 4                                   // Abbreviation Code
.b8 29                                  // DW_TAG_inlined_subroutine
.b8 0                                   // DW_CHILDREN_no
.b8 49                                  // DW_AT_abstract_origin
.b8 19                                  // DW_FORM_ref4
.b8 17                                  // DW_AT_low_pc
.b8 1                                   // DW_FORM_addr
.b8 18                                  // DW_AT_high_pc
.b8 1                                   // DW_FORM_addr
.b8 88                                  // DW_AT_call_file
.b8 11                                  // DW_FORM_data1
.b8 89                                  // DW_AT_call_line
.b8 11                                  // DW_FORM_data1
.b8 87                                  // DW_AT_call_column
.b8 11                                  // DW_FORM_data1
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 220                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0xd5 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 102                                 // DW_AT_name
.b8 117
.b8 115
.b8 101
.b8 100
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 103
.b8 97
.b8 116
.b8 101
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 109
.b8 111
.b8 100
.b8 117
.b8 108
.b8 101
.b8 115
.b8 0
.b8 2                                   // Abbrev [2] 0x7b:0x1e DW_TAG_subprogram
.b8 108                                 // DW_AT_name
.b8 97
.b8 121
.b8 101
.b8 114
.b8 95
.b8 110
.b8 111
.b8 114
.b8 109
.b8 95
.b8 103
.b8 97
.b8 116
.b8 101
.b8 100
.b8 95
.b8 102
.b8 119
.b8 100
.b8 95
.b8 107
.b8 101
.b8 114
.b8 110
.b8 101
.b8 108
.b8 0
.b8 1                                   // DW_AT_inline
.b8 3                                   // Abbrev [3] 0x99:0x46 DW_TAG_subprogram
.b64 $L__func_begin0                    // DW_AT_low_pc
.b64 $L__func_end0                      // DW_AT_high_pc
.b32 123                                // DW_AT_abstract_origin
.b8 4                                   // Abbrev [4] 0xae:0x18 DW_TAG_inlined_subroutine
.b32 123                                // DW_AT_abstract_origin
.b64 $L__tmp1                           // DW_AT_low_pc
.b64 $L__tmp2                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 77                                  // DW_AT_call_line
.b8 23                                  // DW_AT_call_column
.b8 4                                   // Abbrev [4] 0xc6:0x18 DW_TAG_inlined_subroutine
.b32 123                                // DW_AT_abstract_origin
.b64 $L__tmp3                           // DW_AT_low_pc
.b64 $L__tmp6                           // DW_AT_high_pc
.b8 1                                   // DW_AT_call_file
.b8 98                                  // DW_AT_call_line
.b8 37                                  // DW_AT_call_column
.b8 0                                   // End Of Children Mark
.b8 0                                   // End Of Children Mark
	}
	.section	.debug_macinfo	{	}
