//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 256
{
	.reg .pred 	%p<64>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<621>;
	.reg .b64 	%rd<108>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:                               // %.peel.next
	ld.param.b32 	%r61, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd11, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd10, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd23, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r180, %ctaid.x;
	ld.param.b64 	%rd24, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r181, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r182, %r181, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r183, %r181, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r184, %r180, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r185, %r1, 3, 1;
	bfe.s32 	%r186, %r1, 4, 1;
	bfe.u32 	%r187, %r1, 2, 3;
	bfe.u32 	%r188, %r1, 2, 5;
	and.b32 	%r3, %r1, 128;
	shr.u32 	%r4, %r3, 2;
	or.b32 	%r189, %r188, %r4;
	shr.u32 	%r190, %r1, 1;
	and.b32 	%r191, %r190, 48;
	or.b32 	%r5, %r191, %r187;
	or.b32 	%r6, %r5, 8;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r192, %r182, %r61;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r192;
	mul.wide.s32 	%rd25, %r192, 2;
	add.s64 	%rd26, %rd24, %rd25;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r183;
	mul.wide.u32 	%rd27, %r183, 2;
	add.s64 	%rd28, %rd26, %rd27;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r61;
	cvt.s64.s32 	%rd4, %r184;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd29, %r189;
	cvt.u64.u32 	%rd30, %r5;
	cvt.u64.u32 	%rd31, %r6;
	or.b64 	%rd32, %rd30, %rd4;
	or.b64 	%rd33, %rd31, %rd4;
	shl.b64 	%rd5, %rd32, 5;
	shl.b64 	%rd6, %rd33, 5;
	shl.b64 	%rd34, %rd32, 6;
	add.s64 	%rd12, %rd28, %rd34;
	shl.b64 	%rd35, %rd33, 6;
	add.s64 	%rd13, %rd28, %rd35;
	setp.gt.s32 	%p7, %r184, -1;
	setp.lt.s64 	%p8, %rd32, %rd3;
	setp.lt.s64 	%p9, %rd33, %rd3;
	and.pred 	%p16, %p7, %p8;
	and.pred 	%p17, %p7, %p9;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p16 ld.global.b16 { %rs3 }, [ %rd12 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p17 ld.global.b16 { %rs4 }, [ %rd13 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r7, %r192, %r183;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r193, %r7, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd36, %r193, 2;
	add.s64 	%rd37, %rd23, %rd36;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b32 	%r194, %r1, 3;
	and.b32 	%r195, %r194, 24;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	or.b64 	%rd38, %rd4, %rd29;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p10, %rd38, %rd3;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	shl.b64 	%rd39, %rd38, 13;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd40, %rd37, %rd39;
	mul.wide.u32 	%rd41, %r195, 2;
	add.s64 	%rd14, %rd40, %rd41;
	and.b32 	%r196, %r194, 56;
	and.b32 	%r197, %r185, 72;
	xor.b32 	%r198, %r197, %r196;
	and.b32 	%r199, %r186, 144;
	xor.b32 	%r200, %r198, %r199;
	and.b32 	%r201, %r194, 1792;
	or.b32 	%r202, %r200, %r201;
	shl.b32 	%r203, %r202, 1;
	mov.b32 	%r173, global_smem;
	add.s32 	%r62, %r173, %r203;
	selp.b32 	%r204, 16, 0, %p10;
	selp.b32 	%r65, %r204, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r62 + 0 ], [ %rd14 + 0 ], 0x10, %r65;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd15, %rd14, 64;
	bar.sync 	0;
	add.s32 	%r64, %r62, 4096;
	// begin inline asm
	cp.async.cg.shared.global [ %r64 + 0 ], [ %rd15 + 0 ], 0x10, %r65;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd16, %rd14, 128;
	bar.sync 	0;
	add.s32 	%r66, %r62, 8192;
	// begin inline asm
	cp.async.cg.shared.global [ %r66 + 0 ], [ %rd16 + 0 ], 0x10, %r65;
	// end inline asm
	cp.async.commit_group;
	cp.async.wait_group 	2;
	bar.sync 	0;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r205, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r206, %r173, 4, 14;
	cvt.u64.u32 	%rd42, %r206;
	or.b64 	%rd17, %rd42, -9223371899399045120;
	shl.b32 	%r207, %r205, 9;
	and.b32 	%r208, %r207, 2048;
	add.s32 	%r209, %r208, %r173;
	bfe.u32 	%r210, %r209, 4, 14;
	cvt.u64.u32 	%rd43, %r210;
	or.b64 	%rd18, %rd43, -9223371899399045120;
	mov.b32 	%r84, 0;
	mov.pred 	%p5, -1;
	mov.b32 	%r605, %r84;
	mov.b32 	%r606, %r84;
	mov.b32 	%r607, %r84;
	mov.b32 	%r608, %r84;
	mov.b32 	%r609, %r84;
	mov.b32 	%r610, %r84;
	mov.b32 	%r611, %r84;
	mov.b32 	%r612, %r84;
	mov.b32 	%r613, %r84;
	mov.b32 	%r614, %r84;
	mov.b32 	%r615, %r84;
	mov.b32 	%r616, %r84;
	mov.b32 	%r617, %r84;
	mov.b32 	%r618, %r84;
	mov.b32 	%r619, %r84;
	mov.b32 	%r620, %r84;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620}, %rd17, %rd18, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r211, %r173, 32;
	bfe.u32 	%r212, %r211, 4, 14;
	cvt.u64.u32 	%rd44, %r212;
	or.b64 	%rd19, %rd44, -9223371899399045120;
	add.s32 	%r213, %r208, %r211;
	bfe.u32 	%r214, %r213, 4, 14;
	cvt.u64.u32 	%rd45, %r214;
	or.b64 	%rd20, %rd45, -9223371899399045120;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620}, %rd19, %rd20, %p5, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r148, %r173;
	mov.b32 	%r151, %r173;
	mov.b32 	%r149, %r84;
	mov.b32 	%r150, %r84;
	mov.b32 	%r152, %r84;
	mov.b32 	%r153, %r84;
	// begin inline asm
	// wait for regs: %r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620,%r148,%r149,%r150,%r151,%r152,%r153
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd21, %rd14, 192;
	bar.sync 	0;
	add.s32 	%r176, %r62, 12288;
	// begin inline asm
	cp.async.cg.shared.global [ %r176 + 0 ], [ %rd21 + 0 ], 0x10, %r65;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	and.b32 	%r215, %r1, 3;
	mul.wide.u32 	%rd46, %r215, 16;
	or.b64 	%rd47, %rd39, %rd46;
	shr.u32 	%r216, %r181, 5;
	mul.lo.s32 	%r217, %r61, %r216;
	shl.b32 	%r218, %r217, 12;
	shl.b32 	%r219, %r183, 7;
	or.b32 	%r220, %r218, %r219;
	mul.wide.s32 	%rd48, %r220, 2;
	add.s64 	%rd49, %rd47, %rd48;
	add.s64 	%rd50, %rd49, %rd23;
	add.s64 	%rd7, %rd50, 256;
	mov.b32 	%r604, 3;
	mov.b64 	%rd107, 0;
	mov.b32 	%r603, %r84;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	add.s32 	%r331, %r603, 1;
	setp.gt.s32 	%p13, %r331, 3;
	selp.b32 	%r603, 0, %r331, %p13;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r332, %r603, 12;
	add.s32 	%r304, %r173, %r332;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r334, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r335, %r304, 4, 14;
	cvt.u64.u32 	%rd56, %r335;
	or.b64 	%rd51, %rd56, -9223371899399045120;
	shl.b32 	%r336, %r334, 9;
	and.b32 	%r337, %r336, 2048;
	add.s32 	%r338, %r337, %r304;
	bfe.u32 	%r339, %r338, 4, 14;
	cvt.u64.u32 	%rd57, %r339;
	or.b64 	%rd52, %rd57, -9223371899399045120;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620}, %rd51, %rd52, %p5, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r340, %r304, 32;
	bfe.u32 	%r341, %r340, 4, 14;
	cvt.u64.u32 	%rd58, %r341;
	or.b64 	%rd53, %rd58, -9223371899399045120;
	add.s32 	%r342, %r340, %r337;
	bfe.u32 	%r343, %r342, 4, 14;
	cvt.u64.u32 	%rd59, %r343;
	or.b64 	%rd54, %rd59, -9223371899399045120;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620}, %rd53, %rd54, %p5, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r302, %r84;
	mov.b32 	%r303, %r84;
	mov.b32 	%r305, %r84;
	mov.b32 	%r306, %r84;
	mov.b32 	%r301, %r304;
	// begin inline asm
	// wait for regs: %r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620,%r301,%r302,%r303,%r304,%r305,%r306
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r344, %r604, 1;
	setp.gt.s32 	%p14, %r344, 3;
	selp.b32 	%r604, 0, %r344, %p14;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	add.s64 	%rd55, %rd7, %rd107;
	shl.b32 	%r345, %r604, 12;
	bar.sync 	0;
	add.s32 	%r329, %r62, %r345;
	// begin inline asm
	cp.async.cg.shared.global [ %r329 + 0 ], [ %rd55 + 0 ], 0x10, %r84;
	// end inline asm
	cp.async.commit_group;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s64 	%rd107, %rd107, 64;
	setp.ne.s64 	%p15, %rd107, 192;
	@%p15 bra 	$L__BB0_1;
// %bb.2:                               // %.loopexit
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r404, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p30, %r404, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r405, %r1, 1;
	and.b32 	%r406, %r405, 6;
	shr.u32 	%r407, %r1, 4;
	shl.b32 	%r408, %r1, 2;
	and.b32 	%r409, %r408, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r410, %r6, %r404;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p31, %r410, %r61;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r411, %r5, %r404;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p32, %r411, %r61;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r605,%r606,%r607,%r608,%r609,%r610,%r611,%r612,%r613,%r614,%r615,%r616,%r617,%r618,%r619,%r620
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd74, %rd1, 2;
	add.s64 	%rd75, %rd10, %rd74;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd76, %rd2, 2;
	add.s64 	%rd77, %rd75, %rd76;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd78, %rd5, 2;
	add.s64 	%rd60, %rd77, %rd78;
	shl.b64 	%rd79, %rd6, 2;
	add.s64 	%rd61, %rd77, %rd79;
	// begin inline asm
	mov.u32 %r378, 0x0;
	@%p16 ld.global.b32 { %r378 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r379, 0x0;
	@%p17 ld.global.b32 { %r379 }, [ %rd61 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r412, %rs3;
	cvt.f32.bf16 	%r413, %rs4;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r414, %r7, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd80, %r414, 4;
	add.s64 	%rd81, %rd11, %rd80;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r415, %r1, 4, 4;
	or.b32 	%r416, %r407, %r404;
	or.b32 	%r417, %r406, %r4;
	or.b32 	%r418, %r417, 25;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd82, %r418;
	or.b64 	%rd83, %rd82, %rd4;
	setp.lt.s64 	%p33, %rd83, %rd3;
	and.pred 	%p25, %p30, %p33;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r419, %r417, 24;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd84, %r419;
	or.b64 	%rd85, %rd84, %rd4;
	setp.lt.s64 	%p34, %rd85, %rd3;
	and.pred 	%p24, %p30, %p34;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r420, %r417, 17;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd86, %r420;
	or.b64 	%rd87, %rd86, %rd4;
	setp.lt.s64 	%p35, %rd87, %rd3;
	and.pred 	%p23, %p30, %p35;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r421, %r417, 16;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd88, %r421;
	or.b64 	%rd89, %rd88, %rd4;
	setp.lt.s64 	%p36, %rd89, %rd3;
	and.pred 	%p22, %p30, %p36;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r422, %r417, 9;
	or.b32 	%r423, %r417, 8;
	or.b32 	%r424, %r417, 1;
	or.b32 	%r425, %r415, %r404;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r426, %r425, 16;
	or.b32 	%r427, %r425, 32;
	or.b32 	%r428, %r416, 48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p37, %r428, %r61;
	setp.lt.s32 	%p38, %r427, %r61;
	setp.lt.s32 	%p39, %r426, %r61;
	setp.lt.s32 	%p40, %r425, %r61;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r429, %r422, %r404;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p41, %r429, %r61;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p21, %p30, %p41;
	or.b32 	%r430, %r423, %r404;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p42, %r430, %r61;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p20, %p30, %p42;
	or.b32 	%r431, %r424, %r404;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p43, %r431, %r61;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p19, %p30, %p43;
	or.b32 	%r432, %r417, %r404;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p44, %r432, %r61;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p18, %p30, %p44;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r433, %r421, %r404;
	or.b32 	%r434, %r420, %r404;
	or.b32 	%r435, %r419, %r404;
	or.b32 	%r436, %r418, %r404;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p45, %r436, %r61;
	setp.lt.s32 	%p46, %r435, %r61;
	setp.lt.s32 	%p47, %r434, %r61;
	setp.lt.s32 	%p48, %r433, %r61;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd90, %r432, 128;
	add.s64 	%rd62, %rd77, %rd90;
	mul.wide.s32 	%rd91, %r431, 128;
	add.s64 	%rd63, %rd77, %rd91;
	mul.wide.s32 	%rd92, %r430, 128;
	add.s64 	%rd64, %rd77, %rd92;
	mul.wide.s32 	%rd93, %r429, 128;
	add.s64 	%rd65, %rd77, %rd93;
	shl.b64 	%rd94, %rd89, 7;
	add.s64 	%rd66, %rd77, %rd94;
	shl.b64 	%rd95, %rd87, 7;
	add.s64 	%rd67, %rd77, %rd95;
	shl.b64 	%rd96, %rd85, 7;
	add.s64 	%rd68, %rd77, %rd96;
	shl.b64 	%rd97, %rd83, 7;
	add.s64 	%rd69, %rd77, %rd97;
	// begin inline asm
	mov.u32 %r380, 0x0;
	@%p18 ld.global.b32 { %r380 }, [ %rd62 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r381, 0x0;
	@%p19 ld.global.b32 { %r381 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r382, 0x0;
	@%p20 ld.global.b32 { %r382 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r383, 0x0;
	@%p21 ld.global.b32 { %r383 }, [ %rd65 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r384, 0x0;
	@%p22 ld.global.b32 { %r384 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r385, 0x0;
	@%p23 ld.global.b32 { %r385 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r386, 0x0;
	@%p24 ld.global.b32 { %r386 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r387, 0x0;
	@%p25 ld.global.b32 { %r387 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r437, %r378, %r380;
	sub.f32 	%r438, %r378, %r381;
	sub.f32 	%r439, %r379, %r380;
	sub.f32 	%r440, %r379, %r381;
	sub.f32 	%r441, %r378, %r382;
	sub.f32 	%r442, %r378, %r383;
	sub.f32 	%r443, %r379, %r382;
	sub.f32 	%r444, %r379, %r383;
	sub.f32 	%r445, %r378, %r384;
	sub.f32 	%r446, %r378, %r385;
	sub.f32 	%r447, %r379, %r384;
	sub.f32 	%r448, %r379, %r385;
	sub.f32 	%r449, %r378, %r386;
	sub.f32 	%r450, %r378, %r387;
	sub.f32 	%r451, %r379, %r386;
	sub.f32 	%r452, %r379, %r387;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r453, %r437, 0f3FB8AA3B;
	ex2.approx.f32 	%r454, %r453;
	mul.f32 	%r455, %r438, 0f3FB8AA3B;
	ex2.approx.f32 	%r456, %r455;
	mul.f32 	%r457, %r439, 0f3FB8AA3B;
	ex2.approx.f32 	%r458, %r457;
	mul.f32 	%r459, %r440, 0f3FB8AA3B;
	ex2.approx.f32 	%r460, %r459;
	mul.f32 	%r461, %r441, 0f3FB8AA3B;
	ex2.approx.f32 	%r462, %r461;
	mul.f32 	%r463, %r442, 0f3FB8AA3B;
	ex2.approx.f32 	%r464, %r463;
	mul.f32 	%r465, %r443, 0f3FB8AA3B;
	ex2.approx.f32 	%r466, %r465;
	mul.f32 	%r467, %r444, 0f3FB8AA3B;
	ex2.approx.f32 	%r468, %r467;
	mul.f32 	%r469, %r445, 0f3FB8AA3B;
	ex2.approx.f32 	%r470, %r469;
	mul.f32 	%r471, %r446, 0f3FB8AA3B;
	ex2.approx.f32 	%r472, %r471;
	mul.f32 	%r473, %r447, 0f3FB8AA3B;
	ex2.approx.f32 	%r474, %r473;
	mul.f32 	%r475, %r448, 0f3FB8AA3B;
	ex2.approx.f32 	%r476, %r475;
	mul.f32 	%r477, %r449, 0f3FB8AA3B;
	ex2.approx.f32 	%r478, %r477;
	mul.f32 	%r479, %r450, 0f3FB8AA3B;
	ex2.approx.f32 	%r480, %r479;
	mul.f32 	%r481, %r451, 0f3FB8AA3B;
	ex2.approx.f32 	%r482, %r481;
	mul.f32 	%r483, %r452, 0f3FB8AA3B;
	ex2.approx.f32 	%r484, %r483;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r485, %r605, %r454;
	mul.f32 	%r486, %r606, %r456;
	mul.f32 	%r487, %r607, %r458;
	mul.f32 	%r488, %r608, %r460;
	mul.f32 	%r489, %r609, %r462;
	mul.f32 	%r490, %r610, %r464;
	mul.f32 	%r491, %r611, %r466;
	mul.f32 	%r492, %r612, %r468;
	mul.f32 	%r493, %r613, %r470;
	mul.f32 	%r494, %r614, %r472;
	mul.f32 	%r495, %r615, %r474;
	mul.f32 	%r496, %r616, %r476;
	mul.f32 	%r497, %r617, %r478;
	mul.f32 	%r498, %r618, %r480;
	mul.f32 	%r499, %r619, %r482;
	mul.f32 	%r500, %r620, %r484;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r501, %r485, %r412;
	mul.f32 	%r502, %r486, %r412;
	mul.f32 	%r503, %r487, %r413;
	mul.f32 	%r504, %r488, %r413;
	mul.f32 	%r505, %r489, %r412;
	mul.f32 	%r506, %r490, %r412;
	mul.f32 	%r507, %r491, %r413;
	mul.f32 	%r508, %r492, %r413;
	mul.f32 	%r509, %r493, %r412;
	mul.f32 	%r510, %r494, %r412;
	mul.f32 	%r511, %r495, %r413;
	mul.f32 	%r512, %r496, %r413;
	mul.f32 	%r513, %r497, %r412;
	mul.f32 	%r514, %r498, %r412;
	mul.f32 	%r515, %r499, %r413;
	mul.f32 	%r516, %r500, %r413;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p49, %r5, %r417;
	setp.gt.u32 	%p50, %r5, %r424;
	setp.gt.u32 	%p51, %r6, %r417;
	setp.gt.u32 	%p52, %r6, %r424;
	setp.gt.u32 	%p53, %r5, %r423;
	setp.gt.u32 	%p54, %r5, %r422;
	setp.gt.u32 	%p55, %r6, %r422;
	setp.gt.u32 	%p56, %r5, %r421;
	setp.gt.u32 	%p57, %r5, %r420;
	setp.gt.u32 	%p58, %r6, %r421;
	setp.gt.u32 	%p59, %r6, %r420;
	setp.gt.u32 	%p60, %r5, %r419;
	setp.gt.u32 	%p61, %r5, %r418;
	setp.gt.u32 	%p62, %r6, %r419;
	setp.gt.u32 	%p63, %r6, %r418;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd98, %r425, 8192;
	add.s64 	%rd99, %rd81, %rd98;
	mul.wide.u32 	%rd100, %r409, 4;
	add.s64 	%rd70, %rd99, %rd100;
	mul.wide.s32 	%rd101, %r426, 8192;
	add.s64 	%rd102, %rd81, %rd101;
	add.s64 	%rd71, %rd102, %rd100;
	mul.wide.s32 	%rd103, %r427, 8192;
	add.s64 	%rd104, %rd81, %rd103;
	add.s64 	%rd72, %rd104, %rd100;
	mul.wide.s32 	%rd105, %r428, 8192;
	add.s64 	%rd106, %rd81, %rd105;
	add.s64 	%rd73, %rd106, %rd100;
	and.pred 	%p26, %p30, %p40;
	and.pred 	%p27, %p30, %p39;
	and.pred 	%p28, %p30, %p38;
	and.pred 	%p29, %p30, %p37;
	shl.b32 	%r517, %r1, 4;
	and.b32 	%r518, %r517, 448;
	shl.b32 	%r519, %r1, 5;
	and.b32 	%r520, %r519, 3072;
	or.b32 	%r521, %r520, %r518;
	or.b32 	%r522, %r417, %r521;
	and.b32 	%r523, %r408, 508;
	shl.b32 	%r524, %r3, 2;
	or.b32 	%r525, %r523, %r524;
	shr.u32 	%r526, %r521, 2;
	add.s32 	%r528, %r173, %r526;
	shl.b32 	%r529, %r522, 2;
	add.s32 	%r530, %r528, %r529;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r531, %r501, 0, %p44;
	selp.b32 	%r532, %r531, 0, %p49;
	selp.b32 	%r533, %r532, 0, %p32;
	selp.b32 	%r534, %r502, 0, %p43;
	selp.b32 	%r535, %r534, 0, %p50;
	selp.b32 	%r536, %r535, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r530], {%r533, %r536};
	or.b32 	%r537, %r521, 512;
	shr.u32 	%r538, %r537, 2;
	add.s32 	%r539, %r173, %r538;
	add.s32 	%r540, %r539, %r529;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r541, %r503, 0, %p44;
	selp.b32 	%r542, %r541, 0, %p51;
	selp.b32 	%r543, %r542, 0, %p31;
	selp.b32 	%r544, %r504, 0, %p43;
	selp.b32 	%r545, %r544, 0, %p52;
	selp.b32 	%r546, %r545, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r540+2048], {%r543, %r546};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r547, %r505, 0, %p42;
	selp.b32 	%r548, %r547, 0, %p53;
	selp.b32 	%r549, %r548, 0, %p32;
	selp.b32 	%r550, %r506, 0, %p41;
	selp.b32 	%r551, %r550, 0, %p54;
	selp.b32 	%r552, %r551, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r530+32], {%r549, %r552};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r553, %r507, 0, %p42;
	selp.b32 	%r554, %r553, 0, %p49;
	selp.b32 	%r555, %r554, 0, %p31;
	selp.b32 	%r556, %r508, 0, %p41;
	selp.b32 	%r557, %r556, 0, %p55;
	selp.b32 	%r558, %r557, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r540+2080], {%r555, %r558};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r559, %r509, 0, %p48;
	selp.b32 	%r560, %r559, 0, %p56;
	selp.b32 	%r561, %r560, 0, %p32;
	selp.b32 	%r562, %r510, 0, %p47;
	selp.b32 	%r563, %r562, 0, %p57;
	selp.b32 	%r564, %r563, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r530+64], {%r561, %r564};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r565, %r511, 0, %p48;
	selp.b32 	%r566, %r565, 0, %p58;
	selp.b32 	%r567, %r566, 0, %p31;
	selp.b32 	%r568, %r512, 0, %p47;
	selp.b32 	%r569, %r568, 0, %p59;
	selp.b32 	%r570, %r569, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r540+2112], {%r567, %r570};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r571, %r513, 0, %p46;
	selp.b32 	%r572, %r571, 0, %p60;
	selp.b32 	%r573, %r572, 0, %p32;
	selp.b32 	%r574, %r514, 0, %p45;
	selp.b32 	%r575, %r574, 0, %p61;
	selp.b32 	%r576, %r575, 0, %p32;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r530+96], {%r573, %r576};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r577, %r515, 0, %p46;
	selp.b32 	%r578, %r577, 0, %p62;
	selp.b32 	%r579, %r578, 0, %p31;
	selp.b32 	%r580, %r516, 0, %p45;
	selp.b32 	%r581, %r580, 0, %p63;
	selp.b32 	%r582, %r581, 0, %p31;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r540+2144], {%r579, %r582};
	bar.sync 	0;
	shr.u32 	%r583, %r525, 2;
	and.b32 	%r584, %r583, 240;
	add.s32 	%r585, %r173, %r584;
	shl.b32 	%r586, %r525, 2;
	add.s32 	%r587, %r585, %r586;
	or.b32 	%r588, %r525, 1024;
	shr.u32 	%r589, %r588, 2;
	and.b32 	%r590, %r589, 496;
	add.s32 	%r591, %r173, %r590;
	add.s32 	%r592, %r591, %r586;
	ld.shared.v4.b32 	{%r392, %r393, %r394, %r395}, [%r592+4096];
	or.b32 	%r593, %r525, 2048;
	shr.u32 	%r594, %r593, 2;
	and.b32 	%r595, %r594, 752;
	add.s32 	%r596, %r173, %r595;
	add.s32 	%r597, %r596, %r586;
	ld.shared.v4.b32 	{%r396, %r397, %r398, %r399}, [%r597+8192];
	or.b32 	%r598, %r525, 3072;
	shr.u32 	%r599, %r598, 2;
	and.b32 	%r600, %r599, 1008;
	add.s32 	%r601, %r173, %r600;
	add.s32 	%r602, %r601, %r586;
	ld.shared.v4.b32 	{%r400, %r401, %r402, %r403}, [%r602+12288];
	ld.shared.v4.b32 	{%r388, %r389, %r390, %r391}, [%r587];
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd70 + 0 ], { %r388, %r389, %r390, %r391 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd71 + 0 ], { %r392, %r393, %r394, %r395 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd72 + 0 ], { %r396, %r397, %r398, %r399 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd73 + 0 ], { %r400, %r401, %r402, %r403 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
