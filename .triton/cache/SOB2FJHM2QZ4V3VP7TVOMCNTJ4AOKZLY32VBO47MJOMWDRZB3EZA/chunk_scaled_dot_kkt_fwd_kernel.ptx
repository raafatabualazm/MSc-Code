//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 128
{
	.reg .pred 	%p<114>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<983>;
	.reg .b64 	%rd<152>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r79, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd14, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd13, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd22, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r91, %ctaid.x;
	ld.param.b64 	%rd23, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r92, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r93, %r92, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r94, %r92, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r95, %r91, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r96, %r1, 5, 1;
	bfe.u32 	%r97, %r1, 3, 4;
	or.b32 	%r98, %r97, 16;
	or.b32 	%r99, %r97, 32;
	or.b32 	%r100, %r97, 48;
	shr.u32 	%r3, %r1, 2;
	bfe.u32 	%r101, %r1, 2, 3;
	shr.u32 	%r102, %r1, 1;
	and.b32 	%r103, %r102, 48;
	or.b32 	%r4, %r103, %r101;
	or.b32 	%r5, %r4, 8;
	shl.b32 	%r104, %r1, 3;
	and.b32 	%r105, %r104, 56;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r106, %r93, %r79;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r106;
	mul.wide.s32 	%rd24, %r106, 2;
	add.s64 	%rd25, %rd23, %rd24;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r94;
	mul.wide.u32 	%rd26, %r94, 2;
	add.s64 	%rd27, %rd25, %rd26;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r79;
	cvt.s64.s32 	%rd4, %r95;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd28, %r97;
	cvt.u64.u32 	%rd29, %r98;
	cvt.u64.u32 	%rd30, %r99;
	cvt.u64.u32 	%rd31, %r100;
	cvt.u64.u32 	%rd32, %r4;
	cvt.u64.u32 	%rd33, %r5;
	cvt.u64.u32 	%rd5, %r105;
	or.b64 	%rd34, %rd28, %rd4;
	or.b64 	%rd35, %rd29, %rd4;
	or.b64 	%rd36, %rd30, %rd4;
	or.b64 	%rd37, %rd31, %rd4;
	or.b64 	%rd38, %rd32, %rd4;
	or.b64 	%rd39, %rd33, %rd4;
	shl.b64 	%rd6, %rd38, 5;
	shl.b64 	%rd7, %rd39, 5;
	shl.b64 	%rd40, %rd38, 6;
	add.s64 	%rd15, %rd27, %rd40;
	shl.b64 	%rd41, %rd39, 6;
	add.s64 	%rd16, %rd27, %rd41;
	setp.gt.s32 	%p11, %r95, -1;
	setp.lt.s64 	%p12, %rd38, %rd3;
	setp.lt.s64 	%p13, %rd39, %rd3;
	and.pred 	%p25, %p11, %p12;
	and.pred 	%p26, %p11, %p13;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p25 ld.global.b16 { %rs3 }, [ %rd15 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p26 ld.global.b16 { %rs4 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r106, %r94;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r107, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd42, %r107, 2;
	add.s64 	%rd43, %rd22, %rd42;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p14, %rd34, %rd3;
	setp.lt.s64 	%p15, %rd35, %rd3;
	setp.lt.s64 	%p16, %rd36, %rd3;
	setp.lt.s64 	%p17, %rd37, %rd3;
	and.pred 	%p3, %p11, %p14;
	and.pred 	%p4, %p11, %p15;
	and.pred 	%p5, %p11, %p16;
	and.pred 	%p6, %p11, %p17;
	shl.b64 	%rd44, %rd34, 13;
	add.s64 	%rd8, %rd43, %rd44;
	mul.wide.u32 	%rd45, %r105, 2;
	add.s64 	%rd17, %rd8, %rd45;
	shl.b64 	%rd46, %rd35, 13;
	add.s64 	%rd9, %rd43, %rd46;
	add.s64 	%rd18, %rd9, %rd45;
	shl.b64 	%rd47, %rd36, 13;
	add.s64 	%rd10, %rd43, %rd47;
	add.s64 	%rd19, %rd10, %rd45;
	shl.b64 	%rd48, %rd37, 13;
	add.s64 	%rd11, %rd43, %rd48;
	add.s64 	%rd20, %rd11, %rd45;
	and.b32 	%r108, %r96, 288;
	and.b32 	%r109, %r1, 24;
	mul.lo.s32 	%r110, %r109, 9;
	xor.b32 	%r111, %r110, %r105;
	xor.b32 	%r112, %r111, %r108;
	and.b32 	%r113, %r104, 512;
	or.b32 	%r7, %r112, %r113;
	shl.b32 	%r114, %r7, 1;
	mov.b32 	%r115, global_smem;
	add.s32 	%r80, %r115, %r114;
	or.b32 	%r116, %r105, 1024;
	xor.b32 	%r117, %r110, %r116;
	xor.b32 	%r118, %r117, %r108;
	or.b32 	%r8, %r118, %r113;
	shl.b32 	%r119, %r8, 1;
	add.s32 	%r82, %r115, %r119;
	or.b32 	%r120, %r105, 2048;
	xor.b32 	%r121, %r110, %r120;
	xor.b32 	%r122, %r121, %r108;
	or.b32 	%r9, %r122, %r113;
	shl.b32 	%r123, %r9, 1;
	add.s32 	%r84, %r115, %r123;
	or.b32 	%r124, %r105, 3072;
	xor.b32 	%r125, %r110, %r124;
	xor.b32 	%r126, %r125, %r108;
	or.b32 	%r10, %r126, %r113;
	shl.b32 	%r127, %r10, 1;
	add.s32 	%r86, %r115, %r127;
	selp.b32 	%r81, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r80 + 0 ], [ %rd17 + 0 ], 0x10, %r81;
	// end inline asm
	selp.b32 	%r83, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r82 + 0 ], [ %rd18 + 0 ], 0x10, %r83;
	// end inline asm
	selp.b32 	%r85, 16, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r84 + 0 ], [ %rd19 + 0 ], 0x10, %r85;
	// end inline asm
	selp.b32 	%r87, 16, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r86 + 0 ], [ %rd20 + 0 ], 0x10, %r87;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r951, 0f00000000;
	mov.b32 	%r455, 0;
	mov.b32 	%r949, -1;
	mov.b64 	%rd151, 64;
	mov.pred 	%p18, -1;
	mov.pred 	%p113, %p18;
	mov.b32 	%r950, %r455;
	mov.b32 	%r952, %r951;
	mov.b32 	%r953, %r951;
	mov.b32 	%r954, %r951;
	mov.b32 	%r955, %r951;
	mov.b32 	%r956, %r951;
	mov.b32 	%r957, %r951;
	mov.b32 	%r958, %r951;
	mov.b32 	%r959, %r951;
	mov.b32 	%r960, %r951;
	mov.b32 	%r961, %r951;
	mov.b32 	%r962, %r951;
	mov.b32 	%r963, %r951;
	mov.b32 	%r964, %r951;
	mov.b32 	%r965, %r951;
	mov.b32 	%r966, %r951;
	mov.b32 	%r967, %r951;
	mov.b32 	%r968, %r951;
	mov.b32 	%r969, %r951;
	mov.b32 	%r970, %r951;
	mov.b32 	%r971, %r951;
	mov.b32 	%r972, %r951;
	mov.b32 	%r973, %r951;
	mov.b32 	%r974, %r951;
	mov.b32 	%r975, %r951;
	mov.b32 	%r976, %r951;
	mov.b32 	%r977, %r951;
	mov.b32 	%r978, %r951;
	mov.b32 	%r979, %r951;
	mov.b32 	%r980, %r951;
	mov.b32 	%r981, %r951;
	mov.b32 	%r982, %r951;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p7, %p113;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r468, %r949, 1;
	setp.gt.s32 	%p23, %r468, 1;
	selp.b32 	%r949, 0, %r468, %p23;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	0;
	bar.sync 	0;
	shl.b32 	%r469, %r949, 13;
	add.s32 	%r419, %r115, %r469;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r471, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r472, %r419, 4, 14;
	cvt.u64.u32 	%rd62, %r472;
	or.b64 	%rd49, %rd62, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982}, %rd49, %rd49, %p18, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r473, %r419, 32;
	bfe.u32 	%r474, %r473, 4, 14;
	cvt.u64.u32 	%rd63, %r474;
	or.b64 	%rd51, %rd63, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982}, %rd51, %rd51, %p18, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r475, %r419, 64;
	bfe.u32 	%r476, %r475, 4, 14;
	cvt.u64.u32 	%rd64, %r476;
	or.b64 	%rd53, %rd64, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982}, %rd53, %rd53, %p18, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r477, %r419, 96;
	bfe.u32 	%r478, %r477, 4, 14;
	cvt.u64.u32 	%rd65, %r478;
	or.b64 	%rd55, %rd65, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {%r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982}, %rd55, %rd55, %p18, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r421, %r455;
	mov.b32 	%r417, %r455;
	mov.b32 	%r418, %r455;
	mov.b32 	%r420, %r455;
	mov.b32 	%r416, %r419;
	// begin inline asm
	// wait for regs: %r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982,%r416,%r417,%r418,%r419,%r420,%r421
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r479, %r950, 1;
	setp.gt.s32 	%p24, %r479, 1;
	selp.b32 	%r950, 0, %r479, %p24;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	or.b64 	%rd66, %rd151, %rd5;
	shl.b64 	%rd67, %rd66, 1;
	add.s64 	%rd57, %rd8, %rd67;
	add.s64 	%rd58, %rd9, %rd67;
	add.s64 	%rd59, %rd10, %rd67;
	add.s64 	%rd60, %rd11, %rd67;
	shl.b32 	%r480, %r950, 13;
	add.s32 	%r481, %r115, %r480;
	bar.sync 	0;
	add.s32 	%r460, %r481, %r114;
	add.s32 	%r462, %r481, %r119;
	add.s32 	%r464, %r481, %r123;
	add.s32 	%r466, %r481, %r127;
	selp.b32 	%r486, 16, 0, %p7;
	selp.b32 	%r461, %r486, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r460 + 0 ], [ %rd57 + 0 ], 0x10, %r461;
	// end inline asm
	selp.b32 	%r463, %r486, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r462 + 0 ], [ %rd58 + 0 ], 0x10, %r463;
	// end inline asm
	selp.b32 	%r465, %r486, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r464 + 0 ], [ %rd59 + 0 ], 0x10, %r465;
	// end inline asm
	selp.b32 	%r467, %r486, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r466 + 0 ], [ %rd60 + 0 ], 0x10, %r467;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd151, 128;
	mov.pred 	%p113, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p7 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r601, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p51, %r601, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r602, %r1, 1;
	and.b32 	%r603, %r602, 6;
	or.b32 	%r604, %r603, 57;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd94, %r604;
	or.b64 	%rd95, %rd94, %rd4;
	setp.lt.s64 	%p52, %rd95, %rd3;
	and.pred 	%p42, %p51, %p52;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r605, %r603, 56;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd96, %r605;
	or.b64 	%rd97, %rd96, %rd4;
	setp.lt.s64 	%p53, %rd97, %rd3;
	and.pred 	%p41, %p51, %p53;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r606, %r603, 1;
	shr.u32 	%r607, %r1, 4;
	bfe.u32 	%r608, %r1, 4, 3;
	shl.b32 	%r609, %r1, 2;
	and.b32 	%r610, %r609, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r611, %r604, %r601;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p54, %r611, %r79;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r612, %r605, %r601;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p55, %r612, %r79;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r613, %r603, 25;
	or.b32 	%r614, %r603, 24;
	or.b32 	%r615, %r603, 32;
	or.b32 	%r616, %r603, 33;
	or.b32 	%r617, %r603, 40;
	or.b32 	%r618, %r603, 41;
	or.b32 	%r619, %r603, 48;
	or.b32 	%r620, %r603, 49;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd98, %r620;
	or.b64 	%rd99, %rd98, %rd4;
	setp.lt.s64 	%p56, %rd99, %rd3;
	and.pred 	%p40, %p51, %p56;
	cvt.u64.u32 	%rd100, %r619;
	or.b64 	%rd101, %rd100, %rd4;
	setp.lt.s64 	%p57, %rd101, %rd3;
	and.pred 	%p39, %p51, %p57;
	cvt.u64.u32 	%rd102, %r618;
	or.b64 	%rd103, %rd102, %rd4;
	setp.lt.s64 	%p58, %rd103, %rd3;
	and.pred 	%p38, %p51, %p58;
	cvt.u64.u32 	%rd104, %r617;
	or.b64 	%rd105, %rd104, %rd4;
	setp.lt.s64 	%p59, %rd105, %rd3;
	and.pred 	%p37, %p51, %p59;
	cvt.u64.u32 	%rd106, %r616;
	or.b64 	%rd107, %rd106, %rd4;
	setp.lt.s64 	%p60, %rd107, %rd3;
	and.pred 	%p36, %p51, %p60;
	cvt.u64.u32 	%rd108, %r615;
	or.b64 	%rd109, %rd108, %rd4;
	setp.lt.s64 	%p61, %rd109, %rd3;
	and.pred 	%p35, %p51, %p61;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r621, %r603, 17;
	or.b32 	%r622, %r603, 16;
	or.b32 	%r623, %r603, 9;
	or.b32 	%r624, %r603, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r625, %r4, %r601;
	or.b32 	%r626, %r5, %r601;
	or.b32 	%r627, %r615, %r601;
	or.b32 	%r628, %r616, %r601;
	or.b32 	%r629, %r617, %r601;
	or.b32 	%r630, %r618, %r601;
	or.b32 	%r631, %r619, %r601;
	or.b32 	%r632, %r620, %r601;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p62, %r632, %r79;
	setp.lt.s32 	%p63, %r631, %r79;
	setp.lt.s32 	%p64, %r630, %r79;
	setp.lt.s32 	%p65, %r629, %r79;
	setp.lt.s32 	%p66, %r628, %r79;
	setp.lt.s32 	%p67, %r627, %r79;
	setp.lt.s32 	%p68, %r626, %r79;
	setp.lt.s32 	%p69, %r625, %r79;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r951,%r952,%r953,%r954,%r955,%r956,%r957,%r958,%r959,%r960,%r961,%r962,%r963,%r964,%r965,%r966,%r967,%r968,%r969,%r970,%r971,%r972,%r973,%r974,%r975,%r976,%r977,%r978,%r979,%r980,%r981,%r982
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd110, %rd1, 2;
	add.s64 	%rd111, %rd13, %rd110;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd112, %rd2, 2;
	add.s64 	%rd113, %rd111, %rd112;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd114, %rd6, 2;
	add.s64 	%rd68, %rd113, %rd114;
	shl.b64 	%rd115, %rd7, 2;
	add.s64 	%rd69, %rd113, %rd115;
	shl.b64 	%rd116, %rd109, 7;
	add.s64 	%rd78, %rd113, %rd116;
	shl.b64 	%rd117, %rd107, 7;
	add.s64 	%rd79, %rd113, %rd117;
	shl.b64 	%rd118, %rd105, 7;
	add.s64 	%rd80, %rd113, %rd118;
	shl.b64 	%rd119, %rd103, 7;
	add.s64 	%rd81, %rd113, %rd119;
	shl.b64 	%rd120, %rd101, 7;
	add.s64 	%rd82, %rd113, %rd120;
	shl.b64 	%rd121, %rd99, 7;
	add.s64 	%rd83, %rd113, %rd121;
	shl.b64 	%rd122, %rd97, 7;
	add.s64 	%rd84, %rd113, %rd122;
	shl.b64 	%rd123, %rd95, 7;
	add.s64 	%rd85, %rd113, %rd123;
	// begin inline asm
	mov.u32 %r551, 0x0;
	@%p25 ld.global.b32 { %r551 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r552, 0x0;
	@%p26 ld.global.b32 { %r552 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r633, %rs3;
	cvt.f32.bf16 	%r634, %rs4;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p70, %r4, %r603;
	setp.gt.u32 	%p71, %r4, %r606;
	setp.gt.u32 	%p72, %r4, %r624;
	setp.gt.u32 	%p73, %r4, %r623;
	setp.gt.u32 	%p74, %r5, %r623;
	setp.gt.u32 	%p75, %r4, %r622;
	setp.gt.u32 	%p76, %r4, %r621;
	setp.gt.u32 	%p77, %r5, %r622;
	setp.gt.u32 	%p78, %r5, %r621;
	setp.gt.u32 	%p79, %r4, %r614;
	setp.gt.u32 	%p80, %r4, %r613;
	setp.gt.u32 	%p81, %r5, %r614;
	setp.gt.u32 	%p82, %r5, %r613;
	setp.gt.u32 	%p83, %r4, %r615;
	setp.gt.u32 	%p84, %r4, %r616;
	setp.gt.u32 	%p85, %r5, %r615;
	setp.gt.u32 	%p86, %r5, %r616;
	setp.gt.u32 	%p87, %r4, %r617;
	setp.gt.u32 	%p88, %r4, %r618;
	setp.gt.u32 	%p89, %r5, %r617;
	setp.gt.u32 	%p90, %r5, %r618;
	setp.gt.u32 	%p91, %r4, %r619;
	setp.gt.u32 	%p92, %r4, %r620;
	setp.gt.u32 	%p93, %r5, %r619;
	setp.gt.u32 	%p94, %r5, %r620;
	setp.gt.u32 	%p95, %r5, %r605;
	setp.gt.u32 	%p96, %r5, %r604;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r635, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd124, %r635, 4;
	add.s64 	%rd125, %rd14, %rd124;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r636, %r607, %r601;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r637, %r606, %r601;
	or.b32 	%r638, %r603, %r601;
	or.b32 	%r639, %r613, %r601;
	or.b32 	%r640, %r614, %r601;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r641, %r621, %r601;
	or.b32 	%r642, %r622, %r601;
	or.b32 	%r643, %r623, %r601;
	or.b32 	%r644, %r624, %r601;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r645, %r608, %r601;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r646, %r645, 8;
	or.b32 	%r647, %r645, 16;
	or.b32 	%r648, %r645, 24;
	or.b32 	%r649, %r645, 32;
	or.b32 	%r650, %r645, 40;
	or.b32 	%r651, %r645, 48;
	or.b32 	%r652, %r636, 56;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p97, %r652, %r79;
	setp.lt.s32 	%p98, %r651, %r79;
	setp.lt.s32 	%p99, %r650, %r79;
	setp.lt.s32 	%p100, %r649, %r79;
	setp.lt.s32 	%p101, %r648, %r79;
	setp.lt.s32 	%p102, %r647, %r79;
	setp.lt.s32 	%p103, %r646, %r79;
	setp.lt.s32 	%p104, %r645, %r79;
	setp.lt.s32 	%p105, %r644, %r79;
	setp.lt.s32 	%p106, %r643, %r79;
	setp.lt.s32 	%p107, %r642, %r79;
	setp.lt.s32 	%p108, %r641, %r79;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p109, %r640, %r79;
	setp.lt.s32 	%p110, %r639, %r79;
	setp.lt.s32 	%p111, %r638, %r79;
	setp.lt.s32 	%p112, %r637, %r79;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p28, %p51, %p112;
	and.pred 	%p27, %p51, %p111;
	and.pred 	%p34, %p51, %p110;
	and.pred 	%p33, %p51, %p109;
	and.pred 	%p32, %p51, %p108;
	and.pred 	%p31, %p51, %p107;
	and.pred 	%p30, %p51, %p106;
	and.pred 	%p29, %p51, %p105;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd126, %r638, 128;
	add.s64 	%rd70, %rd113, %rd126;
	mul.wide.s32 	%rd127, %r637, 128;
	add.s64 	%rd71, %rd113, %rd127;
	mul.wide.s32 	%rd128, %r644, 128;
	add.s64 	%rd72, %rd113, %rd128;
	mul.wide.s32 	%rd129, %r643, 128;
	add.s64 	%rd73, %rd113, %rd129;
	mul.wide.s32 	%rd130, %r642, 128;
	add.s64 	%rd74, %rd113, %rd130;
	mul.wide.s32 	%rd131, %r641, 128;
	add.s64 	%rd75, %rd113, %rd131;
	mul.wide.s32 	%rd132, %r640, 128;
	add.s64 	%rd76, %rd113, %rd132;
	mul.wide.s32 	%rd133, %r639, 128;
	add.s64 	%rd77, %rd113, %rd133;
	// begin inline asm
	mov.u32 %r553, 0x0;
	@%p27 ld.global.b32 { %r553 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r554, 0x0;
	@%p28 ld.global.b32 { %r554 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r555, 0x0;
	@%p29 ld.global.b32 { %r555 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r556, 0x0;
	@%p30 ld.global.b32 { %r556 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r557, 0x0;
	@%p31 ld.global.b32 { %r557 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r558, 0x0;
	@%p32 ld.global.b32 { %r558 }, [ %rd75 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r559, 0x0;
	@%p33 ld.global.b32 { %r559 }, [ %rd76 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r560, 0x0;
	@%p34 ld.global.b32 { %r560 }, [ %rd77 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r561, 0x0;
	@%p35 ld.global.b32 { %r561 }, [ %rd78 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r562, 0x0;
	@%p36 ld.global.b32 { %r562 }, [ %rd79 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r563, 0x0;
	@%p37 ld.global.b32 { %r563 }, [ %rd80 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r564, 0x0;
	@%p38 ld.global.b32 { %r564 }, [ %rd81 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r565, 0x0;
	@%p39 ld.global.b32 { %r565 }, [ %rd82 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r566, 0x0;
	@%p40 ld.global.b32 { %r566 }, [ %rd83 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r567, 0x0;
	@%p41 ld.global.b32 { %r567 }, [ %rd84 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r568, 0x0;
	@%p42 ld.global.b32 { %r568 }, [ %rd85 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r653, %r551, %r553;
	sub.f32 	%r654, %r551, %r554;
	sub.f32 	%r655, %r552, %r553;
	sub.f32 	%r656, %r552, %r554;
	sub.f32 	%r657, %r551, %r555;
	sub.f32 	%r658, %r551, %r556;
	sub.f32 	%r659, %r552, %r555;
	sub.f32 	%r660, %r552, %r556;
	sub.f32 	%r661, %r551, %r557;
	sub.f32 	%r662, %r551, %r558;
	sub.f32 	%r663, %r552, %r557;
	sub.f32 	%r664, %r552, %r558;
	sub.f32 	%r665, %r551, %r559;
	sub.f32 	%r666, %r551, %r560;
	sub.f32 	%r667, %r552, %r559;
	sub.f32 	%r668, %r552, %r560;
	sub.f32 	%r669, %r551, %r561;
	sub.f32 	%r670, %r551, %r562;
	sub.f32 	%r671, %r552, %r561;
	sub.f32 	%r672, %r552, %r562;
	sub.f32 	%r673, %r551, %r563;
	sub.f32 	%r674, %r551, %r564;
	sub.f32 	%r675, %r552, %r563;
	sub.f32 	%r676, %r552, %r564;
	sub.f32 	%r677, %r551, %r565;
	sub.f32 	%r678, %r551, %r566;
	sub.f32 	%r679, %r552, %r565;
	sub.f32 	%r680, %r552, %r566;
	sub.f32 	%r681, %r552, %r567;
	sub.f32 	%r682, %r552, %r568;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r683, %r653, 0f3FB8AA3B;
	ex2.approx.f32 	%r684, %r683;
	mul.f32 	%r685, %r654, 0f3FB8AA3B;
	ex2.approx.f32 	%r686, %r685;
	mul.f32 	%r687, %r655, 0f3FB8AA3B;
	ex2.approx.f32 	%r688, %r687;
	mul.f32 	%r689, %r656, 0f3FB8AA3B;
	ex2.approx.f32 	%r690, %r689;
	mul.f32 	%r691, %r657, 0f3FB8AA3B;
	ex2.approx.f32 	%r692, %r691;
	mul.f32 	%r693, %r658, 0f3FB8AA3B;
	ex2.approx.f32 	%r694, %r693;
	mul.f32 	%r695, %r659, 0f3FB8AA3B;
	ex2.approx.f32 	%r696, %r695;
	mul.f32 	%r697, %r660, 0f3FB8AA3B;
	ex2.approx.f32 	%r698, %r697;
	mul.f32 	%r699, %r661, 0f3FB8AA3B;
	ex2.approx.f32 	%r700, %r699;
	mul.f32 	%r701, %r662, 0f3FB8AA3B;
	ex2.approx.f32 	%r702, %r701;
	mul.f32 	%r703, %r663, 0f3FB8AA3B;
	ex2.approx.f32 	%r704, %r703;
	mul.f32 	%r705, %r664, 0f3FB8AA3B;
	ex2.approx.f32 	%r706, %r705;
	mul.f32 	%r707, %r665, 0f3FB8AA3B;
	ex2.approx.f32 	%r708, %r707;
	mul.f32 	%r709, %r666, 0f3FB8AA3B;
	ex2.approx.f32 	%r710, %r709;
	mul.f32 	%r711, %r667, 0f3FB8AA3B;
	ex2.approx.f32 	%r712, %r711;
	mul.f32 	%r713, %r668, 0f3FB8AA3B;
	ex2.approx.f32 	%r714, %r713;
	mul.f32 	%r715, %r669, 0f3FB8AA3B;
	ex2.approx.f32 	%r716, %r715;
	mul.f32 	%r717, %r670, 0f3FB8AA3B;
	ex2.approx.f32 	%r718, %r717;
	mul.f32 	%r719, %r671, 0f3FB8AA3B;
	ex2.approx.f32 	%r720, %r719;
	mul.f32 	%r721, %r672, 0f3FB8AA3B;
	ex2.approx.f32 	%r722, %r721;
	mul.f32 	%r723, %r673, 0f3FB8AA3B;
	ex2.approx.f32 	%r724, %r723;
	mul.f32 	%r725, %r674, 0f3FB8AA3B;
	ex2.approx.f32 	%r726, %r725;
	mul.f32 	%r727, %r675, 0f3FB8AA3B;
	ex2.approx.f32 	%r728, %r727;
	mul.f32 	%r729, %r676, 0f3FB8AA3B;
	ex2.approx.f32 	%r730, %r729;
	mul.f32 	%r731, %r677, 0f3FB8AA3B;
	ex2.approx.f32 	%r732, %r731;
	mul.f32 	%r733, %r678, 0f3FB8AA3B;
	ex2.approx.f32 	%r734, %r733;
	mul.f32 	%r735, %r679, 0f3FB8AA3B;
	ex2.approx.f32 	%r736, %r735;
	mul.f32 	%r737, %r680, 0f3FB8AA3B;
	ex2.approx.f32 	%r738, %r737;
	mul.f32 	%r739, %r681, 0f3FB8AA3B;
	ex2.approx.f32 	%r740, %r739;
	mul.f32 	%r741, %r682, 0f3FB8AA3B;
	ex2.approx.f32 	%r742, %r741;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r743, %r951, %r684;
	mul.f32 	%r744, %r952, %r686;
	mul.f32 	%r745, %r953, %r688;
	mul.f32 	%r746, %r954, %r690;
	mul.f32 	%r747, %r955, %r692;
	mul.f32 	%r748, %r956, %r694;
	mul.f32 	%r749, %r957, %r696;
	mul.f32 	%r750, %r958, %r698;
	mul.f32 	%r751, %r959, %r700;
	mul.f32 	%r752, %r960, %r702;
	mul.f32 	%r753, %r961, %r704;
	mul.f32 	%r754, %r962, %r706;
	mul.f32 	%r755, %r963, %r708;
	mul.f32 	%r756, %r964, %r710;
	mul.f32 	%r757, %r965, %r712;
	mul.f32 	%r758, %r966, %r714;
	mul.f32 	%r759, %r967, %r716;
	mul.f32 	%r760, %r968, %r718;
	mul.f32 	%r761, %r969, %r720;
	mul.f32 	%r762, %r970, %r722;
	mul.f32 	%r763, %r971, %r724;
	mul.f32 	%r764, %r972, %r726;
	mul.f32 	%r765, %r973, %r728;
	mul.f32 	%r766, %r974, %r730;
	mul.f32 	%r767, %r975, %r732;
	mul.f32 	%r768, %r976, %r734;
	mul.f32 	%r769, %r977, %r736;
	mul.f32 	%r770, %r978, %r738;
	mul.f32 	%r771, %r981, %r740;
	mul.f32 	%r772, %r982, %r742;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r773, %r743, %r633;
	mul.f32 	%r774, %r744, %r633;
	mul.f32 	%r775, %r745, %r634;
	mul.f32 	%r776, %r746, %r634;
	mul.f32 	%r777, %r747, %r633;
	mul.f32 	%r778, %r748, %r633;
	mul.f32 	%r779, %r749, %r634;
	mul.f32 	%r780, %r750, %r634;
	mul.f32 	%r781, %r751, %r633;
	mul.f32 	%r782, %r752, %r633;
	mul.f32 	%r783, %r753, %r634;
	mul.f32 	%r784, %r754, %r634;
	mul.f32 	%r785, %r755, %r633;
	mul.f32 	%r786, %r756, %r633;
	mul.f32 	%r787, %r757, %r634;
	mul.f32 	%r788, %r758, %r634;
	mul.f32 	%r789, %r759, %r633;
	mul.f32 	%r790, %r760, %r633;
	mul.f32 	%r791, %r761, %r634;
	mul.f32 	%r792, %r762, %r634;
	mul.f32 	%r793, %r763, %r633;
	mul.f32 	%r794, %r764, %r633;
	mul.f32 	%r795, %r765, %r634;
	mul.f32 	%r796, %r766, %r634;
	mul.f32 	%r797, %r767, %r633;
	mul.f32 	%r798, %r768, %r633;
	mul.f32 	%r799, %r769, %r634;
	mul.f32 	%r800, %r770, %r634;
	mul.f32 	%r801, %r771, %r634;
	mul.f32 	%r802, %r772, %r634;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd134, %r645, 8192;
	add.s64 	%rd135, %rd125, %rd134;
	mul.wide.u32 	%rd136, %r610, 4;
	add.s64 	%rd86, %rd135, %rd136;
	mul.wide.s32 	%rd137, %r646, 8192;
	add.s64 	%rd138, %rd125, %rd137;
	add.s64 	%rd87, %rd138, %rd136;
	mul.wide.s32 	%rd139, %r647, 8192;
	add.s64 	%rd140, %rd125, %rd139;
	add.s64 	%rd88, %rd140, %rd136;
	mul.wide.s32 	%rd141, %r648, 8192;
	add.s64 	%rd142, %rd125, %rd141;
	add.s64 	%rd89, %rd142, %rd136;
	mul.wide.s32 	%rd143, %r649, 8192;
	add.s64 	%rd144, %rd125, %rd143;
	add.s64 	%rd90, %rd144, %rd136;
	mul.wide.s32 	%rd145, %r650, 8192;
	add.s64 	%rd146, %rd125, %rd145;
	add.s64 	%rd91, %rd146, %rd136;
	mul.wide.s32 	%rd147, %r651, 8192;
	add.s64 	%rd148, %rd125, %rd147;
	add.s64 	%rd92, %rd148, %rd136;
	mul.wide.s32 	%rd149, %r652, 8192;
	add.s64 	%rd150, %rd125, %rd149;
	add.s64 	%rd93, %rd150, %rd136;
	and.pred 	%p43, %p51, %p104;
	and.pred 	%p44, %p51, %p103;
	and.pred 	%p45, %p51, %p102;
	and.pred 	%p46, %p51, %p101;
	and.pred 	%p47, %p51, %p100;
	and.pred 	%p48, %p51, %p99;
	and.pred 	%p49, %p51, %p98;
	and.pred 	%p50, %p51, %p97;
	shl.b32 	%r803, %r1, 4;
	and.b32 	%r804, %r803, 448;
	shl.b32 	%r805, %r1, 5;
	and.b32 	%r806, %r805, 3072;
	or.b32 	%r807, %r806, %r804;
	or.b32 	%r808, %r807, %r603;
	and.b32 	%r809, %r609, 508;
	shr.u32 	%r810, %r807, 2;
	add.s32 	%r812, %r115, %r810;
	shl.b32 	%r813, %r808, 2;
	add.s32 	%r814, %r812, %r813;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r815, %r773, 0, %p111;
	selp.b32 	%r816, %r815, 0, %p70;
	selp.b32 	%r817, %r816, 0, %p69;
	selp.b32 	%r818, %r774, 0, %p112;
	selp.b32 	%r819, %r818, 0, %p71;
	selp.b32 	%r820, %r819, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814], {%r817, %r820};
	or.b32 	%r821, %r807, 512;
	shr.u32 	%r822, %r821, 2;
	add.s32 	%r823, %r115, %r822;
	add.s32 	%r824, %r823, %r813;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r825, %r775, 0, %p111;
	selp.b32 	%r826, %r825, 0, %p68;
	selp.b32 	%r827, %r776, 0, %p112;
	selp.b32 	%r828, %r827, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2048], {%r826, %r828};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r829, %r777, 0, %p105;
	selp.b32 	%r830, %r829, 0, %p72;
	selp.b32 	%r831, %r830, 0, %p69;
	selp.b32 	%r832, %r778, 0, %p106;
	selp.b32 	%r833, %r832, 0, %p73;
	selp.b32 	%r834, %r833, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+32], {%r831, %r834};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r835, %r779, 0, %p105;
	selp.b32 	%r836, %r835, 0, %p70;
	selp.b32 	%r837, %r836, 0, %p68;
	selp.b32 	%r838, %r780, 0, %p106;
	selp.b32 	%r839, %r838, 0, %p74;
	selp.b32 	%r840, %r839, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2080], {%r837, %r840};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r841, %r781, 0, %p107;
	selp.b32 	%r842, %r841, 0, %p75;
	selp.b32 	%r843, %r842, 0, %p69;
	selp.b32 	%r844, %r782, 0, %p108;
	selp.b32 	%r845, %r844, 0, %p76;
	selp.b32 	%r846, %r845, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+64], {%r843, %r846};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r847, %r783, 0, %p107;
	selp.b32 	%r848, %r847, 0, %p77;
	selp.b32 	%r849, %r848, 0, %p68;
	selp.b32 	%r850, %r784, 0, %p108;
	selp.b32 	%r851, %r850, 0, %p78;
	selp.b32 	%r852, %r851, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2112], {%r849, %r852};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r853, %r785, 0, %p109;
	selp.b32 	%r854, %r853, 0, %p79;
	selp.b32 	%r855, %r854, 0, %p69;
	selp.b32 	%r856, %r786, 0, %p110;
	selp.b32 	%r857, %r856, 0, %p80;
	selp.b32 	%r858, %r857, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+96], {%r855, %r858};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r859, %r787, 0, %p109;
	selp.b32 	%r860, %r859, 0, %p81;
	selp.b32 	%r861, %r860, 0, %p68;
	selp.b32 	%r862, %r788, 0, %p110;
	selp.b32 	%r863, %r862, 0, %p82;
	selp.b32 	%r864, %r863, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2144], {%r861, %r864};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r865, %r789, 0, %p67;
	selp.b32 	%r866, %r865, 0, %p83;
	selp.b32 	%r867, %r866, 0, %p69;
	selp.b32 	%r868, %r790, 0, %p66;
	selp.b32 	%r869, %r868, 0, %p84;
	selp.b32 	%r870, %r869, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+128], {%r867, %r870};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r871, %r791, 0, %p67;
	selp.b32 	%r872, %r871, 0, %p85;
	selp.b32 	%r873, %r872, 0, %p68;
	selp.b32 	%r874, %r792, 0, %p66;
	selp.b32 	%r875, %r874, 0, %p86;
	selp.b32 	%r876, %r875, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2176], {%r873, %r876};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r877, %r793, 0, %p65;
	selp.b32 	%r878, %r877, 0, %p87;
	selp.b32 	%r879, %r878, 0, %p69;
	selp.b32 	%r880, %r794, 0, %p64;
	selp.b32 	%r881, %r880, 0, %p88;
	selp.b32 	%r882, %r881, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+160], {%r879, %r882};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r883, %r795, 0, %p65;
	selp.b32 	%r884, %r883, 0, %p89;
	selp.b32 	%r885, %r884, 0, %p68;
	selp.b32 	%r886, %r796, 0, %p64;
	selp.b32 	%r887, %r886, 0, %p90;
	selp.b32 	%r888, %r887, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2208], {%r885, %r888};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r889, %r797, 0, %p63;
	selp.b32 	%r890, %r889, 0, %p91;
	selp.b32 	%r891, %r890, 0, %p69;
	selp.b32 	%r892, %r798, 0, %p62;
	selp.b32 	%r893, %r892, 0, %p92;
	selp.b32 	%r894, %r893, 0, %p69;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r814+192], {%r891, %r894};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r895, %r799, 0, %p63;
	selp.b32 	%r896, %r895, 0, %p93;
	selp.b32 	%r897, %r896, 0, %p68;
	selp.b32 	%r898, %r800, 0, %p62;
	selp.b32 	%r899, %r898, 0, %p94;
	selp.b32 	%r900, %r899, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2240], {%r897, %r900};
	mov.b32 	%r901, 0;
	st.shared.v2.b32 	[%r814+224], {%r901, %r901};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r902, %r801, 0, %p55;
	selp.b32 	%r903, %r902, 0, %p95;
	selp.b32 	%r904, %r903, 0, %p68;
	selp.b32 	%r905, %r802, 0, %p54;
	selp.b32 	%r906, %r905, 0, %p96;
	selp.b32 	%r907, %r906, 0, %p68;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r824+2272], {%r904, %r907};
	bar.sync 	0;
	and.b32 	%r908, %r3, 28;
	shl.b32 	%r909, %r908, 2;
	add.s32 	%r910, %r115, %r909;
	shl.b32 	%r911, %r809, 2;
	add.s32 	%r912, %r910, %r911;
	ld.shared.v4.b32 	{%r569, %r570, %r571, %r572}, [%r912];
	or.b32 	%r913, %r809, 512;
	shr.u32 	%r914, %r913, 2;
	and.b32 	%r915, %r914, 240;
	add.s32 	%r916, %r115, %r915;
	add.s32 	%r917, %r916, %r911;
	ld.shared.v4.b32 	{%r573, %r574, %r575, %r576}, [%r917+2048];
	or.b32 	%r918, %r809, 1024;
	shr.u32 	%r919, %r918, 2;
	and.b32 	%r920, %r919, 368;
	add.s32 	%r921, %r115, %r920;
	add.s32 	%r922, %r921, %r911;
	ld.shared.v4.b32 	{%r577, %r578, %r579, %r580}, [%r922+4096];
	or.b32 	%r923, %r809, 1536;
	shr.u32 	%r924, %r923, 2;
	and.b32 	%r925, %r924, 496;
	add.s32 	%r926, %r115, %r925;
	add.s32 	%r927, %r926, %r911;
	ld.shared.v4.b32 	{%r581, %r582, %r583, %r584}, [%r927+6144];
	or.b32 	%r928, %r809, 2048;
	shr.u32 	%r929, %r928, 2;
	and.b32 	%r930, %r929, 624;
	add.s32 	%r931, %r115, %r930;
	add.s32 	%r932, %r931, %r911;
	ld.shared.v4.b32 	{%r585, %r586, %r587, %r588}, [%r932+8192];
	or.b32 	%r933, %r809, 2560;
	shr.u32 	%r934, %r933, 2;
	and.b32 	%r935, %r934, 752;
	add.s32 	%r936, %r115, %r935;
	add.s32 	%r937, %r936, %r911;
	ld.shared.v4.b32 	{%r589, %r590, %r591, %r592}, [%r937+10240];
	or.b32 	%r938, %r809, 3072;
	shr.u32 	%r939, %r938, 2;
	and.b32 	%r940, %r939, 880;
	add.s32 	%r941, %r115, %r940;
	add.s32 	%r942, %r941, %r911;
	ld.shared.v4.b32 	{%r593, %r594, %r595, %r596}, [%r942+12288];
	or.b32 	%r943, %r609, 3584;
	shr.u32 	%r944, %r943, 2;
	and.b32 	%r945, %r944, 1008;
	add.s32 	%r946, %r115, %r945;
	shl.b32 	%r947, %r943, 2;
	add.s32 	%r948, %r946, %r947;
	ld.shared.v4.b32 	{%r597, %r598, %r599, %r600}, [%r948];
	// begin inline asm
	@%p43 st.global.v4.b32 [ %rd86 + 0 ], { %r569, %r570, %r571, %r572 };
	// end inline asm
	// begin inline asm
	@%p44 st.global.v4.b32 [ %rd87 + 0 ], { %r573, %r574, %r575, %r576 };
	// end inline asm
	// begin inline asm
	@%p45 st.global.v4.b32 [ %rd88 + 0 ], { %r577, %r578, %r579, %r580 };
	// end inline asm
	// begin inline asm
	@%p46 st.global.v4.b32 [ %rd89 + 0 ], { %r581, %r582, %r583, %r584 };
	// end inline asm
	// begin inline asm
	@%p47 st.global.v4.b32 [ %rd90 + 0 ], { %r585, %r586, %r587, %r588 };
	// end inline asm
	// begin inline asm
	@%p48 st.global.v4.b32 [ %rd91 + 0 ], { %r589, %r590, %r591, %r592 };
	// end inline asm
	// begin inline asm
	@%p49 st.global.v4.b32 [ %rd92 + 0 ], { %r593, %r594, %r595, %r596 };
	// end inline asm
	// begin inline asm
	@%p50 st.global.v4.b32 [ %rd93 + 0 ], { %r597, %r598, %r599, %r600 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
