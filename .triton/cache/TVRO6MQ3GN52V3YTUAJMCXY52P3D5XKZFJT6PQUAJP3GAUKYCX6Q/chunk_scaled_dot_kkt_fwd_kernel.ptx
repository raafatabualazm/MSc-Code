//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 64
{
	.reg .pred 	%p<88>;
	.reg .b16 	%rs<19>;
	.reg .b32 	%r<1858>;
	.reg .b64 	%rd<133>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r167, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd15, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd14, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd26, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r185, %ctaid.x;
	ld.param.b64 	%rd27, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r186, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r187, %r186, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r188, %r186, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r1, %r185, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r2, %tid.x;
	and.b32 	%r3, %r2, 16;
	and.b32 	%r4, %r2, 32;
	bfe.u32 	%r189, %r2, 3, 3;
	or.b32 	%r190, %r189, 8;
	or.b32 	%r191, %r189, 16;
	or.b32 	%r192, %r189, 24;
	or.b32 	%r193, %r189, 32;
	or.b32 	%r194, %r189, 40;
	or.b32 	%r195, %r189, 48;
	or.b32 	%r196, %r189, 56;
	bfe.s32 	%r197, %r2, 2, 1;
	shl.b32 	%r198, %r2, 3;
	and.b32 	%r199, %r198, 56;
	and.b32 	%r5, %r2, 63;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r200, %r187, %r167;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r200;
	mul.wide.s32 	%rd28, %r200, 2;
	add.s64 	%rd29, %rd27, %rd28;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r188;
	mul.wide.u32 	%rd30, %r188, 2;
	add.s64 	%rd31, %rd29, %rd30;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd32, %r167;
	cvt.s64.s32 	%rd33, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd34, %r189;
	cvt.u64.u32 	%rd35, %r190;
	cvt.u64.u32 	%rd36, %r191;
	cvt.u64.u32 	%rd37, %r192;
	cvt.u64.u32 	%rd38, %r193;
	cvt.u64.u32 	%rd39, %r194;
	cvt.u64.u32 	%rd40, %r195;
	cvt.u64.u32 	%rd41, %r196;
	cvt.u64.u32 	%rd3, %r199;
	cvt.u64.u32 	%rd42, %r5;
	or.b64 	%rd43, %rd34, %rd33;
	or.b64 	%rd44, %rd35, %rd33;
	or.b64 	%rd45, %rd36, %rd33;
	or.b64 	%rd46, %rd37, %rd33;
	or.b64 	%rd47, %rd38, %rd33;
	or.b64 	%rd48, %rd39, %rd33;
	or.b64 	%rd49, %rd40, %rd33;
	or.b64 	%rd50, %rd41, %rd33;
	or.b64 	%rd51, %rd33, %rd42;
	shl.b64 	%rd4, %rd51, 5;
	shl.b64 	%rd52, %rd51, 6;
	add.s64 	%rd16, %rd31, %rd52;
	setp.gt.s32 	%p13, %r1, -1;
	setp.lt.s64 	%p14, %rd51, %rd32;
	and.pred 	%p24, %p13, %p14;
	// begin inline asm
	mov.u16 %rs1, 0x0;
	@%p24 ld.global.b16 { %rs1 }, [ %rd16 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r6, %r200, %r188;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r201, %r6, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd53, %r201, 2;
	add.s64 	%rd54, %rd26, %rd53;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p15, %rd43, %rd32;
	setp.lt.s64 	%p16, %rd44, %rd32;
	setp.lt.s64 	%p17, %rd45, %rd32;
	setp.lt.s64 	%p18, %rd46, %rd32;
	setp.lt.s64 	%p19, %rd47, %rd32;
	setp.lt.s64 	%p20, %rd48, %rd32;
	setp.lt.s64 	%p21, %rd49, %rd32;
	setp.lt.s64 	%p22, %rd50, %rd32;
	and.pred 	%p2, %p13, %p15;
	and.pred 	%p3, %p13, %p16;
	and.pred 	%p4, %p13, %p17;
	and.pred 	%p5, %p13, %p18;
	and.pred 	%p6, %p13, %p19;
	and.pred 	%p7, %p13, %p20;
	and.pred 	%p8, %p13, %p21;
	and.pred 	%p9, %p13, %p22;
	shl.b64 	%rd55, %rd43, 13;
	add.s64 	%rd5, %rd54, %rd55;
	mul.wide.u32 	%rd56, %r199, 2;
	add.s64 	%rd17, %rd5, %rd56;
	shl.b64 	%rd57, %rd44, 13;
	add.s64 	%rd6, %rd54, %rd57;
	add.s64 	%rd18, %rd6, %rd56;
	shl.b64 	%rd58, %rd45, 13;
	add.s64 	%rd7, %rd54, %rd58;
	add.s64 	%rd19, %rd7, %rd56;
	shl.b64 	%rd59, %rd46, 13;
	add.s64 	%rd8, %rd54, %rd59;
	add.s64 	%rd20, %rd8, %rd56;
	shl.b64 	%rd60, %rd47, 13;
	add.s64 	%rd9, %rd54, %rd60;
	add.s64 	%rd21, %rd9, %rd56;
	shl.b64 	%rd61, %rd48, 13;
	add.s64 	%rd10, %rd54, %rd61;
	add.s64 	%rd22, %rd10, %rd56;
	shl.b64 	%rd62, %rd49, 13;
	add.s64 	%rd11, %rd54, %rd62;
	add.s64 	%rd23, %rd11, %rd56;
	shl.b64 	%rd63, %rd50, 13;
	add.s64 	%rd12, %rd54, %rd63;
	add.s64 	%rd24, %rd12, %rd56;
	xor.b32 	%r202, %r198, %r2;
	and.b32 	%r203, %r202, 56;
	shl.b32 	%r204, %r203, 1;
	mov.b32 	%r205, global_smem;
	add.s32 	%r206, %r205, %r204;
	shl.b32 	%r207, %r189, 7;
	add.s32 	%r1271, %r206, %r207;
	add.s32 	%r1273, %r1271, 1024;
	add.s32 	%r1275, %r1271, 2048;
	add.s32 	%r1277, %r1271, 3072;
	add.s32 	%r1279, %r1271, 4096;
	add.s32 	%r1281, %r1271, 5120;
	add.s32 	%r1283, %r1271, 6144;
	add.s32 	%r1285, %r1271, 7168;
	selp.b32 	%r169, 16, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r1271 + 0 ], [ %rd17 + 0 ], 0x10, %r169;
	// end inline asm
	selp.b32 	%r171, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r1273 + 0 ], [ %rd18 + 0 ], 0x10, %r171;
	// end inline asm
	selp.b32 	%r173, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r1275 + 0 ], [ %rd19 + 0 ], 0x10, %r173;
	// end inline asm
	selp.b32 	%r175, 16, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r1277 + 0 ], [ %rd20 + 0 ], 0x10, %r175;
	// end inline asm
	selp.b32 	%r177, 16, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r1279 + 0 ], [ %rd21 + 0 ], 0x10, %r177;
	// end inline asm
	selp.b32 	%r179, 16, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r1281 + 0 ], [ %rd22 + 0 ], 0x10, %r179;
	// end inline asm
	selp.b32 	%r181, 16, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r1283 + 0 ], [ %rd23 + 0 ], 0x10, %r181;
	// end inline asm
	selp.b32 	%r183, 16, 0, %p9;
	// begin inline asm
	cp.async.cg.shared.global [ %r1285 + 0 ], [ %rd24 + 0 ], 0x10, %r183;
	// end inline asm
	cp.async.commit_group;
	and.b32 	%r208, %r2, 3;
	mul.lo.s32 	%r209, %r208, 72;
	and.b32 	%r210, %r197, 288;
	xor.b32 	%r211, %r210, %r209;
	and.b32 	%r212, %r2, 24;
	xor.b32 	%r213, %r211, %r212;
	shl.b32 	%r214, %r4, 4;
	or.b32 	%r215, %r213, %r214;
	xor.b32 	%r216, %r215, 32;
	xor.b32 	%r217, %r215, 1056;
	xor.b32 	%r218, %r215, 2080;
	xor.b32 	%r219, %r215, 3104;
	shl.b32 	%r220, %r2, 6;
	and.b32 	%r221, %r220, 512;
	or.b32 	%r222, %r211, %r221;
	shr.u32 	%r223, %r3, 1;
	xor.b32 	%r224, %r222, %r223;
	xor.b32 	%r225, %r224, 16;
	xor.b32 	%r226, %r224, 32;
	xor.b32 	%r227, %r224, 48;
	xor.b32 	%r228, %r224, 1040;
	xor.b32 	%r229, %r224, 1056;
	xor.b32 	%r230, %r224, 1072;
	xor.b32 	%r231, %r224, 2064;
	xor.b32 	%r232, %r224, 2080;
	xor.b32 	%r233, %r224, 2096;
	xor.b32 	%r234, %r224, 3088;
	xor.b32 	%r235, %r224, 3104;
	xor.b32 	%r236, %r224, 3120;
	shl.b32 	%r237, %r215, 1;
	add.s32 	%r259, %r205, %r237;
	shl.b32 	%r238, %r216, 1;
	add.s32 	%r264, %r205, %r238;
	add.s32 	%r269, %r259, 2048;
	shl.b32 	%r239, %r217, 1;
	add.s32 	%r274, %r205, %r239;
	add.s32 	%r279, %r259, 4096;
	shl.b32 	%r240, %r218, 1;
	add.s32 	%r284, %r205, %r240;
	add.s32 	%r289, %r259, 6144;
	shl.b32 	%r241, %r219, 1;
	add.s32 	%r294, %r205, %r241;
	shl.b32 	%r242, %r224, 1;
	add.s32 	%r299, %r205, %r242;
	shl.b32 	%r243, %r225, 1;
	add.s32 	%r304, %r205, %r243;
	shl.b32 	%r244, %r226, 1;
	add.s32 	%r309, %r205, %r244;
	shl.b32 	%r245, %r227, 1;
	add.s32 	%r314, %r205, %r245;
	add.s32 	%r319, %r299, 2048;
	shl.b32 	%r246, %r228, 1;
	add.s32 	%r324, %r205, %r246;
	shl.b32 	%r247, %r229, 1;
	add.s32 	%r329, %r205, %r247;
	shl.b32 	%r248, %r230, 1;
	add.s32 	%r334, %r205, %r248;
	add.s32 	%r339, %r299, 4096;
	shl.b32 	%r249, %r231, 1;
	add.s32 	%r344, %r205, %r249;
	shl.b32 	%r250, %r232, 1;
	add.s32 	%r349, %r205, %r250;
	shl.b32 	%r251, %r233, 1;
	add.s32 	%r354, %r205, %r251;
	add.s32 	%r359, %r299, 6144;
	shl.b32 	%r252, %r234, 1;
	add.s32 	%r364, %r205, %r252;
	shl.b32 	%r253, %r235, 1;
	add.s32 	%r369, %r205, %r253;
	shl.b32 	%r254, %r236, 1;
	add.s32 	%r374, %r205, %r254;
	mov.b32 	%r1794, 0f00000000;
	mov.b64 	%rd132, 64;
	mov.pred 	%p87, -1;
	mov.b32 	%r1795, %r1794;
	mov.b32 	%r1796, %r1794;
	mov.b32 	%r1797, %r1794;
	mov.b32 	%r1798, %r1794;
	mov.b32 	%r1799, %r1794;
	mov.b32 	%r1800, %r1794;
	mov.b32 	%r1801, %r1794;
	mov.b32 	%r1802, %r1794;
	mov.b32 	%r1803, %r1794;
	mov.b32 	%r1804, %r1794;
	mov.b32 	%r1805, %r1794;
	mov.b32 	%r1806, %r1794;
	mov.b32 	%r1807, %r1794;
	mov.b32 	%r1808, %r1794;
	mov.b32 	%r1809, %r1794;
	mov.b32 	%r1810, %r1794;
	mov.b32 	%r1811, %r1794;
	mov.b32 	%r1812, %r1794;
	mov.b32 	%r1813, %r1794;
	mov.b32 	%r1814, %r1794;
	mov.b32 	%r1815, %r1794;
	mov.b32 	%r1816, %r1794;
	mov.b32 	%r1817, %r1794;
	mov.b32 	%r1818, %r1794;
	mov.b32 	%r1819, %r1794;
	mov.b32 	%r1820, %r1794;
	mov.b32 	%r1821, %r1794;
	mov.b32 	%r1822, %r1794;
	mov.b32 	%r1823, %r1794;
	mov.b32 	%r1824, %r1794;
	mov.b32 	%r1825, %r1794;
	mov.b32 	%r1826, %r1794;
	mov.b32 	%r1827, %r1794;
	mov.b32 	%r1828, %r1794;
	mov.b32 	%r1829, %r1794;
	mov.b32 	%r1830, %r1794;
	mov.b32 	%r1831, %r1794;
	mov.b32 	%r1832, %r1794;
	mov.b32 	%r1833, %r1794;
	mov.b32 	%r1834, %r1794;
	mov.b32 	%r1835, %r1794;
	mov.b32 	%r1836, %r1794;
	mov.b32 	%r1837, %r1794;
	mov.b32 	%r1838, %r1794;
	mov.b32 	%r1839, %r1794;
	mov.b32 	%r1840, %r1794;
	mov.b32 	%r1841, %r1794;
	mov.b32 	%r1842, %r1794;
	mov.b32 	%r1843, %r1794;
	mov.b32 	%r1844, %r1794;
	mov.b32 	%r1845, %r1794;
	mov.b32 	%r1846, %r1794;
	mov.b32 	%r1847, %r1794;
	mov.b32 	%r1848, %r1794;
	mov.b32 	%r1849, %r1794;
	mov.b32 	%r1850, %r1794;
	mov.b32 	%r1851, %r1794;
	mov.b32 	%r1852, %r1794;
	mov.b32 	%r1853, %r1794;
	mov.b32 	%r1854, %r1794;
	mov.b32 	%r1855, %r1794;
	mov.b32 	%r1856, %r1794;
	mov.b32 	%r1857, %r1794;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p10, %p87;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r387, %r388, %r611, %r612}, [%r259];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r835, %r836, %r1059, %r1060}, [%r264];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r401, %r402, %r625, %r626}, [%r269];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r849, %r850, %r1073, %r1074}, [%r274];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r415, %r416, %r639, %r640}, [%r279];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r863, %r864, %r1087, %r1088}, [%r284];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r429, %r430, %r653, %r654}, [%r289];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r877, %r878, %r1101, %r1102}, [%r294];
	// end inline asm
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r383, %r384, %r385, %r386}, [%r299];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r607, %r608, %r609, %r610}, [%r304];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r831, %r832, %r833, %r834}, [%r309];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1055, %r1056, %r1057, %r1058}, [%r314];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r439, %r440, %r441, %r442}, [%r319];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r663, %r664, %r665, %r666}, [%r324];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r887, %r888, %r889, %r890}, [%r329];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1111, %r1112, %r1113, %r1114}, [%r334];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r495, %r496, %r497, %r498}, [%r339];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r719, %r720, %r721, %r722}, [%r344];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r943, %r944, %r945, %r946}, [%r349];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1167, %r1168, %r1169, %r1170}, [%r354];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r551, %r552, %r553, %r554}, [%r359];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r775, %r776, %r777, %r778}, [%r364];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r999, %r1000, %r1001, %r1002}, [%r369];
	// end inline asm
	// begin inline asm
	ldmatrix.sync.aligned.m8n8.x4.shared.b16 {%r1223, %r1224, %r1225, %r1226}, [%r374];
	// end inline asm
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1794, %r1795, %r1796, %r1797 }, { %r383, %r384, %r385, %r386 }, { %r387, %r388 }, { %r1794, %r1795, %r1796, %r1797 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1798, %r1799, %r1800, %r1801 }, { %r383, %r384, %r385, %r386 }, { %r401, %r402 }, { %r1798, %r1799, %r1800, %r1801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r383, %r384, %r385, %r386 }, { %r415, %r416 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1806, %r1807, %r1808, %r1809 }, { %r383, %r384, %r385, %r386 }, { %r429, %r430 }, { %r1806, %r1807, %r1808, %r1809 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1810, %r1811, %r1812, %r1813 }, { %r439, %r440, %r441, %r442 }, { %r387, %r388 }, { %r1810, %r1811, %r1812, %r1813 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1814, %r1815, %r1816, %r1817 }, { %r439, %r440, %r441, %r442 }, { %r401, %r402 }, { %r1814, %r1815, %r1816, %r1817 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1818, %r1819, %r1820, %r1821 }, { %r439, %r440, %r441, %r442 }, { %r415, %r416 }, { %r1818, %r1819, %r1820, %r1821 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1822, %r1823, %r1824, %r1825 }, { %r439, %r440, %r441, %r442 }, { %r429, %r430 }, { %r1822, %r1823, %r1824, %r1825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1826, %r1827, %r1828, %r1829 }, { %r495, %r496, %r497, %r498 }, { %r387, %r388 }, { %r1826, %r1827, %r1828, %r1829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r495, %r496, %r497, %r498 }, { %r401, %r402 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1834, %r1835, %r1836, %r1837 }, { %r495, %r496, %r497, %r498 }, { %r415, %r416 }, { %r1834, %r1835, %r1836, %r1837 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1838, %r1839, %r1840, %r1841 }, { %r495, %r496, %r497, %r498 }, { %r429, %r430 }, { %r1838, %r1839, %r1840, %r1841 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1842, %r1843, %r1844, %r1845 }, { %r551, %r552, %r553, %r554 }, { %r387, %r388 }, { %r1842, %r1843, %r1844, %r1845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1846, %r1847, %r1848, %r1849 }, { %r551, %r552, %r553, %r554 }, { %r401, %r402 }, { %r1846, %r1847, %r1848, %r1849 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1850, %r1851, %r1852, %r1853 }, { %r551, %r552, %r553, %r554 }, { %r415, %r416 }, { %r1850, %r1851, %r1852, %r1853 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1854, %r1855, %r1856, %r1857 }, { %r551, %r552, %r553, %r554 }, { %r429, %r430 }, { %r1854, %r1855, %r1856, %r1857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1794, %r1795, %r1796, %r1797 }, { %r607, %r608, %r609, %r610 }, { %r611, %r612 }, { %r1794, %r1795, %r1796, %r1797 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1798, %r1799, %r1800, %r1801 }, { %r607, %r608, %r609, %r610 }, { %r625, %r626 }, { %r1798, %r1799, %r1800, %r1801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r607, %r608, %r609, %r610 }, { %r639, %r640 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1806, %r1807, %r1808, %r1809 }, { %r607, %r608, %r609, %r610 }, { %r653, %r654 }, { %r1806, %r1807, %r1808, %r1809 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1810, %r1811, %r1812, %r1813 }, { %r663, %r664, %r665, %r666 }, { %r611, %r612 }, { %r1810, %r1811, %r1812, %r1813 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1814, %r1815, %r1816, %r1817 }, { %r663, %r664, %r665, %r666 }, { %r625, %r626 }, { %r1814, %r1815, %r1816, %r1817 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1818, %r1819, %r1820, %r1821 }, { %r663, %r664, %r665, %r666 }, { %r639, %r640 }, { %r1818, %r1819, %r1820, %r1821 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1822, %r1823, %r1824, %r1825 }, { %r663, %r664, %r665, %r666 }, { %r653, %r654 }, { %r1822, %r1823, %r1824, %r1825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1826, %r1827, %r1828, %r1829 }, { %r719, %r720, %r721, %r722 }, { %r611, %r612 }, { %r1826, %r1827, %r1828, %r1829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r719, %r720, %r721, %r722 }, { %r625, %r626 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1834, %r1835, %r1836, %r1837 }, { %r719, %r720, %r721, %r722 }, { %r639, %r640 }, { %r1834, %r1835, %r1836, %r1837 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1838, %r1839, %r1840, %r1841 }, { %r719, %r720, %r721, %r722 }, { %r653, %r654 }, { %r1838, %r1839, %r1840, %r1841 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1842, %r1843, %r1844, %r1845 }, { %r775, %r776, %r777, %r778 }, { %r611, %r612 }, { %r1842, %r1843, %r1844, %r1845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1846, %r1847, %r1848, %r1849 }, { %r775, %r776, %r777, %r778 }, { %r625, %r626 }, { %r1846, %r1847, %r1848, %r1849 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1850, %r1851, %r1852, %r1853 }, { %r775, %r776, %r777, %r778 }, { %r639, %r640 }, { %r1850, %r1851, %r1852, %r1853 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1854, %r1855, %r1856, %r1857 }, { %r775, %r776, %r777, %r778 }, { %r653, %r654 }, { %r1854, %r1855, %r1856, %r1857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1794, %r1795, %r1796, %r1797 }, { %r831, %r832, %r833, %r834 }, { %r835, %r836 }, { %r1794, %r1795, %r1796, %r1797 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1798, %r1799, %r1800, %r1801 }, { %r831, %r832, %r833, %r834 }, { %r849, %r850 }, { %r1798, %r1799, %r1800, %r1801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r831, %r832, %r833, %r834 }, { %r863, %r864 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1806, %r1807, %r1808, %r1809 }, { %r831, %r832, %r833, %r834 }, { %r877, %r878 }, { %r1806, %r1807, %r1808, %r1809 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1810, %r1811, %r1812, %r1813 }, { %r887, %r888, %r889, %r890 }, { %r835, %r836 }, { %r1810, %r1811, %r1812, %r1813 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1814, %r1815, %r1816, %r1817 }, { %r887, %r888, %r889, %r890 }, { %r849, %r850 }, { %r1814, %r1815, %r1816, %r1817 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1818, %r1819, %r1820, %r1821 }, { %r887, %r888, %r889, %r890 }, { %r863, %r864 }, { %r1818, %r1819, %r1820, %r1821 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1822, %r1823, %r1824, %r1825 }, { %r887, %r888, %r889, %r890 }, { %r877, %r878 }, { %r1822, %r1823, %r1824, %r1825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1826, %r1827, %r1828, %r1829 }, { %r943, %r944, %r945, %r946 }, { %r835, %r836 }, { %r1826, %r1827, %r1828, %r1829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r943, %r944, %r945, %r946 }, { %r849, %r850 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1834, %r1835, %r1836, %r1837 }, { %r943, %r944, %r945, %r946 }, { %r863, %r864 }, { %r1834, %r1835, %r1836, %r1837 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1838, %r1839, %r1840, %r1841 }, { %r943, %r944, %r945, %r946 }, { %r877, %r878 }, { %r1838, %r1839, %r1840, %r1841 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1842, %r1843, %r1844, %r1845 }, { %r999, %r1000, %r1001, %r1002 }, { %r835, %r836 }, { %r1842, %r1843, %r1844, %r1845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1846, %r1847, %r1848, %r1849 }, { %r999, %r1000, %r1001, %r1002 }, { %r849, %r850 }, { %r1846, %r1847, %r1848, %r1849 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1850, %r1851, %r1852, %r1853 }, { %r999, %r1000, %r1001, %r1002 }, { %r863, %r864 }, { %r1850, %r1851, %r1852, %r1853 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1854, %r1855, %r1856, %r1857 }, { %r999, %r1000, %r1001, %r1002 }, { %r877, %r878 }, { %r1854, %r1855, %r1856, %r1857 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1794, %r1795, %r1796, %r1797 }, { %r1055, %r1056, %r1057, %r1058 }, { %r1059, %r1060 }, { %r1794, %r1795, %r1796, %r1797 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1798, %r1799, %r1800, %r1801 }, { %r1055, %r1056, %r1057, %r1058 }, { %r1073, %r1074 }, { %r1798, %r1799, %r1800, %r1801 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1802, %r1803, %r1804, %r1805 }, { %r1055, %r1056, %r1057, %r1058 }, { %r1087, %r1088 }, { %r1802, %r1803, %r1804, %r1805 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1806, %r1807, %r1808, %r1809 }, { %r1055, %r1056, %r1057, %r1058 }, { %r1101, %r1102 }, { %r1806, %r1807, %r1808, %r1809 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1810, %r1811, %r1812, %r1813 }, { %r1111, %r1112, %r1113, %r1114 }, { %r1059, %r1060 }, { %r1810, %r1811, %r1812, %r1813 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1814, %r1815, %r1816, %r1817 }, { %r1111, %r1112, %r1113, %r1114 }, { %r1073, %r1074 }, { %r1814, %r1815, %r1816, %r1817 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1818, %r1819, %r1820, %r1821 }, { %r1111, %r1112, %r1113, %r1114 }, { %r1087, %r1088 }, { %r1818, %r1819, %r1820, %r1821 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1822, %r1823, %r1824, %r1825 }, { %r1111, %r1112, %r1113, %r1114 }, { %r1101, %r1102 }, { %r1822, %r1823, %r1824, %r1825 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1826, %r1827, %r1828, %r1829 }, { %r1167, %r1168, %r1169, %r1170 }, { %r1059, %r1060 }, { %r1826, %r1827, %r1828, %r1829 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1830, %r1831, %r1832, %r1833 }, { %r1167, %r1168, %r1169, %r1170 }, { %r1073, %r1074 }, { %r1830, %r1831, %r1832, %r1833 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1834, %r1835, %r1836, %r1837 }, { %r1167, %r1168, %r1169, %r1170 }, { %r1087, %r1088 }, { %r1834, %r1835, %r1836, %r1837 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1838, %r1839, %r1840, %r1841 }, { %r1167, %r1168, %r1169, %r1170 }, { %r1101, %r1102 }, { %r1838, %r1839, %r1840, %r1841 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1842, %r1843, %r1844, %r1845 }, { %r1223, %r1224, %r1225, %r1226 }, { %r1059, %r1060 }, { %r1842, %r1843, %r1844, %r1845 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1846, %r1847, %r1848, %r1849 }, { %r1223, %r1224, %r1225, %r1226 }, { %r1073, %r1074 }, { %r1846, %r1847, %r1848, %r1849 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1850, %r1851, %r1852, %r1853 }, { %r1223, %r1224, %r1225, %r1226 }, { %r1087, %r1088 }, { %r1850, %r1851, %r1852, %r1853 };
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f32.bf16.bf16.f32 { %r1854, %r1855, %r1856, %r1857 }, { %r1223, %r1224, %r1225, %r1226 }, { %r1101, %r1102 }, { %r1854, %r1855, %r1856, %r1857 };
	// end inline asm
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	or.b64 	%rd73, %rd132, %rd3;
	shl.b64 	%rd74, %rd73, 1;
	add.s64 	%rd64, %rd5, %rd74;
	add.s64 	%rd65, %rd6, %rd74;
	add.s64 	%rd66, %rd7, %rd74;
	add.s64 	%rd67, %rd8, %rd74;
	add.s64 	%rd68, %rd9, %rd74;
	add.s64 	%rd69, %rd10, %rd74;
	add.s64 	%rd70, %rd11, %rd74;
	add.s64 	%rd71, %rd12, %rd74;
	bar.sync 	0;
	selp.b32 	%r1287, 16, 0, %p10;
	selp.b32 	%r1272, %r1287, 0, %p2;
	// begin inline asm
	cp.async.cg.shared.global [ %r1271 + 0 ], [ %rd64 + 0 ], 0x10, %r1272;
	// end inline asm
	selp.b32 	%r1274, %r1287, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r1273 + 0 ], [ %rd65 + 0 ], 0x10, %r1274;
	// end inline asm
	selp.b32 	%r1276, %r1287, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r1275 + 0 ], [ %rd66 + 0 ], 0x10, %r1276;
	// end inline asm
	selp.b32 	%r1278, %r1287, 0, %p5;
	// begin inline asm
	cp.async.cg.shared.global [ %r1277 + 0 ], [ %rd67 + 0 ], 0x10, %r1278;
	// end inline asm
	selp.b32 	%r1280, %r1287, 0, %p6;
	// begin inline asm
	cp.async.cg.shared.global [ %r1279 + 0 ], [ %rd68 + 0 ], 0x10, %r1280;
	// end inline asm
	selp.b32 	%r1282, %r1287, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r1281 + 0 ], [ %rd69 + 0 ], 0x10, %r1282;
	// end inline asm
	selp.b32 	%r1284, %r1287, 0, %p8;
	// begin inline asm
	cp.async.cg.shared.global [ %r1283 + 0 ], [ %rd70 + 0 ], 0x10, %r1284;
	// end inline asm
	selp.b32 	%r1286, %r1287, 0, %p9;
	// begin inline asm
	cp.async.cg.shared.global [ %r1285 + 0 ], [ %rd71 + 0 ], 0x10, %r1286;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd132, 128;
	mov.pred 	%p87, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p10 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shr.u32 	%r1353, %r2, 4;
	shl.b32 	%r1354, %r2, 2;
	and.b32 	%r1355, %r1354, 60;
	shl.b32 	%r1356, %r2, 1;
	and.b32 	%r1357, %r1356, 6;
	shr.u32 	%r1358, %r4, 2;
	bfe.u32 	%r1359, %r2, 2, 2;
	shr.u32 	%r1360, %r3, 2;
	or.b32 	%r1361, %r1357, %r1358;
	or.b32 	%r1362, %r1361, 49;
	or.b32 	%r1363, %r1361, 48;
	or.b32 	%r1364, %r1361, 33;
	or.b32 	%r1365, %r1361, 32;
	or.b32 	%r1366, %r1361, 17;
	or.b32 	%r1367, %r1361, 16;
	or.b32 	%r1368, %r1361, 1;
	or.b32 	%r1369, %r1359, %r1360;
	or.b32 	%r1370, %r1369, 56;
	or.b32 	%r1371, %r1369, 48;
	or.b32 	%r1372, %r1369, 40;
	or.b32 	%r1373, %r1369, 32;
	or.b32 	%r1374, %r1369, 24;
	or.b32 	%r1375, %r1369, 16;
	or.b32 	%r1376, %r1369, 8;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r1377, %r1361, %r1;
	or.b32 	%r1378, %r1369, %r1;
	or.b32 	%r1379, %r1368, %r1;
	or.b32 	%r1380, %r1376, %r1;
	or.b32 	%r1381, %r1375, %r1;
	or.b32 	%r1382, %r1374, %r1;
	or.b32 	%r1383, %r1367, %r1;
	or.b32 	%r1384, %r1366, %r1;
	or.b32 	%r1385, %r1373, %r1;
	or.b32 	%r1386, %r1372, %r1;
	or.b32 	%r1387, %r1365, %r1;
	or.b32 	%r1388, %r1364, %r1;
	or.b32 	%r1389, %r1371, %r1;
	or.b32 	%r1390, %r1370, %r1;
	or.b32 	%r1391, %r1363, %r1;
	or.b32 	%r1392, %r1362, %r1;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p42, %r1392, %r167;
	setp.lt.s32 	%p43, %r1391, %r167;
	setp.lt.s32 	%p44, %r1390, %r167;
	setp.lt.s32 	%p45, %r1389, %r167;
	setp.lt.s32 	%p46, %r1388, %r167;
	setp.lt.s32 	%p47, %r1387, %r167;
	setp.lt.s32 	%p48, %r1386, %r167;
	setp.lt.s32 	%p49, %r1385, %r167;
	setp.lt.s32 	%p50, %r1384, %r167;
	setp.lt.s32 	%p51, %r1383, %r167;
	setp.lt.s32 	%p52, %r1382, %r167;
	setp.lt.s32 	%p53, %r1381, %r167;
	setp.lt.s32 	%p54, %r1380, %r167;
	setp.lt.s32 	%p55, %r1379, %r167;
	setp.lt.s32 	%p56, %r1378, %r167;
	setp.lt.s32 	%p57, %r1377, %r167;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd92, %rd1, 2;
	add.s64 	%rd93, %rd14, %rd92;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd94, %rd2, 2;
	add.s64 	%rd95, %rd93, %rd94;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd96, %rd4, 2;
	add.s64 	%rd75, %rd95, %rd96;
	// begin inline asm
	mov.u32 %r1288, 0x0;
	@%p24 ld.global.b32 { %r1288 }, [ %rd75 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	shl.b32 	%r1393, %r5, 2;
	add.s32 	%r1395, %r205, %r1393;
	st.shared.b32 	[%r1395], %r1288;
	bar.sync 	0;
	shl.b32 	%r1396, %r1369, 2;
	add.s32 	%r1397, %r205, %r1396;
	ld.shared.b32 	%r1398, [%r1397];
	ld.shared.b32 	%r1399, [%r1397+32];
	ld.shared.b32 	%r1400, [%r1397+64];
	ld.shared.b32 	%r1401, [%r1397+96];
	ld.shared.b32 	%r1402, [%r1397+128];
	ld.shared.b32 	%r1403, [%r1397+160];
	ld.shared.b32 	%r1404, [%r1397+192];
	ld.shared.b32 	%r1405, [%r1397+224];
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	bar.sync 	0;
	st.shared.b32 	[%r1395], %r1288;
	bar.sync 	0;
	shl.b32 	%r1406, %r1361, 2;
	add.s32 	%r1407, %r205, %r1406;
	ld.shared.v2.b32 	{%r1408, %r1409}, [%r1407];
	ld.shared.v2.b32 	{%r1410, %r1411}, [%r1407+64];
	ld.shared.v2.b32 	{%r1412, %r1413}, [%r1407+128];
	ld.shared.v2.b32 	{%r1414, %r1415}, [%r1407+192];
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r1416, %r1398, %r1408;
	sub.f32 	%r1417, %r1398, %r1409;
	sub.f32 	%r1418, %r1399, %r1408;
	sub.f32 	%r1419, %r1399, %r1409;
	sub.f32 	%r1420, %r1400, %r1408;
	sub.f32 	%r1421, %r1400, %r1409;
	sub.f32 	%r1422, %r1401, %r1408;
	sub.f32 	%r1423, %r1401, %r1409;
	sub.f32 	%r1424, %r1400, %r1410;
	sub.f32 	%r1425, %r1400, %r1411;
	sub.f32 	%r1426, %r1401, %r1410;
	sub.f32 	%r1427, %r1401, %r1411;
	sub.f32 	%r1428, %r1402, %r1408;
	sub.f32 	%r1429, %r1402, %r1409;
	sub.f32 	%r1430, %r1403, %r1408;
	sub.f32 	%r1431, %r1403, %r1409;
	sub.f32 	%r1432, %r1402, %r1410;
	sub.f32 	%r1433, %r1402, %r1411;
	sub.f32 	%r1434, %r1403, %r1410;
	sub.f32 	%r1435, %r1403, %r1411;
	sub.f32 	%r1436, %r1402, %r1412;
	sub.f32 	%r1437, %r1402, %r1413;
	sub.f32 	%r1438, %r1403, %r1412;
	sub.f32 	%r1439, %r1403, %r1413;
	sub.f32 	%r1440, %r1404, %r1408;
	sub.f32 	%r1441, %r1404, %r1409;
	sub.f32 	%r1442, %r1405, %r1408;
	sub.f32 	%r1443, %r1405, %r1409;
	sub.f32 	%r1444, %r1404, %r1410;
	sub.f32 	%r1445, %r1404, %r1411;
	sub.f32 	%r1446, %r1405, %r1410;
	sub.f32 	%r1447, %r1405, %r1411;
	sub.f32 	%r1448, %r1404, %r1412;
	sub.f32 	%r1449, %r1404, %r1413;
	sub.f32 	%r1450, %r1405, %r1412;
	sub.f32 	%r1451, %r1405, %r1413;
	sub.f32 	%r1452, %r1404, %r1414;
	sub.f32 	%r1453, %r1404, %r1415;
	sub.f32 	%r1454, %r1405, %r1414;
	sub.f32 	%r1455, %r1405, %r1415;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r1456, %r1416, 0f3FB8AA3B;
	ex2.approx.f32 	%r1457, %r1456;
	mul.f32 	%r1458, %r1417, 0f3FB8AA3B;
	ex2.approx.f32 	%r1459, %r1458;
	mul.f32 	%r1460, %r1418, 0f3FB8AA3B;
	ex2.approx.f32 	%r1461, %r1460;
	mul.f32 	%r1462, %r1419, 0f3FB8AA3B;
	ex2.approx.f32 	%r1463, %r1462;
	mul.f32 	%r1464, %r1420, 0f3FB8AA3B;
	ex2.approx.f32 	%r1465, %r1464;
	mul.f32 	%r1466, %r1421, 0f3FB8AA3B;
	ex2.approx.f32 	%r1467, %r1466;
	mul.f32 	%r1468, %r1422, 0f3FB8AA3B;
	ex2.approx.f32 	%r1469, %r1468;
	mul.f32 	%r1470, %r1423, 0f3FB8AA3B;
	ex2.approx.f32 	%r1471, %r1470;
	mul.f32 	%r1472, %r1424, 0f3FB8AA3B;
	ex2.approx.f32 	%r1473, %r1472;
	mul.f32 	%r1474, %r1425, 0f3FB8AA3B;
	ex2.approx.f32 	%r1475, %r1474;
	mul.f32 	%r1476, %r1426, 0f3FB8AA3B;
	ex2.approx.f32 	%r1477, %r1476;
	mul.f32 	%r1478, %r1427, 0f3FB8AA3B;
	ex2.approx.f32 	%r1479, %r1478;
	mul.f32 	%r1480, %r1428, 0f3FB8AA3B;
	ex2.approx.f32 	%r1481, %r1480;
	mul.f32 	%r1482, %r1429, 0f3FB8AA3B;
	ex2.approx.f32 	%r1483, %r1482;
	mul.f32 	%r1484, %r1430, 0f3FB8AA3B;
	ex2.approx.f32 	%r1485, %r1484;
	mul.f32 	%r1486, %r1431, 0f3FB8AA3B;
	ex2.approx.f32 	%r1487, %r1486;
	mul.f32 	%r1488, %r1432, 0f3FB8AA3B;
	ex2.approx.f32 	%r1489, %r1488;
	mul.f32 	%r1490, %r1433, 0f3FB8AA3B;
	ex2.approx.f32 	%r1491, %r1490;
	mul.f32 	%r1492, %r1434, 0f3FB8AA3B;
	ex2.approx.f32 	%r1493, %r1492;
	mul.f32 	%r1494, %r1435, 0f3FB8AA3B;
	ex2.approx.f32 	%r1495, %r1494;
	mul.f32 	%r1496, %r1436, 0f3FB8AA3B;
	ex2.approx.f32 	%r1497, %r1496;
	mul.f32 	%r1498, %r1437, 0f3FB8AA3B;
	ex2.approx.f32 	%r1499, %r1498;
	mul.f32 	%r1500, %r1438, 0f3FB8AA3B;
	ex2.approx.f32 	%r1501, %r1500;
	mul.f32 	%r1502, %r1439, 0f3FB8AA3B;
	ex2.approx.f32 	%r1503, %r1502;
	mul.f32 	%r1504, %r1440, 0f3FB8AA3B;
	ex2.approx.f32 	%r1505, %r1504;
	mul.f32 	%r1506, %r1441, 0f3FB8AA3B;
	ex2.approx.f32 	%r1507, %r1506;
	mul.f32 	%r1508, %r1442, 0f3FB8AA3B;
	ex2.approx.f32 	%r1509, %r1508;
	mul.f32 	%r1510, %r1443, 0f3FB8AA3B;
	ex2.approx.f32 	%r1511, %r1510;
	mul.f32 	%r1512, %r1444, 0f3FB8AA3B;
	ex2.approx.f32 	%r1513, %r1512;
	mul.f32 	%r1514, %r1445, 0f3FB8AA3B;
	ex2.approx.f32 	%r1515, %r1514;
	mul.f32 	%r1516, %r1446, 0f3FB8AA3B;
	ex2.approx.f32 	%r1517, %r1516;
	mul.f32 	%r1518, %r1447, 0f3FB8AA3B;
	ex2.approx.f32 	%r1519, %r1518;
	mul.f32 	%r1520, %r1448, 0f3FB8AA3B;
	ex2.approx.f32 	%r1521, %r1520;
	mul.f32 	%r1522, %r1449, 0f3FB8AA3B;
	ex2.approx.f32 	%r1523, %r1522;
	mul.f32 	%r1524, %r1450, 0f3FB8AA3B;
	ex2.approx.f32 	%r1525, %r1524;
	mul.f32 	%r1526, %r1451, 0f3FB8AA3B;
	ex2.approx.f32 	%r1527, %r1526;
	mul.f32 	%r1528, %r1452, 0f3FB8AA3B;
	ex2.approx.f32 	%r1529, %r1528;
	mul.f32 	%r1530, %r1453, 0f3FB8AA3B;
	ex2.approx.f32 	%r1531, %r1530;
	mul.f32 	%r1532, %r1454, 0f3FB8AA3B;
	ex2.approx.f32 	%r1533, %r1532;
	mul.f32 	%r1534, %r1455, 0f3FB8AA3B;
	ex2.approx.f32 	%r1535, %r1534;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r1536, %r1794, %r1457;
	mul.f32 	%r1537, %r1795, %r1459;
	mul.f32 	%r1538, %r1796, %r1461;
	mul.f32 	%r1539, %r1797, %r1463;
	mul.f32 	%r1540, %r1810, %r1465;
	mul.f32 	%r1541, %r1811, %r1467;
	mul.f32 	%r1542, %r1812, %r1469;
	mul.f32 	%r1543, %r1813, %r1471;
	mul.f32 	%r1544, %r1814, %r1473;
	mul.f32 	%r1545, %r1815, %r1475;
	mul.f32 	%r1546, %r1816, %r1477;
	mul.f32 	%r1547, %r1817, %r1479;
	mul.f32 	%r1548, %r1826, %r1481;
	mul.f32 	%r1549, %r1827, %r1483;
	mul.f32 	%r1550, %r1828, %r1485;
	mul.f32 	%r1551, %r1829, %r1487;
	mul.f32 	%r1552, %r1830, %r1489;
	mul.f32 	%r1553, %r1831, %r1491;
	mul.f32 	%r1554, %r1832, %r1493;
	mul.f32 	%r1555, %r1833, %r1495;
	mul.f32 	%r1556, %r1834, %r1497;
	mul.f32 	%r1557, %r1835, %r1499;
	mul.f32 	%r1558, %r1836, %r1501;
	mul.f32 	%r1559, %r1837, %r1503;
	mul.f32 	%r1560, %r1842, %r1505;
	mul.f32 	%r1561, %r1843, %r1507;
	mul.f32 	%r1562, %r1844, %r1509;
	mul.f32 	%r1563, %r1845, %r1511;
	mul.f32 	%r1564, %r1846, %r1513;
	mul.f32 	%r1565, %r1847, %r1515;
	mul.f32 	%r1566, %r1848, %r1517;
	mul.f32 	%r1567, %r1849, %r1519;
	mul.f32 	%r1568, %r1850, %r1521;
	mul.f32 	%r1569, %r1851, %r1523;
	mul.f32 	%r1570, %r1852, %r1525;
	mul.f32 	%r1571, %r1853, %r1527;
	mul.f32 	%r1572, %r1854, %r1529;
	mul.f32 	%r1573, %r1855, %r1531;
	mul.f32 	%r1574, %r1856, %r1533;
	mul.f32 	%r1575, %r1857, %r1535;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	bar.sync 	0;
	or.b32 	%r1576, %r1360, %r1358;
	shl.b32 	%r1577, %r5, 1;
	sub.s32 	%r1578, %r1395, %r1577;
	st.shared.b16 	[%r1578], %rs1;
	bar.sync 	0;
	shl.b32 	%r1579, %r1576, 1;
	add.s32 	%r1580, %r205, %r1579;
	ld.shared.v4.b16 	{%rs3, %rs4, %rs5, %rs6}, [%r1580];
	ld.shared.v4.b16 	{%rs7, %rs8, %rs9, %rs10}, [%r1580+32];
	ld.shared.v4.b16 	{%rs11, %rs12, %rs13, %rs14}, [%r1580+64];
	ld.shared.v4.b16 	{%rs15, %rs16, %rs17, %rs18}, [%r1580+96];
	cvt.f32.bf16 	%r1581, %rs3;
	cvt.f32.bf16 	%r1582, %rs4;
	cvt.f32.bf16 	%r1583, %rs5;
	cvt.f32.bf16 	%r1584, %rs6;
	cvt.f32.bf16 	%r1585, %rs7;
	cvt.f32.bf16 	%r1586, %rs8;
	cvt.f32.bf16 	%r1587, %rs9;
	cvt.f32.bf16 	%r1588, %rs10;
	cvt.f32.bf16 	%r1589, %rs11;
	cvt.f32.bf16 	%r1590, %rs12;
	cvt.f32.bf16 	%r1591, %rs13;
	cvt.f32.bf16 	%r1592, %rs14;
	cvt.f32.bf16 	%r1593, %rs15;
	cvt.f32.bf16 	%r1594, %rs16;
	cvt.f32.bf16 	%r1595, %rs17;
	cvt.f32.bf16 	%r1596, %rs18;
	bar.sync 	0;
	add.s32 	%r1597, %r1580, %r1579;
	st.shared.v4.b32 	[%r1597], {%r1581, %r1582, %r1583, %r1584};
	bar.sync 	0;
	ld.shared.b32 	%r1598, [%r1397];
	ld.shared.b32 	%r1599, [%r1397+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1597], {%r1585, %r1586, %r1587, %r1588};
	bar.sync 	0;
	ld.shared.b32 	%r1600, [%r1397];
	ld.shared.b32 	%r1601, [%r1397+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1597], {%r1589, %r1590, %r1591, %r1592};
	bar.sync 	0;
	ld.shared.b32 	%r1602, [%r1397];
	ld.shared.b32 	%r1603, [%r1397+32];
	bar.sync 	0;
	st.shared.v4.b32 	[%r1597], {%r1593, %r1594, %r1595, %r1596};
	bar.sync 	0;
	ld.shared.b32 	%r1604, [%r1397];
	ld.shared.b32 	%r1605, [%r1397+32];
	mul.f32 	%r1606, %r1536, %r1598;
	mul.f32 	%r1607, %r1537, %r1598;
	mul.f32 	%r1608, %r1538, %r1599;
	mul.f32 	%r1609, %r1539, %r1599;
	mul.f32 	%r1610, %r1540, %r1600;
	mul.f32 	%r1611, %r1541, %r1600;
	mul.f32 	%r1612, %r1542, %r1601;
	mul.f32 	%r1613, %r1543, %r1601;
	mul.f32 	%r1614, %r1544, %r1600;
	mul.f32 	%r1615, %r1545, %r1600;
	mul.f32 	%r1616, %r1546, %r1601;
	mul.f32 	%r1617, %r1547, %r1601;
	mul.f32 	%r1618, %r1548, %r1602;
	mul.f32 	%r1619, %r1549, %r1602;
	mul.f32 	%r1620, %r1550, %r1603;
	mul.f32 	%r1621, %r1551, %r1603;
	mul.f32 	%r1622, %r1552, %r1602;
	mul.f32 	%r1623, %r1553, %r1602;
	mul.f32 	%r1624, %r1554, %r1603;
	mul.f32 	%r1625, %r1555, %r1603;
	mul.f32 	%r1626, %r1556, %r1602;
	mul.f32 	%r1627, %r1557, %r1602;
	mul.f32 	%r1628, %r1558, %r1603;
	mul.f32 	%r1629, %r1559, %r1603;
	mul.f32 	%r1630, %r1560, %r1604;
	mul.f32 	%r1631, %r1561, %r1604;
	mul.f32 	%r1632, %r1562, %r1605;
	mul.f32 	%r1633, %r1563, %r1605;
	mul.f32 	%r1634, %r1564, %r1604;
	mul.f32 	%r1635, %r1565, %r1604;
	mul.f32 	%r1636, %r1566, %r1605;
	mul.f32 	%r1637, %r1567, %r1605;
	mul.f32 	%r1638, %r1568, %r1604;
	mul.f32 	%r1639, %r1569, %r1604;
	mul.f32 	%r1640, %r1570, %r1605;
	mul.f32 	%r1641, %r1571, %r1605;
	mul.f32 	%r1642, %r1572, %r1604;
	mul.f32 	%r1643, %r1573, %r1604;
	mul.f32 	%r1644, %r1574, %r1605;
	mul.f32 	%r1645, %r1575, %r1605;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p58, %r1369, %r1361;
	setp.gt.u32 	%p59, %r1369, %r1368;
	setp.gt.u32 	%p60, %r1376, %r1361;
	setp.gt.u32 	%p61, %r1376, %r1368;
	setp.gt.u32 	%p62, %r1375, %r1366;
	setp.gt.u32 	%p63, %r1374, %r1367;
	setp.gt.u32 	%p64, %r1374, %r1366;
	setp.gt.u32 	%p65, %r1373, %r1364;
	setp.gt.u32 	%p66, %r1372, %r1365;
	setp.gt.u32 	%p67, %r1372, %r1364;
	setp.gt.u32 	%p68, %r1371, %r1362;
	setp.gt.u32 	%p69, %r1370, %r1363;
	setp.gt.u32 	%p70, %r1370, %r1362;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r1646, %r6, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd97, %r1646, 4;
	add.s64 	%rd98, %rd15, %rd97;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r1647, %r2, 4, 2;
	or.b32 	%r1648, %r1353, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1649, %r1648, 60;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r1650, %r1647, %r1;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r1651, %r1650, 56;
	or.b32 	%r1652, %r1650, 52;
	or.b32 	%r1653, %r1650, 48;
	or.b32 	%r1654, %r1650, 44;
	or.b32 	%r1655, %r1650, 40;
	or.b32 	%r1656, %r1650, 36;
	or.b32 	%r1657, %r1650, 32;
	or.b32 	%r1658, %r1650, 28;
	or.b32 	%r1659, %r1650, 24;
	or.b32 	%r1660, %r1650, 20;
	or.b32 	%r1661, %r1650, 16;
	or.b32 	%r1662, %r1650, 12;
	or.b32 	%r1663, %r1650, 8;
	or.b32 	%r1664, %r1650, 4;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd99, %r1650, 8192;
	add.s64 	%rd100, %rd98, %rd99;
	mul.wide.u32 	%rd101, %r1355, 4;
	add.s64 	%rd76, %rd100, %rd101;
	mul.wide.s32 	%rd102, %r1664, 8192;
	add.s64 	%rd103, %rd98, %rd102;
	add.s64 	%rd77, %rd103, %rd101;
	mul.wide.s32 	%rd104, %r1663, 8192;
	add.s64 	%rd105, %rd98, %rd104;
	add.s64 	%rd78, %rd105, %rd101;
	mul.wide.s32 	%rd106, %r1662, 8192;
	add.s64 	%rd107, %rd98, %rd106;
	add.s64 	%rd79, %rd107, %rd101;
	mul.wide.s32 	%rd108, %r1661, 8192;
	add.s64 	%rd109, %rd98, %rd108;
	add.s64 	%rd80, %rd109, %rd101;
	mul.wide.s32 	%rd110, %r1660, 8192;
	add.s64 	%rd111, %rd98, %rd110;
	add.s64 	%rd81, %rd111, %rd101;
	mul.wide.s32 	%rd112, %r1659, 8192;
	add.s64 	%rd113, %rd98, %rd112;
	add.s64 	%rd82, %rd113, %rd101;
	mul.wide.s32 	%rd114, %r1658, 8192;
	add.s64 	%rd115, %rd98, %rd114;
	add.s64 	%rd83, %rd115, %rd101;
	mul.wide.s32 	%rd116, %r1657, 8192;
	add.s64 	%rd117, %rd98, %rd116;
	add.s64 	%rd84, %rd117, %rd101;
	mul.wide.s32 	%rd118, %r1656, 8192;
	add.s64 	%rd119, %rd98, %rd118;
	add.s64 	%rd85, %rd119, %rd101;
	mul.wide.s32 	%rd120, %r1655, 8192;
	add.s64 	%rd121, %rd98, %rd120;
	add.s64 	%rd86, %rd121, %rd101;
	mul.wide.s32 	%rd122, %r1654, 8192;
	add.s64 	%rd123, %rd98, %rd122;
	add.s64 	%rd87, %rd123, %rd101;
	mul.wide.s32 	%rd124, %r1653, 8192;
	add.s64 	%rd125, %rd98, %rd124;
	add.s64 	%rd88, %rd125, %rd101;
	mul.wide.s32 	%rd126, %r1652, 8192;
	add.s64 	%rd127, %rd98, %rd126;
	add.s64 	%rd89, %rd127, %rd101;
	mul.wide.s32 	%rd128, %r1651, 8192;
	add.s64 	%rd129, %rd98, %rd128;
	add.s64 	%rd90, %rd129, %rd101;
	mul.wide.s32 	%rd130, %r1649, 8192;
	add.s64 	%rd131, %rd98, %rd130;
	add.s64 	%rd91, %rd131, %rd101;
	setp.lt.s32 	%p71, %r1649, %r167;
	setp.lt.s32 	%p72, %r1651, %r167;
	setp.lt.s32 	%p73, %r1652, %r167;
	setp.lt.s32 	%p74, %r1653, %r167;
	setp.lt.s32 	%p75, %r1654, %r167;
	setp.lt.s32 	%p76, %r1655, %r167;
	setp.lt.s32 	%p77, %r1656, %r167;
	setp.lt.s32 	%p78, %r1657, %r167;
	setp.lt.s32 	%p79, %r1658, %r167;
	setp.lt.s32 	%p80, %r1659, %r167;
	setp.lt.s32 	%p81, %r1660, %r167;
	setp.lt.s32 	%p82, %r1661, %r167;
	setp.lt.s32 	%p83, %r1662, %r167;
	setp.lt.s32 	%p84, %r1663, %r167;
	setp.lt.s32 	%p85, %r1664, %r167;
	setp.lt.s32 	%p86, %r1650, %r167;
	and.pred 	%p25, %p13, %p86;
	and.pred 	%p26, %p13, %p85;
	and.pred 	%p27, %p13, %p84;
	and.pred 	%p28, %p13, %p83;
	and.pred 	%p29, %p13, %p82;
	and.pred 	%p30, %p13, %p81;
	and.pred 	%p31, %p13, %p80;
	and.pred 	%p32, %p13, %p79;
	and.pred 	%p33, %p13, %p78;
	and.pred 	%p34, %p13, %p77;
	and.pred 	%p35, %p13, %p76;
	and.pred 	%p36, %p13, %p75;
	and.pred 	%p37, %p13, %p74;
	and.pred 	%p38, %p13, %p73;
	and.pred 	%p39, %p13, %p72;
	and.pred 	%p40, %p13, %p71;
	bar.sync 	0;
	shl.b32 	%r1665, %r2, 4;
	and.b32 	%r1666, %r1665, 448;
	or.b32 	%r1667, %r1361, %r1666;
	and.b32 	%r1668, %r1354, 252;
	shr.u32 	%r1669, %r1666, 2;
	add.s32 	%r1670, %r205, %r1669;
	shl.b32 	%r1671, %r1667, 2;
	add.s32 	%r1672, %r1670, %r1671;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1673, %r1606, 0, %p57;
	selp.b32 	%r1674, %r1673, 0, %p58;
	selp.b32 	%r1675, %r1674, 0, %p56;
	selp.b32 	%r1676, %r1607, 0, %p55;
	selp.b32 	%r1677, %r1676, 0, %p59;
	selp.b32 	%r1678, %r1677, 0, %p56;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672], {%r1675, %r1678};
	or.b32 	%r1679, %r1667, 512;
	shr.u32 	%r1680, %r1679, 2;
	and.b32 	%r1681, %r1680, 240;
	add.s32 	%r1682, %r205, %r1681;
	add.s32 	%r1683, %r1682, %r1671;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1684, %r1608, 0, %p57;
	selp.b32 	%r1685, %r1684, 0, %p60;
	selp.b32 	%r1686, %r1685, 0, %p54;
	selp.b32 	%r1687, %r1609, 0, %p55;
	selp.b32 	%r1688, %r1687, 0, %p61;
	selp.b32 	%r1689, %r1688, 0, %p54;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2048], {%r1686, %r1689};
	mov.b32 	%r1690, 0;
	st.shared.v2.b32 	[%r1672+64], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2112], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1672+128], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2176], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1672+192], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2240], {%r1690, %r1690};
	bar.sync 	0;
	and.b32 	%r1691, %r2, 48;
	add.s32 	%r1692, %r205, %r1691;
	shl.b32 	%r1693, %r1668, 2;
	add.s32 	%r1694, %r1692, %r1693;
	ld.shared.v4.b32 	{%r1289, %r1290, %r1291, %r1292}, [%r1694];
	or.b32 	%r1695, %r1668, 256;
	shr.u32 	%r1696, %r1695, 2;
	and.b32 	%r1697, %r1696, 112;
	add.s32 	%r1698, %r205, %r1697;
	add.s32 	%r1699, %r1698, %r1693;
	ld.shared.v4.b32 	{%r1293, %r1294, %r1295, %r1296}, [%r1699+1024];
	or.b32 	%r1700, %r1668, 512;
	shr.u32 	%r1701, %r1700, 2;
	and.b32 	%r1702, %r1701, 176;
	add.s32 	%r1703, %r205, %r1702;
	add.s32 	%r1704, %r1703, %r1693;
	ld.shared.v4.b32 	{%r1297, %r1298, %r1299, %r1300}, [%r1704+2048];
	or.b32 	%r1705, %r1668, 768;
	shr.u32 	%r1706, %r1705, 2;
	and.b32 	%r1707, %r1706, 240;
	add.s32 	%r1708, %r205, %r1707;
	add.s32 	%r1709, %r1708, %r1693;
	ld.shared.v4.b32 	{%r1301, %r1302, %r1303, %r1304}, [%r1709+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1710, %r1610, 0, %p57;
	selp.b32 	%r1711, %r1710, 0, %p53;
	selp.b32 	%r1712, %r1611, 0, %p55;
	selp.b32 	%r1713, %r1712, 0, %p53;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672], {%r1711, %r1713};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1714, %r1612, 0, %p57;
	selp.b32 	%r1715, %r1714, 0, %p52;
	selp.b32 	%r1716, %r1613, 0, %p55;
	selp.b32 	%r1717, %r1716, 0, %p52;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2048], {%r1715, %r1717};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1718, %r1614, 0, %p51;
	selp.b32 	%r1719, %r1718, 0, %p58;
	selp.b32 	%r1720, %r1719, 0, %p53;
	selp.b32 	%r1721, %r1615, 0, %p50;
	selp.b32 	%r1722, %r1721, 0, %p62;
	selp.b32 	%r1723, %r1722, 0, %p53;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+64], {%r1720, %r1723};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1724, %r1616, 0, %p51;
	selp.b32 	%r1725, %r1724, 0, %p63;
	selp.b32 	%r1726, %r1725, 0, %p52;
	selp.b32 	%r1727, %r1617, 0, %p50;
	selp.b32 	%r1728, %r1727, 0, %p64;
	selp.b32 	%r1729, %r1728, 0, %p52;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2112], {%r1726, %r1729};
	st.shared.v2.b32 	[%r1672+128], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2176], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1672+192], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2240], {%r1690, %r1690};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1305, %r1306, %r1307, %r1308}, [%r1694];
	ld.shared.v4.b32 	{%r1309, %r1310, %r1311, %r1312}, [%r1699+1024];
	ld.shared.v4.b32 	{%r1313, %r1314, %r1315, %r1316}, [%r1704+2048];
	ld.shared.v4.b32 	{%r1317, %r1318, %r1319, %r1320}, [%r1709+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1730, %r1618, 0, %p57;
	selp.b32 	%r1731, %r1730, 0, %p49;
	selp.b32 	%r1732, %r1619, 0, %p55;
	selp.b32 	%r1733, %r1732, 0, %p49;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672], {%r1731, %r1733};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1734, %r1620, 0, %p57;
	selp.b32 	%r1735, %r1734, 0, %p48;
	selp.b32 	%r1736, %r1621, 0, %p55;
	selp.b32 	%r1737, %r1736, 0, %p48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2048], {%r1735, %r1737};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1738, %r1622, 0, %p51;
	selp.b32 	%r1739, %r1738, 0, %p49;
	selp.b32 	%r1740, %r1623, 0, %p50;
	selp.b32 	%r1741, %r1740, 0, %p49;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+64], {%r1739, %r1741};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1742, %r1624, 0, %p51;
	selp.b32 	%r1743, %r1742, 0, %p48;
	selp.b32 	%r1744, %r1625, 0, %p50;
	selp.b32 	%r1745, %r1744, 0, %p48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2112], {%r1743, %r1745};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1746, %r1626, 0, %p47;
	selp.b32 	%r1747, %r1746, 0, %p58;
	selp.b32 	%r1748, %r1747, 0, %p49;
	selp.b32 	%r1749, %r1627, 0, %p46;
	selp.b32 	%r1750, %r1749, 0, %p65;
	selp.b32 	%r1751, %r1750, 0, %p49;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+128], {%r1748, %r1751};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1752, %r1628, 0, %p47;
	selp.b32 	%r1753, %r1752, 0, %p66;
	selp.b32 	%r1754, %r1753, 0, %p48;
	selp.b32 	%r1755, %r1629, 0, %p46;
	selp.b32 	%r1756, %r1755, 0, %p67;
	selp.b32 	%r1757, %r1756, 0, %p48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2176], {%r1754, %r1757};
	st.shared.v2.b32 	[%r1672+192], {%r1690, %r1690};
	st.shared.v2.b32 	[%r1683+2240], {%r1690, %r1690};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1321, %r1322, %r1323, %r1324}, [%r1694];
	ld.shared.v4.b32 	{%r1325, %r1326, %r1327, %r1328}, [%r1699+1024];
	ld.shared.v4.b32 	{%r1329, %r1330, %r1331, %r1332}, [%r1704+2048];
	ld.shared.v4.b32 	{%r1333, %r1334, %r1335, %r1336}, [%r1709+3072];
	bar.sync 	0;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1758, %r1630, 0, %p57;
	selp.b32 	%r1759, %r1758, 0, %p45;
	selp.b32 	%r1760, %r1631, 0, %p55;
	selp.b32 	%r1761, %r1760, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672], {%r1759, %r1761};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1762, %r1632, 0, %p57;
	selp.b32 	%r1763, %r1762, 0, %p44;
	selp.b32 	%r1764, %r1633, 0, %p55;
	selp.b32 	%r1765, %r1764, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2048], {%r1763, %r1765};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1766, %r1634, 0, %p51;
	selp.b32 	%r1767, %r1766, 0, %p45;
	selp.b32 	%r1768, %r1635, 0, %p50;
	selp.b32 	%r1769, %r1768, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+64], {%r1767, %r1769};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1770, %r1636, 0, %p51;
	selp.b32 	%r1771, %r1770, 0, %p44;
	selp.b32 	%r1772, %r1637, 0, %p50;
	selp.b32 	%r1773, %r1772, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2112], {%r1771, %r1773};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1774, %r1638, 0, %p47;
	selp.b32 	%r1775, %r1774, 0, %p45;
	selp.b32 	%r1776, %r1639, 0, %p46;
	selp.b32 	%r1777, %r1776, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+128], {%r1775, %r1777};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1778, %r1640, 0, %p47;
	selp.b32 	%r1779, %r1778, 0, %p44;
	selp.b32 	%r1780, %r1641, 0, %p46;
	selp.b32 	%r1781, %r1780, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2176], {%r1779, %r1781};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1782, %r1642, 0, %p43;
	selp.b32 	%r1783, %r1782, 0, %p58;
	selp.b32 	%r1784, %r1783, 0, %p45;
	selp.b32 	%r1785, %r1643, 0, %p42;
	selp.b32 	%r1786, %r1785, 0, %p68;
	selp.b32 	%r1787, %r1786, 0, %p45;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1672+192], {%r1784, %r1787};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r1788, %r1644, 0, %p43;
	selp.b32 	%r1789, %r1788, 0, %p69;
	selp.b32 	%r1790, %r1789, 0, %p44;
	selp.b32 	%r1791, %r1645, 0, %p42;
	selp.b32 	%r1792, %r1791, 0, %p70;
	selp.b32 	%r1793, %r1792, 0, %p44;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r1683+2240], {%r1790, %r1793};
	bar.sync 	0;
	ld.shared.v4.b32 	{%r1337, %r1338, %r1339, %r1340}, [%r1694];
	ld.shared.v4.b32 	{%r1341, %r1342, %r1343, %r1344}, [%r1699+1024];
	ld.shared.v4.b32 	{%r1345, %r1346, %r1347, %r1348}, [%r1704+2048];
	ld.shared.v4.b32 	{%r1349, %r1350, %r1351, %r1352}, [%r1709+3072];
	// begin inline asm
	@%p25 st.global.v4.b32 [ %rd76 + 0 ], { %r1289, %r1290, %r1291, %r1292 };
	// end inline asm
	// begin inline asm
	@%p26 st.global.v4.b32 [ %rd77 + 0 ], { %r1293, %r1294, %r1295, %r1296 };
	// end inline asm
	// begin inline asm
	@%p27 st.global.v4.b32 [ %rd78 + 0 ], { %r1297, %r1298, %r1299, %r1300 };
	// end inline asm
	// begin inline asm
	@%p28 st.global.v4.b32 [ %rd79 + 0 ], { %r1301, %r1302, %r1303, %r1304 };
	// end inline asm
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd80 + 0 ], { %r1305, %r1306, %r1307, %r1308 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd81 + 0 ], { %r1309, %r1310, %r1311, %r1312 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd82 + 0 ], { %r1313, %r1314, %r1315, %r1316 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd83 + 0 ], { %r1317, %r1318, %r1319, %r1320 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd84 + 0 ], { %r1321, %r1322, %r1323, %r1324 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd85 + 0 ], { %r1325, %r1326, %r1327, %r1328 };
	// end inline asm
	// begin inline asm
	@%p35 st.global.v4.b32 [ %rd86 + 0 ], { %r1329, %r1330, %r1331, %r1332 };
	// end inline asm
	// begin inline asm
	@%p36 st.global.v4.b32 [ %rd87 + 0 ], { %r1333, %r1334, %r1335, %r1336 };
	// end inline asm
	// begin inline asm
	@%p37 st.global.v4.b32 [ %rd88 + 0 ], { %r1337, %r1338, %r1339, %r1340 };
	// end inline asm
	// begin inline asm
	@%p38 st.global.v4.b32 [ %rd89 + 0 ], { %r1341, %r1342, %r1343, %r1344 };
	// end inline asm
	// begin inline asm
	@%p39 st.global.v4.b32 [ %rd90 + 0 ], { %r1345, %r1346, %r1347, %r1348 };
	// end inline asm
	// begin inline asm
	@%p40 st.global.v4.b32 [ %rd91 + 0 ], { %r1349, %r1350, %r1351, %r1352 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
