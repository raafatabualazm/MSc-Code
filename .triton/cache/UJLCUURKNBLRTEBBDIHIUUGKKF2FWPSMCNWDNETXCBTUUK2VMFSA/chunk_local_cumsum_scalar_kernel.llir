; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

define ptx_kernel void @chunk_local_cumsum_scalar_kernel(ptr addrspace(1) %0, ptr addrspace(1) %1, i32 %2, ptr addrspace(1) readnone captures(none) %3) local_unnamed_addr #0 !dbg !5 {
  %5 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %6 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %7 = and i32 %6, 65504, !dbg !10
  %8 = and i32 %6, 31, !dbg !11
  %9 = mul i32 %7, %2, !dbg !12
  %10 = sext i32 %9 to i64, !dbg !13
  %11 = getelementptr float, ptr addrspace(1) %0, i64 %10, !dbg !13
  %12 = zext nneg i32 %8 to i64, !dbg !14
  %13 = getelementptr float, ptr addrspace(1) %11, i64 %12, !dbg !14
  %14 = shl i32 %5, 6, !dbg !15
  %15 = sext i32 %2 to i64, !dbg !16
  %16 = sext i32 %14 to i64, !dbg !16
  %17 = getelementptr float, ptr addrspace(1) %1, i64 %10, !dbg !17
  %18 = getelementptr float, ptr addrspace(1) %17, i64 %12, !dbg !18
  %19 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !19
  %20 = and i32 %19, 31, !dbg !19
  %21 = or disjoint i32 %20, 32, !dbg !19
  %22 = zext nneg i32 %20 to i64, !dbg !19
  %23 = zext nneg i32 %21 to i64, !dbg !19
  %24 = or disjoint i64 %16, %22, !dbg !19
  %25 = or disjoint i64 %23, %16, !dbg !19
  %26 = shl nsw i64 %24, 5, !dbg !19
  %27 = shl nsw i64 %25, 5, !dbg !19
  %28 = getelementptr float, ptr addrspace(1) %13, i64 %26, !dbg !19
  %29 = getelementptr float, ptr addrspace(1) %13, i64 %27, !dbg !19
  %30 = icmp sgt i32 %14, -1, !dbg !19
  %31 = icmp slt i64 %24, %15, !dbg !19
  %32 = icmp slt i64 %25, %15, !dbg !19
  %33 = and i1 %30, %31, !dbg !19
  %34 = and i1 %30, %32, !dbg !19
  %35 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %28, i1 %33) #3, !dbg !19
  %36 = bitcast i32 %35 to float, !dbg !19
  %37 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09@$2 ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l,b"(ptr addrspace(1) %29, i1 %34) #3, !dbg !19
  %38 = bitcast i32 %37 to float, !dbg !19
  %39 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %35, i32 1, i32 0), !dbg !20
  %40 = bitcast i32 %39 to float, !dbg !20
  %.not = icmp eq i32 %20, 0, !dbg !20
  %41 = fadd float %36, %40, !dbg !24
  %42 = select i1 %.not, float %36, float %41, !dbg !20
  %43 = bitcast float %42 to i32, !dbg !20
  %44 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %43, i32 2, i32 0), !dbg !20
  %45 = bitcast i32 %44 to float, !dbg !20
  %46 = icmp samesign ugt i32 %20, 1, !dbg !20
  %47 = fadd float %42, %45, !dbg !24
  %48 = select i1 %46, float %47, float %42, !dbg !20
  %49 = bitcast float %48 to i32, !dbg !20
  %50 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %49, i32 4, i32 0), !dbg !20
  %51 = bitcast i32 %50 to float, !dbg !20
  %52 = icmp samesign ugt i32 %20, 3, !dbg !20
  %53 = fadd float %48, %51, !dbg !24
  %54 = select i1 %52, float %53, float %48, !dbg !20
  %55 = bitcast float %54 to i32, !dbg !20
  %56 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %55, i32 8, i32 0), !dbg !20
  %57 = bitcast i32 %56 to float, !dbg !20
  %58 = icmp samesign ugt i32 %20, 7, !dbg !20
  %59 = fadd float %54, %57, !dbg !24
  %60 = select i1 %58, float %59, float %54, !dbg !20
  %61 = bitcast float %60 to i32, !dbg !20
  %62 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %61, i32 16, i32 0), !dbg !20
  %63 = bitcast i32 %62 to float, !dbg !20
  %64 = icmp samesign ugt i32 %20, 15, !dbg !20
  %65 = fadd float %60, %63, !dbg !24
  %66 = select i1 %64, float %65, float %60, !dbg !20
  %67 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %37, i32 1, i32 0), !dbg !20
  %68 = bitcast i32 %67 to float, !dbg !20
  %69 = fadd float %38, %68, !dbg !24
  %70 = select i1 %.not, float %38, float %69, !dbg !20
  %71 = bitcast float %70 to i32, !dbg !20
  %72 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %71, i32 2, i32 0), !dbg !20
  %73 = bitcast i32 %72 to float, !dbg !20
  %74 = fadd float %70, %73, !dbg !24
  %75 = select i1 %46, float %74, float %70, !dbg !20
  %76 = bitcast float %75 to i32, !dbg !20
  %77 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %76, i32 4, i32 0), !dbg !20
  %78 = bitcast i32 %77 to float, !dbg !20
  %79 = fadd float %75, %78, !dbg !24
  %80 = select i1 %52, float %79, float %75, !dbg !20
  %81 = bitcast float %80 to i32, !dbg !20
  %82 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %81, i32 8, i32 0), !dbg !20
  %83 = bitcast i32 %82 to float, !dbg !20
  %84 = fadd float %80, %83, !dbg !24
  %85 = select i1 %58, float %84, float %80, !dbg !20
  %86 = bitcast float %85 to i32, !dbg !20
  %87 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %86, i32 16, i32 0), !dbg !20
  %88 = bitcast i32 %87 to float, !dbg !20
  %89 = fadd float %85, %88, !dbg !24
  %90 = select i1 %64, float %89, float %85, !dbg !20
  %91 = bitcast float %66 to i32, !dbg !20
  %92 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %91, i32 1, i32 0), !dbg !20
  %93 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %91, i32 31, i32 31), !dbg !20
  %94 = bitcast i32 %93 to float, !dbg !20
  %95 = fadd float %90, %94, !dbg !24
  %96 = bitcast float %95 to i32, !dbg !20
  %97 = tail call i32 @llvm.nvvm.shfl.sync.up.i32(i32 -1, i32 %96, i32 1, i32 0), !dbg !20
  %98 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %96, i32 31, i32 31), !dbg !20
  %99 = getelementptr float, ptr addrspace(1) %18, i64 %26, !dbg !25
  %100 = getelementptr float, ptr addrspace(1) %18, i64 %27, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %91, ptr addrspace(1) %99, i1 %33) #3, !dbg !25
  tail call void asm sideeffect "@$2 st.global.b32 [ $1 + 0 ], { $0 };", "r,l,b"(i32 %96, ptr addrspace(1) %100, i1 %34) #3, !dbg !25
  ret void, !dbg !26
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.up.i32(i32, i32, i32, i32) #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #2

attributes #0 = { "nvvm.reqntid"="32" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "cumsum.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/utils")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "chunk_local_cumsum_scalar_kernel", linkageName: "chunk_local_cumsum_scalar_kernel", scope: !1, file: !1, line: 28, type: !6, scopeLine: 28, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 43, column: 30, scope: !5)
!9 = !DILocation(line: 43, column: 48, scope: !5)
!10 = !DILocation(line: 50, column: 25, scope: !5)
!11 = !DILocation(line: 44, column: 33, scope: !5)
!12 = !DILocation(line: 56, column: 40, scope: !5)
!13 = !DILocation(line: 56, column: 36, scope: !5)
!14 = !DILocation(line: 56, column: 44, scope: !5)
!15 = !DILocation(line: 56, column: 68, scope: !5)
!16 = !DILocation(line: 56, column: 81, scope: !5)
!17 = !DILocation(line: 57, column: 36, scope: !5)
!18 = !DILocation(line: 57, column: 44, scope: !5)
!19 = !DILocation(line: 59, column: 18, scope: !5)
!20 = !DILocation(line: 340, column: 60, scope: !21, inlinedAt: !23)
!21 = distinct !DILexicalBlockFile(scope: !5, file: !22, discriminator: 0)
!22 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language")
!23 = !DILocation(line: 60, column: 20, scope: !5)
!24 = !DILocation(line: 260, column: 15, scope: !21, inlinedAt: !23)
!25 = !DILocation(line: 66, column: 18, scope: !5)
!26 = !DILocation(line: 66, column: 4, scope: !5)
