; ModuleID = 'LLVMDialectModule'
source_filename = "LLVMDialectModule"
target datalayout = "e-p3:32:32-p4:32:32-p5:32:32-p6:32:32-p7:32:32-i64:64-i128:128-v16:16-v32:32-n16:32:64"

@global_smem = external addrspace(3) global [0 x i8], align 16

define ptx_kernel void @chunk_gated_delta_rule_fwd_kernel_h_blockdim64(ptr addrspace(1) %0, ptr addrspace(1) %1, ptr addrspace(1) %2, ptr addrspace(1) %3, ptr addrspace(1) %4, ptr addrspace(1) %5, ptr addrspace(1) %6, i32 %7, ptr addrspace(1) readnone captures(none) %8) local_unnamed_addr #0 !dbg !5 {
  %10 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.x(), !dbg !8
  %11 = tail call i32 @llvm.nvvm.read.ptx.sreg.ctaid.y(), !dbg !9
  %12 = and i32 %11, 31, !dbg !10
  %13 = add i32 %7, 63, !dbg !11
  %14 = sdiv i32 %13, 64, !dbg !15
  %15 = shl nuw nsw i32 %11, 14, !dbg !16
  %16 = and i32 %15, 1073217536, !dbg !16
  %17 = mul i32 %16, %14, !dbg !17
  %18 = shl nuw nsw i32 %12, 14, !dbg !17
  %19 = or disjoint i32 %17, %18, !dbg !17
  %20 = sext i32 %19 to i64, !dbg !18
  %21 = getelementptr bfloat, ptr addrspace(1) %5, i64 %20, !dbg !18
  %22 = and i32 %11, 65504, !dbg !19
  %23 = mul i32 %22, %7, !dbg !20
  %24 = or disjoint i32 %23, %12, !dbg !21
  %25 = shl i32 %24, 7, !dbg !22
  %26 = sext i32 %25 to i64, !dbg !23
  %27 = getelementptr bfloat, ptr addrspace(1) %1, i64 %26, !dbg !23
  %28 = getelementptr bfloat, ptr addrspace(1) %0, i64 %26, !dbg !24
  %29 = getelementptr bfloat, ptr addrspace(1) %2, i64 %26, !dbg !25
  %30 = getelementptr bfloat, ptr addrspace(1) %3, i64 %26, !dbg !26
  %31 = shl i32 %10, 6, !dbg !27
  %32 = sext i32 %31 to i64, !dbg !28
  %33 = tail call i32 @llvm.nvvm.read.ptx.sreg.tid.x(), !dbg !29
  %34 = lshr i32 %33, 5, !dbg !29
  %35 = and i32 %33, 8, !dbg !29
  %.not = icmp eq i32 %35, 0, !dbg !29
  %36 = and i32 %33, 16, !dbg !29
  %.not215 = icmp eq i32 %36, 0, !dbg !29
  %37 = and i32 %33, 32, !dbg !29
  %38 = icmp eq i32 %37, 0, !dbg !29
  %39 = and i32 %33, 64, !dbg !29
  %40 = lshr i32 %33, 3, !dbg !29
  %41 = and i32 %40, 15, !dbg !29
  %42 = or disjoint i32 %41, 16, !dbg !29
  %43 = or disjoint i32 %41, 32, !dbg !29
  %44 = or disjoint i32 %41, 48, !dbg !29
  %45 = shl nuw nsw i32 %33, 3, !dbg !29
  %46 = and i32 %45, 24, !dbg !29
  %47 = and i32 %33, 4, !dbg !29
  %48 = shl nuw nsw i32 %47, 3, !dbg !29
  %49 = or disjoint i32 %46, %48, !dbg !29
  %50 = lshr i32 %33, 2, !dbg !29
  %51 = and i32 %50, 7, !dbg !29
  %52 = lshr i32 %33, 1, !dbg !29
  %53 = and i32 %52, 48, !dbg !29
  %54 = or disjoint i32 %53, %51, !dbg !29
  %55 = or disjoint i32 %54, 8, !dbg !29
  %56 = zext nneg i32 %41 to i64, !dbg !29
  %57 = zext nneg i32 %42 to i64, !dbg !29
  %58 = zext nneg i32 %43 to i64, !dbg !29
  %59 = zext nneg i32 %44 to i64, !dbg !29
  %60 = zext nneg i32 %49 to i64, !dbg !29
  %61 = zext nneg i32 %54 to i64, !dbg !29
  %62 = zext nneg i32 %55 to i64, !dbg !29
  %63 = or disjoint i64 %60, %32, !dbg !29
  %64 = icmp sgt i32 %31, -1, !dbg !29
  %65 = icmp slt i64 %63, 128, !dbg !29
  %66 = and i1 %64, %65, !dbg !29
  %67 = or disjoint i64 %56, 64, !dbg !30
  %68 = or disjoint i64 %57, 64, !dbg !30
  %69 = or disjoint i64 %58, 64, !dbg !30
  %70 = or disjoint i64 %59, 64, !dbg !30
  %71 = or disjoint i64 %60, 64, !dbg !30
  %72 = sext i32 %7 to i64, !dbg !31
  %73 = sext i32 %23 to i64, !dbg !32
  %74 = getelementptr float, ptr addrspace(1) %4, i64 %73, !dbg !32
  %75 = zext nneg i32 %12 to i64, !dbg !33
  %76 = getelementptr float, ptr addrspace(1) %74, i64 %75, !dbg !33
  %77 = icmp sgt i32 %13, 63, !dbg !34
  %78 = shl nuw nsw i64 %56, 12, !dbg !35
  %79 = shl nuw nsw i64 %57, 12, !dbg !35
  %80 = shl nuw nsw i64 %58, 12, !dbg !35
  %81 = shl nuw nsw i64 %59, 12, !dbg !35
  %82 = or disjoint i64 %78, %60, !dbg !35
  %83 = or disjoint i64 %79, %60, !dbg !35
  %84 = or disjoint i64 %80, %60, !dbg !35
  %85 = or disjoint i64 %81, %60, !dbg !35
  %86 = getelementptr bfloat, ptr addrspace(1) %29, i64 %82, !dbg !35
  %87 = getelementptr bfloat, ptr addrspace(1) %29, i64 %83, !dbg !35
  %88 = getelementptr bfloat, ptr addrspace(1) %29, i64 %84, !dbg !35
  %89 = getelementptr bfloat, ptr addrspace(1) %29, i64 %85, !dbg !35
  %90 = icmp slt i32 %41, %7, !dbg !35
  %91 = icmp slt i32 %42, %7, !dbg !35
  %92 = icmp slt i32 %43, %7, !dbg !35
  %93 = icmp slt i32 %44, %7, !dbg !35
  %94 = and i1 %90, %77, !dbg !34
  %95 = and i1 %91, %77, !dbg !34
  %96 = and i1 %92, %77, !dbg !34
  %97 = and i1 %93, %77, !dbg !34
  %98 = select i1 %.not, i32 0, i32 72, !dbg !35
  %99 = select i1 %.not215, i32 0, i32 144, !dbg !35
  %100 = select i1 %38, i32 0, i32 288, !dbg !35
  %101 = shl nuw nsw i32 %39, 3, !dbg !35
  %102 = or disjoint i32 %98, %101, !dbg !35
  %103 = xor i32 %102, %49, !dbg !35
  %104 = xor i32 %103, %99, !dbg !35
  %105 = xor i32 %104, %100, !dbg !35
  %106 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %105, !dbg !35
  %107 = or disjoint i32 %49, 1024, !dbg !35
  %108 = or disjoint i32 %102, %99, !dbg !35
  %109 = or disjoint i32 %108, %100, !dbg !35
  %110 = xor i32 %109, %107, !dbg !35
  %111 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %110, !dbg !35
  %112 = or disjoint i32 %49, 2048, !dbg !35
  %113 = xor i32 %109, %112, !dbg !35
  %114 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %113, !dbg !35
  %115 = or disjoint i32 %49, 3072, !dbg !35
  %116 = xor i32 %109, %115, !dbg !35
  %117 = getelementptr inbounds nuw bfloat, ptr addrspace(3) @global_smem, i32 %116, !dbg !35
  %118 = select i1 %94, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %106, ptr addrspace(1) %86, i32 %118) #2, !dbg !35
  %119 = select i1 %95, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %111, ptr addrspace(1) %87, i32 %119) #2, !dbg !35
  %120 = select i1 %96, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %114, ptr addrspace(1) %88, i32 %120) #2, !dbg !35
  %121 = select i1 %97, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %117, ptr addrspace(1) %89, i32 %121) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %122 = or disjoint i64 %71, %78, !dbg !36
  %123 = or disjoint i64 %79, %71, !dbg !36
  %124 = or disjoint i64 %80, %71, !dbg !36
  %125 = or disjoint i64 %81, %71, !dbg !36
  %126 = getelementptr bfloat, ptr addrspace(1) %29, i64 %122, !dbg !36
  %127 = getelementptr bfloat, ptr addrspace(1) %29, i64 %123, !dbg !36
  %128 = getelementptr bfloat, ptr addrspace(1) %29, i64 %124, !dbg !36
  %129 = getelementptr bfloat, ptr addrspace(1) %29, i64 %125, !dbg !36
  %130 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %105, !dbg !36
  %131 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %110, !dbg !36
  %132 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %113, !dbg !36
  %133 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %130, ptr addrspace(1) %126, i32 %118) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %131, ptr addrspace(1) %127, i32 %119) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %132, ptr addrspace(1) %128, i32 %120) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %133, ptr addrspace(1) %129, i32 %121) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %134 = add nsw i64 %63, %78, !dbg !37
  %135 = add nsw i64 %79, %63, !dbg !37
  %136 = add nsw i64 %80, %63, !dbg !37
  %137 = add nsw i64 %81, %63, !dbg !37
  %138 = getelementptr bfloat, ptr addrspace(1) %27, i64 %134, !dbg !37
  %139 = getelementptr bfloat, ptr addrspace(1) %27, i64 %135, !dbg !37
  %140 = getelementptr bfloat, ptr addrspace(1) %27, i64 %136, !dbg !37
  %141 = getelementptr bfloat, ptr addrspace(1) %27, i64 %137, !dbg !37
  %142 = and i1 %66, %90, !dbg !37
  %143 = and i1 %66, %91, !dbg !37
  %144 = and i1 %66, %92, !dbg !37
  %145 = and i1 %66, %93, !dbg !37
  %146 = and i1 %77, %142, !dbg !34
  %147 = and i1 %77, %143, !dbg !34
  %148 = and i1 %77, %144, !dbg !34
  %149 = and i1 %77, %145, !dbg !34
  %and.ra611 = and i32 %33, 56, !dbg !37
  %150 = xor i32 %49, %and.ra611, !dbg !37
  %151 = shl nuw nsw i32 %41, 6, !dbg !37
  %152 = or disjoint i32 %150, %151, !dbg !37
  %153 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %152, !dbg !37
  %154 = or disjoint i32 %152, 1024, !dbg !37
  %155 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %154, !dbg !37
  %156 = or disjoint i32 %152, 2048, !dbg !37
  %157 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %156, !dbg !37
  %158 = or disjoint i32 %152, 3072, !dbg !37
  %159 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %158, !dbg !37
  %160 = select i1 %146, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %153, ptr addrspace(1) %138, i32 %160) #2, !dbg !37
  %161 = select i1 %147, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %155, ptr addrspace(1) %139, i32 %161) #2, !dbg !37
  %162 = select i1 %148, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %157, ptr addrspace(1) %140, i32 %162) #2, !dbg !37
  %163 = select i1 %149, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %159, ptr addrspace(1) %141, i32 %163) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx = shl nuw nsw i64 %61, 7, !dbg !38
  %164 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx, !dbg !38
  %.idx4 = shl nuw nsw i64 %62, 7, !dbg !38
  %165 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx4, !dbg !38
  %166 = icmp slt i32 %54, %7, !dbg !38
  %167 = icmp slt i32 %55, %7, !dbg !38
  %168 = and i1 %166, %77, !dbg !34
  %169 = and i1 %167, %77, !dbg !34
  %170 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140288), i32 %54, !dbg !38
  %171 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140288), i32 %55, !dbg !38
  %172 = and i32 %33, 3, !dbg !38
  %173 = icmp eq i32 %172, 0, !dbg !38
  %174 = select i1 %168, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %170, ptr addrspace(1) %164, i32 %174, i1 %173) #2, !dbg !38
  %175 = select i1 %169, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %171, ptr addrspace(1) %165, i32 %175, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %176 = getelementptr bfloat, ptr addrspace(1) %28, i64 %82, !dbg !39
  %177 = getelementptr bfloat, ptr addrspace(1) %28, i64 %83, !dbg !39
  %178 = getelementptr bfloat, ptr addrspace(1) %28, i64 %84, !dbg !39
  %179 = getelementptr bfloat, ptr addrspace(1) %28, i64 %85, !dbg !39
  %180 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %105, !dbg !39
  %181 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %110, !dbg !39
  %182 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %113, !dbg !39
  %183 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %180, ptr addrspace(1) %176, i32 %118) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %181, ptr addrspace(1) %177, i32 %119) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %182, ptr addrspace(1) %178, i32 %120) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %183, ptr addrspace(1) %179, i32 %121) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %184 = getelementptr bfloat, ptr addrspace(1) %28, i64 %122, !dbg !40
  %185 = getelementptr bfloat, ptr addrspace(1) %28, i64 %123, !dbg !40
  %186 = getelementptr bfloat, ptr addrspace(1) %28, i64 %124, !dbg !40
  %187 = getelementptr bfloat, ptr addrspace(1) %28, i64 %125, !dbg !40
  %188 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %105, !dbg !40
  %189 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %110, !dbg !40
  %190 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %113, !dbg !40
  %191 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %188, ptr addrspace(1) %184, i32 %118) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %189, ptr addrspace(1) %185, i32 %119) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %190, ptr addrspace(1) %186, i32 %120) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %191, ptr addrspace(1) %187, i32 %121) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  %192 = icmp sgt i32 %13, 127, !dbg !34
  %193 = or disjoint i64 %61, 64, !dbg !35
  %194 = or disjoint i64 %62, 64, !dbg !35
  %195 = shl nuw nsw i64 %67, 12, !dbg !35
  %196 = shl nuw nsw i64 %68, 12, !dbg !35
  %197 = shl nuw nsw i64 %69, 12, !dbg !35
  %198 = shl nuw nsw i64 %70, 12, !dbg !35
  %199 = or disjoint i64 %195, %60, !dbg !35
  %200 = or disjoint i64 %196, %60, !dbg !35
  %201 = or disjoint i64 %197, %60, !dbg !35
  %202 = or disjoint i64 %198, %60, !dbg !35
  %203 = getelementptr bfloat, ptr addrspace(1) %29, i64 %199, !dbg !35
  %204 = getelementptr bfloat, ptr addrspace(1) %29, i64 %200, !dbg !35
  %205 = getelementptr bfloat, ptr addrspace(1) %29, i64 %201, !dbg !35
  %206 = getelementptr bfloat, ptr addrspace(1) %29, i64 %202, !dbg !35
  %207 = icmp slt i64 %67, %72, !dbg !35
  %208 = icmp slt i64 %68, %72, !dbg !35
  %209 = icmp slt i64 %69, %72, !dbg !35
  %210 = icmp slt i64 %70, %72, !dbg !35
  %211 = and i1 %192, %207, !dbg !34
  %212 = and i1 %192, %208, !dbg !34
  %213 = and i1 %192, %209, !dbg !34
  %214 = and i1 %192, %210, !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  %215 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %105, !dbg !35
  %216 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %110, !dbg !35
  %217 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %113, !dbg !35
  %218 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 8192), i32 %116, !dbg !35
  %219 = select i1 %211, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %215, ptr addrspace(1) %203, i32 %219) #2, !dbg !35
  %220 = select i1 %212, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %216, ptr addrspace(1) %204, i32 %220) #2, !dbg !35
  %221 = select i1 %213, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %217, ptr addrspace(1) %205, i32 %221) #2, !dbg !35
  %222 = select i1 %214, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %218, ptr addrspace(1) %206, i32 %222) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %223 = or disjoint i64 %195, %71, !dbg !36
  %224 = or disjoint i64 %196, %71, !dbg !36
  %225 = or disjoint i64 %197, %71, !dbg !36
  %226 = or disjoint i64 %198, %71, !dbg !36
  %227 = getelementptr bfloat, ptr addrspace(1) %29, i64 %223, !dbg !36
  %228 = getelementptr bfloat, ptr addrspace(1) %29, i64 %224, !dbg !36
  %229 = getelementptr bfloat, ptr addrspace(1) %29, i64 %225, !dbg !36
  %230 = getelementptr bfloat, ptr addrspace(1) %29, i64 %226, !dbg !36
  %231 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %105, !dbg !36
  %232 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %110, !dbg !36
  %233 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %113, !dbg !36
  %234 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 32768), i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %231, ptr addrspace(1) %227, i32 %219) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %232, ptr addrspace(1) %228, i32 %220) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %233, ptr addrspace(1) %229, i32 %221) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %234, ptr addrspace(1) %230, i32 %222) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %235 = add nsw i64 %195, %63, !dbg !37
  %236 = add nsw i64 %196, %63, !dbg !37
  %237 = add nsw i64 %197, %63, !dbg !37
  %238 = add nsw i64 %198, %63, !dbg !37
  %239 = getelementptr bfloat, ptr addrspace(1) %27, i64 %235, !dbg !37
  %240 = getelementptr bfloat, ptr addrspace(1) %27, i64 %236, !dbg !37
  %241 = getelementptr bfloat, ptr addrspace(1) %27, i64 %237, !dbg !37
  %242 = getelementptr bfloat, ptr addrspace(1) %27, i64 %238, !dbg !37
  %243 = and i1 %66, %207, !dbg !37
  %244 = and i1 %66, %208, !dbg !37
  %245 = and i1 %66, %209, !dbg !37
  %246 = and i1 %66, %210, !dbg !37
  %247 = and i1 %192, %243, !dbg !34
  %248 = and i1 %192, %244, !dbg !34
  %249 = and i1 %192, %245, !dbg !34
  %250 = and i1 %192, %246, !dbg !34
  %251 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %152, !dbg !37
  %252 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %154, !dbg !37
  %253 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %156, !dbg !37
  %254 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 106496), i32 %158, !dbg !37
  %255 = select i1 %247, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %251, ptr addrspace(1) %239, i32 %255) #2, !dbg !37
  %256 = select i1 %248, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %252, ptr addrspace(1) %240, i32 %256) #2, !dbg !37
  %257 = select i1 %249, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %253, ptr addrspace(1) %241, i32 %257) #2, !dbg !37
  %258 = select i1 %250, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %254, ptr addrspace(1) %242, i32 %258) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx5 = shl nuw nsw i64 %193, 7, !dbg !38
  %259 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx5, !dbg !38
  %.idx6 = shl nuw nsw i64 %194, 7, !dbg !38
  %260 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx6, !dbg !38
  %261 = icmp slt i64 %193, %72, !dbg !38
  %262 = icmp slt i64 %194, %72, !dbg !38
  %263 = and i1 %192, %261, !dbg !34
  %264 = and i1 %192, %262, !dbg !34
  %265 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140544), i32 %54, !dbg !38
  %266 = getelementptr inbounds nuw float, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140544), i32 %55, !dbg !38
  %267 = select i1 %263, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %265, ptr addrspace(1) %259, i32 %267, i1 %173) #2, !dbg !38
  %268 = select i1 %264, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %266, ptr addrspace(1) %260, i32 %268, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %269 = getelementptr bfloat, ptr addrspace(1) %28, i64 %199, !dbg !39
  %270 = getelementptr bfloat, ptr addrspace(1) %28, i64 %200, !dbg !39
  %271 = getelementptr bfloat, ptr addrspace(1) %28, i64 %201, !dbg !39
  %272 = getelementptr bfloat, ptr addrspace(1) %28, i64 %202, !dbg !39
  %273 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 57344), i32 %105, !dbg !39
  %274 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 57344), i32 %110, !dbg !39
  %275 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 57344), i32 %113, !dbg !39
  %276 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 57344), i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %273, ptr addrspace(1) %269, i32 %219) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %274, ptr addrspace(1) %270, i32 %220) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %275, ptr addrspace(1) %271, i32 %221) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %276, ptr addrspace(1) %272, i32 %222) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %277 = getelementptr bfloat, ptr addrspace(1) %28, i64 %223, !dbg !40
  %278 = getelementptr bfloat, ptr addrspace(1) %28, i64 %224, !dbg !40
  %279 = getelementptr bfloat, ptr addrspace(1) %28, i64 %225, !dbg !40
  %280 = getelementptr bfloat, ptr addrspace(1) %28, i64 %226, !dbg !40
  %281 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %105, !dbg !40
  %282 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %110, !dbg !40
  %283 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %113, !dbg !40
  %284 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 81920), i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %281, ptr addrspace(1) %277, i32 %219) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %282, ptr addrspace(1) %278, i32 %220) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %283, ptr addrspace(1) %279, i32 %221) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %284, ptr addrspace(1) %280, i32 %222) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  br i1 %77, label %.lr.ph, label %._crit_edge, !dbg !34

.lr.ph:                                           ; preds = %9
  %.not3 = icmp eq i32 %47, 0, !dbg !29
  %285 = add nsw i32 %14, -2
  %286 = mul nuw nsw i32 %172, 72
  %287 = select i1 %.not3, i32 0, i32 288
  %288 = xor i32 %287, %286
  %289 = shl nuw nsw i32 %35, 6
  %290 = or disjoint i32 %288, %289
  %291 = lshr exact i32 %36, 1
  %292 = xor i32 %290, %291
  %293 = shl nuw nsw i32 %37, 5
  %294 = or disjoint i32 %292, %293
  %295 = shl nuw nsw i32 %39, 5
  %296 = xor i32 %294, %295
  %297 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904), i32 %296
  %298 = ptrtoint ptr addrspace(3) %297 to i32
  %299 = xor i32 %296, 16
  %300 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904), i32 %299
  %301 = ptrtoint ptr addrspace(3) %300 to i32
  %302 = xor i32 %296, 32
  %303 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904), i32 %302
  %304 = ptrtoint ptr addrspace(3) %303 to i32
  %305 = xor i32 %296, 48
  %306 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904), i32 %305
  %307 = ptrtoint ptr addrspace(3) %306 to i32
  %.idx358 = shl nuw nsw i64 %56, 8
  %.idx359 = shl nuw nsw i64 %57, 8
  %.idx360 = shl nuw nsw i64 %58, 8
  %.idx361 = shl nuw nsw i64 %59, 8
  %308 = shl nuw nsw i32 %33, 6
  %309 = and i32 %308, 448
  %310 = or disjoint i32 %309, %289
  %311 = or disjoint i32 %310, %291
  %312 = or disjoint i32 %311, %293
  %313 = or disjoint i32 %312, %295
  %314 = and i32 %45, 448
  %315 = or disjoint i32 %49, %314
  %.reass = or disjoint i32 %315, %101
  %316 = lshr exact i32 %313, 3
  %317 = and i32 %316, 536870904
  %318 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %317
  %319 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %318, i32 %313
  %320 = ptrtoint ptr addrspace(3) %319 to i32
  %321 = getelementptr inbounds nuw i8, ptr addrspace(3) %319, i32 32
  %322 = ptrtoint ptr addrspace(3) %321 to i32
  %323 = getelementptr inbounds nuw i8, ptr addrspace(3) %319, i32 64
  %324 = ptrtoint ptr addrspace(3) %323 to i32
  %325 = getelementptr inbounds nuw i8, ptr addrspace(3) %319, i32 96
  %326 = ptrtoint ptr addrspace(3) %325 to i32
  %327 = lshr exact i32 %.reass, 3
  %328 = and i32 %327, 268435448
  %329 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %328
  %330 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %329, i32 %.reass
  %331 = or disjoint i32 %.reass, 1024
  %332 = lshr exact i32 %331, 3
  %333 = and i32 %332, 536870904
  %334 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %333
  %335 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %334, i32 %331
  %336 = or disjoint i32 %.reass, 2048
  %337 = lshr exact i32 %336, 3
  %338 = and i32 %337, 536870904
  %339 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %338
  %340 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %339, i32 %336
  %341 = or disjoint i32 %.reass, 3072
  %342 = lshr exact i32 %341, 3
  %343 = and i32 %342, 536870904
  %344 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %343
  %345 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %344, i32 %341
  %346 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096), i32 %296
  %347 = ptrtoint ptr addrspace(3) %346 to i32
  %348 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096), i32 %299
  %349 = ptrtoint ptr addrspace(3) %348 to i32
  %350 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096), i32 %302
  %351 = ptrtoint ptr addrspace(3) %350 to i32
  %352 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096), i32 %305
  %353 = ptrtoint ptr addrspace(3) %352 to i32
  %.idx408 = shl nuw nsw i64 %67, 8
  %.idx409 = shl nuw nsw i64 %68, 8
  %.idx410 = shl nuw nsw i64 %69, 8
  %.idx411 = shl nuw nsw i64 %70, 8
  %354 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904) to i32), 4
  %355 = and i32 %354, 16383
  %356 = zext nneg i32 %355 to i64
  %357 = or disjoint i64 %356, 4611686293338849280
  %358 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904) to i32), i32 2048), 4
  %359 = and i32 %358, 16383
  %360 = zext nneg i32 %359 to i64
  %361 = or disjoint i64 %360, 4611686293338849280
  %362 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904) to i32), i32 4096), 4
  %363 = and i32 %362, 16383
  %364 = zext nneg i32 %363 to i64
  %365 = or disjoint i64 %364, 4611686293338849280
  %366 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904) to i32), i32 6144), 4
  %367 = and i32 %366, 16383
  %368 = zext nneg i32 %367 to i64
  %369 = or disjoint i64 %368, 4611686293338849280
  %370 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096) to i32), 4
  %371 = and i32 %370, 16383
  %372 = zext nneg i32 %371 to i64
  %373 = or disjoint i64 %372, 4611686293338849280
  %374 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096) to i32), i32 2048), 4
  %375 = and i32 %374, 16383
  %376 = zext nneg i32 %375 to i64
  %377 = or disjoint i64 %376, 4611686293338849280
  %378 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096) to i32), i32 4096), 4
  %379 = and i32 %378, 16383
  %380 = zext nneg i32 %379 to i64
  %381 = or disjoint i64 %380, 4611686293338849280
  %382 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096) to i32), i32 6144), 4
  %383 = and i32 %382, 16383
  %384 = zext nneg i32 %383 to i64
  %385 = or disjoint i64 %384, 4611686293338849280
  %386 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %296
  %387 = ptrtoint ptr addrspace(3) %386 to i32
  %388 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %299
  %389 = ptrtoint ptr addrspace(3) %388 to i32
  %390 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %302
  %391 = ptrtoint ptr addrspace(3) %390 to i32
  %392 = getelementptr inbounds nuw bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 %305
  %393 = ptrtoint ptr addrspace(3) %392 to i32
  %394 = lshr exact i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688) to i32), 4
  %395 = and i32 %394, 16383
  %396 = zext nneg i32 %395 to i64
  %397 = or disjoint i64 %396, 4611686293338849280
  %398 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688) to i32), i32 2048), 4
  %399 = and i32 %398, 16383
  %400 = zext nneg i32 %399 to i64
  %401 = or disjoint i64 %400, 4611686293338849280
  %402 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688) to i32), i32 4096), 4
  %403 = and i32 %402, 16383
  %404 = zext nneg i32 %403 to i64
  %405 = or disjoint i64 %404, 4611686293338849280
  %406 = lshr exact i32 add (i32 ptrtoint (ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688) to i32), i32 6144), 4
  %407 = and i32 %406, 16383
  %408 = zext nneg i32 %407 to i64
  %409 = or disjoint i64 %408, 4611686293338849280
  %410 = sext i32 %285 to i64, !dbg !34
  %wide.trip.count = zext nneg i32 %14 to i64, !dbg !34
  %411 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 4
  %412 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 8
  %413 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 12
  %414 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 4
  %415 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 8
  %416 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 12
  %417 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 4
  %418 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 8
  %419 = getelementptr inbounds nuw i8, ptr addrspace(3) %330, i32 12
  br label %420, !dbg !34

420:                                              ; preds = %.lr.ph, %420
  %indvars.iv = phi i64 [ 0, %.lr.ph ], [ %indvars.iv.next, %420 ]
  %421 = phi i32 [ 64, %.lr.ph ], [ %1809, %420 ]
  %422 = phi i32 [ 0, %.lr.ph ], [ %421, %420 ]
  %.pn122628 = phi i1 [ %246, %.lr.ph ], [ %1877, %420 ]
  %.pn138627 = phi i1 [ %245, %.lr.ph ], [ %1876, %420 ]
  %.pn154626 = phi i1 [ %244, %.lr.ph ], [ %1875, %420 ]
  %.pn170625 = phi i1 [ %243, %.lr.ph ], [ %1874, %420 ]
  %.pn122.pn624 = phi i1 [ %145, %.lr.ph ], [ %.pn122628, %420 ]
  %.pn138.pn623 = phi i1 [ %144, %.lr.ph ], [ %.pn138627, %420 ]
  %.pn154.pn622 = phi i1 [ %143, %.lr.ph ], [ %.pn154626, %420 ]
  %.pn170.pn621 = phi i1 [ %142, %.lr.ph ], [ %.pn170625, %420 ]
  %.pn21620 = phi i64 [ %238, %.lr.ph ], [ %1869, %420 ]
  %.pn37619 = phi i64 [ %237, %.lr.ph ], [ %1868, %420 ]
  %.pn53618 = phi i64 [ %236, %.lr.ph ], [ %1867, %420 ]
  %.pn69617 = phi i64 [ %235, %.lr.ph ], [ %1866, %420 ]
  %.pn21.pn616 = phi i64 [ %137, %.lr.ph ], [ %.pn21620, %420 ]
  %.pn37.pn615 = phi i64 [ %136, %.lr.ph ], [ %.pn37619, %420 ]
  %.pn53.pn614 = phi i64 [ %135, %.lr.ph ], [ %.pn53618, %420 ]
  %.pn69.pn613 = phi i64 [ %134, %.lr.ph ], [ %.pn69617, %420 ]
  %423 = phi float [ 0.000000e+00, %.lr.ph ], [ %1776, %420 ]
  %424 = phi float [ 0.000000e+00, %.lr.ph ], [ %1777, %420 ]
  %425 = phi float [ 0.000000e+00, %.lr.ph ], [ %1778, %420 ]
  %426 = phi float [ 0.000000e+00, %.lr.ph ], [ %1779, %420 ]
  %427 = phi float [ 0.000000e+00, %.lr.ph ], [ %1780, %420 ]
  %428 = phi float [ 0.000000e+00, %.lr.ph ], [ %1781, %420 ]
  %429 = phi float [ 0.000000e+00, %.lr.ph ], [ %1782, %420 ]
  %430 = phi float [ 0.000000e+00, %.lr.ph ], [ %1783, %420 ]
  %431 = phi float [ 0.000000e+00, %.lr.ph ], [ %1784, %420 ]
  %432 = phi float [ 0.000000e+00, %.lr.ph ], [ %1785, %420 ]
  %433 = phi float [ 0.000000e+00, %.lr.ph ], [ %1786, %420 ]
  %434 = phi float [ 0.000000e+00, %.lr.ph ], [ %1787, %420 ]
  %435 = phi float [ 0.000000e+00, %.lr.ph ], [ %1788, %420 ]
  %436 = phi float [ 0.000000e+00, %.lr.ph ], [ %1789, %420 ]
  %437 = phi float [ 0.000000e+00, %.lr.ph ], [ %1790, %420 ]
  %438 = phi float [ 0.000000e+00, %.lr.ph ], [ %1791, %420 ]
  %439 = phi float [ 0.000000e+00, %.lr.ph ], [ %1792, %420 ]
  %440 = phi float [ 0.000000e+00, %.lr.ph ], [ %1793, %420 ]
  %441 = phi float [ 0.000000e+00, %.lr.ph ], [ %1794, %420 ]
  %442 = phi float [ 0.000000e+00, %.lr.ph ], [ %1795, %420 ]
  %443 = phi float [ 0.000000e+00, %.lr.ph ], [ %1796, %420 ]
  %444 = phi float [ 0.000000e+00, %.lr.ph ], [ %1797, %420 ]
  %445 = phi float [ 0.000000e+00, %.lr.ph ], [ %1798, %420 ]
  %446 = phi float [ 0.000000e+00, %.lr.ph ], [ %1799, %420 ]
  %447 = phi float [ 0.000000e+00, %.lr.ph ], [ %1800, %420 ]
  %448 = phi float [ 0.000000e+00, %.lr.ph ], [ %1801, %420 ]
  %449 = phi float [ 0.000000e+00, %.lr.ph ], [ %1802, %420 ]
  %450 = phi float [ 0.000000e+00, %.lr.ph ], [ %1803, %420 ]
  %451 = phi float [ 0.000000e+00, %.lr.ph ], [ %1804, %420 ]
  %452 = phi float [ 0.000000e+00, %.lr.ph ], [ %1805, %420 ]
  %453 = phi float [ 0.000000e+00, %.lr.ph ], [ %1806, %420 ]
  %454 = phi float [ 0.000000e+00, %.lr.ph ], [ %1807, %420 ]
  %455 = phi float [ 0.000000e+00, %.lr.ph ], [ %1590, %420 ]
  %456 = phi float [ 0.000000e+00, %.lr.ph ], [ %1591, %420 ]
  %457 = phi float [ 0.000000e+00, %.lr.ph ], [ %1592, %420 ]
  %458 = phi float [ 0.000000e+00, %.lr.ph ], [ %1593, %420 ]
  %459 = phi float [ 0.000000e+00, %.lr.ph ], [ %1594, %420 ]
  %460 = phi float [ 0.000000e+00, %.lr.ph ], [ %1595, %420 ]
  %461 = phi float [ 0.000000e+00, %.lr.ph ], [ %1596, %420 ]
  %462 = phi float [ 0.000000e+00, %.lr.ph ], [ %1597, %420 ]
  %463 = phi float [ 0.000000e+00, %.lr.ph ], [ %1598, %420 ]
  %464 = phi float [ 0.000000e+00, %.lr.ph ], [ %1599, %420 ]
  %465 = phi float [ 0.000000e+00, %.lr.ph ], [ %1600, %420 ]
  %466 = phi float [ 0.000000e+00, %.lr.ph ], [ %1601, %420 ]
  %467 = phi float [ 0.000000e+00, %.lr.ph ], [ %1602, %420 ]
  %468 = phi float [ 0.000000e+00, %.lr.ph ], [ %1603, %420 ]
  %469 = phi float [ 0.000000e+00, %.lr.ph ], [ %1604, %420 ]
  %470 = phi float [ 0.000000e+00, %.lr.ph ], [ %1605, %420 ]
  %471 = phi float [ 0.000000e+00, %.lr.ph ], [ %1606, %420 ]
  %472 = phi float [ 0.000000e+00, %.lr.ph ], [ %1607, %420 ]
  %473 = phi float [ 0.000000e+00, %.lr.ph ], [ %1608, %420 ]
  %474 = phi float [ 0.000000e+00, %.lr.ph ], [ %1609, %420 ]
  %475 = phi float [ 0.000000e+00, %.lr.ph ], [ %1610, %420 ]
  %476 = phi float [ 0.000000e+00, %.lr.ph ], [ %1611, %420 ]
  %477 = phi float [ 0.000000e+00, %.lr.ph ], [ %1612, %420 ]
  %478 = phi float [ 0.000000e+00, %.lr.ph ], [ %1613, %420 ]
  %479 = phi float [ 0.000000e+00, %.lr.ph ], [ %1614, %420 ]
  %480 = phi float [ 0.000000e+00, %.lr.ph ], [ %1615, %420 ]
  %481 = phi float [ 0.000000e+00, %.lr.ph ], [ %1616, %420 ]
  %482 = phi float [ 0.000000e+00, %.lr.ph ], [ %1617, %420 ]
  %483 = phi float [ 0.000000e+00, %.lr.ph ], [ %1618, %420 ]
  %484 = phi float [ 0.000000e+00, %.lr.ph ], [ %1619, %420 ]
  %485 = phi float [ 0.000000e+00, %.lr.ph ], [ %1620, %420 ]
  %486 = phi float [ 0.000000e+00, %.lr.ph ], [ %1621, %420 ]
  %487 = phi <4 x i32> [ <i32 -1, i32 1, i32 -1, i32 1>, %.lr.ph ], [ %691, %420 ]
  %488 = icmp slt i64 %indvars.iv, %410, !dbg !34
  %489 = add <4 x i32> %487, splat (i32 1), !dbg !34
  %490 = trunc nuw nsw i64 %indvars.iv to i32, !dbg !41
  %491 = shl i32 %490, 19, !dbg !41
  %492 = sext i32 %491 to i64, !dbg !42
  %493 = getelementptr bfloat, ptr addrspace(1) %21, i64 %492, !dbg !42
  %494 = fptrunc float %455 to bfloat, !dbg !43
  %495 = fptrunc float %456 to bfloat, !dbg !43
  %496 = fptrunc float %457 to bfloat, !dbg !43
  %497 = fptrunc float %458 to bfloat, !dbg !43
  %498 = fptrunc float %459 to bfloat, !dbg !43
  %499 = fptrunc float %460 to bfloat, !dbg !43
  %500 = fptrunc float %461 to bfloat, !dbg !43
  %501 = fptrunc float %462 to bfloat, !dbg !43
  %502 = fptrunc float %463 to bfloat, !dbg !43
  %503 = fptrunc float %464 to bfloat, !dbg !43
  %504 = fptrunc float %465 to bfloat, !dbg !43
  %505 = fptrunc float %466 to bfloat, !dbg !43
  %506 = fptrunc float %467 to bfloat, !dbg !43
  %507 = fptrunc float %468 to bfloat, !dbg !43
  %508 = fptrunc float %469 to bfloat, !dbg !43
  %509 = fptrunc float %470 to bfloat, !dbg !43
  %510 = fptrunc float %471 to bfloat, !dbg !43
  %511 = fptrunc float %472 to bfloat, !dbg !43
  %512 = fptrunc float %473 to bfloat, !dbg !43
  %513 = fptrunc float %474 to bfloat, !dbg !43
  %514 = fptrunc float %475 to bfloat, !dbg !43
  %515 = fptrunc float %476 to bfloat, !dbg !43
  %516 = fptrunc float %477 to bfloat, !dbg !43
  %517 = fptrunc float %478 to bfloat, !dbg !43
  %518 = fptrunc float %479 to bfloat, !dbg !43
  %519 = fptrunc float %480 to bfloat, !dbg !43
  %520 = fptrunc float %481 to bfloat, !dbg !43
  %521 = fptrunc float %482 to bfloat, !dbg !43
  %522 = fptrunc float %483 to bfloat, !dbg !43
  %523 = fptrunc float %484 to bfloat, !dbg !43
  %524 = fptrunc float %485 to bfloat, !dbg !43
  %525 = fptrunc float %486 to bfloat, !dbg !43
  %526 = insertelement <2 x bfloat> poison, bfloat %494, i64 0, !dbg !43
  %527 = insertelement <2 x bfloat> %526, bfloat %495, i64 1, !dbg !43
  %528 = bitcast <2 x bfloat> %527 to i32, !dbg !43
  %529 = insertelement <2 x bfloat> poison, bfloat %496, i64 0, !dbg !43
  %530 = insertelement <2 x bfloat> %529, bfloat %497, i64 1, !dbg !43
  %531 = bitcast <2 x bfloat> %530 to i32, !dbg !43
  %532 = insertelement <2 x bfloat> poison, bfloat %498, i64 0, !dbg !43
  %533 = insertelement <2 x bfloat> %532, bfloat %499, i64 1, !dbg !43
  %534 = bitcast <2 x bfloat> %533 to i32, !dbg !43
  %535 = insertelement <2 x bfloat> poison, bfloat %500, i64 0, !dbg !43
  %536 = insertelement <2 x bfloat> %535, bfloat %501, i64 1, !dbg !43
  %537 = bitcast <2 x bfloat> %536 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %298, i32 %528, i32 %531, i32 %534, i32 %537) #2, !dbg !43
  %538 = insertelement <2 x bfloat> poison, bfloat %502, i64 0, !dbg !43
  %539 = insertelement <2 x bfloat> %538, bfloat %503, i64 1, !dbg !43
  %540 = bitcast <2 x bfloat> %539 to i32, !dbg !43
  %541 = insertelement <2 x bfloat> poison, bfloat %504, i64 0, !dbg !43
  %542 = insertelement <2 x bfloat> %541, bfloat %505, i64 1, !dbg !43
  %543 = bitcast <2 x bfloat> %542 to i32, !dbg !43
  %544 = insertelement <2 x bfloat> poison, bfloat %506, i64 0, !dbg !43
  %545 = insertelement <2 x bfloat> %544, bfloat %507, i64 1, !dbg !43
  %546 = bitcast <2 x bfloat> %545 to i32, !dbg !43
  %547 = insertelement <2 x bfloat> poison, bfloat %508, i64 0, !dbg !43
  %548 = insertelement <2 x bfloat> %547, bfloat %509, i64 1, !dbg !43
  %549 = bitcast <2 x bfloat> %548 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %301, i32 %540, i32 %543, i32 %546, i32 %549) #2, !dbg !43
  %550 = insertelement <2 x bfloat> poison, bfloat %510, i64 0, !dbg !43
  %551 = insertelement <2 x bfloat> %550, bfloat %511, i64 1, !dbg !43
  %552 = bitcast <2 x bfloat> %551 to i32, !dbg !43
  %553 = insertelement <2 x bfloat> poison, bfloat %512, i64 0, !dbg !43
  %554 = insertelement <2 x bfloat> %553, bfloat %513, i64 1, !dbg !43
  %555 = bitcast <2 x bfloat> %554 to i32, !dbg !43
  %556 = insertelement <2 x bfloat> poison, bfloat %514, i64 0, !dbg !43
  %557 = insertelement <2 x bfloat> %556, bfloat %515, i64 1, !dbg !43
  %558 = bitcast <2 x bfloat> %557 to i32, !dbg !43
  %559 = insertelement <2 x bfloat> poison, bfloat %516, i64 0, !dbg !43
  %560 = insertelement <2 x bfloat> %559, bfloat %517, i64 1, !dbg !43
  %561 = bitcast <2 x bfloat> %560 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %304, i32 %552, i32 %555, i32 %558, i32 %561) #2, !dbg !43
  %562 = insertelement <2 x bfloat> poison, bfloat %518, i64 0, !dbg !43
  %563 = insertelement <2 x bfloat> %562, bfloat %519, i64 1, !dbg !43
  %564 = bitcast <2 x bfloat> %563 to i32, !dbg !43
  %565 = insertelement <2 x bfloat> poison, bfloat %520, i64 0, !dbg !43
  %566 = insertelement <2 x bfloat> %565, bfloat %521, i64 1, !dbg !43
  %567 = bitcast <2 x bfloat> %566 to i32, !dbg !43
  %568 = insertelement <2 x bfloat> poison, bfloat %522, i64 0, !dbg !43
  %569 = insertelement <2 x bfloat> %568, bfloat %523, i64 1, !dbg !43
  %570 = bitcast <2 x bfloat> %569 to i32, !dbg !43
  %571 = insertelement <2 x bfloat> poison, bfloat %524, i64 0, !dbg !43
  %572 = insertelement <2 x bfloat> %571, bfloat %525, i64 1, !dbg !43
  %573 = bitcast <2 x bfloat> %572 to i32, !dbg !43
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %307, i32 %564, i32 %567, i32 %570, i32 %573) #2, !dbg !43
  %574 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx358, !dbg !29
  %575 = getelementptr bfloat, ptr addrspace(1) %574, i64 %63, !dbg !29
  %576 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx359, !dbg !29
  %577 = getelementptr bfloat, ptr addrspace(1) %576, i64 %63, !dbg !29
  %578 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx360, !dbg !29
  %579 = getelementptr bfloat, ptr addrspace(1) %578, i64 %63, !dbg !29
  %580 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx361, !dbg !29
  %581 = getelementptr bfloat, ptr addrspace(1) %580, i64 %63, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %320, i32 %528, i32 %531, i32 %534, i32 %537) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %322, i32 %540, i32 %543, i32 %546, i32 %549) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %324, i32 %552, i32 %555, i32 %558, i32 %561) #2, !dbg !29
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %326, i32 %564, i32 %567, i32 %570, i32 %573) #2, !dbg !29
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !29
  %582 = load <4 x i32>, ptr addrspace(3) %335, align 16, !dbg !29
  %583 = load <4 x i32>, ptr addrspace(3) %340, align 16, !dbg !29
  %584 = load <4 x i32>, ptr addrspace(3) %345, align 16, !dbg !29
  %.extract516 = load i32, ptr addrspace(3) %330, align 16, !dbg !29
  %.extract518 = load i32, ptr addrspace(3) %411, align 4, !dbg !29
  %.extract520 = load i32, ptr addrspace(3) %412, align 8, !dbg !29
  %.extract522 = load i32, ptr addrspace(3) %413, align 4, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract516, i32 %.extract518, i32 %.extract520, i32 %.extract522, ptr addrspace(1) %575, i1 %66) #2, !dbg !29
  %.extract524 = extractelement <4 x i32> %582, i64 0, !dbg !29
  %.extract526 = extractelement <4 x i32> %582, i64 1, !dbg !29
  %.extract528 = extractelement <4 x i32> %582, i64 2, !dbg !29
  %.extract530 = extractelement <4 x i32> %582, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract524, i32 %.extract526, i32 %.extract528, i32 %.extract530, ptr addrspace(1) %577, i1 %66) #2, !dbg !29
  %.extract532 = extractelement <4 x i32> %583, i64 0, !dbg !29
  %.extract534 = extractelement <4 x i32> %583, i64 1, !dbg !29
  %.extract536 = extractelement <4 x i32> %583, i64 2, !dbg !29
  %.extract538 = extractelement <4 x i32> %583, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract532, i32 %.extract534, i32 %.extract536, i32 %.extract538, ptr addrspace(1) %579, i1 %66) #2, !dbg !29
  %.extract540 = extractelement <4 x i32> %584, i64 0, !dbg !29
  %.extract542 = extractelement <4 x i32> %584, i64 1, !dbg !29
  %.extract544 = extractelement <4 x i32> %584, i64 2, !dbg !29
  %.extract546 = extractelement <4 x i32> %584, i64 3, !dbg !29
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract540, i32 %.extract542, i32 %.extract544, i32 %.extract546, ptr addrspace(1) %581, i1 %66) #2, !dbg !29
  %585 = fptrunc float %423 to bfloat, !dbg !44
  %586 = fptrunc float %424 to bfloat, !dbg !44
  %587 = fptrunc float %425 to bfloat, !dbg !44
  %588 = fptrunc float %426 to bfloat, !dbg !44
  %589 = fptrunc float %427 to bfloat, !dbg !44
  %590 = fptrunc float %428 to bfloat, !dbg !44
  %591 = fptrunc float %429 to bfloat, !dbg !44
  %592 = fptrunc float %430 to bfloat, !dbg !44
  %593 = fptrunc float %431 to bfloat, !dbg !44
  %594 = fptrunc float %432 to bfloat, !dbg !44
  %595 = fptrunc float %433 to bfloat, !dbg !44
  %596 = fptrunc float %434 to bfloat, !dbg !44
  %597 = fptrunc float %435 to bfloat, !dbg !44
  %598 = fptrunc float %436 to bfloat, !dbg !44
  %599 = fptrunc float %437 to bfloat, !dbg !44
  %600 = fptrunc float %438 to bfloat, !dbg !44
  %601 = fptrunc float %439 to bfloat, !dbg !44
  %602 = fptrunc float %440 to bfloat, !dbg !44
  %603 = fptrunc float %441 to bfloat, !dbg !44
  %604 = fptrunc float %442 to bfloat, !dbg !44
  %605 = fptrunc float %443 to bfloat, !dbg !44
  %606 = fptrunc float %444 to bfloat, !dbg !44
  %607 = fptrunc float %445 to bfloat, !dbg !44
  %608 = fptrunc float %446 to bfloat, !dbg !44
  %609 = fptrunc float %447 to bfloat, !dbg !44
  %610 = fptrunc float %448 to bfloat, !dbg !44
  %611 = fptrunc float %449 to bfloat, !dbg !44
  %612 = fptrunc float %450 to bfloat, !dbg !44
  %613 = fptrunc float %451 to bfloat, !dbg !44
  %614 = fptrunc float %452 to bfloat, !dbg !44
  %615 = fptrunc float %453 to bfloat, !dbg !44
  %616 = fptrunc float %454 to bfloat, !dbg !44
  %617 = insertelement <2 x bfloat> poison, bfloat %585, i64 0, !dbg !44
  %618 = insertelement <2 x bfloat> %617, bfloat %586, i64 1, !dbg !44
  %619 = bitcast <2 x bfloat> %618 to i32, !dbg !44
  %620 = insertelement <2 x bfloat> poison, bfloat %587, i64 0, !dbg !44
  %621 = insertelement <2 x bfloat> %620, bfloat %588, i64 1, !dbg !44
  %622 = bitcast <2 x bfloat> %621 to i32, !dbg !44
  %623 = insertelement <2 x bfloat> poison, bfloat %589, i64 0, !dbg !44
  %624 = insertelement <2 x bfloat> %623, bfloat %590, i64 1, !dbg !44
  %625 = bitcast <2 x bfloat> %624 to i32, !dbg !44
  %626 = insertelement <2 x bfloat> poison, bfloat %591, i64 0, !dbg !44
  %627 = insertelement <2 x bfloat> %626, bfloat %592, i64 1, !dbg !44
  %628 = bitcast <2 x bfloat> %627 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %347, i32 %619, i32 %622, i32 %625, i32 %628) #2, !dbg !44
  %629 = insertelement <2 x bfloat> poison, bfloat %593, i64 0, !dbg !44
  %630 = insertelement <2 x bfloat> %629, bfloat %594, i64 1, !dbg !44
  %631 = bitcast <2 x bfloat> %630 to i32, !dbg !44
  %632 = insertelement <2 x bfloat> poison, bfloat %595, i64 0, !dbg !44
  %633 = insertelement <2 x bfloat> %632, bfloat %596, i64 1, !dbg !44
  %634 = bitcast <2 x bfloat> %633 to i32, !dbg !44
  %635 = insertelement <2 x bfloat> poison, bfloat %597, i64 0, !dbg !44
  %636 = insertelement <2 x bfloat> %635, bfloat %598, i64 1, !dbg !44
  %637 = bitcast <2 x bfloat> %636 to i32, !dbg !44
  %638 = insertelement <2 x bfloat> poison, bfloat %599, i64 0, !dbg !44
  %639 = insertelement <2 x bfloat> %638, bfloat %600, i64 1, !dbg !44
  %640 = bitcast <2 x bfloat> %639 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %349, i32 %631, i32 %634, i32 %637, i32 %640) #2, !dbg !44
  %641 = insertelement <2 x bfloat> poison, bfloat %601, i64 0, !dbg !44
  %642 = insertelement <2 x bfloat> %641, bfloat %602, i64 1, !dbg !44
  %643 = bitcast <2 x bfloat> %642 to i32, !dbg !44
  %644 = insertelement <2 x bfloat> poison, bfloat %603, i64 0, !dbg !44
  %645 = insertelement <2 x bfloat> %644, bfloat %604, i64 1, !dbg !44
  %646 = bitcast <2 x bfloat> %645 to i32, !dbg !44
  %647 = insertelement <2 x bfloat> poison, bfloat %605, i64 0, !dbg !44
  %648 = insertelement <2 x bfloat> %647, bfloat %606, i64 1, !dbg !44
  %649 = bitcast <2 x bfloat> %648 to i32, !dbg !44
  %650 = insertelement <2 x bfloat> poison, bfloat %607, i64 0, !dbg !44
  %651 = insertelement <2 x bfloat> %650, bfloat %608, i64 1, !dbg !44
  %652 = bitcast <2 x bfloat> %651 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %351, i32 %643, i32 %646, i32 %649, i32 %652) #2, !dbg !44
  %653 = insertelement <2 x bfloat> poison, bfloat %609, i64 0, !dbg !44
  %654 = insertelement <2 x bfloat> %653, bfloat %610, i64 1, !dbg !44
  %655 = bitcast <2 x bfloat> %654 to i32, !dbg !44
  %656 = insertelement <2 x bfloat> poison, bfloat %611, i64 0, !dbg !44
  %657 = insertelement <2 x bfloat> %656, bfloat %612, i64 1, !dbg !44
  %658 = bitcast <2 x bfloat> %657 to i32, !dbg !44
  %659 = insertelement <2 x bfloat> poison, bfloat %613, i64 0, !dbg !44
  %660 = insertelement <2 x bfloat> %659, bfloat %614, i64 1, !dbg !44
  %661 = bitcast <2 x bfloat> %660 to i32, !dbg !44
  %662 = insertelement <2 x bfloat> poison, bfloat %615, i64 0, !dbg !44
  %663 = insertelement <2 x bfloat> %662, bfloat %616, i64 1, !dbg !44
  %664 = bitcast <2 x bfloat> %663 to i32, !dbg !44
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %353, i32 %655, i32 %658, i32 %661, i32 %664) #2, !dbg !44
  %665 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx408, !dbg !30
  %666 = getelementptr bfloat, ptr addrspace(1) %665, i64 %63, !dbg !30
  %667 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx409, !dbg !30
  %668 = getelementptr bfloat, ptr addrspace(1) %667, i64 %63, !dbg !30
  %669 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx410, !dbg !30
  %670 = getelementptr bfloat, ptr addrspace(1) %669, i64 %63, !dbg !30
  %671 = getelementptr i8, ptr addrspace(1) %493, i64 %.idx411, !dbg !30
  %672 = getelementptr bfloat, ptr addrspace(1) %671, i64 %63, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %320, i32 %619, i32 %622, i32 %625, i32 %628) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %322, i32 %631, i32 %634, i32 %637, i32 %640) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %324, i32 %643, i32 %646, i32 %649, i32 %652) #2, !dbg !30
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %326, i32 %655, i32 %658, i32 %661, i32 %664) #2, !dbg !30
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !30
  %673 = load <4 x i32>, ptr addrspace(3) %335, align 16, !dbg !30
  %674 = load <4 x i32>, ptr addrspace(3) %340, align 16, !dbg !30
  %675 = load <4 x i32>, ptr addrspace(3) %345, align 16, !dbg !30
  %.extract548 = load i32, ptr addrspace(3) %330, align 16, !dbg !30
  %.extract550 = load i32, ptr addrspace(3) %414, align 4, !dbg !30
  %.extract552 = load i32, ptr addrspace(3) %415, align 8, !dbg !30
  %.extract554 = load i32, ptr addrspace(3) %416, align 4, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract548, i32 %.extract550, i32 %.extract552, i32 %.extract554, ptr addrspace(1) %666, i1 %66) #2, !dbg !30
  %.extract556 = extractelement <4 x i32> %673, i64 0, !dbg !30
  %.extract558 = extractelement <4 x i32> %673, i64 1, !dbg !30
  %.extract560 = extractelement <4 x i32> %673, i64 2, !dbg !30
  %.extract562 = extractelement <4 x i32> %673, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract556, i32 %.extract558, i32 %.extract560, i32 %.extract562, ptr addrspace(1) %668, i1 %66) #2, !dbg !30
  %.extract564 = extractelement <4 x i32> %674, i64 0, !dbg !30
  %.extract566 = extractelement <4 x i32> %674, i64 1, !dbg !30
  %.extract568 = extractelement <4 x i32> %674, i64 2, !dbg !30
  %.extract570 = extractelement <4 x i32> %674, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract564, i32 %.extract566, i32 %.extract568, i32 %.extract570, ptr addrspace(1) %670, i1 %66) #2, !dbg !30
  %.extract572 = extractelement <4 x i32> %675, i64 0, !dbg !30
  %.extract574 = extractelement <4 x i32> %675, i64 1, !dbg !30
  %.extract576 = extractelement <4 x i32> %675, i64 2, !dbg !30
  %.extract578 = extractelement <4 x i32> %675, i64 3, !dbg !30
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract572, i32 %.extract574, i32 %.extract576, i32 %.extract578, ptr addrspace(1) %672, i1 %66) #2, !dbg !30
  tail call void @llvm.nvvm.cp.async.wait.group(i32 6), !dbg !35
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !35
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !45
  %676 = tail call i32 @llvm.nvvm.shfl.sync.idx.i32(i32 -1, i32 %34, i32 0, i32 31), !dbg !45
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !45
  %677 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn69.pn613, !dbg !46
  %678 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn53.pn614, !dbg !46
  %679 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn37.pn615, !dbg !46
  %680 = getelementptr bfloat, ptr addrspace(1) %30, i64 %.pn21.pn616, !dbg !46
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !47
  %indvars.iv.next.tr = trunc i64 %indvars.iv.next to i32, !dbg !48
  %681 = shl i32 %indvars.iv.next.tr, 6, !dbg !48
  %682 = tail call i32 @llvm.smin.i32(i32 %681, i32 %7), !dbg !48
  %683 = add nuw nsw i32 %422, %54, !dbg !49
  %684 = add nuw nsw i32 %422, %55, !dbg !49
  %685 = icmp slt i32 %683, %7, !dbg !50
  %686 = icmp slt i32 %684, %7, !dbg !50
  %687 = shl i32 %682, 5, !dbg !51
  %688 = add i32 %687, -32, !dbg !51
  %689 = sext i32 %688 to i64, !dbg !52
  %gep = getelementptr float, ptr addrspace(1) %76, i64 %689, !dbg !53
  %690 = icmp sgt <4 x i32> %489, <i32 1, i32 1, i32 2, i32 2>, !dbg !34
  %691 = select <4 x i1> %690, <4 x i32> zeroinitializer, <4 x i32> %489, !dbg !34
  %692 = extractelement <4 x i32> %691, i64 2, !dbg !35
  %693 = shl i32 %692, 12, !dbg !35
  %694 = getelementptr bfloat, ptr addrspace(3) @global_smem, i32 %693, !dbg !35
  %695 = ptrtoint ptr addrspace(3) %694 to i32, !dbg !45
  %696 = lshr exact i32 %695, 4, !dbg !45
  %697 = and i32 %696, 16383, !dbg !45
  %698 = zext nneg i32 %697 to i64, !dbg !45
  %699 = or disjoint i64 %698, 4611686293338849280, !dbg !45
  %700 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $32, $33, 0, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,l,l"(i64 %699, i64 %357) #2, !dbg !45
  %701 = add i32 %695, 32, !dbg !45
  %702 = lshr exact i32 %701, 4, !dbg !45
  %703 = and i32 %702, 16383, !dbg !45
  %704 = zext nneg i32 %703 to i64, !dbg !45
  %705 = or disjoint i64 %704, 4611686293338849280, !dbg !45
  %706 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 0, !dbg !45
  %707 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 1, !dbg !45
  %708 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 2, !dbg !45
  %709 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 3, !dbg !45
  %710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 4, !dbg !45
  %711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 5, !dbg !45
  %712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 6, !dbg !45
  %713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 7, !dbg !45
  %714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 8, !dbg !45
  %715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 9, !dbg !45
  %716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 10, !dbg !45
  %717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 11, !dbg !45
  %718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 12, !dbg !45
  %719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 13, !dbg !45
  %720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 14, !dbg !45
  %721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 15, !dbg !45
  %722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 16, !dbg !45
  %723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 17, !dbg !45
  %724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 18, !dbg !45
  %725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 19, !dbg !45
  %726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 20, !dbg !45
  %727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 21, !dbg !45
  %728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 22, !dbg !45
  %729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 23, !dbg !45
  %730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 24, !dbg !45
  %731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 25, !dbg !45
  %732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 26, !dbg !45
  %733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 27, !dbg !45
  %734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 28, !dbg !45
  %735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 29, !dbg !45
  %736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 30, !dbg !45
  %737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %700, 31, !dbg !45
  %738 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %706, float %707, float %708, float %709, float %710, float %711, float %712, float %713, float %714, float %715, float %716, float %717, float %718, float %719, float %720, float %721, float %722, float %723, float %724, float %725, float %726, float %727, float %728, float %729, float %730, float %731, float %732, float %733, float %734, float %735, float %736, float %737, i64 %705, i64 %361, i1 true) #2, !dbg !45
  %739 = add i32 %695, 64, !dbg !45
  %740 = lshr exact i32 %739, 4, !dbg !45
  %741 = and i32 %740, 16383, !dbg !45
  %742 = zext nneg i32 %741 to i64, !dbg !45
  %743 = or disjoint i64 %742, 4611686293338849280, !dbg !45
  %744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 0, !dbg !45
  %745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 1, !dbg !45
  %746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 2, !dbg !45
  %747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 3, !dbg !45
  %748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 4, !dbg !45
  %749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 5, !dbg !45
  %750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 6, !dbg !45
  %751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 7, !dbg !45
  %752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 8, !dbg !45
  %753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 9, !dbg !45
  %754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 10, !dbg !45
  %755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 11, !dbg !45
  %756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 12, !dbg !45
  %757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 13, !dbg !45
  %758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 14, !dbg !45
  %759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 15, !dbg !45
  %760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 16, !dbg !45
  %761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 17, !dbg !45
  %762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 18, !dbg !45
  %763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 19, !dbg !45
  %764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 20, !dbg !45
  %765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 21, !dbg !45
  %766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 22, !dbg !45
  %767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 23, !dbg !45
  %768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 24, !dbg !45
  %769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 25, !dbg !45
  %770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 26, !dbg !45
  %771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 27, !dbg !45
  %772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 28, !dbg !45
  %773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 29, !dbg !45
  %774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 30, !dbg !45
  %775 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %738, 31, !dbg !45
  %776 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %744, float %745, float %746, float %747, float %748, float %749, float %750, float %751, float %752, float %753, float %754, float %755, float %756, float %757, float %758, float %759, float %760, float %761, float %762, float %763, float %764, float %765, float %766, float %767, float %768, float %769, float %770, float %771, float %772, float %773, float %774, float %775, i64 %743, i64 %365, i1 true) #2, !dbg !45
  %777 = add i32 %695, 96, !dbg !45
  %778 = lshr exact i32 %777, 4, !dbg !45
  %779 = and i32 %778, 16383, !dbg !45
  %780 = zext nneg i32 %779 to i64, !dbg !45
  %781 = or disjoint i64 %780, 4611686293338849280, !dbg !45
  %782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 0, !dbg !45
  %783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 1, !dbg !45
  %784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 2, !dbg !45
  %785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 3, !dbg !45
  %786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 4, !dbg !45
  %787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 5, !dbg !45
  %788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 6, !dbg !45
  %789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 7, !dbg !45
  %790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 8, !dbg !45
  %791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 9, !dbg !45
  %792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 10, !dbg !45
  %793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 11, !dbg !45
  %794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 12, !dbg !45
  %795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 13, !dbg !45
  %796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 14, !dbg !45
  %797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 15, !dbg !45
  %798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 16, !dbg !45
  %799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 17, !dbg !45
  %800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 18, !dbg !45
  %801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 19, !dbg !45
  %802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 20, !dbg !45
  %803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 21, !dbg !45
  %804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 22, !dbg !45
  %805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 23, !dbg !45
  %806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 24, !dbg !45
  %807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 25, !dbg !45
  %808 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 26, !dbg !45
  %809 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 27, !dbg !45
  %810 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 28, !dbg !45
  %811 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 29, !dbg !45
  %812 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 30, !dbg !45
  %813 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %776, 31, !dbg !45
  %814 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %782, float %783, float %784, float %785, float %786, float %787, float %788, float %789, float %790, float %791, float %792, float %793, float %794, float %795, float %796, float %797, float %798, float %799, float %800, float %801, float %802, float %803, float %804, float %805, float %806, float %807, float %808, float %809, float %810, float %811, float %812, float %813, i64 %781, i64 %369, i1 true) #2, !dbg !45
  %815 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 0, !dbg !45
  %816 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 1, !dbg !45
  %817 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 2, !dbg !45
  %818 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 3, !dbg !45
  %819 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 4, !dbg !45
  %820 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 5, !dbg !45
  %821 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 6, !dbg !45
  %822 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 7, !dbg !45
  %823 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 8, !dbg !45
  %824 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 9, !dbg !45
  %825 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 10, !dbg !45
  %826 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 11, !dbg !45
  %827 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 12, !dbg !45
  %828 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 13, !dbg !45
  %829 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 14, !dbg !45
  %830 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 15, !dbg !45
  %831 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 16, !dbg !45
  %832 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 17, !dbg !45
  %833 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 18, !dbg !45
  %834 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 19, !dbg !45
  %835 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 20, !dbg !45
  %836 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 21, !dbg !45
  %837 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 22, !dbg !45
  %838 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 23, !dbg !45
  %839 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 24, !dbg !45
  %840 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 25, !dbg !45
  %841 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 26, !dbg !45
  %842 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 27, !dbg !45
  %843 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 28, !dbg !45
  %844 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 29, !dbg !45
  %845 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 30, !dbg !45
  %846 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %814, 31, !dbg !45
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !45
  %847 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %815, float %816, float %817, float %818, float %819, float %820, float %821, float %822, float %823, float %824, float %825, float %826, float %827, float %828, float %829, float %830, float %831, float %832, float %833, float %834, float %835, float %836, float %837, float %838, float %839, float %840, float %841, float %842, float %843, float %844, float %845, float %846, ptr addrspace(3) %694, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 123904), i32 0, i32 0) #2, !dbg !45
  %848 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 0, !dbg !45
  %849 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 1, !dbg !45
  %850 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 2, !dbg !45
  %851 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 3, !dbg !45
  %852 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 4, !dbg !45
  %853 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 5, !dbg !45
  %854 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 6, !dbg !45
  %855 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 7, !dbg !45
  %856 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 8, !dbg !45
  %857 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 9, !dbg !45
  %858 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 10, !dbg !45
  %859 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 11, !dbg !45
  %860 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 12, !dbg !45
  %861 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 13, !dbg !45
  %862 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 14, !dbg !45
  %863 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 15, !dbg !45
  %864 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 16, !dbg !45
  %865 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 17, !dbg !45
  %866 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 18, !dbg !45
  %867 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 19, !dbg !45
  %868 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 20, !dbg !45
  %869 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 21, !dbg !45
  %870 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 22, !dbg !45
  %871 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 23, !dbg !45
  %872 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 24, !dbg !45
  %873 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 25, !dbg !45
  %874 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 26, !dbg !45
  %875 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 27, !dbg !45
  %876 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 28, !dbg !45
  %877 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 29, !dbg !45
  %878 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 30, !dbg !45
  %879 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %847, 31, !dbg !45
  %880 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %693, !dbg !36
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !54
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !54
  %881 = ptrtoint ptr addrspace(3) %880 to i32, !dbg !54
  %882 = lshr exact i32 %881, 4, !dbg !54
  %883 = and i32 %882, 16383, !dbg !54
  %884 = zext nneg i32 %883 to i64, !dbg !54
  %885 = or disjoint i64 %884, 4611686293338849280, !dbg !54
  %886 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %848, float %849, float %850, float %851, float %852, float %853, float %854, float %855, float %856, float %857, float %858, float %859, float %860, float %861, float %862, float %863, float %864, float %865, float %866, float %867, float %868, float %869, float %870, float %871, float %872, float %873, float %874, float %875, float %876, float %877, float %878, float %879, i64 %885, i64 %373, i1 true) #2, !dbg !54
  %887 = add i32 %881, 32, !dbg !54
  %888 = lshr exact i32 %887, 4, !dbg !54
  %889 = and i32 %888, 16383, !dbg !54
  %890 = zext nneg i32 %889 to i64, !dbg !54
  %891 = or disjoint i64 %890, 4611686293338849280, !dbg !54
  %892 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 0, !dbg !54
  %893 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 1, !dbg !54
  %894 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 2, !dbg !54
  %895 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 3, !dbg !54
  %896 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 4, !dbg !54
  %897 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 5, !dbg !54
  %898 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 6, !dbg !54
  %899 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 7, !dbg !54
  %900 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 8, !dbg !54
  %901 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 9, !dbg !54
  %902 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 10, !dbg !54
  %903 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 11, !dbg !54
  %904 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 12, !dbg !54
  %905 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 13, !dbg !54
  %906 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 14, !dbg !54
  %907 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 15, !dbg !54
  %908 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 16, !dbg !54
  %909 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 17, !dbg !54
  %910 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 18, !dbg !54
  %911 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 19, !dbg !54
  %912 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 20, !dbg !54
  %913 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 21, !dbg !54
  %914 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 22, !dbg !54
  %915 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 23, !dbg !54
  %916 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 24, !dbg !54
  %917 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 25, !dbg !54
  %918 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 26, !dbg !54
  %919 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 27, !dbg !54
  %920 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 28, !dbg !54
  %921 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 29, !dbg !54
  %922 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 30, !dbg !54
  %923 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %886, 31, !dbg !54
  %924 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %892, float %893, float %894, float %895, float %896, float %897, float %898, float %899, float %900, float %901, float %902, float %903, float %904, float %905, float %906, float %907, float %908, float %909, float %910, float %911, float %912, float %913, float %914, float %915, float %916, float %917, float %918, float %919, float %920, float %921, float %922, float %923, i64 %891, i64 %377, i1 true) #2, !dbg !54
  %925 = add i32 %881, 64, !dbg !54
  %926 = lshr exact i32 %925, 4, !dbg !54
  %927 = and i32 %926, 16383, !dbg !54
  %928 = zext nneg i32 %927 to i64, !dbg !54
  %929 = or disjoint i64 %928, 4611686293338849280, !dbg !54
  %930 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 0, !dbg !54
  %931 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 1, !dbg !54
  %932 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 2, !dbg !54
  %933 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 3, !dbg !54
  %934 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 4, !dbg !54
  %935 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 5, !dbg !54
  %936 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 6, !dbg !54
  %937 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 7, !dbg !54
  %938 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 8, !dbg !54
  %939 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 9, !dbg !54
  %940 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 10, !dbg !54
  %941 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 11, !dbg !54
  %942 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 12, !dbg !54
  %943 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 13, !dbg !54
  %944 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 14, !dbg !54
  %945 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 15, !dbg !54
  %946 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 16, !dbg !54
  %947 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 17, !dbg !54
  %948 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 18, !dbg !54
  %949 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 19, !dbg !54
  %950 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 20, !dbg !54
  %951 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 21, !dbg !54
  %952 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 22, !dbg !54
  %953 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 23, !dbg !54
  %954 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 24, !dbg !54
  %955 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 25, !dbg !54
  %956 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 26, !dbg !54
  %957 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 27, !dbg !54
  %958 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 28, !dbg !54
  %959 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 29, !dbg !54
  %960 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 30, !dbg !54
  %961 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %924, 31, !dbg !54
  %962 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %930, float %931, float %932, float %933, float %934, float %935, float %936, float %937, float %938, float %939, float %940, float %941, float %942, float %943, float %944, float %945, float %946, float %947, float %948, float %949, float %950, float %951, float %952, float %953, float %954, float %955, float %956, float %957, float %958, float %959, float %960, float %961, i64 %929, i64 %381, i1 true) #2, !dbg !54
  %963 = add i32 %881, 96, !dbg !54
  %964 = lshr exact i32 %963, 4, !dbg !54
  %965 = and i32 %964, 16383, !dbg !54
  %966 = zext nneg i32 %965 to i64, !dbg !54
  %967 = or disjoint i64 %966, 4611686293338849280, !dbg !54
  %968 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 0, !dbg !54
  %969 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 1, !dbg !54
  %970 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 2, !dbg !54
  %971 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 3, !dbg !54
  %972 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 4, !dbg !54
  %973 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 5, !dbg !54
  %974 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 6, !dbg !54
  %975 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 7, !dbg !54
  %976 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 8, !dbg !54
  %977 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 9, !dbg !54
  %978 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 10, !dbg !54
  %979 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 11, !dbg !54
  %980 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 12, !dbg !54
  %981 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 13, !dbg !54
  %982 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 14, !dbg !54
  %983 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 15, !dbg !54
  %984 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 16, !dbg !54
  %985 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 17, !dbg !54
  %986 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 18, !dbg !54
  %987 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 19, !dbg !54
  %988 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 20, !dbg !54
  %989 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 21, !dbg !54
  %990 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 22, !dbg !54
  %991 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 23, !dbg !54
  %992 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 24, !dbg !54
  %993 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 25, !dbg !54
  %994 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 26, !dbg !54
  %995 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 27, !dbg !54
  %996 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 28, !dbg !54
  %997 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 29, !dbg !54
  %998 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 30, !dbg !54
  %999 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %962, 31, !dbg !54
  %1000 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 0, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %968, float %969, float %970, float %971, float %972, float %973, float %974, float %975, float %976, float %977, float %978, float %979, float %980, float %981, float %982, float %983, float %984, float %985, float %986, float %987, float %988, float %989, float %990, float %991, float %992, float %993, float %994, float %995, float %996, float %997, float %998, float %999, i64 %967, i64 %385, i1 true) #2, !dbg !54
  %1001 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 0, !dbg !54
  %1002 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 1, !dbg !54
  %1003 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 2, !dbg !54
  %1004 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 3, !dbg !54
  %1005 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 4, !dbg !54
  %1006 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 5, !dbg !54
  %1007 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 6, !dbg !54
  %1008 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 7, !dbg !54
  %1009 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 8, !dbg !54
  %1010 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 9, !dbg !54
  %1011 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 10, !dbg !54
  %1012 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 11, !dbg !54
  %1013 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 12, !dbg !54
  %1014 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 13, !dbg !54
  %1015 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 14, !dbg !54
  %1016 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 15, !dbg !54
  %1017 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 16, !dbg !54
  %1018 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 17, !dbg !54
  %1019 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 18, !dbg !54
  %1020 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 19, !dbg !54
  %1021 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 20, !dbg !54
  %1022 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 21, !dbg !54
  %1023 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 22, !dbg !54
  %1024 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 23, !dbg !54
  %1025 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 24, !dbg !54
  %1026 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 25, !dbg !54
  %1027 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 26, !dbg !54
  %1028 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 27, !dbg !54
  %1029 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 28, !dbg !54
  %1030 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 29, !dbg !54
  %1031 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 30, !dbg !54
  %1032 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1000, 31, !dbg !54
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !54
  %1033 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1001, float %1002, float %1003, float %1004, float %1005, float %1006, float %1007, float %1008, float %1009, float %1010, float %1011, float %1012, float %1013, float %1014, float %1015, float %1016, float %1017, float %1018, float %1019, float %1020, float %1021, float %1022, float %1023, float %1024, float %1025, float %1026, float %1027, float %1028, float %1029, float %1030, float %1031, float %1032, ptr addrspace(3) %880, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 132096), i32 0, i32 0) #2, !dbg !54
  %1034 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 0, !dbg !54
  %1035 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 1, !dbg !54
  %1036 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 2, !dbg !54
  %1037 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 3, !dbg !54
  %1038 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 4, !dbg !54
  %1039 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 5, !dbg !54
  %1040 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 6, !dbg !54
  %1041 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 7, !dbg !54
  %1042 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 8, !dbg !54
  %1043 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 9, !dbg !54
  %1044 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 10, !dbg !54
  %1045 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 11, !dbg !54
  %1046 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 12, !dbg !54
  %1047 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 13, !dbg !54
  %1048 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 14, !dbg !54
  %1049 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 15, !dbg !54
  %1050 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 16, !dbg !54
  %1051 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 17, !dbg !54
  %1052 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 18, !dbg !54
  %1053 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 19, !dbg !54
  %1054 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 20, !dbg !54
  %1055 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 21, !dbg !54
  %1056 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 22, !dbg !54
  %1057 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 23, !dbg !54
  %1058 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 24, !dbg !54
  %1059 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 25, !dbg !54
  %1060 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 26, !dbg !54
  %1061 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 27, !dbg !54
  %1062 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 28, !dbg !54
  %1063 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 29, !dbg !54
  %1064 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 30, !dbg !54
  %1065 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1033, 31, !dbg !54
  %1066 = extractelement <4 x i32> %691, i64 0, !dbg !38
  %.idx460 = shl i32 %1066, 13, !dbg !37
  %1067 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %.idx460, !dbg !37
  %1068 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1067, i32 %296, !dbg !55
  %1069 = ptrtoint ptr addrspace(3) %1068 to i32, !dbg !55
  %1070 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1069) #2, !dbg !55
  %1071 = extractvalue { i32, i32, i32, i32 } %1070, 0, !dbg !55
  %1072 = bitcast i32 %1071 to <2 x bfloat>, !dbg !55
  %1073 = extractvalue { i32, i32, i32, i32 } %1070, 1, !dbg !55
  %1074 = bitcast i32 %1073 to <2 x bfloat>, !dbg !55
  %1075 = extractvalue { i32, i32, i32, i32 } %1070, 2, !dbg !55
  %1076 = bitcast i32 %1075 to <2 x bfloat>, !dbg !55
  %1077 = extractvalue { i32, i32, i32, i32 } %1070, 3, !dbg !55
  %1078 = bitcast i32 %1077 to <2 x bfloat>, !dbg !55
  %1079 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1067, i32 %299, !dbg !55
  %1080 = ptrtoint ptr addrspace(3) %1079 to i32, !dbg !55
  %1081 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1080) #2, !dbg !55
  %1082 = extractvalue { i32, i32, i32, i32 } %1081, 0, !dbg !55
  %1083 = bitcast i32 %1082 to <2 x bfloat>, !dbg !55
  %1084 = extractvalue { i32, i32, i32, i32 } %1081, 1, !dbg !55
  %1085 = bitcast i32 %1084 to <2 x bfloat>, !dbg !55
  %1086 = extractvalue { i32, i32, i32, i32 } %1081, 2, !dbg !55
  %1087 = bitcast i32 %1086 to <2 x bfloat>, !dbg !55
  %1088 = extractvalue { i32, i32, i32, i32 } %1081, 3, !dbg !55
  %1089 = bitcast i32 %1088 to <2 x bfloat>, !dbg !55
  %1090 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1067, i32 %302, !dbg !55
  %1091 = ptrtoint ptr addrspace(3) %1090 to i32, !dbg !55
  %1092 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1091) #2, !dbg !55
  %1093 = extractvalue { i32, i32, i32, i32 } %1092, 0, !dbg !55
  %1094 = bitcast i32 %1093 to <2 x bfloat>, !dbg !55
  %1095 = extractvalue { i32, i32, i32, i32 } %1092, 1, !dbg !55
  %1096 = bitcast i32 %1095 to <2 x bfloat>, !dbg !55
  %1097 = extractvalue { i32, i32, i32, i32 } %1092, 2, !dbg !55
  %1098 = bitcast i32 %1097 to <2 x bfloat>, !dbg !55
  %1099 = extractvalue { i32, i32, i32, i32 } %1092, 3, !dbg !55
  %1100 = bitcast i32 %1099 to <2 x bfloat>, !dbg !55
  %1101 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1067, i32 %305, !dbg !55
  %1102 = ptrtoint ptr addrspace(3) %1101 to i32, !dbg !55
  %1103 = tail call { i32, i32, i32, i32 } asm sideeffect "ldmatrix.sync.aligned.m8n8.x4.shared.b16 {$0, $1, $2, $3}, [$4];", "=r,=r,=r,=r,r"(i32 %1102) #2, !dbg !55
  %1104 = extractvalue { i32, i32, i32, i32 } %1103, 0, !dbg !55
  %1105 = bitcast i32 %1104 to <2 x bfloat>, !dbg !55
  %1106 = extractvalue { i32, i32, i32, i32 } %1103, 1, !dbg !55
  %1107 = bitcast i32 %1106 to <2 x bfloat>, !dbg !55
  %1108 = extractvalue { i32, i32, i32, i32 } %1103, 2, !dbg !55
  %1109 = bitcast i32 %1108 to <2 x bfloat>, !dbg !55
  %1110 = extractvalue { i32, i32, i32, i32 } %1103, 3, !dbg !55
  %1111 = bitcast i32 %1110 to <2 x bfloat>, !dbg !55
  %1112 = fpext <2 x bfloat> %1072 to <2 x float>, !dbg !55
  %1113 = insertelement <2 x float> poison, float %1034, i64 0, !dbg !55
  %1114 = insertelement <2 x float> %1113, float %1035, i64 1, !dbg !55
  %1115 = fsub <2 x float> %1112, %1114, !dbg !55
  %1116 = fptrunc <2 x float> %1115 to <2 x bfloat>, !dbg !56
  %1117 = fpext <2 x bfloat> %1074 to <2 x float>, !dbg !55
  %1118 = insertelement <2 x float> poison, float %1036, i64 0, !dbg !55
  %1119 = insertelement <2 x float> %1118, float %1037, i64 1, !dbg !55
  %1120 = fsub <2 x float> %1117, %1119, !dbg !55
  %1121 = fptrunc <2 x float> %1120 to <2 x bfloat>, !dbg !56
  %1122 = fpext <2 x bfloat> %1076 to <2 x float>, !dbg !55
  %1123 = insertelement <2 x float> poison, float %1038, i64 0, !dbg !55
  %1124 = insertelement <2 x float> %1123, float %1039, i64 1, !dbg !55
  %1125 = fsub <2 x float> %1122, %1124, !dbg !55
  %1126 = fptrunc <2 x float> %1125 to <2 x bfloat>, !dbg !56
  %1127 = fpext <2 x bfloat> %1078 to <2 x float>, !dbg !55
  %1128 = insertelement <2 x float> poison, float %1040, i64 0, !dbg !55
  %1129 = insertelement <2 x float> %1128, float %1041, i64 1, !dbg !55
  %1130 = fsub <2 x float> %1127, %1129, !dbg !55
  %1131 = fptrunc <2 x float> %1130 to <2 x bfloat>, !dbg !56
  %1132 = fpext <2 x bfloat> %1083 to <2 x float>, !dbg !55
  %1133 = insertelement <2 x float> poison, float %1042, i64 0, !dbg !55
  %1134 = insertelement <2 x float> %1133, float %1043, i64 1, !dbg !55
  %1135 = fsub <2 x float> %1132, %1134, !dbg !55
  %1136 = fptrunc <2 x float> %1135 to <2 x bfloat>, !dbg !56
  %1137 = fpext <2 x bfloat> %1085 to <2 x float>, !dbg !55
  %1138 = insertelement <2 x float> poison, float %1044, i64 0, !dbg !55
  %1139 = insertelement <2 x float> %1138, float %1045, i64 1, !dbg !55
  %1140 = fsub <2 x float> %1137, %1139, !dbg !55
  %1141 = fptrunc <2 x float> %1140 to <2 x bfloat>, !dbg !56
  %1142 = fpext <2 x bfloat> %1087 to <2 x float>, !dbg !55
  %1143 = insertelement <2 x float> poison, float %1046, i64 0, !dbg !55
  %1144 = insertelement <2 x float> %1143, float %1047, i64 1, !dbg !55
  %1145 = fsub <2 x float> %1142, %1144, !dbg !55
  %1146 = fptrunc <2 x float> %1145 to <2 x bfloat>, !dbg !56
  %1147 = fpext <2 x bfloat> %1089 to <2 x float>, !dbg !55
  %1148 = insertelement <2 x float> poison, float %1048, i64 0, !dbg !55
  %1149 = insertelement <2 x float> %1148, float %1049, i64 1, !dbg !55
  %1150 = fsub <2 x float> %1147, %1149, !dbg !55
  %1151 = fptrunc <2 x float> %1150 to <2 x bfloat>, !dbg !56
  %1152 = fpext <2 x bfloat> %1094 to <2 x float>, !dbg !55
  %1153 = insertelement <2 x float> poison, float %1050, i64 0, !dbg !55
  %1154 = insertelement <2 x float> %1153, float %1051, i64 1, !dbg !55
  %1155 = fsub <2 x float> %1152, %1154, !dbg !55
  %1156 = fptrunc <2 x float> %1155 to <2 x bfloat>, !dbg !56
  %1157 = fpext <2 x bfloat> %1096 to <2 x float>, !dbg !55
  %1158 = insertelement <2 x float> poison, float %1052, i64 0, !dbg !55
  %1159 = insertelement <2 x float> %1158, float %1053, i64 1, !dbg !55
  %1160 = fsub <2 x float> %1157, %1159, !dbg !55
  %1161 = fptrunc <2 x float> %1160 to <2 x bfloat>, !dbg !56
  %1162 = fpext <2 x bfloat> %1098 to <2 x float>, !dbg !55
  %1163 = insertelement <2 x float> poison, float %1054, i64 0, !dbg !55
  %1164 = insertelement <2 x float> %1163, float %1055, i64 1, !dbg !55
  %1165 = fsub <2 x float> %1162, %1164, !dbg !55
  %1166 = fptrunc <2 x float> %1165 to <2 x bfloat>, !dbg !56
  %1167 = fpext <2 x bfloat> %1100 to <2 x float>, !dbg !55
  %1168 = insertelement <2 x float> poison, float %1056, i64 0, !dbg !55
  %1169 = insertelement <2 x float> %1168, float %1057, i64 1, !dbg !55
  %1170 = fsub <2 x float> %1167, %1169, !dbg !55
  %1171 = fptrunc <2 x float> %1170 to <2 x bfloat>, !dbg !56
  %1172 = fpext <2 x bfloat> %1105 to <2 x float>, !dbg !55
  %1173 = insertelement <2 x float> poison, float %1058, i64 0, !dbg !55
  %1174 = insertelement <2 x float> %1173, float %1059, i64 1, !dbg !55
  %1175 = fsub <2 x float> %1172, %1174, !dbg !55
  %1176 = fptrunc <2 x float> %1175 to <2 x bfloat>, !dbg !56
  %1177 = fpext <2 x bfloat> %1107 to <2 x float>, !dbg !55
  %1178 = insertelement <2 x float> poison, float %1060, i64 0, !dbg !55
  %1179 = insertelement <2 x float> %1178, float %1061, i64 1, !dbg !55
  %1180 = fsub <2 x float> %1177, %1179, !dbg !55
  %1181 = fptrunc <2 x float> %1180 to <2 x bfloat>, !dbg !56
  %1182 = fpext <2 x bfloat> %1109 to <2 x float>, !dbg !55
  %1183 = insertelement <2 x float> poison, float %1062, i64 0, !dbg !55
  %1184 = insertelement <2 x float> %1183, float %1063, i64 1, !dbg !55
  %1185 = fsub <2 x float> %1182, %1184, !dbg !55
  %1186 = fptrunc <2 x float> %1185 to <2 x bfloat>, !dbg !56
  %1187 = fpext <2 x bfloat> %1111 to <2 x float>, !dbg !55
  %1188 = insertelement <2 x float> poison, float %1064, i64 0, !dbg !55
  %1189 = insertelement <2 x float> %1188, float %1065, i64 1, !dbg !55
  %1190 = fsub <2 x float> %1187, %1189, !dbg !55
  %1191 = fptrunc <2 x float> %1190 to <2 x bfloat>, !dbg !56
  %1192 = bitcast <2 x bfloat> %1116 to i32, !dbg !56
  %1193 = bitcast <2 x bfloat> %1121 to i32, !dbg !56
  %1194 = bitcast <2 x bfloat> %1126 to i32, !dbg !56
  %1195 = bitcast <2 x bfloat> %1131 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %320, i32 %1192, i32 %1193, i32 %1194, i32 %1195) #2, !dbg !56
  %1196 = bitcast <2 x bfloat> %1136 to i32, !dbg !56
  %1197 = bitcast <2 x bfloat> %1141 to i32, !dbg !56
  %1198 = bitcast <2 x bfloat> %1146 to i32, !dbg !56
  %1199 = bitcast <2 x bfloat> %1151 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %322, i32 %1196, i32 %1197, i32 %1198, i32 %1199) #2, !dbg !56
  %1200 = bitcast <2 x bfloat> %1156 to i32, !dbg !56
  %1201 = bitcast <2 x bfloat> %1161 to i32, !dbg !56
  %1202 = bitcast <2 x bfloat> %1166 to i32, !dbg !56
  %1203 = bitcast <2 x bfloat> %1171 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %324, i32 %1200, i32 %1201, i32 %1202, i32 %1203) #2, !dbg !56
  %1204 = bitcast <2 x bfloat> %1176 to i32, !dbg !56
  %1205 = bitcast <2 x bfloat> %1181 to i32, !dbg !56
  %1206 = bitcast <2 x bfloat> %1186 to i32, !dbg !56
  %1207 = bitcast <2 x bfloat> %1191 to i32, !dbg !56
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %326, i32 %1204, i32 %1205, i32 %1206, i32 %1207) #2, !dbg !56
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !56
  %1208 = load <4 x i32>, ptr addrspace(3) %335, align 16, !dbg !56
  %1209 = load <4 x i32>, ptr addrspace(3) %340, align 16, !dbg !56
  %1210 = load <4 x i32>, ptr addrspace(3) %345, align 16, !dbg !56
  %.extract580 = load i32, ptr addrspace(3) %330, align 16, !dbg !46
  %.extract582 = load i32, ptr addrspace(3) %417, align 4, !dbg !46
  %.extract584 = load i32, ptr addrspace(3) %418, align 8, !dbg !46
  %.extract586 = load i32, ptr addrspace(3) %419, align 4, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract580, i32 %.extract582, i32 %.extract584, i32 %.extract586, ptr addrspace(1) %677, i1 %.pn170.pn621) #2, !dbg !46
  %.extract588 = extractelement <4 x i32> %1208, i64 0, !dbg !46
  %.extract590 = extractelement <4 x i32> %1208, i64 1, !dbg !46
  %.extract592 = extractelement <4 x i32> %1208, i64 2, !dbg !46
  %.extract594 = extractelement <4 x i32> %1208, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract588, i32 %.extract590, i32 %.extract592, i32 %.extract594, ptr addrspace(1) %678, i1 %.pn154.pn622) #2, !dbg !46
  %.extract596 = extractelement <4 x i32> %1209, i64 0, !dbg !46
  %.extract598 = extractelement <4 x i32> %1209, i64 1, !dbg !46
  %.extract600 = extractelement <4 x i32> %1209, i64 2, !dbg !46
  %.extract602 = extractelement <4 x i32> %1209, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract596, i32 %.extract598, i32 %.extract600, i32 %.extract602, ptr addrspace(1) %679, i1 %.pn138.pn623) #2, !dbg !46
  %.extract604 = extractelement <4 x i32> %1210, i64 0, !dbg !46
  %.extract606 = extractelement <4 x i32> %1210, i64 1, !dbg !46
  %.extract608 = extractelement <4 x i32> %1210, i64 2, !dbg !46
  %.extract610 = extractelement <4 x i32> %1210, i64 3, !dbg !46
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract604, i32 %.extract606, i32 %.extract608, i32 %.extract610, ptr addrspace(1) %680, i1 %.pn122.pn624) #2, !dbg !46
  %1211 = tail call i32 asm sideeffect "mov.u32 $0, 0x0;\0A\09ld.global.b32 { $0 }, [ $1 + 0 ];", "=r,l"(ptr addrspace(1) %gep) #2, !dbg !57
  %1212 = bitcast i32 %1211 to float, !dbg !57
  %.idx509 = shl i32 %1066, 8, !dbg !38
  %1213 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140288), i32 %.idx509, !dbg !38
  %1214 = getelementptr inbounds nuw float, ptr addrspace(3) %1213, i32 %54, !dbg !38
  %1215 = load float, ptr addrspace(3) %1214, align 4, !dbg !38
  %1216 = getelementptr inbounds nuw float, ptr addrspace(3) %1213, i32 %55, !dbg !38
  %1217 = load float, ptr addrspace(3) %1216, align 4, !dbg !38
  %1218 = fsub float %1212, %1215, !dbg !58
  %1219 = fsub float %1212, %1217, !dbg !58
  %1220 = fmul float %1218, 0x3FF7154760000000, !dbg !59
  %1221 = tail call float @llvm.nvvm.ex2.approx.f(float %1220), !dbg !59
  %1222 = fmul float %1219, 0x3FF7154760000000, !dbg !59
  %1223 = tail call float @llvm.nvvm.ex2.approx.f(float %1222), !dbg !59
  %1224 = select i1 %685, float %1221, float 0.000000e+00, !dbg !60
  %1225 = select i1 %686, float %1223, float 0.000000e+00, !dbg !60
  %1226 = extractelement <2 x float> %1115, i64 0, !dbg !61
  %1227 = fmul float %1226, %1224, !dbg !61
  %1228 = extractelement <2 x float> %1115, i64 1, !dbg !61
  %1229 = fmul float %1228, %1224, !dbg !61
  %1230 = extractelement <2 x float> %1120, i64 0, !dbg !61
  %1231 = fmul float %1230, %1225, !dbg !61
  %1232 = extractelement <2 x float> %1120, i64 1, !dbg !61
  %1233 = fmul float %1232, %1225, !dbg !61
  %1234 = extractelement <2 x float> %1125, i64 0, !dbg !61
  %1235 = fmul float %1234, %1224, !dbg !61
  %1236 = extractelement <2 x float> %1125, i64 1, !dbg !61
  %1237 = fmul float %1236, %1224, !dbg !61
  %1238 = extractelement <2 x float> %1130, i64 0, !dbg !61
  %1239 = fmul float %1238, %1225, !dbg !61
  %1240 = extractelement <2 x float> %1130, i64 1, !dbg !61
  %1241 = fmul float %1240, %1225, !dbg !61
  %1242 = extractelement <2 x float> %1135, i64 0, !dbg !61
  %1243 = fmul float %1242, %1224, !dbg !61
  %1244 = extractelement <2 x float> %1135, i64 1, !dbg !61
  %1245 = fmul float %1244, %1224, !dbg !61
  %1246 = extractelement <2 x float> %1140, i64 0, !dbg !61
  %1247 = fmul float %1246, %1225, !dbg !61
  %1248 = extractelement <2 x float> %1140, i64 1, !dbg !61
  %1249 = fmul float %1248, %1225, !dbg !61
  %1250 = extractelement <2 x float> %1145, i64 0, !dbg !61
  %1251 = fmul float %1250, %1224, !dbg !61
  %1252 = extractelement <2 x float> %1145, i64 1, !dbg !61
  %1253 = fmul float %1252, %1224, !dbg !61
  %1254 = extractelement <2 x float> %1150, i64 0, !dbg !61
  %1255 = fmul float %1254, %1225, !dbg !61
  %1256 = extractelement <2 x float> %1150, i64 1, !dbg !61
  %1257 = fmul float %1256, %1225, !dbg !61
  %1258 = extractelement <2 x float> %1155, i64 0, !dbg !61
  %1259 = fmul float %1258, %1224, !dbg !61
  %1260 = extractelement <2 x float> %1155, i64 1, !dbg !61
  %1261 = fmul float %1260, %1224, !dbg !61
  %1262 = extractelement <2 x float> %1160, i64 0, !dbg !61
  %1263 = fmul float %1262, %1225, !dbg !61
  %1264 = extractelement <2 x float> %1160, i64 1, !dbg !61
  %1265 = fmul float %1264, %1225, !dbg !61
  %1266 = extractelement <2 x float> %1165, i64 0, !dbg !61
  %1267 = fmul float %1266, %1224, !dbg !61
  %1268 = extractelement <2 x float> %1165, i64 1, !dbg !61
  %1269 = fmul float %1268, %1224, !dbg !61
  %1270 = extractelement <2 x float> %1170, i64 0, !dbg !61
  %1271 = fmul float %1270, %1225, !dbg !61
  %1272 = extractelement <2 x float> %1170, i64 1, !dbg !61
  %1273 = fmul float %1272, %1225, !dbg !61
  %1274 = extractelement <2 x float> %1175, i64 0, !dbg !61
  %1275 = fmul float %1274, %1224, !dbg !61
  %1276 = extractelement <2 x float> %1175, i64 1, !dbg !61
  %1277 = fmul float %1276, %1224, !dbg !61
  %1278 = extractelement <2 x float> %1180, i64 0, !dbg !61
  %1279 = fmul float %1278, %1225, !dbg !61
  %1280 = extractelement <2 x float> %1180, i64 1, !dbg !61
  %1281 = fmul float %1280, %1225, !dbg !61
  %1282 = extractelement <2 x float> %1185, i64 0, !dbg !61
  %1283 = fmul float %1282, %1224, !dbg !61
  %1284 = extractelement <2 x float> %1185, i64 1, !dbg !61
  %1285 = fmul float %1284, %1224, !dbg !61
  %1286 = extractelement <2 x float> %1190, i64 0, !dbg !61
  %1287 = fmul float %1286, %1225, !dbg !61
  %1288 = extractelement <2 x float> %1190, i64 1, !dbg !61
  %1289 = fmul float %1288, %1225, !dbg !61
  %1290 = fmul float %1212, 0x3FF7154760000000, !dbg !62
  %1291 = tail call float @llvm.nvvm.ex2.approx.f(float %1290), !dbg !62
  %1292 = fmul float %455, %1291, !dbg !63
  %1293 = fmul float %456, %1291, !dbg !63
  %1294 = fmul float %457, %1291, !dbg !63
  %1295 = fmul float %458, %1291, !dbg !63
  %1296 = fmul float %459, %1291, !dbg !63
  %1297 = fmul float %460, %1291, !dbg !63
  %1298 = fmul float %461, %1291, !dbg !63
  %1299 = fmul float %462, %1291, !dbg !63
  %1300 = fmul float %463, %1291, !dbg !63
  %1301 = fmul float %464, %1291, !dbg !63
  %1302 = fmul float %465, %1291, !dbg !63
  %1303 = fmul float %466, %1291, !dbg !63
  %1304 = fmul float %467, %1291, !dbg !63
  %1305 = fmul float %468, %1291, !dbg !63
  %1306 = fmul float %469, %1291, !dbg !63
  %1307 = fmul float %470, %1291, !dbg !63
  %1308 = fmul float %471, %1291, !dbg !63
  %1309 = fmul float %472, %1291, !dbg !63
  %1310 = fmul float %473, %1291, !dbg !63
  %1311 = fmul float %474, %1291, !dbg !63
  %1312 = fmul float %475, %1291, !dbg !63
  %1313 = fmul float %476, %1291, !dbg !63
  %1314 = fmul float %477, %1291, !dbg !63
  %1315 = fmul float %478, %1291, !dbg !63
  %1316 = fmul float %479, %1291, !dbg !63
  %1317 = fmul float %480, %1291, !dbg !63
  %1318 = fmul float %481, %1291, !dbg !63
  %1319 = fmul float %482, %1291, !dbg !63
  %1320 = fmul float %483, %1291, !dbg !63
  %1321 = fmul float %484, %1291, !dbg !63
  %1322 = fmul float %485, %1291, !dbg !63
  %1323 = fmul float %486, %1291, !dbg !63
  %1324 = fmul float %423, %1291, !dbg !64
  %1325 = fmul float %424, %1291, !dbg !64
  %1326 = fmul float %425, %1291, !dbg !64
  %1327 = fmul float %426, %1291, !dbg !64
  %1328 = fmul float %427, %1291, !dbg !64
  %1329 = fmul float %428, %1291, !dbg !64
  %1330 = fmul float %429, %1291, !dbg !64
  %1331 = fmul float %430, %1291, !dbg !64
  %1332 = fmul float %431, %1291, !dbg !64
  %1333 = fmul float %432, %1291, !dbg !64
  %1334 = fmul float %433, %1291, !dbg !64
  %1335 = fmul float %434, %1291, !dbg !64
  %1336 = fmul float %435, %1291, !dbg !64
  %1337 = fmul float %436, %1291, !dbg !64
  %1338 = fmul float %437, %1291, !dbg !64
  %1339 = fmul float %438, %1291, !dbg !64
  %1340 = fmul float %439, %1291, !dbg !64
  %1341 = fmul float %440, %1291, !dbg !64
  %1342 = fmul float %441, %1291, !dbg !64
  %1343 = fmul float %442, %1291, !dbg !64
  %1344 = fmul float %443, %1291, !dbg !64
  %1345 = fmul float %444, %1291, !dbg !64
  %1346 = fmul float %445, %1291, !dbg !64
  %1347 = fmul float %446, %1291, !dbg !64
  %1348 = fmul float %447, %1291, !dbg !64
  %1349 = fmul float %448, %1291, !dbg !64
  %1350 = fmul float %449, %1291, !dbg !64
  %1351 = fmul float %450, %1291, !dbg !64
  %1352 = fmul float %451, %1291, !dbg !64
  %1353 = fmul float %452, %1291, !dbg !64
  %1354 = fmul float %453, %1291, !dbg !64
  %1355 = fmul float %454, %1291, !dbg !64
  %1356 = fptrunc float %1227 to bfloat, !dbg !65
  %1357 = fptrunc float %1229 to bfloat, !dbg !65
  %1358 = fptrunc float %1231 to bfloat, !dbg !65
  %1359 = fptrunc float %1233 to bfloat, !dbg !65
  %1360 = fptrunc float %1235 to bfloat, !dbg !65
  %1361 = fptrunc float %1237 to bfloat, !dbg !65
  %1362 = fptrunc float %1239 to bfloat, !dbg !65
  %1363 = fptrunc float %1241 to bfloat, !dbg !65
  %1364 = fptrunc float %1243 to bfloat, !dbg !65
  %1365 = fptrunc float %1245 to bfloat, !dbg !65
  %1366 = fptrunc float %1247 to bfloat, !dbg !65
  %1367 = fptrunc float %1249 to bfloat, !dbg !65
  %1368 = fptrunc float %1251 to bfloat, !dbg !65
  %1369 = fptrunc float %1253 to bfloat, !dbg !65
  %1370 = fptrunc float %1255 to bfloat, !dbg !65
  %1371 = fptrunc float %1257 to bfloat, !dbg !65
  %1372 = fptrunc float %1259 to bfloat, !dbg !65
  %1373 = fptrunc float %1261 to bfloat, !dbg !65
  %1374 = fptrunc float %1263 to bfloat, !dbg !65
  %1375 = fptrunc float %1265 to bfloat, !dbg !65
  %1376 = fptrunc float %1267 to bfloat, !dbg !65
  %1377 = fptrunc float %1269 to bfloat, !dbg !65
  %1378 = fptrunc float %1271 to bfloat, !dbg !65
  %1379 = fptrunc float %1273 to bfloat, !dbg !65
  %1380 = fptrunc float %1275 to bfloat, !dbg !65
  %1381 = fptrunc float %1277 to bfloat, !dbg !65
  %1382 = fptrunc float %1279 to bfloat, !dbg !65
  %1383 = fptrunc float %1281 to bfloat, !dbg !65
  %1384 = fptrunc float %1283 to bfloat, !dbg !65
  %1385 = fptrunc float %1285 to bfloat, !dbg !65
  %1386 = fptrunc float %1287 to bfloat, !dbg !65
  %1387 = fptrunc float %1289 to bfloat, !dbg !65
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !65
  %1388 = insertelement <2 x bfloat> poison, bfloat %1356, i64 0, !dbg !65
  %1389 = insertelement <2 x bfloat> %1388, bfloat %1357, i64 1, !dbg !65
  %1390 = bitcast <2 x bfloat> %1389 to i32, !dbg !65
  %1391 = insertelement <2 x bfloat> poison, bfloat %1358, i64 0, !dbg !65
  %1392 = insertelement <2 x bfloat> %1391, bfloat %1359, i64 1, !dbg !65
  %1393 = bitcast <2 x bfloat> %1392 to i32, !dbg !65
  %1394 = insertelement <2 x bfloat> poison, bfloat %1360, i64 0, !dbg !65
  %1395 = insertelement <2 x bfloat> %1394, bfloat %1361, i64 1, !dbg !65
  %1396 = bitcast <2 x bfloat> %1395 to i32, !dbg !65
  %1397 = insertelement <2 x bfloat> poison, bfloat %1362, i64 0, !dbg !65
  %1398 = insertelement <2 x bfloat> %1397, bfloat %1363, i64 1, !dbg !65
  %1399 = bitcast <2 x bfloat> %1398 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %387, i32 %1390, i32 %1393, i32 %1396, i32 %1399) #2, !dbg !65
  %1400 = insertelement <2 x bfloat> poison, bfloat %1364, i64 0, !dbg !65
  %1401 = insertelement <2 x bfloat> %1400, bfloat %1365, i64 1, !dbg !65
  %1402 = bitcast <2 x bfloat> %1401 to i32, !dbg !65
  %1403 = insertelement <2 x bfloat> poison, bfloat %1366, i64 0, !dbg !65
  %1404 = insertelement <2 x bfloat> %1403, bfloat %1367, i64 1, !dbg !65
  %1405 = bitcast <2 x bfloat> %1404 to i32, !dbg !65
  %1406 = insertelement <2 x bfloat> poison, bfloat %1368, i64 0, !dbg !65
  %1407 = insertelement <2 x bfloat> %1406, bfloat %1369, i64 1, !dbg !65
  %1408 = bitcast <2 x bfloat> %1407 to i32, !dbg !65
  %1409 = insertelement <2 x bfloat> poison, bfloat %1370, i64 0, !dbg !65
  %1410 = insertelement <2 x bfloat> %1409, bfloat %1371, i64 1, !dbg !65
  %1411 = bitcast <2 x bfloat> %1410 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %389, i32 %1402, i32 %1405, i32 %1408, i32 %1411) #2, !dbg !65
  %1412 = insertelement <2 x bfloat> poison, bfloat %1372, i64 0, !dbg !65
  %1413 = insertelement <2 x bfloat> %1412, bfloat %1373, i64 1, !dbg !65
  %1414 = bitcast <2 x bfloat> %1413 to i32, !dbg !65
  %1415 = insertelement <2 x bfloat> poison, bfloat %1374, i64 0, !dbg !65
  %1416 = insertelement <2 x bfloat> %1415, bfloat %1375, i64 1, !dbg !65
  %1417 = bitcast <2 x bfloat> %1416 to i32, !dbg !65
  %1418 = insertelement <2 x bfloat> poison, bfloat %1376, i64 0, !dbg !65
  %1419 = insertelement <2 x bfloat> %1418, bfloat %1377, i64 1, !dbg !65
  %1420 = bitcast <2 x bfloat> %1419 to i32, !dbg !65
  %1421 = insertelement <2 x bfloat> poison, bfloat %1378, i64 0, !dbg !65
  %1422 = insertelement <2 x bfloat> %1421, bfloat %1379, i64 1, !dbg !65
  %1423 = bitcast <2 x bfloat> %1422 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %391, i32 %1414, i32 %1417, i32 %1420, i32 %1423) #2, !dbg !65
  %1424 = insertelement <2 x bfloat> poison, bfloat %1380, i64 0, !dbg !65
  %1425 = insertelement <2 x bfloat> %1424, bfloat %1381, i64 1, !dbg !65
  %1426 = bitcast <2 x bfloat> %1425 to i32, !dbg !65
  %1427 = insertelement <2 x bfloat> poison, bfloat %1382, i64 0, !dbg !65
  %1428 = insertelement <2 x bfloat> %1427, bfloat %1383, i64 1, !dbg !65
  %1429 = bitcast <2 x bfloat> %1428 to i32, !dbg !65
  %1430 = insertelement <2 x bfloat> poison, bfloat %1384, i64 0, !dbg !65
  %1431 = insertelement <2 x bfloat> %1430, bfloat %1385, i64 1, !dbg !65
  %1432 = bitcast <2 x bfloat> %1431 to i32, !dbg !65
  %1433 = insertelement <2 x bfloat> poison, bfloat %1386, i64 0, !dbg !65
  %1434 = insertelement <2 x bfloat> %1433, bfloat %1387, i64 1, !dbg !65
  %1435 = bitcast <2 x bfloat> %1434 to i32, !dbg !65
  tail call void asm sideeffect "stmatrix.sync.aligned.m8n8.x4.shared.b16 [$0], {$1, $2, $3, $4};", "r,r,r,r,r"(i32 %393, i32 %1426, i32 %1429, i32 %1432, i32 %1435) #2, !dbg !65
  %1436 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %693, !dbg !39
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !66
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !66
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !66
  %1437 = ptrtoint ptr addrspace(3) %1436 to i32, !dbg !66
  %1438 = lshr exact i32 %1437, 4, !dbg !66
  %1439 = and i32 %1438, 16383, !dbg !66
  %1440 = zext nneg i32 %1439 to i64, !dbg !66
  %1441 = or disjoint i64 %1440, 4611686293338849280, !dbg !66
  %1442 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1292, float %1293, float %1294, float %1295, float %1296, float %1297, float %1298, float %1299, float %1300, float %1301, float %1302, float %1303, float %1304, float %1305, float %1306, float %1307, float %1308, float %1309, float %1310, float %1311, float %1312, float %1313, float %1314, float %1315, float %1316, float %1317, float %1318, float %1319, float %1320, float %1321, float %1322, float %1323, i64 %1441, i64 %397, i1 true) #2, !dbg !66
  %1443 = add i32 %1437, 2048, !dbg !66
  %1444 = lshr exact i32 %1443, 4, !dbg !66
  %1445 = and i32 %1444, 16383, !dbg !66
  %1446 = zext nneg i32 %1445 to i64, !dbg !66
  %1447 = or disjoint i64 %1446, 4611686293338849280, !dbg !66
  %1448 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 0, !dbg !66
  %1449 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 1, !dbg !66
  %1450 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 2, !dbg !66
  %1451 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 3, !dbg !66
  %1452 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 4, !dbg !66
  %1453 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 5, !dbg !66
  %1454 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 6, !dbg !66
  %1455 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 7, !dbg !66
  %1456 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 8, !dbg !66
  %1457 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 9, !dbg !66
  %1458 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 10, !dbg !66
  %1459 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 11, !dbg !66
  %1460 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 12, !dbg !66
  %1461 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 13, !dbg !66
  %1462 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 14, !dbg !66
  %1463 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 15, !dbg !66
  %1464 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 16, !dbg !66
  %1465 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 17, !dbg !66
  %1466 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 18, !dbg !66
  %1467 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 19, !dbg !66
  %1468 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 20, !dbg !66
  %1469 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 21, !dbg !66
  %1470 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 22, !dbg !66
  %1471 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 23, !dbg !66
  %1472 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 24, !dbg !66
  %1473 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 25, !dbg !66
  %1474 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 26, !dbg !66
  %1475 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 27, !dbg !66
  %1476 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 28, !dbg !66
  %1477 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 29, !dbg !66
  %1478 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 30, !dbg !66
  %1479 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1442, 31, !dbg !66
  %1480 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1448, float %1449, float %1450, float %1451, float %1452, float %1453, float %1454, float %1455, float %1456, float %1457, float %1458, float %1459, float %1460, float %1461, float %1462, float %1463, float %1464, float %1465, float %1466, float %1467, float %1468, float %1469, float %1470, float %1471, float %1472, float %1473, float %1474, float %1475, float %1476, float %1477, float %1478, float %1479, i64 %1447, i64 %401, i1 true) #2, !dbg !66
  %1481 = add i32 %1437, 4096, !dbg !66
  %1482 = lshr exact i32 %1481, 4, !dbg !66
  %1483 = and i32 %1482, 16383, !dbg !66
  %1484 = zext nneg i32 %1483 to i64, !dbg !66
  %1485 = or disjoint i64 %1484, 4611686293338849280, !dbg !66
  %1486 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 0, !dbg !66
  %1487 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 1, !dbg !66
  %1488 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 2, !dbg !66
  %1489 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 3, !dbg !66
  %1490 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 4, !dbg !66
  %1491 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 5, !dbg !66
  %1492 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 6, !dbg !66
  %1493 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 7, !dbg !66
  %1494 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 8, !dbg !66
  %1495 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 9, !dbg !66
  %1496 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 10, !dbg !66
  %1497 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 11, !dbg !66
  %1498 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 12, !dbg !66
  %1499 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 13, !dbg !66
  %1500 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 14, !dbg !66
  %1501 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 15, !dbg !66
  %1502 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 16, !dbg !66
  %1503 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 17, !dbg !66
  %1504 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 18, !dbg !66
  %1505 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 19, !dbg !66
  %1506 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 20, !dbg !66
  %1507 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 21, !dbg !66
  %1508 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 22, !dbg !66
  %1509 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 23, !dbg !66
  %1510 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 24, !dbg !66
  %1511 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 25, !dbg !66
  %1512 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 26, !dbg !66
  %1513 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 27, !dbg !66
  %1514 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 28, !dbg !66
  %1515 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 29, !dbg !66
  %1516 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 30, !dbg !66
  %1517 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1480, 31, !dbg !66
  %1518 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1486, float %1487, float %1488, float %1489, float %1490, float %1491, float %1492, float %1493, float %1494, float %1495, float %1496, float %1497, float %1498, float %1499, float %1500, float %1501, float %1502, float %1503, float %1504, float %1505, float %1506, float %1507, float %1508, float %1509, float %1510, float %1511, float %1512, float %1513, float %1514, float %1515, float %1516, float %1517, i64 %1485, i64 %405, i1 true) #2, !dbg !66
  %1519 = add i32 %1437, 6144, !dbg !66
  %1520 = lshr exact i32 %1519, 4, !dbg !66
  %1521 = and i32 %1520, 16383, !dbg !66
  %1522 = zext nneg i32 %1521 to i64, !dbg !66
  %1523 = or disjoint i64 %1522, 4611686293338849280, !dbg !66
  %1524 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 0, !dbg !66
  %1525 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 1, !dbg !66
  %1526 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 2, !dbg !66
  %1527 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 3, !dbg !66
  %1528 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 4, !dbg !66
  %1529 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 5, !dbg !66
  %1530 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 6, !dbg !66
  %1531 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 7, !dbg !66
  %1532 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 8, !dbg !66
  %1533 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 9, !dbg !66
  %1534 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 10, !dbg !66
  %1535 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 11, !dbg !66
  %1536 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 12, !dbg !66
  %1537 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 13, !dbg !66
  %1538 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 14, !dbg !66
  %1539 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 15, !dbg !66
  %1540 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 16, !dbg !66
  %1541 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 17, !dbg !66
  %1542 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 18, !dbg !66
  %1543 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 19, !dbg !66
  %1544 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 20, !dbg !66
  %1545 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 21, !dbg !66
  %1546 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 22, !dbg !66
  %1547 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 23, !dbg !66
  %1548 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 24, !dbg !66
  %1549 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 25, !dbg !66
  %1550 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 26, !dbg !66
  %1551 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 27, !dbg !66
  %1552 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 28, !dbg !66
  %1553 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 29, !dbg !66
  %1554 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 30, !dbg !66
  %1555 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1518, 31, !dbg !66
  %1556 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1524, float %1525, float %1526, float %1527, float %1528, float %1529, float %1530, float %1531, float %1532, float %1533, float %1534, float %1535, float %1536, float %1537, float %1538, float %1539, float %1540, float %1541, float %1542, float %1543, float %1544, float %1545, float %1546, float %1547, float %1548, float %1549, float %1550, float %1551, float %1552, float %1553, float %1554, float %1555, i64 %1523, i64 %409, i1 true) #2, !dbg !66
  %1557 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 0, !dbg !66
  %1558 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 1, !dbg !66
  %1559 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 2, !dbg !66
  %1560 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 3, !dbg !66
  %1561 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 4, !dbg !66
  %1562 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 5, !dbg !66
  %1563 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 6, !dbg !66
  %1564 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 7, !dbg !66
  %1565 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 8, !dbg !66
  %1566 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 9, !dbg !66
  %1567 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 10, !dbg !66
  %1568 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 11, !dbg !66
  %1569 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 12, !dbg !66
  %1570 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 13, !dbg !66
  %1571 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 14, !dbg !66
  %1572 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 15, !dbg !66
  %1573 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 16, !dbg !66
  %1574 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 17, !dbg !66
  %1575 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 18, !dbg !66
  %1576 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 19, !dbg !66
  %1577 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 20, !dbg !66
  %1578 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 21, !dbg !66
  %1579 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 22, !dbg !66
  %1580 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 23, !dbg !66
  %1581 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 24, !dbg !66
  %1582 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 25, !dbg !66
  %1583 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 26, !dbg !66
  %1584 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 27, !dbg !66
  %1585 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 28, !dbg !66
  %1586 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 29, !dbg !66
  %1587 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 30, !dbg !66
  %1588 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1556, 31, !dbg !66
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !66
  %1589 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1557, float %1558, float %1559, float %1560, float %1561, float %1562, float %1563, float %1564, float %1565, float %1566, float %1567, float %1568, float %1569, float %1570, float %1571, float %1572, float %1573, float %1574, float %1575, float %1576, float %1577, float %1578, float %1579, float %1580, float %1581, float %1582, float %1583, float %1584, float %1585, float %1586, float %1587, float %1588, ptr addrspace(3) %1436, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 0, i32 0) #2, !dbg !66
  %1590 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 0, !dbg !66
  %1591 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 1, !dbg !66
  %1592 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 2, !dbg !66
  %1593 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 3, !dbg !66
  %1594 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 4, !dbg !66
  %1595 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 5, !dbg !66
  %1596 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 6, !dbg !66
  %1597 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 7, !dbg !66
  %1598 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 8, !dbg !66
  %1599 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 9, !dbg !66
  %1600 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 10, !dbg !66
  %1601 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 11, !dbg !66
  %1602 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 12, !dbg !66
  %1603 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 13, !dbg !66
  %1604 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 14, !dbg !66
  %1605 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 15, !dbg !66
  %1606 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 16, !dbg !66
  %1607 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 17, !dbg !66
  %1608 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 18, !dbg !66
  %1609 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 19, !dbg !66
  %1610 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 20, !dbg !66
  %1611 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 21, !dbg !66
  %1612 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 22, !dbg !66
  %1613 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 23, !dbg !66
  %1614 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 24, !dbg !66
  %1615 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 25, !dbg !66
  %1616 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 26, !dbg !66
  %1617 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 27, !dbg !66
  %1618 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 28, !dbg !66
  %1619 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 29, !dbg !66
  %1620 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 30, !dbg !66
  %1621 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1589, 31, !dbg !66
  %1622 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %693, !dbg !40
  tail call void asm sideeffect "fence.proxy.async.shared::cta;", ""() #2, !dbg !67
  tail call void asm sideeffect "wgmma.fence.sync.aligned;", ""() #2, !dbg !67
  %1623 = ptrtoint ptr addrspace(3) %1622 to i32, !dbg !67
  %1624 = lshr exact i32 %1623, 4, !dbg !67
  %1625 = and i32 %1624, 16383, !dbg !67
  %1626 = zext nneg i32 %1625 to i64, !dbg !67
  %1627 = or disjoint i64 %1626, 4611686293338849280, !dbg !67
  %1628 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1324, float %1325, float %1326, float %1327, float %1328, float %1329, float %1330, float %1331, float %1332, float %1333, float %1334, float %1335, float %1336, float %1337, float %1338, float %1339, float %1340, float %1341, float %1342, float %1343, float %1344, float %1345, float %1346, float %1347, float %1348, float %1349, float %1350, float %1351, float %1352, float %1353, float %1354, float %1355, i64 %1627, i64 %397, i1 true) #2, !dbg !67
  %1629 = add i32 %1623, 2048, !dbg !67
  %1630 = lshr exact i32 %1629, 4, !dbg !67
  %1631 = and i32 %1630, 16383, !dbg !67
  %1632 = zext nneg i32 %1631 to i64, !dbg !67
  %1633 = or disjoint i64 %1632, 4611686293338849280, !dbg !67
  %1634 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 0, !dbg !67
  %1635 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 1, !dbg !67
  %1636 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 2, !dbg !67
  %1637 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 3, !dbg !67
  %1638 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 4, !dbg !67
  %1639 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 5, !dbg !67
  %1640 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 6, !dbg !67
  %1641 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 7, !dbg !67
  %1642 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 8, !dbg !67
  %1643 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 9, !dbg !67
  %1644 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 10, !dbg !67
  %1645 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 11, !dbg !67
  %1646 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 12, !dbg !67
  %1647 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 13, !dbg !67
  %1648 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 14, !dbg !67
  %1649 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 15, !dbg !67
  %1650 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 16, !dbg !67
  %1651 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 17, !dbg !67
  %1652 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 18, !dbg !67
  %1653 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 19, !dbg !67
  %1654 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 20, !dbg !67
  %1655 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 21, !dbg !67
  %1656 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 22, !dbg !67
  %1657 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 23, !dbg !67
  %1658 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 24, !dbg !67
  %1659 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 25, !dbg !67
  %1660 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 26, !dbg !67
  %1661 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 27, !dbg !67
  %1662 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 28, !dbg !67
  %1663 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 29, !dbg !67
  %1664 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 30, !dbg !67
  %1665 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1628, 31, !dbg !67
  %1666 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1634, float %1635, float %1636, float %1637, float %1638, float %1639, float %1640, float %1641, float %1642, float %1643, float %1644, float %1645, float %1646, float %1647, float %1648, float %1649, float %1650, float %1651, float %1652, float %1653, float %1654, float %1655, float %1656, float %1657, float %1658, float %1659, float %1660, float %1661, float %1662, float %1663, float %1664, float %1665, i64 %1633, i64 %401, i1 true) #2, !dbg !67
  %1667 = add i32 %1623, 4096, !dbg !67
  %1668 = lshr exact i32 %1667, 4, !dbg !67
  %1669 = and i32 %1668, 16383, !dbg !67
  %1670 = zext nneg i32 %1669 to i64, !dbg !67
  %1671 = or disjoint i64 %1670, 4611686293338849280, !dbg !67
  %1672 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 0, !dbg !67
  %1673 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 1, !dbg !67
  %1674 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 2, !dbg !67
  %1675 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 3, !dbg !67
  %1676 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 4, !dbg !67
  %1677 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 5, !dbg !67
  %1678 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 6, !dbg !67
  %1679 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 7, !dbg !67
  %1680 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 8, !dbg !67
  %1681 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 9, !dbg !67
  %1682 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 10, !dbg !67
  %1683 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 11, !dbg !67
  %1684 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 12, !dbg !67
  %1685 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 13, !dbg !67
  %1686 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 14, !dbg !67
  %1687 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 15, !dbg !67
  %1688 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 16, !dbg !67
  %1689 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 17, !dbg !67
  %1690 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 18, !dbg !67
  %1691 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 19, !dbg !67
  %1692 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 20, !dbg !67
  %1693 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 21, !dbg !67
  %1694 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 22, !dbg !67
  %1695 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 23, !dbg !67
  %1696 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 24, !dbg !67
  %1697 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 25, !dbg !67
  %1698 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 26, !dbg !67
  %1699 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 27, !dbg !67
  %1700 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 28, !dbg !67
  %1701 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 29, !dbg !67
  %1702 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 30, !dbg !67
  %1703 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1666, 31, !dbg !67
  %1704 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1672, float %1673, float %1674, float %1675, float %1676, float %1677, float %1678, float %1679, float %1680, float %1681, float %1682, float %1683, float %1684, float %1685, float %1686, float %1687, float %1688, float %1689, float %1690, float %1691, float %1692, float %1693, float %1694, float %1695, float %1696, float %1697, float %1698, float %1699, float %1700, float %1701, float %1702, float %1703, i64 %1671, i64 %405, i1 true) #2, !dbg !67
  %1705 = add i32 %1623, 6144, !dbg !67
  %1706 = lshr exact i32 %1705, 4, !dbg !67
  %1707 = and i32 %1706, 16383, !dbg !67
  %1708 = zext nneg i32 %1707 to i64, !dbg !67
  %1709 = or disjoint i64 %1708, 4611686293338849280, !dbg !67
  %1710 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 0, !dbg !67
  %1711 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 1, !dbg !67
  %1712 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 2, !dbg !67
  %1713 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 3, !dbg !67
  %1714 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 4, !dbg !67
  %1715 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 5, !dbg !67
  %1716 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 6, !dbg !67
  %1717 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 7, !dbg !67
  %1718 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 8, !dbg !67
  %1719 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 9, !dbg !67
  %1720 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 10, !dbg !67
  %1721 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 11, !dbg !67
  %1722 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 12, !dbg !67
  %1723 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 13, !dbg !67
  %1724 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 14, !dbg !67
  %1725 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 15, !dbg !67
  %1726 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 16, !dbg !67
  %1727 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 17, !dbg !67
  %1728 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 18, !dbg !67
  %1729 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 19, !dbg !67
  %1730 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 20, !dbg !67
  %1731 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 21, !dbg !67
  %1732 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 22, !dbg !67
  %1733 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 23, !dbg !67
  %1734 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 24, !dbg !67
  %1735 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 25, !dbg !67
  %1736 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 26, !dbg !67
  %1737 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 27, !dbg !67
  %1738 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 28, !dbg !67
  %1739 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 29, !dbg !67
  %1740 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 30, !dbg !67
  %1741 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1704, 31, !dbg !67
  %1742 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } asm sideeffect "wgmma.mma_async.sync.aligned.m64n64k16.f32.bf16.bf16 {$0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31}, $64, $65, $66, 1, 1, 1, 1;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,l,l,b"(float %1710, float %1711, float %1712, float %1713, float %1714, float %1715, float %1716, float %1717, float %1718, float %1719, float %1720, float %1721, float %1722, float %1723, float %1724, float %1725, float %1726, float %1727, float %1728, float %1729, float %1730, float %1731, float %1732, float %1733, float %1734, float %1735, float %1736, float %1737, float %1738, float %1739, float %1740, float %1741, i64 %1709, i64 %409, i1 true) #2, !dbg !67
  %1743 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 0, !dbg !67
  %1744 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 1, !dbg !67
  %1745 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 2, !dbg !67
  %1746 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 3, !dbg !67
  %1747 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 4, !dbg !67
  %1748 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 5, !dbg !67
  %1749 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 6, !dbg !67
  %1750 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 7, !dbg !67
  %1751 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 8, !dbg !67
  %1752 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 9, !dbg !67
  %1753 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 10, !dbg !67
  %1754 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 11, !dbg !67
  %1755 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 12, !dbg !67
  %1756 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 13, !dbg !67
  %1757 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 14, !dbg !67
  %1758 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 15, !dbg !67
  %1759 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 16, !dbg !67
  %1760 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 17, !dbg !67
  %1761 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 18, !dbg !67
  %1762 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 19, !dbg !67
  %1763 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 20, !dbg !67
  %1764 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 21, !dbg !67
  %1765 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 22, !dbg !67
  %1766 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 23, !dbg !67
  %1767 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 24, !dbg !67
  %1768 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 25, !dbg !67
  %1769 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 26, !dbg !67
  %1770 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 27, !dbg !67
  %1771 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 28, !dbg !67
  %1772 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 29, !dbg !67
  %1773 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 30, !dbg !67
  %1774 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float } %1742, 31, !dbg !67
  tail call void asm sideeffect "wgmma.commit_group.sync.aligned;", ""() #2, !dbg !67
  %1775 = tail call { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } asm sideeffect "// wait for regs: $0,$1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18,$19,$20,$21,$22,$23,$24,$25,$26,$27,$28,$29,$30,$31,$32,$33,$34,$35,$36,$37\0A\09wgmma.wait_group.sync.aligned 0;", "=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,=f,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37"(float %1743, float %1744, float %1745, float %1746, float %1747, float %1748, float %1749, float %1750, float %1751, float %1752, float %1753, float %1754, float %1755, float %1756, float %1757, float %1758, float %1759, float %1760, float %1761, float %1762, float %1763, float %1764, float %1765, float %1766, float %1767, float %1768, float %1769, float %1770, float %1771, float %1772, float %1773, float %1774, ptr addrspace(3) %1622, i32 0, i32 0, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 114688), i32 0, i32 0) #2, !dbg !67
  %1776 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 0, !dbg !67
  %1777 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 1, !dbg !67
  %1778 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 2, !dbg !67
  %1779 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 3, !dbg !67
  %1780 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 4, !dbg !67
  %1781 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 5, !dbg !67
  %1782 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 6, !dbg !67
  %1783 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 7, !dbg !67
  %1784 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 8, !dbg !67
  %1785 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 9, !dbg !67
  %1786 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 10, !dbg !67
  %1787 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 11, !dbg !67
  %1788 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 12, !dbg !67
  %1789 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 13, !dbg !67
  %1790 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 14, !dbg !67
  %1791 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 15, !dbg !67
  %1792 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 16, !dbg !67
  %1793 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 17, !dbg !67
  %1794 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 18, !dbg !67
  %1795 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 19, !dbg !67
  %1796 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 20, !dbg !67
  %1797 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 21, !dbg !67
  %1798 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 22, !dbg !67
  %1799 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 23, !dbg !67
  %1800 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 24, !dbg !67
  %1801 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 25, !dbg !67
  %1802 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 26, !dbg !67
  %1803 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 27, !dbg !67
  %1804 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 28, !dbg !67
  %1805 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 29, !dbg !67
  %1806 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 30, !dbg !67
  %1807 = extractvalue { float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, ptr addrspace(3), i32, i32, ptr addrspace(3), i32, i32 } %1775, 31, !dbg !67
  %indvars.iv.tr = trunc i64 %indvars.iv to i32, !dbg !31
  %1808 = shl i32 %indvars.iv.tr, 6, !dbg !31
  %1809 = add i32 %1808, 128, !dbg !31
  %1810 = sext i32 %1809 to i64, !dbg !31
  %1811 = or disjoint i64 %1810, %56, !dbg !35
  %1812 = or disjoint i64 %1810, %57, !dbg !35
  %1813 = or disjoint i64 %1810, %58, !dbg !35
  %1814 = or disjoint i64 %1810, %59, !dbg !35
  %1815 = or disjoint i64 %1810, %61, !dbg !35
  %1816 = or disjoint i64 %1810, %62, !dbg !35
  %1817 = shl nsw i64 %1811, 12, !dbg !35
  %1818 = shl nsw i64 %1812, 12, !dbg !35
  %1819 = shl nsw i64 %1813, 12, !dbg !35
  %1820 = shl nsw i64 %1814, 12, !dbg !35
  %1821 = or disjoint i64 %1817, %60, !dbg !35
  %1822 = or disjoint i64 %1818, %60, !dbg !35
  %1823 = or disjoint i64 %1819, %60, !dbg !35
  %1824 = or disjoint i64 %1820, %60, !dbg !35
  %1825 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1821, !dbg !35
  %1826 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1822, !dbg !35
  %1827 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1823, !dbg !35
  %1828 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1824, !dbg !35
  %1829 = icmp sgt i32 %1809, -1, !dbg !35
  %1830 = icmp slt i64 %1811, %72, !dbg !35
  %1831 = icmp slt i64 %1812, %72, !dbg !35
  %1832 = icmp slt i64 %1813, %72, !dbg !35
  %1833 = icmp slt i64 %1814, %72, !dbg !35
  %1834 = and i1 %1829, %1830, !dbg !35
  %1835 = and i1 %1829, %1831, !dbg !35
  %1836 = and i1 %1829, %1832, !dbg !35
  %1837 = and i1 %1829, %1833, !dbg !35
  %1838 = extractelement <4 x i32> %691, i64 3, !dbg !35
  %1839 = shl i32 %1838, 12, !dbg !35
  %1840 = getelementptr bfloat, ptr addrspace(3) @global_smem, i32 %1839, !dbg !35
  %1841 = and i1 %488, %1834, !dbg !34
  %1842 = and i1 %488, %1835, !dbg !34
  %1843 = and i1 %488, %1836, !dbg !34
  %1844 = and i1 %488, %1837, !dbg !34
  %1845 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1840, i32 %105, !dbg !35
  %1846 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1840, i32 %110, !dbg !35
  %1847 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1840, i32 %113, !dbg !35
  %1848 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1840, i32 %116, !dbg !35
  %1849 = select i1 %1841, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1845, ptr addrspace(1) %1825, i32 %1849) #2, !dbg !35
  %1850 = select i1 %1842, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1846, ptr addrspace(1) %1826, i32 %1850) #2, !dbg !35
  %1851 = select i1 %1843, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1847, ptr addrspace(1) %1827, i32 %1851) #2, !dbg !35
  %1852 = select i1 %1844, i32 16, i32 0, !dbg !35
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1848, ptr addrspace(1) %1828, i32 %1852) #2, !dbg !35
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !35
  %1853 = or disjoint i64 %1817, %71, !dbg !36
  %1854 = or disjoint i64 %1818, %71, !dbg !36
  %1855 = or disjoint i64 %1819, %71, !dbg !36
  %1856 = or disjoint i64 %1820, %71, !dbg !36
  %1857 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1853, !dbg !36
  %1858 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1854, !dbg !36
  %1859 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1855, !dbg !36
  %1860 = getelementptr bfloat, ptr addrspace(1) %29, i64 %1856, !dbg !36
  %1861 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 24576), i32 %1839, !dbg !36
  %1862 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1861, i32 %105, !dbg !36
  %1863 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1861, i32 %110, !dbg !36
  %1864 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1861, i32 %113, !dbg !36
  %1865 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1861, i32 %116, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1862, ptr addrspace(1) %1857, i32 %1849) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1863, ptr addrspace(1) %1858, i32 %1850) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1864, ptr addrspace(1) %1859, i32 %1851) #2, !dbg !36
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1865, ptr addrspace(1) %1860, i32 %1852) #2, !dbg !36
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !36
  %1866 = add nsw i64 %1817, %63, !dbg !37
  %1867 = add nsw i64 %1818, %63, !dbg !37
  %1868 = add nsw i64 %1819, %63, !dbg !37
  %1869 = add nsw i64 %1820, %63, !dbg !37
  %1870 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1866, !dbg !37
  %1871 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1867, !dbg !37
  %1872 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1868, !dbg !37
  %1873 = getelementptr bfloat, ptr addrspace(1) %27, i64 %1869, !dbg !37
  %1874 = and i1 %66, %1834, !dbg !37
  %1875 = and i1 %66, %1835, !dbg !37
  %1876 = and i1 %66, %1836, !dbg !37
  %1877 = and i1 %66, %1837, !dbg !37
  %1878 = extractelement <4 x i32> %691, i64 1, !dbg !38
  %.idx510 = shl i32 %1878, 13, !dbg !37
  %1879 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 98304), i32 %.idx510, !dbg !37
  %1880 = and i1 %488, %1874, !dbg !34
  %1881 = and i1 %488, %1875, !dbg !34
  %1882 = and i1 %488, %1876, !dbg !34
  %1883 = and i1 %488, %1877, !dbg !34
  %1884 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1879, i32 %152, !dbg !37
  %1885 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1879, i32 %154, !dbg !37
  %1886 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1879, i32 %156, !dbg !37
  %1887 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1879, i32 %158, !dbg !37
  %1888 = select i1 %1880, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1884, ptr addrspace(1) %1870, i32 %1888) #2, !dbg !37
  %1889 = select i1 %1881, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1885, ptr addrspace(1) %1871, i32 %1889) #2, !dbg !37
  %1890 = select i1 %1882, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1886, ptr addrspace(1) %1872, i32 %1890) #2, !dbg !37
  %1891 = select i1 %1883, i32 16, i32 0, !dbg !37
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) nonnull %1887, ptr addrspace(1) %1873, i32 %1891) #2, !dbg !37
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !37
  %.idx511 = shl nsw i64 %1815, 7, !dbg !38
  %1892 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx511, !dbg !38
  %.idx512 = shl nsw i64 %1816, 7, !dbg !38
  %1893 = getelementptr i8, ptr addrspace(1) %76, i64 %.idx512, !dbg !38
  %1894 = icmp slt i64 %1815, %72, !dbg !38
  %1895 = icmp slt i64 %1816, %72, !dbg !38
  %1896 = and i1 %1829, %1894, !dbg !38
  %1897 = and i1 %1829, %1895, !dbg !38
  %.idx513 = shl i32 %1878, 8, !dbg !38
  %1898 = getelementptr i8, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 140288), i32 %.idx513, !dbg !38
  %1899 = and i1 %488, %1896, !dbg !34
  %1900 = and i1 %488, %1897, !dbg !34
  %1901 = getelementptr inbounds nuw float, ptr addrspace(3) %1898, i32 %54, !dbg !38
  %1902 = getelementptr inbounds nuw float, ptr addrspace(3) %1898, i32 %55, !dbg !38
  %1903 = select i1 %1899, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) %1901, ptr addrspace(1) %1892, i32 %1903, i1 %173) #2, !dbg !38
  %1904 = select i1 %1900, i32 4, i32 0, !dbg !38
  tail call void asm sideeffect "@$3 cp.async.ca.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x4, $2;", "r,l,r,b"(ptr addrspace(3) nonnull %1902, ptr addrspace(1) %1893, i32 %1904, i1 %173) #2, !dbg !38
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !38
  %1905 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1821, !dbg !39
  %1906 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1822, !dbg !39
  %1907 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1823, !dbg !39
  %1908 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1824, !dbg !39
  %1909 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 49152), i32 %1839, !dbg !39
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !39
  %1910 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1909, i32 %105, !dbg !39
  %1911 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1909, i32 %110, !dbg !39
  %1912 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1909, i32 %113, !dbg !39
  %1913 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1909, i32 %116, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1910, ptr addrspace(1) %1905, i32 %1849) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1911, ptr addrspace(1) %1906, i32 %1850) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1912, ptr addrspace(1) %1907, i32 %1851) #2, !dbg !39
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1913, ptr addrspace(1) %1908, i32 %1852) #2, !dbg !39
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !39
  %1914 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1853, !dbg !40
  %1915 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1854, !dbg !40
  %1916 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1855, !dbg !40
  %1917 = getelementptr bfloat, ptr addrspace(1) %28, i64 %1856, !dbg !40
  %1918 = getelementptr bfloat, ptr addrspace(3) getelementptr (i8, ptr addrspace(3) @global_smem, i32 73728), i32 %1839, !dbg !40
  %1919 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1918, i32 %105, !dbg !40
  %1920 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1918, i32 %110, !dbg !40
  %1921 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1918, i32 %113, !dbg !40
  %1922 = getelementptr inbounds nuw bfloat, ptr addrspace(3) %1918, i32 %116, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1919, ptr addrspace(1) %1914, i32 %1849) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1920, ptr addrspace(1) %1915, i32 %1850) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1921, ptr addrspace(1) %1916, i32 %1851) #2, !dbg !40
  tail call void asm sideeffect "cp.async.cg.shared.global [ $0 + 0 ], [ $1 + 0 ], 0x10, $2;", "r,l,r"(ptr addrspace(3) %1922, ptr addrspace(1) %1917, i32 %1852) #2, !dbg !40
  tail call void @llvm.nvvm.cp.async.commit.group(), !dbg !40
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count, !dbg !34
  br i1 %exitcond.not, label %._crit_edge, label %420, !dbg !34

._crit_edge:                                      ; preds = %420, %9
  %1923 = phi float [ 0.000000e+00, %9 ], [ %1590, %420 ]
  %1924 = phi float [ 0.000000e+00, %9 ], [ %1591, %420 ]
  %1925 = phi float [ 0.000000e+00, %9 ], [ %1592, %420 ]
  %1926 = phi float [ 0.000000e+00, %9 ], [ %1593, %420 ]
  %1927 = phi float [ 0.000000e+00, %9 ], [ %1594, %420 ]
  %1928 = phi float [ 0.000000e+00, %9 ], [ %1595, %420 ]
  %1929 = phi float [ 0.000000e+00, %9 ], [ %1596, %420 ]
  %1930 = phi float [ 0.000000e+00, %9 ], [ %1597, %420 ]
  %1931 = phi float [ 0.000000e+00, %9 ], [ %1598, %420 ]
  %1932 = phi float [ 0.000000e+00, %9 ], [ %1599, %420 ]
  %1933 = phi float [ 0.000000e+00, %9 ], [ %1600, %420 ]
  %1934 = phi float [ 0.000000e+00, %9 ], [ %1601, %420 ]
  %1935 = phi float [ 0.000000e+00, %9 ], [ %1602, %420 ]
  %1936 = phi float [ 0.000000e+00, %9 ], [ %1603, %420 ]
  %1937 = phi float [ 0.000000e+00, %9 ], [ %1604, %420 ]
  %1938 = phi float [ 0.000000e+00, %9 ], [ %1605, %420 ]
  %1939 = phi float [ 0.000000e+00, %9 ], [ %1606, %420 ]
  %1940 = phi float [ 0.000000e+00, %9 ], [ %1607, %420 ]
  %1941 = phi float [ 0.000000e+00, %9 ], [ %1608, %420 ]
  %1942 = phi float [ 0.000000e+00, %9 ], [ %1609, %420 ]
  %1943 = phi float [ 0.000000e+00, %9 ], [ %1610, %420 ]
  %1944 = phi float [ 0.000000e+00, %9 ], [ %1611, %420 ]
  %1945 = phi float [ 0.000000e+00, %9 ], [ %1612, %420 ]
  %1946 = phi float [ 0.000000e+00, %9 ], [ %1613, %420 ]
  %1947 = phi float [ 0.000000e+00, %9 ], [ %1614, %420 ]
  %1948 = phi float [ 0.000000e+00, %9 ], [ %1615, %420 ]
  %1949 = phi float [ 0.000000e+00, %9 ], [ %1616, %420 ]
  %1950 = phi float [ 0.000000e+00, %9 ], [ %1617, %420 ]
  %1951 = phi float [ 0.000000e+00, %9 ], [ %1618, %420 ]
  %1952 = phi float [ 0.000000e+00, %9 ], [ %1619, %420 ]
  %1953 = phi float [ 0.000000e+00, %9 ], [ %1620, %420 ]
  %1954 = phi float [ 0.000000e+00, %9 ], [ %1621, %420 ]
  %1955 = phi float [ 0.000000e+00, %9 ], [ %1776, %420 ]
  %1956 = phi float [ 0.000000e+00, %9 ], [ %1777, %420 ]
  %1957 = phi float [ 0.000000e+00, %9 ], [ %1778, %420 ]
  %1958 = phi float [ 0.000000e+00, %9 ], [ %1779, %420 ]
  %1959 = phi float [ 0.000000e+00, %9 ], [ %1780, %420 ]
  %1960 = phi float [ 0.000000e+00, %9 ], [ %1781, %420 ]
  %1961 = phi float [ 0.000000e+00, %9 ], [ %1782, %420 ]
  %1962 = phi float [ 0.000000e+00, %9 ], [ %1783, %420 ]
  %1963 = phi float [ 0.000000e+00, %9 ], [ %1784, %420 ]
  %1964 = phi float [ 0.000000e+00, %9 ], [ %1785, %420 ]
  %1965 = phi float [ 0.000000e+00, %9 ], [ %1786, %420 ]
  %1966 = phi float [ 0.000000e+00, %9 ], [ %1787, %420 ]
  %1967 = phi float [ 0.000000e+00, %9 ], [ %1788, %420 ]
  %1968 = phi float [ 0.000000e+00, %9 ], [ %1789, %420 ]
  %1969 = phi float [ 0.000000e+00, %9 ], [ %1790, %420 ]
  %1970 = phi float [ 0.000000e+00, %9 ], [ %1791, %420 ]
  %1971 = phi float [ 0.000000e+00, %9 ], [ %1792, %420 ]
  %1972 = phi float [ 0.000000e+00, %9 ], [ %1793, %420 ]
  %1973 = phi float [ 0.000000e+00, %9 ], [ %1794, %420 ]
  %1974 = phi float [ 0.000000e+00, %9 ], [ %1795, %420 ]
  %1975 = phi float [ 0.000000e+00, %9 ], [ %1796, %420 ]
  %1976 = phi float [ 0.000000e+00, %9 ], [ %1797, %420 ]
  %1977 = phi float [ 0.000000e+00, %9 ], [ %1798, %420 ]
  %1978 = phi float [ 0.000000e+00, %9 ], [ %1799, %420 ]
  %1979 = phi float [ 0.000000e+00, %9 ], [ %1800, %420 ]
  %1980 = phi float [ 0.000000e+00, %9 ], [ %1801, %420 ]
  %1981 = phi float [ 0.000000e+00, %9 ], [ %1802, %420 ]
  %1982 = phi float [ 0.000000e+00, %9 ], [ %1803, %420 ]
  %1983 = phi float [ 0.000000e+00, %9 ], [ %1804, %420 ]
  %1984 = phi float [ 0.000000e+00, %9 ], [ %1805, %420 ]
  %1985 = phi float [ 0.000000e+00, %9 ], [ %1806, %420 ]
  %1986 = phi float [ 0.000000e+00, %9 ], [ %1807, %420 ]
  %1987 = zext nneg i32 %15 to i64, !dbg !68
  %1988 = getelementptr float, ptr addrspace(1) %6, i64 %1987, !dbg !68
  tail call void @llvm.nvvm.cp.async.wait.group(i32 0), !dbg !34
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !34
  %1989 = lshr i32 %33, 4, !dbg !69
  %1990 = shl nuw nsw i32 %33, 2, !dbg !69
  %1991 = and i32 %1990, 60, !dbg !69
  %1992 = zext nneg i32 %1991 to i64, !dbg !69
  %1993 = or disjoint i64 %1992, %32, !dbg !69
  %1994 = shl nuw nsw i32 %1989, 9, !dbg !69
  %1995 = and i32 %1994, 3584, !dbg !69
  %.idx217 = zext nneg i32 %1995 to i64, !dbg !69
  %1996 = getelementptr i8, ptr addrspace(1) %1988, i64 %.idx217, !dbg !69
  %1997 = getelementptr float, ptr addrspace(1) %1996, i64 %1993, !dbg !69
  %1998 = getelementptr i8, ptr addrspace(1) %1996, i64 4096, !dbg !69
  %1999 = getelementptr float, ptr addrspace(1) %1998, i64 %1993, !dbg !69
  %2000 = getelementptr i8, ptr addrspace(1) %1996, i64 8192, !dbg !69
  %2001 = getelementptr float, ptr addrspace(1) %2000, i64 %1993, !dbg !69
  %2002 = getelementptr i8, ptr addrspace(1) %1996, i64 12288, !dbg !69
  %2003 = getelementptr float, ptr addrspace(1) %2002, i64 %1993, !dbg !69
  %2004 = getelementptr i8, ptr addrspace(1) %1996, i64 16384, !dbg !69
  %2005 = getelementptr float, ptr addrspace(1) %2004, i64 %1993, !dbg !69
  %2006 = getelementptr i8, ptr addrspace(1) %1996, i64 20480, !dbg !69
  %2007 = getelementptr float, ptr addrspace(1) %2006, i64 %1993, !dbg !69
  %2008 = getelementptr i8, ptr addrspace(1) %1996, i64 24576, !dbg !69
  %2009 = getelementptr float, ptr addrspace(1) %2008, i64 %1993, !dbg !69
  %2010 = shl nuw nsw i32 %1989, 9, !dbg !69
  %2011 = or i32 %2010, 28672, !dbg !69
  %.idx224 = zext nneg i32 %2011 to i64, !dbg !69
  %2012 = getelementptr i8, ptr addrspace(1) %1988, i64 %.idx224, !dbg !69
  %2013 = getelementptr float, ptr addrspace(1) %2012, i64 %1993, !dbg !69
  %2014 = icmp slt i64 %1993, 128, !dbg !69
  %2015 = and i1 %64, %2014, !dbg !69
  %2016 = shl nuw nsw i32 %33, 1, !dbg !69
  %2017 = and i32 %2016, 6, !dbg !69
  %2018 = shl nuw nsw i32 %33, 4, !dbg !69
  %2019 = and i32 %2018, 192, !dbg !69
  %2020 = or disjoint i32 %2019, %2017, !dbg !69
  %2021 = shl nuw nsw i32 %36, 4, !dbg !69
  %2022 = or disjoint i32 %2020, %2021, !dbg !69
  %2023 = shl nuw nsw i32 %33, 5, !dbg !69
  %2024 = and i32 %2023, 3072, !dbg !69
  %2025 = or disjoint i32 %2022, %2024, !dbg !69
  %2026 = and i32 %1990, 508, !dbg !69
  %2027 = lshr i32 %2025, 4, !dbg !69
  %2028 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2027, !dbg !69
  %2029 = getelementptr inbounds nuw float, ptr addrspace(3) %2028, i32 %2025, !dbg !69
  %2030 = insertelement <2 x float> poison, float %1923, i64 0, !dbg !69
  %2031 = insertelement <2 x float> %2030, float %1924, i64 1, !dbg !69
  store <2 x float> %2031, ptr addrspace(3) %2029, align 8, !dbg !69
  %2032 = or disjoint i32 %2025, 512, !dbg !69
  %2033 = lshr i32 %2032, 4, !dbg !69
  %2034 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2033, !dbg !69
  %2035 = getelementptr inbounds nuw float, ptr addrspace(3) %2034, i32 %2032, !dbg !69
  %2036 = insertelement <2 x float> poison, float %1925, i64 0, !dbg !69
  %2037 = insertelement <2 x float> %2036, float %1926, i64 1, !dbg !69
  store <2 x float> %2037, ptr addrspace(3) %2035, align 8, !dbg !69
  %2038 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 32, !dbg !69
  %2039 = insertelement <2 x float> poison, float %1927, i64 0, !dbg !69
  %2040 = insertelement <2 x float> %2039, float %1928, i64 1, !dbg !69
  store <2 x float> %2040, ptr addrspace(3) %2038, align 8, !dbg !69
  %2041 = or disjoint i32 %2025, 520, !dbg !69
  %2042 = lshr i32 %2041, 4, !dbg !69
  %2043 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2042, !dbg !69
  %2044 = getelementptr inbounds nuw float, ptr addrspace(3) %2043, i32 %2041, !dbg !69
  %2045 = insertelement <2 x float> poison, float %1929, i64 0, !dbg !69
  %2046 = insertelement <2 x float> %2045, float %1930, i64 1, !dbg !69
  store <2 x float> %2046, ptr addrspace(3) %2044, align 8, !dbg !69
  %2047 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 64, !dbg !69
  %2048 = insertelement <2 x float> poison, float %1931, i64 0, !dbg !69
  %2049 = insertelement <2 x float> %2048, float %1932, i64 1, !dbg !69
  store <2 x float> %2049, ptr addrspace(3) %2047, align 8, !dbg !69
  %2050 = or disjoint i32 %2025, 528, !dbg !69
  %2051 = lshr i32 %2050, 4, !dbg !69
  %2052 = and i32 %2051, 268435452, !dbg !69
  %2053 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2052, !dbg !69
  %2054 = getelementptr inbounds nuw float, ptr addrspace(3) %2053, i32 %2050, !dbg !69
  %2055 = insertelement <2 x float> poison, float %1933, i64 0, !dbg !69
  %2056 = insertelement <2 x float> %2055, float %1934, i64 1, !dbg !69
  store <2 x float> %2056, ptr addrspace(3) %2054, align 8, !dbg !69
  %2057 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 96, !dbg !69
  %2058 = insertelement <2 x float> poison, float %1935, i64 0, !dbg !69
  %2059 = insertelement <2 x float> %2058, float %1936, i64 1, !dbg !69
  store <2 x float> %2059, ptr addrspace(3) %2057, align 8, !dbg !69
  %2060 = or disjoint i32 %2025, 536, !dbg !69
  %2061 = lshr i32 %2060, 4, !dbg !69
  %2062 = and i32 %2061, 268435452, !dbg !69
  %2063 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2062, !dbg !69
  %2064 = getelementptr inbounds nuw float, ptr addrspace(3) %2063, i32 %2060, !dbg !69
  %2065 = insertelement <2 x float> poison, float %1937, i64 0, !dbg !69
  %2066 = insertelement <2 x float> %2065, float %1938, i64 1, !dbg !69
  store <2 x float> %2066, ptr addrspace(3) %2064, align 8, !dbg !69
  %2067 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 128, !dbg !69
  %2068 = insertelement <2 x float> poison, float %1939, i64 0, !dbg !69
  %2069 = insertelement <2 x float> %2068, float %1940, i64 1, !dbg !69
  store <2 x float> %2069, ptr addrspace(3) %2067, align 8, !dbg !69
  %2070 = or disjoint i32 %2025, 544, !dbg !69
  %2071 = lshr i32 %2070, 4, !dbg !69
  %2072 = and i32 %2071, 268435452, !dbg !69
  %2073 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2072, !dbg !69
  %2074 = getelementptr inbounds nuw float, ptr addrspace(3) %2073, i32 %2070, !dbg !69
  %2075 = insertelement <2 x float> poison, float %1941, i64 0, !dbg !69
  %2076 = insertelement <2 x float> %2075, float %1942, i64 1, !dbg !69
  store <2 x float> %2076, ptr addrspace(3) %2074, align 8, !dbg !69
  %2077 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 160, !dbg !69
  %2078 = insertelement <2 x float> poison, float %1943, i64 0, !dbg !69
  %2079 = insertelement <2 x float> %2078, float %1944, i64 1, !dbg !69
  store <2 x float> %2079, ptr addrspace(3) %2077, align 8, !dbg !69
  %2080 = or disjoint i32 %2025, 552, !dbg !69
  %2081 = lshr i32 %2080, 4, !dbg !69
  %2082 = and i32 %2081, 268435452, !dbg !69
  %2083 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2082, !dbg !69
  %2084 = getelementptr inbounds nuw float, ptr addrspace(3) %2083, i32 %2080, !dbg !69
  %2085 = insertelement <2 x float> poison, float %1945, i64 0, !dbg !69
  %2086 = insertelement <2 x float> %2085, float %1946, i64 1, !dbg !69
  store <2 x float> %2086, ptr addrspace(3) %2084, align 8, !dbg !69
  %2087 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 192, !dbg !69
  %2088 = insertelement <2 x float> poison, float %1947, i64 0, !dbg !69
  %2089 = insertelement <2 x float> %2088, float %1948, i64 1, !dbg !69
  store <2 x float> %2089, ptr addrspace(3) %2087, align 8, !dbg !69
  %2090 = or disjoint i32 %2025, 560, !dbg !69
  %2091 = lshr i32 %2090, 4, !dbg !69
  %2092 = and i32 %2091, 268435452, !dbg !69
  %2093 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2092, !dbg !69
  %2094 = getelementptr inbounds nuw float, ptr addrspace(3) %2093, i32 %2090, !dbg !69
  %2095 = insertelement <2 x float> poison, float %1949, i64 0, !dbg !69
  %2096 = insertelement <2 x float> %2095, float %1950, i64 1, !dbg !69
  store <2 x float> %2096, ptr addrspace(3) %2094, align 8, !dbg !69
  %2097 = getelementptr inbounds nuw i8, ptr addrspace(3) %2029, i32 224, !dbg !69
  %2098 = insertelement <2 x float> poison, float %1951, i64 0, !dbg !69
  %2099 = insertelement <2 x float> %2098, float %1952, i64 1, !dbg !69
  store <2 x float> %2099, ptr addrspace(3) %2097, align 8, !dbg !69
  %2100 = or disjoint i32 %2025, 568, !dbg !69
  %2101 = lshr i32 %2100, 4, !dbg !69
  %2102 = and i32 %2101, 268435452, !dbg !69
  %2103 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2102, !dbg !69
  %2104 = getelementptr inbounds nuw float, ptr addrspace(3) %2103, i32 %2100, !dbg !69
  %2105 = insertelement <2 x float> poison, float %1953, i64 0, !dbg !69
  %2106 = insertelement <2 x float> %2105, float %1954, i64 1, !dbg !69
  store <2 x float> %2106, ptr addrspace(3) %2104, align 8, !dbg !69
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !69
  %2107 = and i32 %50, 28, !dbg !69
  %2108 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2107, !dbg !69
  %2109 = getelementptr inbounds nuw float, ptr addrspace(3) %2108, i32 %2026, !dbg !69
  %2110 = load <4 x i32>, ptr addrspace(3) %2109, align 16, !dbg !69
  %2111 = or disjoint i32 %2026, 512, !dbg !69
  %2112 = lshr i32 %2111, 4, !dbg !69
  %2113 = and i32 %2112, 60, !dbg !69
  %2114 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2113, !dbg !69
  %2115 = getelementptr inbounds nuw float, ptr addrspace(3) %2114, i32 %2111, !dbg !69
  %2116 = load <4 x i32>, ptr addrspace(3) %2115, align 16, !dbg !69
  %2117 = or disjoint i32 %2026, 1024, !dbg !69
  %2118 = lshr i32 %2117, 4, !dbg !69
  %2119 = and i32 %2118, 92, !dbg !69
  %2120 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2119, !dbg !69
  %2121 = getelementptr inbounds nuw float, ptr addrspace(3) %2120, i32 %2117, !dbg !69
  %2122 = load <4 x i32>, ptr addrspace(3) %2121, align 16, !dbg !69
  %2123 = or disjoint i32 %2026, 1536, !dbg !69
  %2124 = lshr i32 %2123, 4, !dbg !69
  %2125 = and i32 %2124, 124, !dbg !69
  %2126 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2125, !dbg !69
  %2127 = getelementptr inbounds nuw float, ptr addrspace(3) %2126, i32 %2123, !dbg !69
  %2128 = load <4 x i32>, ptr addrspace(3) %2127, align 16, !dbg !69
  %2129 = or disjoint i32 %2026, 2048, !dbg !69
  %2130 = lshr i32 %2129, 4, !dbg !69
  %2131 = and i32 %2130, 156, !dbg !69
  %2132 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2131, !dbg !69
  %2133 = getelementptr inbounds nuw float, ptr addrspace(3) %2132, i32 %2129, !dbg !69
  %2134 = load <4 x i32>, ptr addrspace(3) %2133, align 16, !dbg !69
  %2135 = or disjoint i32 %2026, 2560, !dbg !69
  %2136 = lshr i32 %2135, 4, !dbg !69
  %2137 = and i32 %2136, 188, !dbg !69
  %2138 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2137, !dbg !69
  %2139 = getelementptr inbounds nuw float, ptr addrspace(3) %2138, i32 %2135, !dbg !69
  %2140 = load <4 x i32>, ptr addrspace(3) %2139, align 16, !dbg !69
  %2141 = or disjoint i32 %2026, 3072, !dbg !69
  %2142 = lshr i32 %2141, 4, !dbg !69
  %2143 = and i32 %2142, 220, !dbg !69
  %2144 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2143, !dbg !69
  %2145 = getelementptr inbounds nuw float, ptr addrspace(3) %2144, i32 %2141, !dbg !69
  %2146 = load <4 x i32>, ptr addrspace(3) %2145, align 16, !dbg !69
  %2147 = or i32 %1990, 3584, !dbg !69
  %2148 = lshr i32 %2147, 4, !dbg !69
  %2149 = and i32 %2148, 252, !dbg !69
  %2150 = getelementptr inbounds nuw float, ptr addrspace(3) @global_smem, i32 %2149, !dbg !69
  %2151 = getelementptr inbounds nuw float, ptr addrspace(3) %2150, i32 %2147, !dbg !69
  %2152 = load <4 x i32>, ptr addrspace(3) %2151, align 16, !dbg !69
  %.extract = extractelement <4 x i32> %2110, i64 0, !dbg !69
  %.extract256 = extractelement <4 x i32> %2110, i64 1, !dbg !69
  %.extract257 = extractelement <4 x i32> %2110, i64 2, !dbg !69
  %.extract258 = extractelement <4 x i32> %2110, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract, i32 %.extract256, i32 %.extract257, i32 %.extract258, ptr addrspace(1) %1997, i1 %2015) #2, !dbg !69
  %.extract259 = extractelement <4 x i32> %2116, i64 0, !dbg !69
  %.extract260 = extractelement <4 x i32> %2116, i64 1, !dbg !69
  %.extract261 = extractelement <4 x i32> %2116, i64 2, !dbg !69
  %.extract262 = extractelement <4 x i32> %2116, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract259, i32 %.extract260, i32 %.extract261, i32 %.extract262, ptr addrspace(1) %1999, i1 %2015) #2, !dbg !69
  %.extract263 = extractelement <4 x i32> %2122, i64 0, !dbg !69
  %.extract264 = extractelement <4 x i32> %2122, i64 1, !dbg !69
  %.extract265 = extractelement <4 x i32> %2122, i64 2, !dbg !69
  %.extract266 = extractelement <4 x i32> %2122, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract263, i32 %.extract264, i32 %.extract265, i32 %.extract266, ptr addrspace(1) %2001, i1 %2015) #2, !dbg !69
  %.extract267 = extractelement <4 x i32> %2128, i64 0, !dbg !69
  %.extract268 = extractelement <4 x i32> %2128, i64 1, !dbg !69
  %.extract269 = extractelement <4 x i32> %2128, i64 2, !dbg !69
  %.extract270 = extractelement <4 x i32> %2128, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract267, i32 %.extract268, i32 %.extract269, i32 %.extract270, ptr addrspace(1) %2003, i1 %2015) #2, !dbg !69
  %.extract271 = extractelement <4 x i32> %2134, i64 0, !dbg !69
  %.extract272 = extractelement <4 x i32> %2134, i64 1, !dbg !69
  %.extract273 = extractelement <4 x i32> %2134, i64 2, !dbg !69
  %.extract274 = extractelement <4 x i32> %2134, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract271, i32 %.extract272, i32 %.extract273, i32 %.extract274, ptr addrspace(1) %2005, i1 %2015) #2, !dbg !69
  %.extract275 = extractelement <4 x i32> %2140, i64 0, !dbg !69
  %.extract276 = extractelement <4 x i32> %2140, i64 1, !dbg !69
  %.extract277 = extractelement <4 x i32> %2140, i64 2, !dbg !69
  %.extract278 = extractelement <4 x i32> %2140, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract275, i32 %.extract276, i32 %.extract277, i32 %.extract278, ptr addrspace(1) %2007, i1 %2015) #2, !dbg !69
  %.extract279 = extractelement <4 x i32> %2146, i64 0, !dbg !69
  %.extract280 = extractelement <4 x i32> %2146, i64 1, !dbg !69
  %.extract281 = extractelement <4 x i32> %2146, i64 2, !dbg !69
  %.extract282 = extractelement <4 x i32> %2146, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract279, i32 %.extract280, i32 %.extract281, i32 %.extract282, ptr addrspace(1) %2009, i1 %2015) #2, !dbg !69
  %.extract283 = extractelement <4 x i32> %2152, i64 0, !dbg !69
  %.extract284 = extractelement <4 x i32> %2152, i64 1, !dbg !69
  %.extract285 = extractelement <4 x i32> %2152, i64 2, !dbg !69
  %.extract286 = extractelement <4 x i32> %2152, i64 3, !dbg !69
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract283, i32 %.extract284, i32 %.extract285, i32 %.extract286, ptr addrspace(1) %2013, i1 %2015) #2, !dbg !69
  %2153 = getelementptr i8, ptr addrspace(1) %1996, i64 32768, !dbg !70
  %2154 = getelementptr float, ptr addrspace(1) %2153, i64 %1993, !dbg !70
  %2155 = getelementptr i8, ptr addrspace(1) %1996, i64 36864, !dbg !70
  %2156 = getelementptr float, ptr addrspace(1) %2155, i64 %1993, !dbg !70
  %2157 = getelementptr i8, ptr addrspace(1) %1996, i64 40960, !dbg !70
  %2158 = getelementptr float, ptr addrspace(1) %2157, i64 %1993, !dbg !70
  %2159 = getelementptr i8, ptr addrspace(1) %1996, i64 45056, !dbg !70
  %2160 = getelementptr float, ptr addrspace(1) %2159, i64 %1993, !dbg !70
  %2161 = getelementptr i8, ptr addrspace(1) %1996, i64 49152, !dbg !70
  %2162 = getelementptr float, ptr addrspace(1) %2161, i64 %1993, !dbg !70
  %2163 = getelementptr i8, ptr addrspace(1) %1996, i64 53248, !dbg !70
  %2164 = getelementptr float, ptr addrspace(1) %2163, i64 %1993, !dbg !70
  %2165 = getelementptr i8, ptr addrspace(1) %1996, i64 57344, !dbg !70
  %2166 = getelementptr float, ptr addrspace(1) %2165, i64 %1993, !dbg !70
  %2167 = getelementptr i8, ptr addrspace(1) %2012, i64 32768, !dbg !70
  %2168 = getelementptr float, ptr addrspace(1) %2167, i64 %1993, !dbg !70
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !70
  %2169 = insertelement <2 x float> poison, float %1955, i64 0, !dbg !70
  %2170 = insertelement <2 x float> %2169, float %1956, i64 1, !dbg !70
  store <2 x float> %2170, ptr addrspace(3) %2029, align 8, !dbg !70
  %2171 = insertelement <2 x float> poison, float %1957, i64 0, !dbg !70
  %2172 = insertelement <2 x float> %2171, float %1958, i64 1, !dbg !70
  store <2 x float> %2172, ptr addrspace(3) %2035, align 8, !dbg !70
  %2173 = insertelement <2 x float> poison, float %1959, i64 0, !dbg !70
  %2174 = insertelement <2 x float> %2173, float %1960, i64 1, !dbg !70
  store <2 x float> %2174, ptr addrspace(3) %2038, align 8, !dbg !70
  %2175 = insertelement <2 x float> poison, float %1961, i64 0, !dbg !70
  %2176 = insertelement <2 x float> %2175, float %1962, i64 1, !dbg !70
  store <2 x float> %2176, ptr addrspace(3) %2044, align 8, !dbg !70
  %2177 = insertelement <2 x float> poison, float %1963, i64 0, !dbg !70
  %2178 = insertelement <2 x float> %2177, float %1964, i64 1, !dbg !70
  store <2 x float> %2178, ptr addrspace(3) %2047, align 8, !dbg !70
  %2179 = insertelement <2 x float> poison, float %1965, i64 0, !dbg !70
  %2180 = insertelement <2 x float> %2179, float %1966, i64 1, !dbg !70
  store <2 x float> %2180, ptr addrspace(3) %2054, align 8, !dbg !70
  %2181 = insertelement <2 x float> poison, float %1967, i64 0, !dbg !70
  %2182 = insertelement <2 x float> %2181, float %1968, i64 1, !dbg !70
  store <2 x float> %2182, ptr addrspace(3) %2057, align 8, !dbg !70
  %2183 = insertelement <2 x float> poison, float %1969, i64 0, !dbg !70
  %2184 = insertelement <2 x float> %2183, float %1970, i64 1, !dbg !70
  store <2 x float> %2184, ptr addrspace(3) %2064, align 8, !dbg !70
  %2185 = insertelement <2 x float> poison, float %1971, i64 0, !dbg !70
  %2186 = insertelement <2 x float> %2185, float %1972, i64 1, !dbg !70
  store <2 x float> %2186, ptr addrspace(3) %2067, align 8, !dbg !70
  %2187 = insertelement <2 x float> poison, float %1973, i64 0, !dbg !70
  %2188 = insertelement <2 x float> %2187, float %1974, i64 1, !dbg !70
  store <2 x float> %2188, ptr addrspace(3) %2074, align 8, !dbg !70
  %2189 = insertelement <2 x float> poison, float %1975, i64 0, !dbg !70
  %2190 = insertelement <2 x float> %2189, float %1976, i64 1, !dbg !70
  store <2 x float> %2190, ptr addrspace(3) %2077, align 8, !dbg !70
  %2191 = insertelement <2 x float> poison, float %1977, i64 0, !dbg !70
  %2192 = insertelement <2 x float> %2191, float %1978, i64 1, !dbg !70
  store <2 x float> %2192, ptr addrspace(3) %2084, align 8, !dbg !70
  %2193 = insertelement <2 x float> poison, float %1979, i64 0, !dbg !70
  %2194 = insertelement <2 x float> %2193, float %1980, i64 1, !dbg !70
  store <2 x float> %2194, ptr addrspace(3) %2087, align 8, !dbg !70
  %2195 = insertelement <2 x float> poison, float %1981, i64 0, !dbg !70
  %2196 = insertelement <2 x float> %2195, float %1982, i64 1, !dbg !70
  store <2 x float> %2196, ptr addrspace(3) %2094, align 8, !dbg !70
  %2197 = insertelement <2 x float> poison, float %1983, i64 0, !dbg !70
  %2198 = insertelement <2 x float> %2197, float %1984, i64 1, !dbg !70
  store <2 x float> %2198, ptr addrspace(3) %2097, align 8, !dbg !70
  %2199 = insertelement <2 x float> poison, float %1985, i64 0, !dbg !70
  %2200 = insertelement <2 x float> %2199, float %1986, i64 1, !dbg !70
  store <2 x float> %2200, ptr addrspace(3) %2104, align 8, !dbg !70
  tail call void @llvm.nvvm.barrier.cta.sync.aligned.all(i32 0), !dbg !70
  %2201 = load <4 x i32>, ptr addrspace(3) %2115, align 16, !dbg !70
  %2202 = load <4 x i32>, ptr addrspace(3) %2121, align 16, !dbg !70
  %2203 = load <4 x i32>, ptr addrspace(3) %2127, align 16, !dbg !70
  %2204 = load <4 x i32>, ptr addrspace(3) %2133, align 16, !dbg !70
  %2205 = load <4 x i32>, ptr addrspace(3) %2139, align 16, !dbg !70
  %2206 = load <4 x i32>, ptr addrspace(3) %2145, align 16, !dbg !70
  %2207 = load <4 x i32>, ptr addrspace(3) %2151, align 16, !dbg !70
  %.extract326 = load i32, ptr addrspace(3) %2109, align 16, !dbg !70
  %2208 = getelementptr inbounds nuw i8, ptr addrspace(3) %2109, i32 4, !dbg !70
  %.extract327 = load i32, ptr addrspace(3) %2208, align 4, !dbg !70
  %2209 = getelementptr inbounds nuw i8, ptr addrspace(3) %2109, i32 8, !dbg !70
  %.extract328 = load i32, ptr addrspace(3) %2209, align 8, !dbg !70
  %2210 = getelementptr inbounds nuw i8, ptr addrspace(3) %2109, i32 12, !dbg !70
  %.extract329 = load i32, ptr addrspace(3) %2210, align 4, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract326, i32 %.extract327, i32 %.extract328, i32 %.extract329, ptr addrspace(1) %2154, i1 %2015) #2, !dbg !70
  %.extract330 = extractelement <4 x i32> %2201, i64 0, !dbg !70
  %.extract331 = extractelement <4 x i32> %2201, i64 1, !dbg !70
  %.extract332 = extractelement <4 x i32> %2201, i64 2, !dbg !70
  %.extract333 = extractelement <4 x i32> %2201, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract330, i32 %.extract331, i32 %.extract332, i32 %.extract333, ptr addrspace(1) %2156, i1 %2015) #2, !dbg !70
  %.extract334 = extractelement <4 x i32> %2202, i64 0, !dbg !70
  %.extract335 = extractelement <4 x i32> %2202, i64 1, !dbg !70
  %.extract336 = extractelement <4 x i32> %2202, i64 2, !dbg !70
  %.extract337 = extractelement <4 x i32> %2202, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract334, i32 %.extract335, i32 %.extract336, i32 %.extract337, ptr addrspace(1) %2158, i1 %2015) #2, !dbg !70
  %.extract338 = extractelement <4 x i32> %2203, i64 0, !dbg !70
  %.extract339 = extractelement <4 x i32> %2203, i64 1, !dbg !70
  %.extract340 = extractelement <4 x i32> %2203, i64 2, !dbg !70
  %.extract341 = extractelement <4 x i32> %2203, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract338, i32 %.extract339, i32 %.extract340, i32 %.extract341, ptr addrspace(1) %2160, i1 %2015) #2, !dbg !70
  %.extract342 = extractelement <4 x i32> %2204, i64 0, !dbg !70
  %.extract343 = extractelement <4 x i32> %2204, i64 1, !dbg !70
  %.extract344 = extractelement <4 x i32> %2204, i64 2, !dbg !70
  %.extract345 = extractelement <4 x i32> %2204, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract342, i32 %.extract343, i32 %.extract344, i32 %.extract345, ptr addrspace(1) %2162, i1 %2015) #2, !dbg !70
  %.extract346 = extractelement <4 x i32> %2205, i64 0, !dbg !70
  %.extract347 = extractelement <4 x i32> %2205, i64 1, !dbg !70
  %.extract348 = extractelement <4 x i32> %2205, i64 2, !dbg !70
  %.extract349 = extractelement <4 x i32> %2205, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract346, i32 %.extract347, i32 %.extract348, i32 %.extract349, ptr addrspace(1) %2164, i1 %2015) #2, !dbg !70
  %.extract350 = extractelement <4 x i32> %2206, i64 0, !dbg !70
  %.extract351 = extractelement <4 x i32> %2206, i64 1, !dbg !70
  %.extract352 = extractelement <4 x i32> %2206, i64 2, !dbg !70
  %.extract353 = extractelement <4 x i32> %2206, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract350, i32 %.extract351, i32 %.extract352, i32 %.extract353, ptr addrspace(1) %2166, i1 %2015) #2, !dbg !70
  %.extract354 = extractelement <4 x i32> %2207, i64 0, !dbg !70
  %.extract355 = extractelement <4 x i32> %2207, i64 1, !dbg !70
  %.extract356 = extractelement <4 x i32> %2207, i64 2, !dbg !70
  %.extract357 = extractelement <4 x i32> %2207, i64 3, !dbg !70
  tail call void asm sideeffect "@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };", "r,r,r,r,l,b"(i32 %.extract354, i32 %.extract355, i32 %.extract356, i32 %.extract357, ptr addrspace(1) %2168, i1 %2015) #2, !dbg !70
  ret void, !dbg !71
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 2147483647) i32 @llvm.nvvm.read.ptx.sreg.ctaid.x() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 65535) i32 @llvm.nvvm.read.ptx.sreg.ctaid.y() #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare noundef range(i32 0, 1024) i32 @llvm.nvvm.read.ptx.sreg.tid.x() #1

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.commit.group() #2

; Function Attrs: convergent nocallback nounwind
declare void @llvm.nvvm.barrier.cta.sync.aligned.all(i32) #3

; Function Attrs: nounwind
declare void @llvm.nvvm.cp.async.wait.group(i32 immarg) #2

; Function Attrs: convergent nocallback nounwind memory(inaccessiblemem: readwrite)
declare i32 @llvm.nvvm.shfl.sync.idx.i32(i32, i32, i32, i32) #4

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(none)
declare float @llvm.nvvm.ex2.approx.f(float) #5

attributes #0 = { "nvvm.reqntid"="128" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nounwind }
attributes #3 = { convergent nocallback nounwind }
attributes #4 = { convergent nocallback nounwind memory(inaccessiblemem: readwrite) }
attributes #5 = { mustprogress nocallback nofree nosync nounwind willreturn memory(none) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2, !3}
!llvm.ident = !{!4}

!0 = distinct !DICompileUnit(language: DW_LANG_C, file: !1, producer: "triton", isOptimized: true, runtimeVersion: 0, emissionKind: LineTablesOnly)
!1 = !DIFile(filename: "chunk_delta_h.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common")
!2 = !{i32 2, !"Debug Info Version", i32 3}
!3 = !{i32 4, !"nvvm-reflect-ftz", i32 1}
!4 = !{!"clang version 3.8.0 (tags/RELEASE_380/final)"}
!5 = distinct !DISubprogram(name: "chunk_gated_delta_rule_fwd_kernel_h_blockdim64", linkageName: "chunk_gated_delta_rule_fwd_kernel_h_blockdim64", scope: !1, file: !1, line: 36, type: !6, scopeLine: 36, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !0)
!6 = !DISubroutineType(cc: DW_CC_normal, types: !7)
!7 = !{}
!8 = !DILocation(line: 61, column: 30, scope: !5)
!9 = !DILocation(line: 61, column: 48, scope: !5)
!10 = !DILocation(line: 62, column: 33, scope: !5)
!11 = !DILocation(line: 40, column: 22, scope: !12, inlinedAt: !14)
!12 = distinct !DILexicalBlockFile(scope: !5, file: !13, discriminator: 0)
!13 = !DIFile(filename: "standard.py", directory: "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language")
!14 = !DILocation(line: 70, column: 24, scope: !5)
!15 = !DILocation(line: 40, column: 28, scope: !12, inlinedAt: !14)
!16 = !DILocation(line: 71, column: 20, scope: !5)
!17 = !DILocation(line: 83, column: 29, scope: !5)
!18 = !DILocation(line: 83, column: 9, scope: !5)
!19 = !DILocation(line: 69, column: 25, scope: !5)
!20 = !DILocation(line: 84, column: 16, scope: !5)
!21 = !DILocation(line: 84, column: 20, scope: !5)
!22 = !DILocation(line: 84, column: 27, scope: !5)
!23 = !DILocation(line: 84, column: 9, scope: !5)
!24 = !DILocation(line: 85, column: 9, scope: !5)
!25 = !DILocation(line: 86, column: 9, scope: !5)
!26 = !DILocation(line: 88, column: 17, scope: !5)
!27 = !DILocation(line: 113, column: 79, scope: !5)
!28 = !DILocation(line: 113, column: 94, scope: !5)
!29 = !DILocation(line: 114, column: 23, scope: !5)
!30 = !DILocation(line: 117, column: 27, scope: !5)
!31 = !DILocation(line: 125, column: 83, scope: !5)
!32 = !DILocation(line: 150, column: 35, scope: !5)
!33 = !DILocation(line: 151, column: 50, scope: !5)
!34 = !DILocation(line: 112, column: 21, scope: !5)
!35 = !DILocation(line: 126, column: 22, scope: !5)
!36 = !DILocation(line: 130, column: 26, scope: !5)
!37 = !DILocation(line: 141, column: 22, scope: !5)
!38 = !DILocation(line: 152, column: 26, scope: !5)
!39 = !DILocation(line: 182, column: 22, scope: !5)
!40 = !DILocation(line: 189, column: 26, scope: !5)
!41 = !DILocation(line: 113, column: 43, scope: !5)
!42 = !DILocation(line: 113, column: 37, scope: !5)
!43 = !DILocation(line: 114, column: 31, scope: !5)
!44 = !DILocation(line: 117, column: 35, scope: !5)
!45 = !DILocation(line: 127, column: 26, scope: !5)
!46 = !DILocation(line: 145, column: 26, scope: !5)
!47 = !DILocation(line: 147, column: 30, scope: !5)
!48 = !DILocation(line: 147, column: 39, scope: !5)
!49 = !DILocation(line: 149, column: 30, scope: !5)
!50 = !DILocation(line: 149, column: 50, scope: !5)
!51 = !DILocation(line: 150, column: 56, scope: !5)
!52 = !DILocation(line: 150, column: 45, scope: !5)
!53 = !DILocation(line: 150, column: 60, scope: !5)
!54 = !DILocation(line: 131, column: 31, scope: !5)
!55 = !DILocation(line: 141, column: 52, scope: !5)
!56 = !DILocation(line: 145, column: 33, scope: !5)
!57 = !DILocation(line: 150, column: 31, scope: !5)
!58 = !DILocation(line: 153, column: 53, scope: !5)
!59 = !DILocation(line: 153, column: 42, scope: !5)
!60 = !DILocation(line: 153, column: 59, scope: !5)
!61 = !DILocation(line: 153, column: 24, scope: !5)
!62 = !DILocation(line: 154, column: 27, scope: !5)
!63 = !DILocation(line: 155, column: 20, scope: !5)
!64 = !DILocation(line: 157, column: 24, scope: !5)
!65 = !DILocation(line: 179, column: 21, scope: !5)
!66 = !DILocation(line: 186, column: 28, scope: !5)
!67 = !DILocation(line: 193, column: 32, scope: !5)
!68 = !DILocation(line: 95, column: 18, scope: !5)
!69 = !DILocation(line: 211, column: 23, scope: !5)
!70 = !DILocation(line: 214, column: 27, scope: !5)
!71 = !DILocation(line: 209, column: 4, scope: !5)
