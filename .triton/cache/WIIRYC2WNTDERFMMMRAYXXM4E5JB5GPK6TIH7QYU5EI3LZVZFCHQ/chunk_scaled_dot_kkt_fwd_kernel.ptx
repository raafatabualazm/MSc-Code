//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 256
{
	.reg .pred 	%p<70>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<563>;
	.reg .b64 	%rd<108>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r46, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd12, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd11, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd18, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r54, %ctaid.x;
	ld.param.b64 	%rd19, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r55, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r56, %r55, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r57, %r55, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r58, %r54, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r59, %r1, 5, 1;
	and.b32 	%r3, %r1, 128;
	bfe.u32 	%r60, %r1, 3, 5;
	or.b32 	%r61, %r60, 32;
	shr.u32 	%r4, %r1, 2;
	bfe.u32 	%r62, %r1, 2, 3;
	shr.u32 	%r63, %r1, 1;
	and.b32 	%r64, %r63, 48;
	or.b32 	%r5, %r64, %r62;
	or.b32 	%r6, %r5, 8;
	shl.b32 	%r65, %r1, 3;
	and.b32 	%r66, %r65, 56;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r67, %r56, %r46;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r67;
	mul.wide.s32 	%rd20, %r67, 2;
	add.s64 	%rd21, %rd19, %rd20;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r57;
	mul.wide.u32 	%rd22, %r57, 2;
	add.s64 	%rd23, %rd21, %rd22;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r46;
	cvt.s64.s32 	%rd4, %r58;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd24, %r60;
	cvt.u64.u32 	%rd25, %r61;
	cvt.u64.u32 	%rd26, %r5;
	cvt.u64.u32 	%rd27, %r6;
	cvt.u64.u32 	%rd5, %r66;
	or.b64 	%rd28, %rd24, %rd4;
	or.b64 	%rd29, %rd25, %rd4;
	or.b64 	%rd30, %rd26, %rd4;
	or.b64 	%rd31, %rd27, %rd4;
	shl.b64 	%rd6, %rd30, 5;
	shl.b64 	%rd7, %rd31, 5;
	shl.b64 	%rd32, %rd30, 6;
	add.s64 	%rd13, %rd23, %rd32;
	shl.b64 	%rd33, %rd31, 6;
	add.s64 	%rd14, %rd23, %rd33;
	setp.gt.s32 	%p9, %r58, -1;
	setp.lt.s64 	%p10, %rd30, %rd3;
	setp.lt.s64 	%p11, %rd31, %rd3;
	and.pred 	%p21, %p9, %p10;
	and.pred 	%p22, %p9, %p11;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p21 ld.global.b16 { %rs3 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p22 ld.global.b16 { %rs4 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r7, %r67, %r57;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r68, %r7, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd34, %r68, 2;
	add.s64 	%rd35, %rd18, %rd34;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p12, %rd28, %rd3;
	setp.lt.s64 	%p13, %rd29, %rd3;
	and.pred 	%p3, %p9, %p12;
	and.pred 	%p4, %p9, %p13;
	shl.b64 	%rd36, %rd28, 13;
	add.s64 	%rd8, %rd35, %rd36;
	mul.wide.u32 	%rd37, %r66, 2;
	add.s64 	%rd15, %rd8, %rd37;
	shl.b64 	%rd38, %rd29, 13;
	add.s64 	%rd9, %rd35, %rd38;
	add.s64 	%rd16, %rd9, %rd37;
	and.b32 	%r69, %r59, 288;
	and.b32 	%r70, %r1, 24;
	mul.lo.s32 	%r71, %r70, 9;
	xor.b32 	%r72, %r71, %r66;
	xor.b32 	%r73, %r72, %r69;
	and.b32 	%r74, %r65, 512;
	shl.b32 	%r75, %r3, 3;
	or.b32 	%r76, %r74, %r73;
	or.b32 	%r8, %r76, %r75;
	shl.b32 	%r77, %r8, 1;
	mov.b32 	%r78, global_smem;
	add.s32 	%r47, %r78, %r77;
	or.b32 	%r79, %r66, 2048;
	xor.b32 	%r80, %r71, %r79;
	xor.b32 	%r81, %r80, %r69;
	or.b32 	%r82, %r81, %r74;
	or.b32 	%r9, %r82, %r75;
	shl.b32 	%r83, %r9, 1;
	add.s32 	%r49, %r78, %r83;
	selp.b32 	%r48, 16, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r47 + 0 ], [ %rd15 + 0 ], 0x10, %r48;
	// end inline asm
	selp.b32 	%r50, 16, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r49 + 0 ], [ %rd16 + 0 ], 0x10, %r50;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r547, 0f00000000;
	mov.b32 	%r251, 0;
	mov.b32 	%r545, -1;
	mov.b64 	%rd107, 64;
	mov.pred 	%p14, -1;
	mov.pred 	%p69, %p14;
	mov.b32 	%r546, %r251;
	mov.b32 	%r548, %r547;
	mov.b32 	%r549, %r547;
	mov.b32 	%r550, %r547;
	mov.b32 	%r551, %r547;
	mov.b32 	%r552, %r547;
	mov.b32 	%r553, %r547;
	mov.b32 	%r554, %r547;
	mov.b32 	%r555, %r547;
	mov.b32 	%r556, %r547;
	mov.b32 	%r557, %r547;
	mov.b32 	%r558, %r547;
	mov.b32 	%r559, %r547;
	mov.b32 	%r560, %r547;
	mov.b32 	%r561, %r547;
	mov.b32 	%r562, %r547;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p5, %p69;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r260, %r545, 1;
	setp.gt.s32 	%p19, %r260, 1;
	selp.b32 	%r545, 0, %r260, %p19;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	0;
	bar.sync 	0;
	shl.b32 	%r261, %r545, 13;
	add.s32 	%r231, %r78, %r261;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r263, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r264, %r231, 4, 14;
	cvt.u64.u32 	%rd50, %r264;
	or.b64 	%rd39, %rd50, 4611686293338849280;
	shl.b32 	%r265, %r263, 10;
	and.b32 	%r266, %r265, 4096;
	add.s32 	%r267, %r266, %r231;
	bfe.u32 	%r268, %r267, 4, 14;
	cvt.u64.u32 	%rd51, %r268;
	or.b64 	%rd40, %rd51, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562}, %rd39, %rd40, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r269, %r231, 32;
	bfe.u32 	%r270, %r269, 4, 14;
	cvt.u64.u32 	%rd52, %r270;
	or.b64 	%rd41, %rd52, 4611686293338849280;
	add.s32 	%r271, %r269, %r266;
	bfe.u32 	%r272, %r271, 4, 14;
	cvt.u64.u32 	%rd53, %r272;
	or.b64 	%rd42, %rd53, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562}, %rd41, %rd42, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r273, %r231, 64;
	bfe.u32 	%r274, %r273, 4, 14;
	cvt.u64.u32 	%rd54, %r274;
	or.b64 	%rd43, %rd54, 4611686293338849280;
	add.s32 	%r275, %r273, %r266;
	bfe.u32 	%r276, %r275, 4, 14;
	cvt.u64.u32 	%rd55, %r276;
	or.b64 	%rd44, %rd55, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562}, %rd43, %rd44, %p14, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r277, %r231, 96;
	bfe.u32 	%r278, %r277, 4, 14;
	cvt.u64.u32 	%rd56, %r278;
	or.b64 	%rd45, %rd56, 4611686293338849280;
	add.s32 	%r279, %r277, %r266;
	bfe.u32 	%r280, %r279, 4, 14;
	cvt.u64.u32 	%rd57, %r280;
	or.b64 	%rd46, %rd57, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562}, %rd45, %rd46, %p14, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r233, %r251;
	mov.b32 	%r229, %r251;
	mov.b32 	%r230, %r251;
	mov.b32 	%r232, %r251;
	mov.b32 	%r228, %r231;
	// begin inline asm
	// wait for regs: %r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562,%r228,%r229,%r230,%r231,%r232,%r233
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r281, %r546, 1;
	setp.gt.s32 	%p20, %r281, 1;
	selp.b32 	%r546, 0, %r281, %p20;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	or.b64 	%rd58, %rd107, %rd5;
	shl.b64 	%rd59, %rd58, 1;
	add.s64 	%rd47, %rd8, %rd59;
	add.s64 	%rd48, %rd9, %rd59;
	shl.b32 	%r282, %r546, 13;
	add.s32 	%r283, %r78, %r282;
	bar.sync 	0;
	add.s32 	%r256, %r283, %r77;
	add.s32 	%r258, %r283, %r83;
	selp.b32 	%r286, 16, 0, %p5;
	selp.b32 	%r257, %r286, 0, %p3;
	// begin inline asm
	cp.async.cg.shared.global [ %r256 + 0 ], [ %rd47 + 0 ], 0x10, %r257;
	// end inline asm
	selp.b32 	%r259, %r286, 0, %p4;
	// begin inline asm
	cp.async.cg.shared.global [ %r258 + 0 ], [ %rd48 + 0 ], 0x10, %r259;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd107, 128;
	mov.pred 	%p69, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p5 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r345, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p35, %r345, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r346, %r1, 1;
	and.b32 	%r347, %r346, 6;
	shr.u32 	%r348, %r3, 2;
	shr.u32 	%r349, %r1, 4;
	shl.b32 	%r350, %r1, 2;
	and.b32 	%r351, %r350, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r352, %r6, %r345;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p36, %r352, %r46;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r353, %r5, %r345;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p37, %r353, %r46;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r547,%r548,%r549,%r550,%r551,%r552,%r553,%r554,%r555,%r556,%r557,%r558,%r559,%r560,%r561,%r562
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd74, %rd1, 2;
	add.s64 	%rd75, %rd11, %rd74;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd76, %rd2, 2;
	add.s64 	%rd77, %rd75, %rd76;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd78, %rd6, 2;
	add.s64 	%rd60, %rd77, %rd78;
	shl.b64 	%rd79, %rd7, 2;
	add.s64 	%rd61, %rd77, %rd79;
	// begin inline asm
	mov.u32 %r319, 0x0;
	@%p21 ld.global.b32 { %r319 }, [ %rd60 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r320, 0x0;
	@%p22 ld.global.b32 { %r320 }, [ %rd61 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r354, %rs3;
	cvt.f32.bf16 	%r355, %rs4;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r356, %r7, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd80, %r356, 4;
	add.s64 	%rd81, %rd12, %rd80;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r357, %r1, 4, 4;
	or.b32 	%r358, %r349, %r345;
	or.b32 	%r359, %r347, %r348;
	or.b32 	%r360, %r359, 25;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd82, %r360;
	or.b64 	%rd83, %rd82, %rd4;
	setp.lt.s64 	%p38, %rd83, %rd3;
	and.pred 	%p30, %p35, %p38;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r361, %r359, 24;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd84, %r361;
	or.b64 	%rd85, %rd84, %rd4;
	setp.lt.s64 	%p39, %rd85, %rd3;
	and.pred 	%p29, %p35, %p39;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r362, %r359, 17;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd86, %r362;
	or.b64 	%rd87, %rd86, %rd4;
	setp.lt.s64 	%p40, %rd87, %rd3;
	and.pred 	%p28, %p35, %p40;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r363, %r359, 16;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd88, %r363;
	or.b64 	%rd89, %rd88, %rd4;
	setp.lt.s64 	%p41, %rd89, %rd3;
	and.pred 	%p27, %p35, %p41;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r364, %r359, 9;
	or.b32 	%r365, %r359, 8;
	or.b32 	%r366, %r359, 1;
	or.b32 	%r367, %r357, %r345;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r368, %r367, 16;
	or.b32 	%r369, %r367, 32;
	or.b32 	%r370, %r358, 48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p42, %r370, %r46;
	setp.lt.s32 	%p43, %r369, %r46;
	setp.lt.s32 	%p44, %r368, %r46;
	setp.lt.s32 	%p45, %r367, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r371, %r364, %r345;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p46, %r371, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p26, %p35, %p46;
	or.b32 	%r372, %r365, %r345;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p47, %r372, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p25, %p35, %p47;
	or.b32 	%r373, %r366, %r345;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p48, %r373, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p24, %p35, %p48;
	or.b32 	%r374, %r359, %r345;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p49, %r374, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p23, %p35, %p49;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r375, %r363, %r345;
	or.b32 	%r376, %r362, %r345;
	or.b32 	%r377, %r361, %r345;
	or.b32 	%r378, %r360, %r345;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p50, %r378, %r46;
	setp.lt.s32 	%p51, %r377, %r46;
	setp.lt.s32 	%p52, %r376, %r46;
	setp.lt.s32 	%p53, %r375, %r46;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd90, %r374, 128;
	add.s64 	%rd62, %rd77, %rd90;
	mul.wide.s32 	%rd91, %r373, 128;
	add.s64 	%rd63, %rd77, %rd91;
	mul.wide.s32 	%rd92, %r372, 128;
	add.s64 	%rd64, %rd77, %rd92;
	mul.wide.s32 	%rd93, %r371, 128;
	add.s64 	%rd65, %rd77, %rd93;
	shl.b64 	%rd94, %rd89, 7;
	add.s64 	%rd66, %rd77, %rd94;
	shl.b64 	%rd95, %rd87, 7;
	add.s64 	%rd67, %rd77, %rd95;
	shl.b64 	%rd96, %rd85, 7;
	add.s64 	%rd68, %rd77, %rd96;
	shl.b64 	%rd97, %rd83, 7;
	add.s64 	%rd69, %rd77, %rd97;
	// begin inline asm
	mov.u32 %r321, 0x0;
	@%p23 ld.global.b32 { %r321 }, [ %rd62 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r322, 0x0;
	@%p24 ld.global.b32 { %r322 }, [ %rd63 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r323, 0x0;
	@%p25 ld.global.b32 { %r323 }, [ %rd64 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r324, 0x0;
	@%p26 ld.global.b32 { %r324 }, [ %rd65 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r325, 0x0;
	@%p27 ld.global.b32 { %r325 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r326, 0x0;
	@%p28 ld.global.b32 { %r326 }, [ %rd67 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r327, 0x0;
	@%p29 ld.global.b32 { %r327 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r328, 0x0;
	@%p30 ld.global.b32 { %r328 }, [ %rd69 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r379, %r319, %r321;
	sub.f32 	%r380, %r319, %r322;
	sub.f32 	%r381, %r320, %r321;
	sub.f32 	%r382, %r320, %r322;
	sub.f32 	%r383, %r319, %r323;
	sub.f32 	%r384, %r319, %r324;
	sub.f32 	%r385, %r320, %r323;
	sub.f32 	%r386, %r320, %r324;
	sub.f32 	%r387, %r319, %r325;
	sub.f32 	%r388, %r319, %r326;
	sub.f32 	%r389, %r320, %r325;
	sub.f32 	%r390, %r320, %r326;
	sub.f32 	%r391, %r319, %r327;
	sub.f32 	%r392, %r319, %r328;
	sub.f32 	%r393, %r320, %r327;
	sub.f32 	%r394, %r320, %r328;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r395, %r379, 0f3FB8AA3B;
	ex2.approx.f32 	%r396, %r395;
	mul.f32 	%r397, %r380, 0f3FB8AA3B;
	ex2.approx.f32 	%r398, %r397;
	mul.f32 	%r399, %r381, 0f3FB8AA3B;
	ex2.approx.f32 	%r400, %r399;
	mul.f32 	%r401, %r382, 0f3FB8AA3B;
	ex2.approx.f32 	%r402, %r401;
	mul.f32 	%r403, %r383, 0f3FB8AA3B;
	ex2.approx.f32 	%r404, %r403;
	mul.f32 	%r405, %r384, 0f3FB8AA3B;
	ex2.approx.f32 	%r406, %r405;
	mul.f32 	%r407, %r385, 0f3FB8AA3B;
	ex2.approx.f32 	%r408, %r407;
	mul.f32 	%r409, %r386, 0f3FB8AA3B;
	ex2.approx.f32 	%r410, %r409;
	mul.f32 	%r411, %r387, 0f3FB8AA3B;
	ex2.approx.f32 	%r412, %r411;
	mul.f32 	%r413, %r388, 0f3FB8AA3B;
	ex2.approx.f32 	%r414, %r413;
	mul.f32 	%r415, %r389, 0f3FB8AA3B;
	ex2.approx.f32 	%r416, %r415;
	mul.f32 	%r417, %r390, 0f3FB8AA3B;
	ex2.approx.f32 	%r418, %r417;
	mul.f32 	%r419, %r391, 0f3FB8AA3B;
	ex2.approx.f32 	%r420, %r419;
	mul.f32 	%r421, %r392, 0f3FB8AA3B;
	ex2.approx.f32 	%r422, %r421;
	mul.f32 	%r423, %r393, 0f3FB8AA3B;
	ex2.approx.f32 	%r424, %r423;
	mul.f32 	%r425, %r394, 0f3FB8AA3B;
	ex2.approx.f32 	%r426, %r425;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r427, %r547, %r396;
	mul.f32 	%r428, %r548, %r398;
	mul.f32 	%r429, %r549, %r400;
	mul.f32 	%r430, %r550, %r402;
	mul.f32 	%r431, %r551, %r404;
	mul.f32 	%r432, %r552, %r406;
	mul.f32 	%r433, %r553, %r408;
	mul.f32 	%r434, %r554, %r410;
	mul.f32 	%r435, %r555, %r412;
	mul.f32 	%r436, %r556, %r414;
	mul.f32 	%r437, %r557, %r416;
	mul.f32 	%r438, %r558, %r418;
	mul.f32 	%r439, %r559, %r420;
	mul.f32 	%r440, %r560, %r422;
	mul.f32 	%r441, %r561, %r424;
	mul.f32 	%r442, %r562, %r426;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r443, %r427, %r354;
	mul.f32 	%r444, %r428, %r354;
	mul.f32 	%r445, %r429, %r355;
	mul.f32 	%r446, %r430, %r355;
	mul.f32 	%r447, %r431, %r354;
	mul.f32 	%r448, %r432, %r354;
	mul.f32 	%r449, %r433, %r355;
	mul.f32 	%r450, %r434, %r355;
	mul.f32 	%r451, %r435, %r354;
	mul.f32 	%r452, %r436, %r354;
	mul.f32 	%r453, %r437, %r355;
	mul.f32 	%r454, %r438, %r355;
	mul.f32 	%r455, %r439, %r354;
	mul.f32 	%r456, %r440, %r354;
	mul.f32 	%r457, %r441, %r355;
	mul.f32 	%r458, %r442, %r355;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p54, %r5, %r359;
	setp.gt.u32 	%p55, %r5, %r366;
	setp.gt.u32 	%p56, %r6, %r359;
	setp.gt.u32 	%p57, %r6, %r366;
	setp.gt.u32 	%p58, %r5, %r365;
	setp.gt.u32 	%p59, %r5, %r364;
	setp.gt.u32 	%p60, %r6, %r364;
	setp.gt.u32 	%p61, %r5, %r363;
	setp.gt.u32 	%p62, %r5, %r362;
	setp.gt.u32 	%p63, %r6, %r363;
	setp.gt.u32 	%p64, %r6, %r362;
	setp.gt.u32 	%p65, %r5, %r361;
	setp.gt.u32 	%p66, %r5, %r360;
	setp.gt.u32 	%p67, %r6, %r361;
	setp.gt.u32 	%p68, %r6, %r360;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd98, %r367, 8192;
	add.s64 	%rd99, %rd81, %rd98;
	mul.wide.u32 	%rd100, %r351, 4;
	add.s64 	%rd70, %rd99, %rd100;
	mul.wide.s32 	%rd101, %r368, 8192;
	add.s64 	%rd102, %rd81, %rd101;
	add.s64 	%rd71, %rd102, %rd100;
	mul.wide.s32 	%rd103, %r369, 8192;
	add.s64 	%rd104, %rd81, %rd103;
	add.s64 	%rd72, %rd104, %rd100;
	mul.wide.s32 	%rd105, %r370, 8192;
	add.s64 	%rd106, %rd81, %rd105;
	add.s64 	%rd73, %rd106, %rd100;
	and.pred 	%p31, %p35, %p45;
	and.pred 	%p32, %p35, %p44;
	and.pred 	%p33, %p35, %p43;
	and.pred 	%p34, %p35, %p42;
	shl.b32 	%r459, %r1, 4;
	and.b32 	%r460, %r459, 448;
	shl.b32 	%r461, %r1, 5;
	and.b32 	%r462, %r461, 3072;
	or.b32 	%r463, %r462, %r460;
	or.b32 	%r464, %r359, %r463;
	and.b32 	%r465, %r350, 1020;
	shr.u32 	%r466, %r463, 2;
	add.s32 	%r468, %r78, %r466;
	shl.b32 	%r469, %r464, 2;
	add.s32 	%r470, %r468, %r469;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r471, %r443, 0, %p49;
	selp.b32 	%r472, %r471, 0, %p54;
	selp.b32 	%r473, %r472, 0, %p37;
	selp.b32 	%r474, %r444, 0, %p48;
	selp.b32 	%r475, %r474, 0, %p55;
	selp.b32 	%r476, %r475, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r470], {%r473, %r476};
	or.b32 	%r477, %r464, 512;
	shr.u32 	%r478, %r477, 2;
	and.b32 	%r479, %r478, 1008;
	add.s32 	%r480, %r78, %r479;
	add.s32 	%r481, %r480, %r469;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r482, %r445, 0, %p49;
	selp.b32 	%r483, %r482, 0, %p56;
	selp.b32 	%r484, %r483, 0, %p36;
	selp.b32 	%r485, %r446, 0, %p48;
	selp.b32 	%r486, %r485, 0, %p57;
	selp.b32 	%r487, %r486, 0, %p36;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+2048], {%r484, %r487};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r488, %r447, 0, %p47;
	selp.b32 	%r489, %r488, 0, %p58;
	selp.b32 	%r490, %r489, 0, %p37;
	selp.b32 	%r491, %r448, 0, %p46;
	selp.b32 	%r492, %r491, 0, %p59;
	selp.b32 	%r493, %r492, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r470+32], {%r490, %r493};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r494, %r449, 0, %p47;
	selp.b32 	%r495, %r494, 0, %p54;
	selp.b32 	%r496, %r495, 0, %p36;
	selp.b32 	%r497, %r450, 0, %p46;
	selp.b32 	%r498, %r497, 0, %p60;
	selp.b32 	%r499, %r498, 0, %p36;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+2080], {%r496, %r499};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r500, %r451, 0, %p53;
	selp.b32 	%r501, %r500, 0, %p61;
	selp.b32 	%r502, %r501, 0, %p37;
	selp.b32 	%r503, %r452, 0, %p52;
	selp.b32 	%r504, %r503, 0, %p62;
	selp.b32 	%r505, %r504, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r470+64], {%r502, %r505};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r506, %r453, 0, %p53;
	selp.b32 	%r507, %r506, 0, %p63;
	selp.b32 	%r508, %r507, 0, %p36;
	selp.b32 	%r509, %r454, 0, %p52;
	selp.b32 	%r510, %r509, 0, %p64;
	selp.b32 	%r511, %r510, 0, %p36;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+2112], {%r508, %r511};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r512, %r455, 0, %p51;
	selp.b32 	%r513, %r512, 0, %p65;
	selp.b32 	%r514, %r513, 0, %p37;
	selp.b32 	%r515, %r456, 0, %p50;
	selp.b32 	%r516, %r515, 0, %p66;
	selp.b32 	%r517, %r516, 0, %p37;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r470+96], {%r514, %r517};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r518, %r457, 0, %p51;
	selp.b32 	%r519, %r518, 0, %p67;
	selp.b32 	%r520, %r519, 0, %p36;
	selp.b32 	%r521, %r458, 0, %p50;
	selp.b32 	%r522, %r521, 0, %p68;
	selp.b32 	%r523, %r522, 0, %p36;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+2144], {%r520, %r523};
	bar.sync 	0;
	and.b32 	%r524, %r4, 60;
	shl.b32 	%r525, %r524, 2;
	add.s32 	%r526, %r78, %r525;
	shl.b32 	%r527, %r465, 2;
	add.s32 	%r528, %r526, %r527;
	or.b32 	%r529, %r465, 1024;
	shr.u32 	%r530, %r529, 2;
	and.b32 	%r531, %r530, 496;
	add.s32 	%r532, %r78, %r531;
	add.s32 	%r533, %r532, %r527;
	ld.shared.v4.b32 	{%r333, %r334, %r335, %r336}, [%r533+4096];
	or.b32 	%r534, %r465, 2048;
	shr.u32 	%r535, %r534, 2;
	and.b32 	%r536, %r535, 752;
	add.s32 	%r537, %r78, %r536;
	add.s32 	%r538, %r537, %r527;
	ld.shared.v4.b32 	{%r337, %r338, %r339, %r340}, [%r538+8192];
	or.b32 	%r539, %r350, 3072;
	shr.u32 	%r540, %r539, 2;
	and.b32 	%r541, %r540, 1008;
	add.s32 	%r542, %r78, %r541;
	shl.b32 	%r543, %r539, 2;
	add.s32 	%r544, %r542, %r543;
	ld.shared.v4.b32 	{%r341, %r342, %r343, %r344}, [%r544];
	ld.shared.v4.b32 	{%r329, %r330, %r331, %r332}, [%r528];
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd70 + 0 ], { %r329, %r330, %r331, %r332 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd71 + 0 ], { %r333, %r334, %r335, %r336 };
	// end inline asm
	// begin inline asm
	@%p33 st.global.v4.b32 [ %rd72 + 0 ], { %r337, %r338, %r339, %r340 };
	// end inline asm
	// begin inline asm
	@%p34 st.global.v4.b32 [ %rd73 + 0 ], { %r341, %r342, %r343, %r344 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
