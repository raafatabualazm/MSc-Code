#loc = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0)
#loc112 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":284:0)
#loc114 = loc(unknown)
#loc117 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0)
module {
  tt.func public @fused_recurrent_gated_delta_rule_fwd_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg8: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg9: i32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0)) attributes {noinline = false} {
    %0 = tt.get_program_id x : i32 loc(#loc1)
    %1 = tt.get_program_id y : i32 loc(#loc2)
    %c32_i32 = arith.constant 32 : i32 loc(#loc3)
    %c32_i32_0 = arith.constant 32 : i32 loc(#loc3)
    %2 = arith.divsi %1, %c32_i32_0 : i32 loc(#loc3)
    %c32_i32_1 = arith.constant 32 : i32 loc(#loc4)
    %c32_i32_2 = arith.constant 32 : i32 loc(#loc4)
    %3 = arith.remsi %1, %c32_i32_2 : i32 loc(#loc4)
    %c1_i32 = arith.constant 1 : i32 loc(#loc5)
    %c1_i32_3 = arith.constant 1 : i32 loc(#loc5)
    %4 = arith.divsi %3, %c1_i32_3 : i32 loc(#loc5)
    %5 = arith.extsi %2 : i32 to i64 loc(#loc6)
    %6 = arith.extsi %arg9 : i32 to i64 loc(#loc6)
    %7 = arith.muli %5, %6 : i64 loc(#loc6)
    %c2147483647_i64 = arith.constant 2147483647 : i64 loc(#loc6)
    %c-2147483648_i64 = arith.constant -2147483648 : i64 loc(#loc6)
    %8 = arith.cmpi sle, %7, %c2147483647_i64 : i64 loc(#loc6)
    %9 = arith.cmpi sge, %7, %c-2147483648_i64 : i64 loc(#loc6)
    %10 = arith.andi %8, %9 : i1 loc(#loc6)
    %11 = arith.muli %2, %arg9 : i32 loc(#loc6)
    %12 = arith.extsi %2 : i32 to i64 loc(#loc7)
    %13 = arith.extsi %arg9 : i32 to i64 loc(#loc7)
    %14 = arith.muli %12, %13 : i64 loc(#loc7)
    %c2147483647_i64_4 = arith.constant 2147483647 : i64 loc(#loc7)
    %c-2147483648_i64_5 = arith.constant -2147483648 : i64 loc(#loc7)
    %15 = arith.cmpi sle, %14, %c2147483647_i64_4 : i64 loc(#loc7)
    %16 = arith.cmpi sge, %14, %c-2147483648_i64_5 : i64 loc(#loc7)
    %17 = arith.andi %15, %16 : i1 loc(#loc7)
    %18 = arith.muli %2, %arg9 : i32 loc(#loc7)
    %19 = arith.extsi %18 : i32 to i64 loc(#loc8)
    %20 = arith.extsi %arg9 : i32 to i64 loc(#loc8)
    %21 = arith.addi %19, %20 : i64 loc(#loc8)
    %c2147483647_i64_6 = arith.constant 2147483647 : i64 loc(#loc8)
    %c-2147483648_i64_7 = arith.constant -2147483648 : i64 loc(#loc8)
    %22 = arith.cmpi sle, %21, %c2147483647_i64_6 : i64 loc(#loc8)
    %23 = arith.cmpi sge, %21, %c-2147483648_i64_7 : i64 loc(#loc8)
    %24 = arith.andi %22, %23 : i1 loc(#loc8)
    %25 = arith.addi %18, %arg9 : i32 loc(#loc8)
    %26 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32> loc(#loc9)
    %c8_i32 = arith.constant 8 : i32 loc(#loc10)
    %c8_i32_8 = arith.constant 8 : i32 loc(#loc10)
    %27 = arith.extsi %0 : i32 to i64 loc(#loc10)
    %28 = arith.extsi %c8_i32_8 : i32 to i64 loc(#loc10)
    %29 = arith.muli %27, %28 : i64 loc(#loc10)
    %c2147483647_i64_9 = arith.constant 2147483647 : i64 loc(#loc10)
    %c-2147483648_i64_10 = arith.constant -2147483648 : i64 loc(#loc10)
    %30 = arith.cmpi sle, %29, %c2147483647_i64_9 : i64 loc(#loc10)
    %31 = arith.cmpi sge, %29, %c-2147483648_i64_10 : i64 loc(#loc10)
    %32 = arith.andi %30, %31 : i1 loc(#loc10)
    %33 = arith.muli %0, %c8_i32_8 : i32 loc(#loc10)
    %34 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32> loc(#loc11)
    %35 = tt.splat %33 : i32 -> tensor<8xi32> loc(#loc12)
    %36 = arith.extsi %35 : tensor<8xi32> to tensor<8xi64> loc(#loc12)
    %37 = arith.extsi %34 : tensor<8xi32> to tensor<8xi64> loc(#loc12)
    %38 = arith.addi %36, %37 : tensor<8xi64> loc(#loc12)
    %c2147483647_i64_11 = arith.constant 2147483647 : i64 loc(#loc12)
    %c-2147483648_i64_12 = arith.constant -2147483648 : i64 loc(#loc12)
    %cst = arith.constant dense<2147483647> : tensor<8xi64> loc(#loc12)
    %39 = arith.cmpi sle, %38, %cst : tensor<8xi64> loc(#loc12)
    %cst_13 = arith.constant dense<-2147483648> : tensor<8xi64> loc(#loc12)
    %40 = arith.cmpi sge, %38, %cst_13 : tensor<8xi64> loc(#loc12)
    %41 = arith.andi %39, %40 : tensor<8xi1> loc(#loc12)
    %42 = arith.addi %35, %34 : tensor<8xi32> loc(#loc12)
    %c32_i32_14 = arith.constant 32 : i32 loc(#loc13)
    %c32_i32_15 = arith.constant 32 : i32 loc(#loc13)
    %43 = arith.extsi %11 : i32 to i64 loc(#loc13)
    %44 = arith.extsi %c32_i32_15 : i32 to i64 loc(#loc13)
    %45 = arith.muli %43, %44 : i64 loc(#loc13)
    %c2147483647_i64_16 = arith.constant 2147483647 : i64 loc(#loc13)
    %c-2147483648_i64_17 = arith.constant -2147483648 : i64 loc(#loc13)
    %46 = arith.cmpi sle, %45, %c2147483647_i64_16 : i64 loc(#loc13)
    %47 = arith.cmpi sge, %45, %c-2147483648_i64_17 : i64 loc(#loc13)
    %48 = arith.andi %46, %47 : i1 loc(#loc13)
    %49 = arith.muli %11, %c32_i32_15 : i32 loc(#loc13)
    %50 = arith.extsi %49 : i32 to i64 loc(#loc14)
    %51 = arith.extsi %4 : i32 to i64 loc(#loc14)
    %52 = arith.addi %50, %51 : i64 loc(#loc14)
    %c2147483647_i64_18 = arith.constant 2147483647 : i64 loc(#loc14)
    %c-2147483648_i64_19 = arith.constant -2147483648 : i64 loc(#loc14)
    %53 = arith.cmpi sle, %52, %c2147483647_i64_18 : i64 loc(#loc14)
    %54 = arith.cmpi sge, %52, %c-2147483648_i64_19 : i64 loc(#loc14)
    %55 = arith.andi %53, %54 : i1 loc(#loc14)
    %56 = arith.addi %49, %4 : i32 loc(#loc14)
    %c128_i32 = arith.constant 128 : i32 loc(#loc15)
    %c128_i32_20 = arith.constant 128 : i32 loc(#loc15)
    %57 = arith.extsi %56 : i32 to i64 loc(#loc15)
    %58 = arith.extsi %c128_i32_20 : i32 to i64 loc(#loc15)
    %59 = arith.muli %57, %58 : i64 loc(#loc15)
    %c2147483647_i64_21 = arith.constant 2147483647 : i64 loc(#loc15)
    %c-2147483648_i64_22 = arith.constant -2147483648 : i64 loc(#loc15)
    %60 = arith.cmpi sle, %59, %c2147483647_i64_21 : i64 loc(#loc15)
    %61 = arith.cmpi sge, %59, %c-2147483648_i64_22 : i64 loc(#loc15)
    %62 = arith.andi %60, %61 : i1 loc(#loc15)
    %63 = arith.muli %56, %c128_i32_20 : i32 loc(#loc15)
    %64 = tt.addptr %arg0, %63 : !tt.ptr<bf16>, i32 loc(#loc16)
    %65 = tt.splat %64 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>> loc(#loc17)
    %66 = tt.addptr %65, %26 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc17)
    %c32_i32_23 = arith.constant 32 : i32 loc(#loc18)
    %c32_i32_24 = arith.constant 32 : i32 loc(#loc18)
    %67 = arith.extsi %11 : i32 to i64 loc(#loc18)
    %68 = arith.extsi %c32_i32_24 : i32 to i64 loc(#loc18)
    %69 = arith.muli %67, %68 : i64 loc(#loc18)
    %c2147483647_i64_25 = arith.constant 2147483647 : i64 loc(#loc18)
    %c-2147483648_i64_26 = arith.constant -2147483648 : i64 loc(#loc18)
    %70 = arith.cmpi sle, %69, %c2147483647_i64_25 : i64 loc(#loc18)
    %71 = arith.cmpi sge, %69, %c-2147483648_i64_26 : i64 loc(#loc18)
    %72 = arith.andi %70, %71 : i1 loc(#loc18)
    %73 = arith.muli %11, %c32_i32_24 : i32 loc(#loc18)
    %74 = arith.extsi %73 : i32 to i64 loc(#loc19)
    %75 = arith.extsi %4 : i32 to i64 loc(#loc19)
    %76 = arith.addi %74, %75 : i64 loc(#loc19)
    %c2147483647_i64_27 = arith.constant 2147483647 : i64 loc(#loc19)
    %c-2147483648_i64_28 = arith.constant -2147483648 : i64 loc(#loc19)
    %77 = arith.cmpi sle, %76, %c2147483647_i64_27 : i64 loc(#loc19)
    %78 = arith.cmpi sge, %76, %c-2147483648_i64_28 : i64 loc(#loc19)
    %79 = arith.andi %77, %78 : i1 loc(#loc19)
    %80 = arith.addi %73, %4 : i32 loc(#loc19)
    %c128_i32_29 = arith.constant 128 : i32 loc(#loc20)
    %c128_i32_30 = arith.constant 128 : i32 loc(#loc20)
    %81 = arith.extsi %80 : i32 to i64 loc(#loc20)
    %82 = arith.extsi %c128_i32_30 : i32 to i64 loc(#loc20)
    %83 = arith.muli %81, %82 : i64 loc(#loc20)
    %c2147483647_i64_31 = arith.constant 2147483647 : i64 loc(#loc20)
    %c-2147483648_i64_32 = arith.constant -2147483648 : i64 loc(#loc20)
    %84 = arith.cmpi sle, %83, %c2147483647_i64_31 : i64 loc(#loc20)
    %85 = arith.cmpi sge, %83, %c-2147483648_i64_32 : i64 loc(#loc20)
    %86 = arith.andi %84, %85 : i1 loc(#loc20)
    %87 = arith.muli %80, %c128_i32_30 : i32 loc(#loc20)
    %88 = tt.addptr %arg1, %87 : !tt.ptr<bf16>, i32 loc(#loc21)
    %89 = tt.splat %88 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>> loc(#loc22)
    %90 = tt.addptr %89, %26 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc22)
    %c32_i32_33 = arith.constant 32 : i32 loc(#loc23)
    %c32_i32_34 = arith.constant 32 : i32 loc(#loc23)
    %91 = arith.extsi %11 : i32 to i64 loc(#loc23)
    %92 = arith.extsi %c32_i32_34 : i32 to i64 loc(#loc23)
    %93 = arith.muli %91, %92 : i64 loc(#loc23)
    %c2147483647_i64_35 = arith.constant 2147483647 : i64 loc(#loc23)
    %c-2147483648_i64_36 = arith.constant -2147483648 : i64 loc(#loc23)
    %94 = arith.cmpi sle, %93, %c2147483647_i64_35 : i64 loc(#loc23)
    %95 = arith.cmpi sge, %93, %c-2147483648_i64_36 : i64 loc(#loc23)
    %96 = arith.andi %94, %95 : i1 loc(#loc23)
    %97 = arith.muli %11, %c32_i32_34 : i32 loc(#loc23)
    %98 = arith.extsi %97 : i32 to i64 loc(#loc24)
    %99 = arith.extsi %3 : i32 to i64 loc(#loc24)
    %100 = arith.addi %98, %99 : i64 loc(#loc24)
    %c2147483647_i64_37 = arith.constant 2147483647 : i64 loc(#loc24)
    %c-2147483648_i64_38 = arith.constant -2147483648 : i64 loc(#loc24)
    %101 = arith.cmpi sle, %100, %c2147483647_i64_37 : i64 loc(#loc24)
    %102 = arith.cmpi sge, %100, %c-2147483648_i64_38 : i64 loc(#loc24)
    %103 = arith.andi %101, %102 : i1 loc(#loc24)
    %104 = arith.addi %97, %3 : i32 loc(#loc24)
    %c128_i32_39 = arith.constant 128 : i32 loc(#loc25)
    %c128_i32_40 = arith.constant 128 : i32 loc(#loc25)
    %105 = arith.extsi %104 : i32 to i64 loc(#loc25)
    %106 = arith.extsi %c128_i32_40 : i32 to i64 loc(#loc25)
    %107 = arith.muli %105, %106 : i64 loc(#loc25)
    %c2147483647_i64_41 = arith.constant 2147483647 : i64 loc(#loc25)
    %c-2147483648_i64_42 = arith.constant -2147483648 : i64 loc(#loc25)
    %108 = arith.cmpi sle, %107, %c2147483647_i64_41 : i64 loc(#loc25)
    %109 = arith.cmpi sge, %107, %c-2147483648_i64_42 : i64 loc(#loc25)
    %110 = arith.andi %108, %109 : i1 loc(#loc25)
    %111 = arith.muli %104, %c128_i32_40 : i32 loc(#loc25)
    %112 = tt.addptr %arg2, %111 : !tt.ptr<bf16>, i32 loc(#loc26)
    %113 = tt.splat %112 : !tt.ptr<bf16> -> tensor<8x!tt.ptr<bf16>> loc(#loc27)
    %114 = tt.addptr %113, %42 : tensor<8x!tt.ptr<bf16>>, tensor<8xi32> loc(#loc27)
    %c32_i32_43 = arith.constant 32 : i32 loc(#loc28)
    %c32_i32_44 = arith.constant 32 : i32 loc(#loc28)
    %115 = arith.extsi %11 : i32 to i64 loc(#loc28)
    %116 = arith.extsi %c32_i32_44 : i32 to i64 loc(#loc28)
    %117 = arith.muli %115, %116 : i64 loc(#loc28)
    %c2147483647_i64_45 = arith.constant 2147483647 : i64 loc(#loc28)
    %c-2147483648_i64_46 = arith.constant -2147483648 : i64 loc(#loc28)
    %118 = arith.cmpi sle, %117, %c2147483647_i64_45 : i64 loc(#loc28)
    %119 = arith.cmpi sge, %117, %c-2147483648_i64_46 : i64 loc(#loc28)
    %120 = arith.andi %118, %119 : i1 loc(#loc28)
    %121 = arith.muli %11, %c32_i32_44 : i32 loc(#loc28)
    %122 = tt.addptr %arg3, %121 : !tt.ptr<f32>, i32 loc(#loc29)
    %123 = tt.addptr %122, %3 : !tt.ptr<f32>, i32 loc(#loc30)
    %c32_i32_47 = arith.constant 32 : i32 loc(#loc31)
    %c32_i32_48 = arith.constant 32 : i32 loc(#loc31)
    %124 = arith.extsi %11 : i32 to i64 loc(#loc31)
    %125 = arith.extsi %c32_i32_48 : i32 to i64 loc(#loc31)
    %126 = arith.muli %124, %125 : i64 loc(#loc31)
    %c2147483647_i64_49 = arith.constant 2147483647 : i64 loc(#loc31)
    %c-2147483648_i64_50 = arith.constant -2147483648 : i64 loc(#loc31)
    %127 = arith.cmpi sle, %126, %c2147483647_i64_49 : i64 loc(#loc31)
    %128 = arith.cmpi sge, %126, %c-2147483648_i64_50 : i64 loc(#loc31)
    %129 = arith.andi %127, %128 : i1 loc(#loc31)
    %130 = arith.muli %11, %c32_i32_48 : i32 loc(#loc31)
    %131 = tt.addptr %arg4, %130 : !tt.ptr<bf16>, i32 loc(#loc32)
    %132 = tt.addptr %131, %3 : !tt.ptr<bf16>, i32 loc(#loc33)
    %c32_i32_51 = arith.constant 32 : i32 loc(#loc34)
    %c32_i32_52 = arith.constant 32 : i32 loc(#loc34)
    %133 = arith.extsi %11 : i32 to i64 loc(#loc34)
    %134 = arith.extsi %c32_i32_52 : i32 to i64 loc(#loc34)
    %135 = arith.muli %133, %134 : i64 loc(#loc34)
    %c2147483647_i64_53 = arith.constant 2147483647 : i64 loc(#loc34)
    %c-2147483648_i64_54 = arith.constant -2147483648 : i64 loc(#loc34)
    %136 = arith.cmpi sle, %135, %c2147483647_i64_53 : i64 loc(#loc34)
    %137 = arith.cmpi sge, %135, %c-2147483648_i64_54 : i64 loc(#loc34)
    %138 = arith.andi %136, %137 : i1 loc(#loc34)
    %139 = arith.muli %11, %c32_i32_52 : i32 loc(#loc34)
    %140 = arith.extsi %139 : i32 to i64 loc(#loc35)
    %141 = arith.extsi %3 : i32 to i64 loc(#loc35)
    %142 = arith.addi %140, %141 : i64 loc(#loc35)
    %c2147483647_i64_55 = arith.constant 2147483647 : i64 loc(#loc35)
    %c-2147483648_i64_56 = arith.constant -2147483648 : i64 loc(#loc35)
    %143 = arith.cmpi sle, %142, %c2147483647_i64_55 : i64 loc(#loc35)
    %144 = arith.cmpi sge, %142, %c-2147483648_i64_56 : i64 loc(#loc35)
    %145 = arith.andi %143, %144 : i1 loc(#loc35)
    %146 = arith.addi %139, %3 : i32 loc(#loc35)
    %c128_i32_57 = arith.constant 128 : i32 loc(#loc36)
    %c128_i32_58 = arith.constant 128 : i32 loc(#loc36)
    %147 = arith.extsi %146 : i32 to i64 loc(#loc36)
    %148 = arith.extsi %c128_i32_58 : i32 to i64 loc(#loc36)
    %149 = arith.muli %147, %148 : i64 loc(#loc36)
    %c2147483647_i64_59 = arith.constant 2147483647 : i64 loc(#loc36)
    %c-2147483648_i64_60 = arith.constant -2147483648 : i64 loc(#loc36)
    %150 = arith.cmpi sle, %149, %c2147483647_i64_59 : i64 loc(#loc36)
    %151 = arith.cmpi sge, %149, %c-2147483648_i64_60 : i64 loc(#loc36)
    %152 = arith.andi %150, %151 : i1 loc(#loc36)
    %153 = arith.muli %146, %c128_i32_58 : i32 loc(#loc36)
    %154 = tt.addptr %arg5, %153 : !tt.ptr<bf16>, i32 loc(#loc37)
    %155 = tt.splat %154 : !tt.ptr<bf16> -> tensor<8x!tt.ptr<bf16>> loc(#loc38)
    %156 = tt.addptr %155, %42 : tensor<8x!tt.ptr<bf16>>, tensor<8xi32> loc(#loc38)
    %c128_i32_61 = arith.constant 128 : i32 loc(#loc39)
    %cst_62 = arith.constant dense<128> : tensor<128xi32> loc(#loc39)
    %157 = arith.cmpi slt, %26, %cst_62 : tensor<128xi32> loc(#loc39)
    %c128_i32_63 = arith.constant 128 : i32 loc(#loc40)
    %cst_64 = arith.constant dense<128> : tensor<8xi32> loc(#loc40)
    %158 = arith.cmpi slt, %42, %cst_64 : tensor<8xi32> loc(#loc40)
    %159 = tt.expand_dims %157 {axis = 1 : i32} : tensor<128xi1> -> tensor<128x1xi1> loc(#loc41)
    %160 = tt.expand_dims %158 {axis = 0 : i32} : tensor<8xi1> -> tensor<1x8xi1> loc(#loc42)
    %161 = tt.broadcast %159 : tensor<128x1xi1> -> tensor<128x8xi1> loc(#loc43)
    %162 = tt.broadcast %160 : tensor<1x8xi1> -> tensor<128x8xi1> loc(#loc43)
    %163 = arith.andi %161, %162 : tensor<128x8xi1> loc(#loc43)
    %164 = tt.call @"triton.language.standard.zeros____(0, 0)cconstexpr_128__(0, 1)cconstexpr_8__(1,)cconstexpr_fp32_"() : () -> tensor<128x8xf32> loc(#loc44)
    %c128_i32_65 = arith.constant 128 : i32 loc(#loc45)
    %c128_i32_66 = arith.constant 128 : i32 loc(#loc45)
    %165 = arith.extsi %1 : i32 to i64 loc(#loc45)
    %166 = arith.extsi %c128_i32_66 : i32 to i64 loc(#loc45)
    %167 = arith.muli %165, %166 : i64 loc(#loc45)
    %c2147483647_i64_67 = arith.constant 2147483647 : i64 loc(#loc45)
    %c-2147483648_i64_68 = arith.constant -2147483648 : i64 loc(#loc45)
    %168 = arith.cmpi sle, %167, %c2147483647_i64_67 : i64 loc(#loc45)
    %169 = arith.cmpi sge, %167, %c-2147483648_i64_68 : i64 loc(#loc45)
    %170 = arith.andi %168, %169 : i1 loc(#loc45)
    %171 = arith.muli %1, %c128_i32_66 : i32 loc(#loc45)
    %c128_i32_69 = arith.constant 128 : i32 loc(#loc46)
    %c128_i32_70 = arith.constant 128 : i32 loc(#loc46)
    %172 = arith.extsi %171 : i32 to i64 loc(#loc46)
    %173 = arith.extsi %c128_i32_70 : i32 to i64 loc(#loc46)
    %174 = arith.muli %172, %173 : i64 loc(#loc46)
    %c2147483647_i64_71 = arith.constant 2147483647 : i64 loc(#loc46)
    %c-2147483648_i64_72 = arith.constant -2147483648 : i64 loc(#loc46)
    %175 = arith.cmpi sle, %174, %c2147483647_i64_71 : i64 loc(#loc46)
    %176 = arith.cmpi sge, %174, %c-2147483648_i64_72 : i64 loc(#loc46)
    %177 = arith.andi %175, %176 : i1 loc(#loc46)
    %178 = arith.muli %171, %c128_i32_70 : i32 loc(#loc46)
    %179 = tt.addptr %arg6, %178 : !tt.ptr<f32>, i32 loc(#loc47)
    %180 = tt.expand_dims %26 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc48)
    %c128_i32_73 = arith.constant 128 : i32 loc(#loc49)
    %c128_i32_74 = arith.constant 128 : i32 loc(#loc49)
    %cst_75 = arith.constant dense<128> : tensor<128x1xi32> loc(#loc49)
    %181 = arith.extsi %180 : tensor<128x1xi32> to tensor<128x1xi64> loc(#loc49)
    %182 = arith.extsi %cst_75 : tensor<128x1xi32> to tensor<128x1xi64> loc(#loc49)
    %183 = arith.muli %181, %182 : tensor<128x1xi64> loc(#loc49)
    %c2147483647_i64_76 = arith.constant 2147483647 : i64 loc(#loc49)
    %c-2147483648_i64_77 = arith.constant -2147483648 : i64 loc(#loc49)
    %cst_78 = arith.constant dense<2147483647> : tensor<128x1xi64> loc(#loc49)
    %184 = arith.cmpi sle, %183, %cst_78 : tensor<128x1xi64> loc(#loc49)
    %cst_79 = arith.constant dense<-2147483648> : tensor<128x1xi64> loc(#loc49)
    %185 = arith.cmpi sge, %183, %cst_79 : tensor<128x1xi64> loc(#loc49)
    %186 = arith.andi %184, %185 : tensor<128x1xi1> loc(#loc49)
    %187 = arith.muli %180, %cst_75 : tensor<128x1xi32> loc(#loc49)
    %188 = tt.splat %179 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc50)
    %189 = tt.addptr %188, %187 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc50)
    %190 = tt.expand_dims %42 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc51)
    %191 = tt.broadcast %189 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x8x!tt.ptr<f32>> loc(#loc52)
    %192 = tt.broadcast %190 : tensor<1x8xi32> -> tensor<128x8xi32> loc(#loc52)
    %193 = tt.addptr %191, %192 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc52)
    %c0_i32 = arith.constant 0 : i32 loc(#loc53)
    %cst_80 = arith.constant dense<0> : tensor<128x8xi32> loc(#loc53)
    %194 = arith.sitofp %cst_80 : tensor<128x8xi32> to tensor<128x8xf32> loc(#loc53)
    %195 = tt.load %193, %163, %194 : tensor<128x8x!tt.ptr<f32>> loc(#loc53)
    %196 = arith.addf %164, %195 : tensor<128x8xf32> loc(#loc54)
    %c0_i32_81 = arith.constant 0 : i32 loc(#loc55)
    %c1_i32_82 = arith.constant 1 : i32 loc(#loc55)
    %197 = arith.bitcast %c0_i32_81 : i32 to i32 loc(#loc55)
    %198 = arith.bitcast %arg9 : i32 to i32 loc(#loc55)
    %199 = arith.bitcast %c1_i32_82 : i32 to i32 loc(#loc55)
    %200 = ub.poison : i32 loc(#loc55)
    %201:7 = scf.for %arg10 = %197 to %198 step %199 iter_args(%arg11 = %196, %arg12 = %66, %arg13 = %90, %arg14 = %114, %arg15 = %123, %arg16 = %132, %arg17 = %156) -> (tensor<128x8xf32>, tensor<128x!tt.ptr<bf16>>, tensor<128x!tt.ptr<bf16>>, tensor<8x!tt.ptr<bf16>>, !tt.ptr<f32>, !tt.ptr<bf16>, tensor<8x!tt.ptr<bf16>>)  : i32 {
      %c0_i32_98 = arith.constant 0 : i32 loc(#loc56)
      %cst_99 = arith.constant dense<0> : tensor<128xi32> loc(#loc56)
      %231 = arith.sitofp %cst_99 : tensor<128xi32> to tensor<128xbf16> loc(#loc56)
      %232 = tt.load %arg12, %157, %231 : tensor<128x!tt.ptr<bf16>> loc(#loc56)
      %233 = arith.extf %232 : tensor<128xbf16> to tensor<128xf32> loc(#loc57)
      %c0_i32_100 = arith.constant 0 : i32 loc(#loc58)
      %cst_101 = arith.constant dense<0> : tensor<128xi32> loc(#loc58)
      %234 = arith.sitofp %cst_101 : tensor<128xi32> to tensor<128xbf16> loc(#loc58)
      %235 = tt.load %arg13, %157, %234 : tensor<128x!tt.ptr<bf16>> loc(#loc58)
      %236 = arith.extf %235 : tensor<128xbf16> to tensor<128xf32> loc(#loc59)
      %c0_i32_102 = arith.constant 0 : i32 loc(#loc60)
      %cst_103 = arith.constant dense<0> : tensor<8xi32> loc(#loc60)
      %237 = arith.sitofp %cst_103 : tensor<8xi32> to tensor<8xbf16> loc(#loc60)
      %238 = tt.load %arg14, %158, %237 : tensor<8x!tt.ptr<bf16>> loc(#loc60)
      %239 = arith.extf %238 : tensor<8xbf16> to tensor<8xf32> loc(#loc61)
      %240 = arith.mulf %233, %233 : tensor<128xf32> loc(#loc62)
      %241 = tt.call @"triton.language.standard.sum__fp32S128S__(1,)cNone_(2,)cconstexpr_False__(3,)cNone"(%240) : (tensor<128xf32>) -> f32 loc(#loc63)
      %cst_104 = arith.constant 9.99999997E-7 : f32 loc(#loc64)
      %cst_105 = arith.constant 9.99999997E-7 : f32 loc(#loc64)
      %242 = arith.addf %241, %cst_105 : f32 loc(#loc64)
      %243 = math.sqrt %242 : f32 loc(#loc65)
      %244 = tt.splat %243 : f32 -> tensor<128xf32> loc(#loc66)
      %245 = arith.divf %233, %244 : tensor<128xf32> loc(#loc66)
      %246 = arith.mulf %236, %236 : tensor<128xf32> loc(#loc67)
      %247 = tt.call @"triton.language.standard.sum__fp32S128S__(1,)cNone_(2,)cconstexpr_False__(3,)cNone"(%246) : (tensor<128xf32>) -> f32 loc(#loc68)
      %cst_106 = arith.constant 9.99999997E-7 : f32 loc(#loc69)
      %cst_107 = arith.constant 9.99999997E-7 : f32 loc(#loc69)
      %248 = arith.addf %247, %cst_107 : f32 loc(#loc69)
      %249 = math.sqrt %248 : f32 loc(#loc70)
      %250 = tt.splat %249 : f32 -> tensor<128xf32> loc(#loc71)
      %251 = arith.divf %236, %250 : tensor<128xf32> loc(#loc71)
      %252 = tt.splat %arg8 : f32 -> tensor<128xf32> loc(#loc72)
      %253 = arith.mulf %245, %252 : tensor<128xf32> loc(#loc72)
      %254 = tt.load %arg16 : !tt.ptr<bf16> loc(#loc73)
      %255 = arith.extf %254 : bf16 to f32 loc(#loc74)
      %256 = tt.load %arg15 : !tt.ptr<f32> loc(#loc75)
      %257 = math.exp %256 : f32 loc(#loc76)
      %258 = tt.splat %257 : f32 -> tensor<128x8xf32> loc(#loc77)
      %259 = arith.mulf %arg11, %258 : tensor<128x8xf32> loc(#loc77)
      %260 = tt.expand_dims %251 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc78)
      %261 = tt.broadcast %260 : tensor<128x1xf32> -> tensor<128x8xf32> loc(#loc79)
      %262 = arith.mulf %259, %261 : tensor<128x8xf32> loc(#loc79)
      %263 = tt.call @"triton.language.standard.sum__fp32S128_8S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%262) : (tensor<128x8xf32>) -> tensor<8xf32> loc(#loc80)
      %264 = arith.subf %239, %263 : tensor<8xf32> loc(#loc81)
      %265 = tt.splat %255 : f32 -> tensor<8xf32> loc(#loc82)
      %266 = arith.mulf %265, %264 : tensor<8xf32> loc(#loc82)
      %267 = tt.expand_dims %251 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc83)
      %268 = tt.expand_dims %266 {axis = 0 : i32} : tensor<8xf32> -> tensor<1x8xf32> loc(#loc84)
      %269 = tt.broadcast %267 : tensor<128x1xf32> -> tensor<128x8xf32> loc(#loc84)
      %270 = tt.broadcast %268 : tensor<1x8xf32> -> tensor<128x8xf32> loc(#loc84)
      %271 = arith.mulf %269, %270 : tensor<128x8xf32> loc(#loc84)
      %272 = arith.addf %259, %271 : tensor<128x8xf32> loc(#loc85)
      %273 = tt.expand_dims %253 {axis = 1 : i32} : tensor<128xf32> -> tensor<128x1xf32> loc(#loc86)
      %274 = tt.broadcast %273 : tensor<128x1xf32> -> tensor<128x8xf32> loc(#loc87)
      %275 = arith.mulf %272, %274 : tensor<128x8xf32> loc(#loc87)
      %276 = tt.call @"triton.language.standard.sum__fp32S128_8S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%275) : (tensor<128x8xf32>) -> tensor<8xf32> loc(#loc88)
      %277 = arith.truncf %276 : tensor<8xf32> to tensor<8xbf16> loc(#loc89)
      tt.store %arg17, %277, %158 : tensor<8x!tt.ptr<bf16>> loc(#loc90)
      %c4096_i32 = arith.constant 4096 : i32 loc(#loc91)
      %cst_108 = arith.constant dense<4096> : tensor<128xi32> loc(#loc91)
      %278 = tt.addptr %arg12, %cst_108 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc91)
      %c4096_i32_109 = arith.constant 4096 : i32 loc(#loc92)
      %cst_110 = arith.constant dense<4096> : tensor<128xi32> loc(#loc92)
      %279 = tt.addptr %arg13, %cst_110 : tensor<128x!tt.ptr<bf16>>, tensor<128xi32> loc(#loc92)
      %c4096_i32_111 = arith.constant 4096 : i32 loc(#loc93)
      %cst_112 = arith.constant dense<4096> : tensor<8xi32> loc(#loc93)
      %280 = tt.addptr %arg14, %cst_112 : tensor<8x!tt.ptr<bf16>>, tensor<8xi32> loc(#loc93)
      %c32_i32_113 = arith.constant 32 : i32 loc(#loc94)
      %281 = tt.addptr %arg15, %c32_i32_113 : !tt.ptr<f32>, i32 loc(#loc94)
      %c32_i32_114 = arith.constant 32 : i32 loc(#loc95)
      %282 = tt.addptr %arg16, %c32_i32_114 : !tt.ptr<bf16>, i32 loc(#loc95)
      %c4096_i32_115 = arith.constant 4096 : i32 loc(#loc96)
      %cst_116 = arith.constant dense<4096> : tensor<8xi32> loc(#loc96)
      %283 = tt.addptr %arg17, %cst_116 : tensor<8x!tt.ptr<bf16>>, tensor<8xi32> loc(#loc96)
      scf.yield %272, %278, %279, %280, %281, %282, %283 : tensor<128x8xf32>, tensor<128x!tt.ptr<bf16>>, tensor<128x!tt.ptr<bf16>>, tensor<8x!tt.ptr<bf16>>, !tt.ptr<f32>, !tt.ptr<bf16>, tensor<8x!tt.ptr<bf16>> loc(#loc97)
    } loc(#loc55)
    %c128_i32_83 = arith.constant 128 : i32 loc(#loc98)
    %c128_i32_84 = arith.constant 128 : i32 loc(#loc98)
    %202 = arith.extsi %1 : i32 to i64 loc(#loc98)
    %203 = arith.extsi %c128_i32_84 : i32 to i64 loc(#loc98)
    %204 = arith.muli %202, %203 : i64 loc(#loc98)
    %c2147483647_i64_85 = arith.constant 2147483647 : i64 loc(#loc98)
    %c-2147483648_i64_86 = arith.constant -2147483648 : i64 loc(#loc98)
    %205 = arith.cmpi sle, %204, %c2147483647_i64_85 : i64 loc(#loc98)
    %206 = arith.cmpi sge, %204, %c-2147483648_i64_86 : i64 loc(#loc98)
    %207 = arith.andi %205, %206 : i1 loc(#loc98)
    %208 = arith.muli %1, %c128_i32_84 : i32 loc(#loc98)
    %c128_i32_87 = arith.constant 128 : i32 loc(#loc99)
    %c128_i32_88 = arith.constant 128 : i32 loc(#loc99)
    %209 = arith.extsi %208 : i32 to i64 loc(#loc99)
    %210 = arith.extsi %c128_i32_88 : i32 to i64 loc(#loc99)
    %211 = arith.muli %209, %210 : i64 loc(#loc99)
    %c2147483647_i64_89 = arith.constant 2147483647 : i64 loc(#loc99)
    %c-2147483648_i64_90 = arith.constant -2147483648 : i64 loc(#loc99)
    %212 = arith.cmpi sle, %211, %c2147483647_i64_89 : i64 loc(#loc99)
    %213 = arith.cmpi sge, %211, %c-2147483648_i64_90 : i64 loc(#loc99)
    %214 = arith.andi %212, %213 : i1 loc(#loc99)
    %215 = arith.muli %208, %c128_i32_88 : i32 loc(#loc99)
    %216 = tt.addptr %arg7, %215 : !tt.ptr<f32>, i32 loc(#loc100)
    %217 = tt.expand_dims %26 {axis = 1 : i32} : tensor<128xi32> -> tensor<128x1xi32> loc(#loc101)
    %c128_i32_91 = arith.constant 128 : i32 loc(#loc102)
    %c128_i32_92 = arith.constant 128 : i32 loc(#loc102)
    %cst_93 = arith.constant dense<128> : tensor<128x1xi32> loc(#loc102)
    %218 = arith.extsi %217 : tensor<128x1xi32> to tensor<128x1xi64> loc(#loc102)
    %219 = arith.extsi %cst_93 : tensor<128x1xi32> to tensor<128x1xi64> loc(#loc102)
    %220 = arith.muli %218, %219 : tensor<128x1xi64> loc(#loc102)
    %c2147483647_i64_94 = arith.constant 2147483647 : i64 loc(#loc102)
    %c-2147483648_i64_95 = arith.constant -2147483648 : i64 loc(#loc102)
    %cst_96 = arith.constant dense<2147483647> : tensor<128x1xi64> loc(#loc102)
    %221 = arith.cmpi sle, %220, %cst_96 : tensor<128x1xi64> loc(#loc102)
    %cst_97 = arith.constant dense<-2147483648> : tensor<128x1xi64> loc(#loc102)
    %222 = arith.cmpi sge, %220, %cst_97 : tensor<128x1xi64> loc(#loc102)
    %223 = arith.andi %221, %222 : tensor<128x1xi1> loc(#loc102)
    %224 = arith.muli %217, %cst_93 : tensor<128x1xi32> loc(#loc102)
    %225 = tt.splat %216 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>> loc(#loc103)
    %226 = tt.addptr %225, %224 : tensor<128x1x!tt.ptr<f32>>, tensor<128x1xi32> loc(#loc103)
    %227 = tt.expand_dims %42 {axis = 0 : i32} : tensor<8xi32> -> tensor<1x8xi32> loc(#loc104)
    %228 = tt.broadcast %226 : tensor<128x1x!tt.ptr<f32>> -> tensor<128x8x!tt.ptr<f32>> loc(#loc105)
    %229 = tt.broadcast %227 : tensor<1x8xi32> -> tensor<128x8xi32> loc(#loc105)
    %230 = tt.addptr %228, %229 : tensor<128x8x!tt.ptr<f32>>, tensor<128x8xi32> loc(#loc105)
    tt.store %230, %201#0, %163 : tensor<128x8x!tt.ptr<f32>> loc(#loc106)
    tt.return loc(#loc107)
  } loc(#loc)
  tt.func private @"triton.language.standard.zeros____(0, 0)cconstexpr_128__(0, 1)cconstexpr_8__(1,)cconstexpr_fp32_"() -> tensor<128x8xf32> attributes {noinline = false} {
    %cst = arith.constant 0.000000e+00 : f32 loc(#loc109)
    %cst_0 = arith.constant dense<0.000000e+00> : tensor<128x8xf32> loc(#loc109)
    tt.return %cst_0 : tensor<128x8xf32> loc(#loc110)
  ^bb1:  // no predecessors
    %0 = ub.poison : tensor<128x8xf32> loc(#loc111)
    tt.return %0 : tensor<128x8xf32> loc(#loc111)
  } loc(#loc108)
  tt.func private @"triton.language.standard.sum__fp32S128S__(1,)cNone_(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<128xf32> loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":284:0)) -> f32 attributes {noinline = false} {
    %0 = tt.reshape %arg0 allow_reorder : tensor<128xf32> -> tensor<128xf32> loc(#loc113)
    %1 = "tt.reduce"(%0) <{axis = 0 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %3 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc113)
      tt.reduce.return %3 : f32 loc(#loc113)
    }) : (tensor<128xf32>) -> f32 loc(#loc113)
    tt.return %1 : f32 loc(#loc115)
  ^bb1:  // no predecessors
    %2 = ub.poison : f32 loc(#loc116)
    tt.return %2 : f32 loc(#loc116)
  } loc(#loc112)
  tt.func private @triton.language.standard._sum_combine__fp32_fp32__(%arg0: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0), %arg1: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":259:0)) -> f32 attributes {noinline = false} {
    %0 = arith.addf %arg0, %arg1 : f32 loc(#loc118)
    tt.return %0 : f32 loc(#loc119)
  ^bb1:  // no predecessors
    %1 = ub.poison : f32 loc(#loc120)
    tt.return %1 : f32 loc(#loc120)
  } loc(#loc117)
  tt.func private @"triton.language.standard.sum__fp32S128_8S__(1,)cconstexpr_0__(2,)cconstexpr_False__(3,)cNone"(%arg0: tensor<128x8xf32> loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":284:0)) -> tensor<8xf32> attributes {noinline = false} {
    %0 = "tt.reduce"(%arg0) <{axis = 0 : i32}> ({
    ^bb0(%arg1: f32 loc(unknown), %arg2: f32 loc(unknown)):
      %2 = tt.call @triton.language.standard._sum_combine__fp32_fp32__(%arg1, %arg2) : (f32, f32) -> f32 loc(#loc113)
      tt.reduce.return %2 : f32 loc(#loc113)
    }) : (tensor<128x8xf32>) -> tensor<8xf32> loc(#loc113)
    tt.return %0 : tensor<8xf32> loc(#loc115)
  ^bb1:  // no predecessors
    %1 = ub.poison : tensor<8xf32> loc(#loc116)
    tt.return %1 : tensor<8xf32> loc(#loc116)
  } loc(#loc112)
} loc(#loc)
#loc1 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":53:30)
#loc2 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":53:48)
#loc3 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":54:24)
#loc4 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":54:35)
#loc5 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":55:19)
#loc6 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":61:25)
#loc7 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":61:34)
#loc8 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":61:38)
#loc9 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":62:23)
#loc10 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:16)
#loc11 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:34)
#loc12 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:21)
#loc13 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:21)
#loc14 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:25)
#loc15 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:32)
#loc16 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:14)
#loc17 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:36)
#loc18 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:21)
#loc19 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:25)
#loc20 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:32)
#loc21 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:14)
#loc22 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:36)
#loc23 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:21)
#loc24 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:26)
#loc25 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:34)
#loc26 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:14)
#loc27 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:38)
#loc28 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":69:24)
#loc29 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":69:18)
#loc30 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":69:29)
#loc31 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":75:30)
#loc32 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":75:24)
#loc33 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":75:35)
#loc34 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:21)
#loc35 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:26)
#loc36 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:34)
#loc37 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:14)
#loc38 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:38)
#loc39 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":81:19)
#loc40 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":82:19)
#loc41 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:20)
#loc42 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:38)
#loc43 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:31)
#loc44 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":85:19)
#loc45 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:27)
#loc46 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:29)
#loc47 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:20)
#loc48 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:37)
#loc49 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:48)
#loc50 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:33)
#loc51 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:56)
#loc52 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:52)
#loc53 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":88:23)
#loc54 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":88:15)
#loc55 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":90:22)
#loc56 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":91:22)
#loc57 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":91:52)
#loc58 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":92:22)
#loc59 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":92:52)
#loc60 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":93:22)
#loc61 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":93:52)
#loc62 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:45)
#loc63 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:39)
#loc64 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:52)
#loc65 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:32)
#loc66 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:24)
#loc67 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:45)
#loc68 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:39)
#loc69 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:52)
#loc70 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:32)
#loc71 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:24)
#loc72 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":97:20)
#loc73 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":99:29)
#loc74 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":99:40)
#loc75 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":105:26)
#loc76 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":106:23)
#loc77 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":106:19)
#loc78 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:51)
#loc79 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:47)
#loc80 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:61)
#loc81 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:34)
#loc82 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:28)
#loc83 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":119:19)
#loc84 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":119:30)
#loc85 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":119:15)
#loc86 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:31)
#loc87 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:27)
#loc88 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:41)
#loc89 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":123:29)
#loc90 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":123:22)
#loc91 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":125:15)
#loc92 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":126:15)
#loc93 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":127:15)
#loc94 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":129:19)
#loc95 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":134:18)
#loc96 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":135:15)
#loc97 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":135:8)
#loc98 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:27)
#loc99 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:29)
#loc100 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:20)
#loc101 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:37)
#loc102 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:48)
#loc103 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:33)
#loc104 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:56)
#loc105 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:52)
#loc106 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":139:23)
#loc107 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":137:4)
#loc108 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":117:0)
#loc109 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":126:31)
#loc110 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":126:11)
#loc111 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":126:4)
#loc113 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:36)
#loc115 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:11)
#loc116 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:4)
#loc118 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:15)
#loc119 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:11)
#loc120 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:4)
