#blocked = #ttg.blocked<{sizePerThread = [1, 4], threadsPerWarp = [16, 2], warpsPerCTA = [1, 1], order = [1, 0]}>
#blocked1 = #ttg.blocked<{sizePerThread = [4], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#blocked2 = #ttg.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [1], order = [0]}>
#loc = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0)
#loc1 = loc(unknown)
#loc51 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:39)
#loc57 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:39)
#loc67 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:61)
#loc74 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:41)
#loc90 = loc(callsite(#loc1 at #loc51))
#loc92 = loc(callsite(#loc1 at #loc57))
#loc94 = loc(callsite(#loc1 at #loc67))
#loc96 = loc(callsite(#loc1 at #loc74))
module attributes {"ttg.num-ctas" = 1 : i32, "ttg.num-warps" = 1 : i32, ttg.target = "cuda:90", "ttg.threads-per-warp" = 32 : i32} {
  tt.func public @fused_recurrent_gated_delta_rule_fwd_kernel(%arg0: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg1: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg2: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg3: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg4: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg5: !tt.ptr<bf16> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg6: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg7: !tt.ptr<f32> {tt.divisibility = 16 : i32} loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg8: f32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0), %arg9: i32 loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":23:0)) attributes {noinline = false} {
    %cst = arith.constant dense<0.000000e+00> : tensor<8xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_0 = arith.constant dense<4096> : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_1 = arith.constant dense<4096> : tensor<128xi32, #blocked1> loc(#loc1)
    %cst_2 = arith.constant dense<128> : tensor<128x1xi32, #blocked> loc(#loc1)
    %cst_3 = arith.constant dense<128> : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc1)
    %cst_4 = arith.constant dense<128> : tensor<128xi32, #blocked1> loc(#loc1)
    %cst_5 = arith.constant dense<128> : tensor<128xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc1)
    %c128_i32 = arith.constant 128 : i32 loc(#loc1)
    %c8_i32 = arith.constant 8 : i32 loc(#loc1)
    %c32_i32 = arith.constant 32 : i32 loc(#loc1)
    %cst_6 = arith.constant dense<0.000000e+00> : tensor<128xbf16, #blocked1> loc(#loc1)
    %cst_7 = arith.constant dense<128> : tensor<8xi32, #blocked2> loc(#loc1)
    %cst_8 = arith.constant 9.99999997E-7 : f32 loc(#loc1)
    %cst_9 = arith.constant dense<4096> : tensor<8xi32, #blocked2> loc(#loc1)
    %c16384_i32 = arith.constant 16384 : i32 loc(#loc1)
    %c1_i32 = arith.constant 1 : i32 loc(#loc1)
    %c0_i32 = arith.constant 0 : i32 loc(#loc1)
    %cst_10 = arith.constant dense<0.000000e+00> : tensor<128x8xf32, #blocked> loc(#loc1)
    %0 = tt.get_program_id x : i32 loc(#loc2)
    %1 = tt.get_program_id y : i32 loc(#loc3)
    %2 = arith.divsi %1, %c32_i32 : i32 loc(#loc4)
    %3 = arith.remsi %1, %c32_i32 : i32 loc(#loc5)
    %4 = arith.muli %2, %arg9 : i32 loc(#loc6)
    %5 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc7)
    %6 = tt.make_range {end = 128 : i32, start = 0 : i32} : tensor<128xi32, #blocked1> loc(#loc7)
    %7 = arith.muli %0, %c8_i32 : i32 loc(#loc8)
    %8 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc9)
    %9 = tt.make_range {end = 8 : i32, start = 0 : i32} : tensor<8xi32, #blocked2> loc(#loc9)
    %10 = tt.splat %7 : i32 -> tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc10)
    %11 = tt.splat %7 : i32 -> tensor<8xi32, #blocked2> loc(#loc10)
    %12 = arith.addi %10, %8 : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc10)
    %13 = arith.addi %11, %9 : tensor<8xi32, #blocked2> loc(#loc10)
    %14 = arith.muli %4, %c32_i32 : i32 loc(#loc11)
    %15 = arith.addi %14, %3 : i32 loc(#loc12)
    %16 = arith.muli %15, %c128_i32 : i32 loc(#loc13)
    %17 = tt.addptr %arg0, %16 : !tt.ptr<bf16>, i32 loc(#loc14)
    %18 = tt.splat %17 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc15)
    %19 = tt.addptr %18, %6 : tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc15)
    %20 = tt.addptr %arg1, %16 : !tt.ptr<bf16>, i32 loc(#loc16)
    %21 = tt.splat %20 : !tt.ptr<bf16> -> tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc17)
    %22 = tt.addptr %21, %6 : tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc17)
    %23 = tt.addptr %arg2, %16 : !tt.ptr<bf16>, i32 loc(#loc18)
    %24 = tt.splat %23 : !tt.ptr<bf16> -> tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc19)
    %25 = tt.addptr %24, %12 : tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc19)
    %26 = tt.addptr %arg3, %14 : !tt.ptr<f32>, i32 loc(#loc20)
    %27 = tt.addptr %26, %3 : !tt.ptr<f32>, i32 loc(#loc21)
    %28 = tt.addptr %arg4, %14 : !tt.ptr<bf16>, i32 loc(#loc22)
    %29 = tt.addptr %28, %3 : !tt.ptr<bf16>, i32 loc(#loc23)
    %30 = tt.addptr %arg5, %16 : !tt.ptr<bf16>, i32 loc(#loc24)
    %31 = tt.splat %30 : !tt.ptr<bf16> -> tensor<8x!tt.ptr<bf16>, #blocked2> loc(#loc25)
    %32 = tt.addptr %31, %13 : tensor<8x!tt.ptr<bf16>, #blocked2>, tensor<8xi32, #blocked2> loc(#loc25)
    %33 = arith.cmpi slt, %5, %cst_5 : tensor<128xi32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc26)
    %34 = arith.cmpi slt, %6, %cst_4 : tensor<128xi32, #blocked1> loc(#loc26)
    %35 = arith.cmpi slt, %12, %cst_3 : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc27)
    %36 = arith.cmpi slt, %13, %cst_7 : tensor<8xi32, #blocked2> loc(#loc27)
    %37 = tt.expand_dims %33 {axis = 1 : i32} : tensor<128xi1, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi1, #blocked> loc(#loc28)
    %38 = tt.expand_dims %35 {axis = 0 : i32} : tensor<8xi1, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi1, #blocked> loc(#loc29)
    %39 = tt.broadcast %37 : tensor<128x1xi1, #blocked> -> tensor<128x8xi1, #blocked> loc(#loc30)
    %40 = tt.broadcast %38 : tensor<1x8xi1, #blocked> -> tensor<128x8xi1, #blocked> loc(#loc30)
    %41 = arith.andi %39, %40 : tensor<128x8xi1, #blocked> loc(#loc30)
    %42 = arith.muli %1, %c16384_i32 : i32 loc(#loc31)
    %43 = tt.addptr %arg6, %42 : !tt.ptr<f32>, i32 loc(#loc32)
    %44 = tt.expand_dims %5 {axis = 1 : i32} : tensor<128xi32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xi32, #blocked> loc(#loc33)
    %45 = arith.muli %44, %cst_2 : tensor<128x1xi32, #blocked> loc(#loc34)
    %46 = tt.splat %43 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>, #blocked> loc(#loc35)
    %47 = tt.addptr %46, %45 : tensor<128x1x!tt.ptr<f32>, #blocked>, tensor<128x1xi32, #blocked> loc(#loc35)
    %48 = tt.expand_dims %12 {axis = 0 : i32} : tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xi32, #blocked> loc(#loc36)
    %49 = tt.broadcast %47 : tensor<128x1x!tt.ptr<f32>, #blocked> -> tensor<128x8x!tt.ptr<f32>, #blocked> loc(#loc37)
    %50 = tt.broadcast %48 : tensor<1x8xi32, #blocked> -> tensor<128x8xi32, #blocked> loc(#loc37)
    %51 = tt.addptr %49, %50 : tensor<128x8x!tt.ptr<f32>, #blocked>, tensor<128x8xi32, #blocked> loc(#loc37)
    %52 = tt.load %51, %41, %cst_10 : tensor<128x8x!tt.ptr<f32>, #blocked> loc(#loc38)
    %53 = arith.addf %52, %cst_10 : tensor<128x8xf32, #blocked> loc(#loc39)
    %54 = tt.splat %arg8 : f32 -> tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc40)
    %55:7 = scf.for %arg10 = %c0_i32 to %arg9 step %c1_i32 iter_args(%arg11 = %53, %arg12 = %27, %arg13 = %29, %arg14 = %32, %arg15 = %19, %arg16 = %22, %arg17 = %25) -> (tensor<128x8xf32, #blocked>, !tt.ptr<f32>, !tt.ptr<bf16>, tensor<8x!tt.ptr<bf16>, #blocked2>, tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>>)  : i32 {
      %61 = tt.load %arg15, %34, %cst_6 : tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc42)
      %62 = ttg.convert_layout %61 : tensor<128xbf16, #blocked1> -> tensor<128xbf16, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc40)
      %63 = arith.extf %62 : tensor<128xbf16, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc43)
      %64 = arith.extf %61 : tensor<128xbf16, #blocked1> to tensor<128xf32, #blocked1> loc(#loc43)
      %65 = tt.load %arg16, %34, %cst_6 : tensor<128x!tt.ptr<bf16>, #blocked1> loc(#loc44)
      %66 = ttg.convert_layout %65 : tensor<128xbf16, #blocked1> -> tensor<128xbf16, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc45)
      %67 = arith.extf %66 : tensor<128xbf16, #ttg.slice<{dim = 1, parent = #blocked}>> to tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc46)
      %68 = arith.extf %65 : tensor<128xbf16, #blocked1> to tensor<128xf32, #blocked1> loc(#loc46)
      %69 = tt.load %arg17, %35, %cst : tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc47)
      %70 = arith.extf %69 : tensor<8xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> to tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc48)
      %71 = arith.mulf %64, %64 : tensor<128xf32, #blocked1> loc(#loc49)
      %72 = tt.reshape %71 allow_reorder : tensor<128xf32, #blocked1> -> tensor<128xf32, #blocked2> loc(#loc89)
      %73 = "tt.reduce"(%72) <{axis = 0 : i32}> ({
      ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc51)), %arg19: f32 loc(callsite(#loc1 at #loc51))):
        %115 = arith.addf %arg18, %arg19 : f32 loc(#loc97)
        tt.reduce.return %115 : f32 loc(#loc89)
      }) : (tensor<128xf32, #blocked2>) -> f32 loc(#loc89)
      %74 = arith.addf %73, %cst_8 : f32 loc(#loc53)
      %75 = math.sqrt %74 : f32 loc(#loc54)
      %76 = tt.splat %75 : f32 -> tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc55)
      %77 = arith.divf %63, %76 : tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc55)
      %78 = arith.mulf %68, %68 : tensor<128xf32, #blocked1> loc(#loc56)
      %79 = tt.reshape %78 allow_reorder : tensor<128xf32, #blocked1> -> tensor<128xf32, #blocked2> loc(#loc91)
      %80 = "tt.reduce"(%79) <{axis = 0 : i32}> ({
      ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc57)), %arg19: f32 loc(callsite(#loc1 at #loc57))):
        %115 = arith.addf %arg18, %arg19 : f32 loc(#loc98)
        tt.reduce.return %115 : f32 loc(#loc91)
      }) : (tensor<128xf32, #blocked2>) -> f32 loc(#loc91)
      %81 = arith.addf %80, %cst_8 : f32 loc(#loc58)
      %82 = math.sqrt %81 : f32 loc(#loc59)
      %83 = tt.splat %82 : f32 -> tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc45)
      %84 = arith.divf %67, %83 : tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc45)
      %85 = arith.mulf %77, %54 : tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> loc(#loc40)
      %86 = tt.load %arg13 : !tt.ptr<bf16> loc(#loc60)
      %87 = arith.extf %86 : bf16 to f32 loc(#loc61)
      %88 = tt.load %arg12 : !tt.ptr<f32> loc(#loc62)
      %89 = math.exp %88 : f32 loc(#loc63)
      %90 = tt.splat %89 : f32 -> tensor<128x8xf32, #blocked> loc(#loc64)
      %91 = arith.mulf %arg11, %90 : tensor<128x8xf32, #blocked> loc(#loc64)
      %92 = tt.expand_dims %84 {axis = 1 : i32} : tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xf32, #blocked> loc(#loc65)
      %93 = tt.broadcast %92 : tensor<128x1xf32, #blocked> -> tensor<128x8xf32, #blocked> loc(#loc66)
      %94 = arith.mulf %91, %93 : tensor<128x8xf32, #blocked> loc(#loc66)
      %95 = "tt.reduce"(%94) <{axis = 0 : i32}> ({
      ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc67)), %arg19: f32 loc(callsite(#loc1 at #loc67))):
        %115 = arith.addf %arg18, %arg19 : f32 loc(#loc99)
        tt.reduce.return %115 : f32 loc(#loc93)
      }) : (tensor<128x8xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc93)
      %96 = arith.subf %70, %95 : tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc68)
      %97 = tt.splat %87 : f32 -> tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc69)
      %98 = arith.mulf %97, %96 : tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc69)
      %99 = tt.expand_dims %98 {axis = 0 : i32} : tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<1x8xf32, #blocked> loc(#loc70)
      %100 = tt.broadcast %99 : tensor<1x8xf32, #blocked> -> tensor<128x8xf32, #blocked> loc(#loc70)
      %101 = arith.mulf %93, %100 : tensor<128x8xf32, #blocked> loc(#loc70)
      %102 = arith.addf %91, %101 : tensor<128x8xf32, #blocked> loc(#loc71)
      %103 = tt.expand_dims %85 {axis = 1 : i32} : tensor<128xf32, #ttg.slice<{dim = 1, parent = #blocked}>> -> tensor<128x1xf32, #blocked> loc(#loc72)
      %104 = tt.broadcast %103 : tensor<128x1xf32, #blocked> -> tensor<128x8xf32, #blocked> loc(#loc73)
      %105 = arith.mulf %102, %104 : tensor<128x8xf32, #blocked> loc(#loc73)
      %106 = "tt.reduce"(%105) <{axis = 0 : i32}> ({
      ^bb0(%arg18: f32 loc(callsite(#loc1 at #loc74)), %arg19: f32 loc(callsite(#loc1 at #loc74))):
        %115 = arith.addf %arg18, %arg19 : f32 loc(#loc100)
        tt.reduce.return %115 : f32 loc(#loc95)
      }) : (tensor<128x8xf32, #blocked>) -> tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc95)
      %107 = arith.truncf %106 : tensor<8xf32, #ttg.slice<{dim = 0, parent = #blocked}>> to tensor<8xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc75)
      %108 = ttg.convert_layout %107 : tensor<8xbf16, #ttg.slice<{dim = 0, parent = #blocked}>> -> tensor<8xbf16, #blocked2> loc(#loc76)
      tt.store %arg14, %108, %36 : tensor<8x!tt.ptr<bf16>, #blocked2> loc(#loc76)
      %109 = tt.addptr %arg15, %cst_1 : tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc77)
      %110 = tt.addptr %arg16, %cst_1 : tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128xi32, #blocked1> loc(#loc78)
      %111 = tt.addptr %arg17, %cst_0 : tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>>, tensor<8xi32, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc79)
      %112 = tt.addptr %arg12, %c32_i32 : !tt.ptr<f32>, i32 loc(#loc80)
      %113 = tt.addptr %arg13, %c32_i32 : !tt.ptr<bf16>, i32 loc(#loc81)
      %114 = tt.addptr %arg14, %cst_9 : tensor<8x!tt.ptr<bf16>, #blocked2>, tensor<8xi32, #blocked2> loc(#loc82)
      scf.yield %102, %112, %113, %114, %109, %110, %111 : tensor<128x8xf32, #blocked>, !tt.ptr<f32>, !tt.ptr<bf16>, tensor<8x!tt.ptr<bf16>, #blocked2>, tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<128x!tt.ptr<bf16>, #blocked1>, tensor<8x!tt.ptr<bf16>, #ttg.slice<{dim = 0, parent = #blocked}>> loc(#loc83)
    } loc(#loc41)
    %56 = tt.addptr %arg7, %42 : !tt.ptr<f32>, i32 loc(#loc84)
    %57 = tt.splat %56 : !tt.ptr<f32> -> tensor<128x1x!tt.ptr<f32>, #blocked> loc(#loc85)
    %58 = tt.addptr %57, %45 : tensor<128x1x!tt.ptr<f32>, #blocked>, tensor<128x1xi32, #blocked> loc(#loc85)
    %59 = tt.broadcast %58 : tensor<128x1x!tt.ptr<f32>, #blocked> -> tensor<128x8x!tt.ptr<f32>, #blocked> loc(#loc86)
    %60 = tt.addptr %59, %50 : tensor<128x8x!tt.ptr<f32>, #blocked>, tensor<128x8xi32, #blocked> loc(#loc86)
    tt.store %60, %55#0, %41 : tensor<128x8x!tt.ptr<f32>, #blocked> loc(#loc87)
    tt.return loc(#loc88)
  } loc(#loc)
} loc(#loc)
#loc2 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":53:30)
#loc3 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":53:48)
#loc4 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":54:24)
#loc5 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":54:35)
#loc6 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":61:25)
#loc7 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":62:23)
#loc8 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:16)
#loc9 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:34)
#loc10 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":63:21)
#loc11 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:21)
#loc12 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:25)
#loc13 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:32)
#loc14 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:14)
#loc15 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":65:36)
#loc16 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:14)
#loc17 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":66:36)
#loc18 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:14)
#loc19 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":67:38)
#loc20 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":69:18)
#loc21 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":69:29)
#loc22 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":75:24)
#loc23 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":75:35)
#loc24 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:14)
#loc25 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":79:38)
#loc26 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":81:19)
#loc27 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":82:19)
#loc28 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:20)
#loc29 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:38)
#loc30 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":83:31)
#loc31 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:29)
#loc32 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:20)
#loc33 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:37)
#loc34 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:48)
#loc35 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:33)
#loc36 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:56)
#loc37 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":87:52)
#loc38 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":88:23)
#loc39 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":88:15)
#loc40 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":97:20)
#loc41 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":90:22)
#loc42 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":91:22)
#loc43 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":91:52)
#loc44 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":92:22)
#loc45 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:24)
#loc46 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":92:52)
#loc47 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":93:22)
#loc48 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":93:52)
#loc49 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:45)
#loc50 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":290:36)
#loc52 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/triton/language/standard.py":260:15)
#loc53 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:52)
#loc54 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:32)
#loc55 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":95:24)
#loc56 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:45)
#loc58 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:52)
#loc59 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":96:32)
#loc60 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":99:29)
#loc61 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":99:40)
#loc62 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":105:26)
#loc63 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":106:23)
#loc64 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":106:19)
#loc65 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:51)
#loc66 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:47)
#loc68 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:34)
#loc69 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":117:28)
#loc70 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":119:30)
#loc71 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":119:15)
#loc72 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:31)
#loc73 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":122:27)
#loc75 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":123:29)
#loc76 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":123:22)
#loc77 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":125:15)
#loc78 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":126:15)
#loc79 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":127:15)
#loc80 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":129:19)
#loc81 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":134:18)
#loc82 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":135:15)
#loc83 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":135:8)
#loc84 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:20)
#loc85 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:33)
#loc86 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":138:52)
#loc87 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":139:23)
#loc88 = loc("/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/gated_delta_rule/fused_recurrent.py":137:4)
#loc89 = loc(callsite(#loc50 at #loc51))
#loc91 = loc(callsite(#loc50 at #loc57))
#loc93 = loc(callsite(#loc50 at #loc67))
#loc95 = loc(callsite(#loc50 at #loc74))
#loc97 = loc(callsite(#loc52 at #loc89))
#loc98 = loc(callsite(#loc52 at #loc91))
#loc99 = loc(callsite(#loc52 at #loc93))
#loc100 = loc(callsite(#loc52 at #loc95))
