//
// Generated by LLVM NVPTX Back-End
//

.version 8.7
.target sm_90a
.address_size 64

	// .globl	chunk_scaled_dot_kkt_fwd_kernel // -- Begin function chunk_scaled_dot_kkt_fwd_kernel
.extern .shared .align 16 .b8 global_smem[];
                                        // @chunk_scaled_dot_kkt_fwd_kernel
.visible .entry chunk_scaled_dot_kkt_fwd_kernel(
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_0,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_1,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_2,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_3,
	.param .u32 chunk_scaled_dot_kkt_fwd_kernel_param_4,
	.param .u64 .ptr .global .align 1 chunk_scaled_dot_kkt_fwd_kernel_param_5
)
.reqntid 256
{
	.reg .pred 	%p<68>;
	.reg .b16 	%rs<5>;
	.reg .b32 	%r<574>;
	.reg .b64 	%rd<114>;
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0
$L__func_begin0:
	.loc	1 28 0                          // chunk_scaled_dot_kkt.py:28:0

// %bb.0:
	ld.param.b32 	%r46, [chunk_scaled_dot_kkt_fwd_kernel_param_4];
	ld.param.b64 	%rd12, [chunk_scaled_dot_kkt_fwd_kernel_param_3];
	ld.param.b64 	%rd11, [chunk_scaled_dot_kkt_fwd_kernel_param_1];
	ld.param.b64 	%rd22, [chunk_scaled_dot_kkt_fwd_kernel_param_0];
$L__tmp0:
	.loc	1 43 30                         // chunk_scaled_dot_kkt.py:43:30
	mov.u32 	%r62, %ctaid.x;
	ld.param.b64 	%rd23, [chunk_scaled_dot_kkt_fwd_kernel_param_2];
	.loc	1 43 48                         // chunk_scaled_dot_kkt.py:43:48
	mov.u32 	%r63, %ctaid.y;
	.loc	1 50 25                         // chunk_scaled_dot_kkt.py:50:25
	and.b32 	%r64, %r63, 65504;
	.loc	1 44 33                         // chunk_scaled_dot_kkt.py:44:33
	and.b32 	%r65, %r63, 31;
	.loc	1 51 16                         // chunk_scaled_dot_kkt.py:51:16
	shl.b32 	%r66, %r62, 6;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	mov.u32 	%r1, %tid.x;
	shr.u32 	%r2, %r1, 5;
	bfe.s32 	%r67, %r1, 5, 1;
	and.b32 	%r3, %r1, 128;
	bfe.u32 	%r68, %r1, 3, 5;
	or.b32 	%r69, %r68, 32;
	shr.u32 	%r4, %r1, 2;
	bfe.u32 	%r70, %r1, 2, 3;
	shr.u32 	%r71, %r1, 1;
	and.b32 	%r72, %r71, 48;
	or.b32 	%r5, %r72, %r70;
	or.b32 	%r6, %r5, 8;
	shl.b32 	%r73, %r1, 3;
	and.b32 	%r74, %r73, 56;
	.loc	1 54 42                         // chunk_scaled_dot_kkt.py:54:42
	mul.lo.s32 	%r75, %r64, %r46;
	.loc	1 54 38                         // chunk_scaled_dot_kkt.py:54:38
	cvt.s64.s32 	%rd1, %r75;
	mul.wide.s32 	%rd24, %r75, 2;
	add.s64 	%rd25, %rd23, %rd24;
	.loc	1 54 46                         // chunk_scaled_dot_kkt.py:54:46
	cvt.u64.u32 	%rd2, %r65;
	mul.wide.u32 	%rd26, %r65, 2;
	add.s64 	%rd27, %rd25, %rd26;
	.loc	1 54 83                         // chunk_scaled_dot_kkt.py:54:83
	cvt.s64.s32 	%rd3, %r46;
	cvt.s64.s32 	%rd4, %r66;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd28, %r68;
	cvt.u64.u32 	%rd29, %r69;
	cvt.u64.u32 	%rd30, %r5;
	cvt.u64.u32 	%rd31, %r6;
	cvt.u64.u32 	%rd5, %r74;
	or.b64 	%rd32, %rd28, %rd4;
	or.b64 	%rd33, %rd29, %rd4;
	or.b64 	%rd34, %rd30, %rd4;
	or.b64 	%rd35, %rd31, %rd4;
	shl.b64 	%rd6, %rd34, 5;
	shl.b64 	%rd7, %rd35, 5;
	shl.b64 	%rd36, %rd34, 6;
	add.s64 	%rd13, %rd27, %rd36;
	shl.b64 	%rd37, %rd35, 6;
	add.s64 	%rd14, %rd27, %rd37;
	setp.gt.s32 	%p7, %r66, -1;
	setp.lt.s64 	%p8, %rd34, %rd3;
	setp.lt.s64 	%p9, %rd35, %rd3;
	and.pred 	%p19, %p7, %p8;
	and.pred 	%p20, %p7, %p9;
	// begin inline asm
	mov.u16 %rs3, 0x0;
	@%p19 ld.global.b16 { %rs3 }, [ %rd13 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u16 %rs4, 0x0;
	@%p20 ld.global.b16 { %rs4 }, [ %rd14 + 0 ];
	// end inline asm
	.loc	1 59 45                         // chunk_scaled_dot_kkt.py:59:45
	or.b32 	%r7, %r75, %r65;
	.loc	1 59 52                         // chunk_scaled_dot_kkt.py:59:52
	shl.b32 	%r76, %r7, 7;
	.loc	1 59 36                         // chunk_scaled_dot_kkt.py:59:36
	mul.wide.s32 	%rd38, %r76, 2;
	add.s64 	%rd39, %rd22, %rd38;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	setp.lt.s64 	%p10, %rd32, %rd3;
	setp.lt.s64 	%p11, %rd33, %rd3;
	shl.b64 	%rd40, %rd32, 13;
	add.s64 	%rd8, %rd39, %rd40;
	mul.wide.u32 	%rd41, %r74, 2;
	add.s64 	%rd15, %rd8, %rd41;
	shl.b64 	%rd42, %rd33, 13;
	add.s64 	%rd9, %rd39, %rd42;
	add.s64 	%rd16, %rd9, %rd41;
	and.b32 	%r77, %r67, 288;
	and.b32 	%r78, %r1, 24;
	mul.lo.s32 	%r79, %r78, 9;
	xor.b32 	%r80, %r79, %r74;
	xor.b32 	%r81, %r80, %r77;
	and.b32 	%r82, %r73, 512;
	shl.b32 	%r83, %r3, 3;
	or.b32 	%r84, %r82, %r81;
	or.b32 	%r8, %r84, %r83;
	shl.b32 	%r85, %r8, 1;
	mov.b32 	%r86, global_smem;
	add.s32 	%r47, %r86, %r85;
	or.b32 	%r87, %r74, 2048;
	xor.b32 	%r88, %r79, %r87;
	xor.b32 	%r89, %r88, %r77;
	or.b32 	%r90, %r89, %r82;
	or.b32 	%r9, %r90, %r83;
	shl.b32 	%r91, %r9, 1;
	add.s32 	%r49, %r86, %r91;
	selp.b32 	%r92, 16, 0, %p10;
	selp.b32 	%r52, %r92, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r47 + 0 ], [ %rd15 + 0 ], 0x10, %r52;
	// end inline asm
	selp.b32 	%r93, 16, 0, %p11;
	selp.b32 	%r54, %r93, 0, %p7;
	// begin inline asm
	cp.async.cg.shared.global [ %r49 + 0 ], [ %rd16 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd17, %rd15, 128;
	add.s64 	%rd18, %rd16, 128;
	bar.sync 	0;
	add.s32 	%r94, %r86, 8192;
	add.s32 	%r51, %r94, %r85;
	add.s32 	%r53, %r94, %r91;
	// begin inline asm
	cp.async.cg.shared.global [ %r51 + 0 ], [ %rd17 + 0 ], 0x10, %r52;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r53 + 0 ], [ %rd18 + 0 ], 0x10, %r54;
	// end inline asm
	cp.async.commit_group;
	add.s64 	%rd19, %rd15, 256;
	add.s64 	%rd20, %rd16, 256;
	bar.sync 	0;
	add.s32 	%r95, %r86, 16384;
	add.s32 	%r55, %r95, %r85;
	add.s32 	%r57, %r95, %r91;
	mov.b32 	%r56, 0;
	// begin inline asm
	cp.async.cg.shared.global [ %r55 + 0 ], [ %rd19 + 0 ], 0x10, %r56;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r57 + 0 ], [ %rd20 + 0 ], 0x10, %r56;
	// end inline asm
	cp.async.commit_group;
	mov.b32 	%r558, 0f00000000;
	mov.b32 	%r557, 2;
	mov.b32 	%r556, -1;
	mov.b64 	%rd113, 0;
	mov.pred 	%p12, -1;
	mov.pred 	%p67, %p12;
	mov.b32 	%r559, %r558;
	mov.b32 	%r560, %r558;
	mov.b32 	%r561, %r558;
	mov.b32 	%r562, %r558;
	mov.b32 	%r563, %r558;
	mov.b32 	%r564, %r558;
	mov.b32 	%r565, %r558;
	mov.b32 	%r566, %r558;
	mov.b32 	%r567, %r558;
	mov.b32 	%r568, %r558;
	mov.b32 	%r569, %r558;
	mov.b32 	%r570, %r558;
	mov.b32 	%r571, %r558;
	mov.b32 	%r572, %r558;
	mov.b32 	%r573, %r558;
$L__BB0_1:                              // =>This Inner Loop Header: Depth=1
	.loc	1 0 22                          // chunk_scaled_dot_kkt.py:0:22
	mov.pred 	%p3, %p67;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r272, %r556, 1;
	setp.gt.s32 	%p17, %r272, 3;
	selp.b32 	%r556, 0, %r272, %p17;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	cp.async.wait_group 	2;
	bar.sync 	0;
	shl.b32 	%r273, %r556, 13;
	add.s32 	%r243, %r86, %r273;
	.loc	1 61 27                         // chunk_scaled_dot_kkt.py:61:27
	shfl.sync.idx.b32 	%r275, %r2, 0, 31, -1;
	// begin inline asm
	wgmma.fence.sync.aligned;
	// end inline asm
	bfe.u32 	%r276, %r243, 4, 14;
	cvt.u64.u32 	%rd54, %r276;
	or.b64 	%rd43, %rd54, 4611686293338849280;
	shl.b32 	%r277, %r275, 10;
	and.b32 	%r278, %r277, 4096;
	add.s32 	%r279, %r278, %r243;
	bfe.u32 	%r280, %r279, 4, 14;
	cvt.u64.u32 	%rd55, %r280;
	or.b64 	%rd44, %rd55, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573}, %rd43, %rd44, %p12, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r281, %r243, 32;
	bfe.u32 	%r282, %r281, 4, 14;
	cvt.u64.u32 	%rd56, %r282;
	or.b64 	%rd45, %rd56, 4611686293338849280;
	add.s32 	%r283, %r281, %r278;
	bfe.u32 	%r284, %r283, 4, 14;
	cvt.u64.u32 	%rd57, %r284;
	or.b64 	%rd46, %rd57, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573}, %rd45, %rd46, %p12, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r285, %r243, 64;
	bfe.u32 	%r286, %r285, 4, 14;
	cvt.u64.u32 	%rd58, %r286;
	or.b64 	%rd47, %rd58, 4611686293338849280;
	add.s32 	%r287, %r285, %r278;
	bfe.u32 	%r288, %r287, 4, 14;
	cvt.u64.u32 	%rd59, %r288;
	or.b64 	%rd48, %rd59, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573}, %rd47, %rd48, %p12, 1, 1, 0, 0;
	// end inline asm
	add.s32 	%r289, %r243, 96;
	bfe.u32 	%r290, %r289, 4, 14;
	cvt.u64.u32 	%rd60, %r290;
	or.b64 	%rd49, %rd60, 4611686293338849280;
	add.s32 	%r291, %r289, %r278;
	bfe.u32 	%r292, %r291, 4, 14;
	cvt.u64.u32 	%rd61, %r292;
	or.b64 	%rd50, %rd61, 4611686293338849280;
	// begin inline asm
	wgmma.mma_async.sync.aligned.m64n32k16.f32.bf16.bf16 {%r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573}, %rd49, %rd50, %p12, 1, 1, 0, 0;
	// end inline asm
	// begin inline asm
	wgmma.commit_group.sync.aligned;
	// end inline asm
	mov.b32 	%r241, %r56;
	mov.b32 	%r242, %r56;
	mov.b32 	%r244, %r56;
	mov.b32 	%r245, %r56;
	mov.b32 	%r240, %r243;
	// begin inline asm
	// wait for regs: %r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573,%r240,%r241,%r242,%r243,%r244,%r245
	wgmma.wait_group.sync.aligned 1;
	// end inline asm
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	add.s32 	%r293, %r557, 1;
	setp.gt.s32 	%p18, %r293, 3;
	selp.b32 	%r557, 0, %r293, %p18;
	add.s64 	%rd62, %rd113, %rd5;
	.loc	1 60 22                         // chunk_scaled_dot_kkt.py:60:22
	shl.b64 	%rd63, %rd62, 1;
	add.s64 	%rd64, %rd8, %rd63;
	add.s64 	%rd51, %rd64, 384;
	add.s64 	%rd65, %rd9, %rd63;
	add.s64 	%rd52, %rd65, 384;
	shl.b32 	%r294, %r557, 13;
	add.s32 	%r295, %r86, %r294;
	bar.sync 	0;
	add.s32 	%r268, %r295, %r85;
	add.s32 	%r270, %r295, %r91;
	// begin inline asm
	cp.async.cg.shared.global [ %r268 + 0 ], [ %rd51 + 0 ], 0x10, %r56;
	// end inline asm
	// begin inline asm
	cp.async.cg.shared.global [ %r270 + 0 ], [ %rd52 + 0 ], 0x10, %r56;
	// end inline asm
	cp.async.commit_group;
	mov.b64 	%rd113, 64;
	mov.pred 	%p67, 0;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	@%p3 bra 	$L__BB0_1;
// %bb.2:
	.loc	1 0 21                          // chunk_scaled_dot_kkt.py:0:21
	cvt.u32.u64 	%r356, %rd4;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	setp.gt.s32 	%p33, %r356, -1;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	shl.b32 	%r357, %r1, 1;
	and.b32 	%r358, %r357, 6;
	shr.u32 	%r359, %r3, 2;
	shr.u32 	%r360, %r1, 4;
	shl.b32 	%r361, %r1, 2;
	and.b32 	%r362, %r361, 60;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r363, %r6, %r356;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p34, %r363, %r46;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r364, %r5, %r356;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p35, %r364, %r46;
	.loc	1 58 21                         // chunk_scaled_dot_kkt.py:58:21
	// begin inline asm
	// wait for regs: %r558,%r559,%r560,%r561,%r562,%r563,%r564,%r565,%r566,%r567,%r568,%r569,%r570,%r571,%r572,%r573
	wgmma.wait_group.sync.aligned 0;
	// end inline asm
	cp.async.wait_group 	0;
	bar.sync 	0;
	.loc	1 64 36                         // chunk_scaled_dot_kkt.py:64:36
	shl.b64 	%rd80, %rd1, 2;
	add.s64 	%rd81, %rd11, %rd80;
	.loc	1 64 44                         // chunk_scaled_dot_kkt.py:64:44
	shl.b64 	%rd82, %rd2, 2;
	add.s64 	%rd83, %rd81, %rd82;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	shl.b64 	%rd84, %rd6, 2;
	add.s64 	%rd66, %rd83, %rd84;
	shl.b64 	%rd85, %rd7, 2;
	add.s64 	%rd67, %rd83, %rd85;
	// begin inline asm
	mov.u32 %r330, 0x0;
	@%p19 ld.global.b32 { %r330 }, [ %rd66 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r331, 0x0;
	@%p20 ld.global.b32 { %r331 }, [ %rd67 + 0 ];
	// end inline asm
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	cvt.f32.bf16 	%r365, %rs3;
	cvt.f32.bf16 	%r366, %rs4;
	.loc	1 72 48                         // chunk_scaled_dot_kkt.py:72:48
	shl.b32 	%r367, %r7, 6;
	.loc	1 72 32                         // chunk_scaled_dot_kkt.py:72:32
	mul.wide.s32 	%rd86, %r367, 4;
	add.s64 	%rd87, %rd12, %rd86;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	bfe.u32 	%r368, %r1, 4, 4;
	or.b32 	%r369, %r360, %r356;
	or.b32 	%r370, %r358, %r359;
	or.b32 	%r371, %r370, 25;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd88, %r371;
	or.b64 	%rd89, %rd88, %rd4;
	setp.lt.s64 	%p36, %rd89, %rd3;
	and.pred 	%p28, %p33, %p36;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r372, %r370, 24;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd90, %r372;
	or.b64 	%rd91, %rd90, %rd4;
	setp.lt.s64 	%p37, %rd91, %rd3;
	and.pred 	%p27, %p33, %p37;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r373, %r370, 17;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd92, %r373;
	or.b64 	%rd93, %rd92, %rd4;
	setp.lt.s64 	%p38, %rd93, %rd3;
	and.pred 	%p26, %p33, %p38;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r374, %r370, 16;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	cvt.u64.u32 	%rd94, %r374;
	or.b64 	%rd95, %rd94, %rd4;
	setp.lt.s64 	%p39, %rd95, %rd3;
	and.pred 	%p25, %p33, %p39;
	.loc	1 51 34                         // chunk_scaled_dot_kkt.py:51:34
	or.b32 	%r375, %r370, 9;
	or.b32 	%r376, %r370, 8;
	or.b32 	%r377, %r370, 1;
	or.b32 	%r378, %r368, %r356;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r379, %r378, 16;
	or.b32 	%r380, %r378, 32;
	or.b32 	%r381, %r369, 48;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p40, %r381, %r46;
	setp.lt.s32 	%p41, %r380, %r46;
	setp.lt.s32 	%p42, %r379, %r46;
	setp.lt.s32 	%p43, %r378, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	or.b32 	%r382, %r375, %r356;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p44, %r382, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p24, %p33, %p44;
	or.b32 	%r383, %r376, %r356;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p45, %r383, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p23, %p33, %p45;
	or.b32 	%r384, %r377, %r356;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p46, %r384, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p22, %p33, %p46;
	or.b32 	%r385, %r370, %r356;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	setp.lt.s32 	%p47, %r385, %r46;
	.loc	1 55 21                         // chunk_scaled_dot_kkt.py:55:21
	and.pred 	%p21, %p33, %p47;
	.loc	1 51 21                         // chunk_scaled_dot_kkt.py:51:21
	or.b32 	%r386, %r374, %r356;
	or.b32 	%r387, %r373, %r356;
	or.b32 	%r388, %r372, %r356;
	or.b32 	%r389, %r371, %r356;
	.loc	1 52 16                         // chunk_scaled_dot_kkt.py:52:16
	setp.lt.s32 	%p48, %r389, %r46;
	setp.lt.s32 	%p49, %r388, %r46;
	setp.lt.s32 	%p50, %r387, %r46;
	setp.lt.s32 	%p51, %r386, %r46;
	.loc	1 65 22                         // chunk_scaled_dot_kkt.py:65:22
	mul.wide.s32 	%rd96, %r385, 128;
	add.s64 	%rd68, %rd83, %rd96;
	mul.wide.s32 	%rd97, %r384, 128;
	add.s64 	%rd69, %rd83, %rd97;
	mul.wide.s32 	%rd98, %r383, 128;
	add.s64 	%rd70, %rd83, %rd98;
	mul.wide.s32 	%rd99, %r382, 128;
	add.s64 	%rd71, %rd83, %rd99;
	shl.b64 	%rd100, %rd95, 7;
	add.s64 	%rd72, %rd83, %rd100;
	shl.b64 	%rd101, %rd93, 7;
	add.s64 	%rd73, %rd83, %rd101;
	shl.b64 	%rd102, %rd91, 7;
	add.s64 	%rd74, %rd83, %rd102;
	shl.b64 	%rd103, %rd89, 7;
	add.s64 	%rd75, %rd83, %rd103;
	// begin inline asm
	mov.u32 %r332, 0x0;
	@%p21 ld.global.b32 { %r332 }, [ %rd68 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r333, 0x0;
	@%p22 ld.global.b32 { %r333 }, [ %rd69 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r334, 0x0;
	@%p23 ld.global.b32 { %r334 }, [ %rd70 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r335, 0x0;
	@%p24 ld.global.b32 { %r335 }, [ %rd71 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r336, 0x0;
	@%p25 ld.global.b32 { %r336 }, [ %rd72 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r337, 0x0;
	@%p26 ld.global.b32 { %r337 }, [ %rd73 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r338, 0x0;
	@%p27 ld.global.b32 { %r338 }, [ %rd74 + 0 ];
	// end inline asm
	// begin inline asm
	mov.u32 %r339, 0x0;
	@%p28 ld.global.b32 { %r339 }, [ %rd75 + 0 ];
	// end inline asm
	.loc	1 66 34                         // chunk_scaled_dot_kkt.py:66:34
	sub.f32 	%r390, %r330, %r332;
	sub.f32 	%r391, %r330, %r333;
	sub.f32 	%r392, %r331, %r332;
	sub.f32 	%r393, %r331, %r333;
	sub.f32 	%r394, %r330, %r334;
	sub.f32 	%r395, %r330, %r335;
	sub.f32 	%r396, %r331, %r334;
	sub.f32 	%r397, %r331, %r335;
	sub.f32 	%r398, %r330, %r336;
	sub.f32 	%r399, %r330, %r337;
	sub.f32 	%r400, %r331, %r336;
	sub.f32 	%r401, %r331, %r337;
	sub.f32 	%r402, %r330, %r338;
	sub.f32 	%r403, %r330, %r339;
	sub.f32 	%r404, %r331, %r338;
	sub.f32 	%r405, %r331, %r339;
	.loc	1 67 19                         // chunk_scaled_dot_kkt.py:67:19
	mul.f32 	%r406, %r390, 0f3FB8AA3B;
	ex2.approx.f32 	%r407, %r406;
	mul.f32 	%r408, %r391, 0f3FB8AA3B;
	ex2.approx.f32 	%r409, %r408;
	mul.f32 	%r410, %r392, 0f3FB8AA3B;
	ex2.approx.f32 	%r411, %r410;
	mul.f32 	%r412, %r393, 0f3FB8AA3B;
	ex2.approx.f32 	%r413, %r412;
	mul.f32 	%r414, %r394, 0f3FB8AA3B;
	ex2.approx.f32 	%r415, %r414;
	mul.f32 	%r416, %r395, 0f3FB8AA3B;
	ex2.approx.f32 	%r417, %r416;
	mul.f32 	%r418, %r396, 0f3FB8AA3B;
	ex2.approx.f32 	%r419, %r418;
	mul.f32 	%r420, %r397, 0f3FB8AA3B;
	ex2.approx.f32 	%r421, %r420;
	mul.f32 	%r422, %r398, 0f3FB8AA3B;
	ex2.approx.f32 	%r423, %r422;
	mul.f32 	%r424, %r399, 0f3FB8AA3B;
	ex2.approx.f32 	%r425, %r424;
	mul.f32 	%r426, %r400, 0f3FB8AA3B;
	ex2.approx.f32 	%r427, %r426;
	mul.f32 	%r428, %r401, 0f3FB8AA3B;
	ex2.approx.f32 	%r429, %r428;
	mul.f32 	%r430, %r402, 0f3FB8AA3B;
	ex2.approx.f32 	%r431, %r430;
	mul.f32 	%r432, %r403, 0f3FB8AA3B;
	ex2.approx.f32 	%r433, %r432;
	mul.f32 	%r434, %r404, 0f3FB8AA3B;
	ex2.approx.f32 	%r435, %r434;
	mul.f32 	%r436, %r405, 0f3FB8AA3B;
	ex2.approx.f32 	%r437, %r436;
	.loc	1 67 15                         // chunk_scaled_dot_kkt.py:67:15
	mul.f32 	%r438, %r558, %r407;
	mul.f32 	%r439, %r559, %r409;
	mul.f32 	%r440, %r560, %r411;
	mul.f32 	%r441, %r561, %r413;
	mul.f32 	%r442, %r562, %r415;
	mul.f32 	%r443, %r563, %r417;
	mul.f32 	%r444, %r564, %r419;
	mul.f32 	%r445, %r565, %r421;
	mul.f32 	%r446, %r566, %r423;
	mul.f32 	%r447, %r567, %r425;
	mul.f32 	%r448, %r568, %r427;
	mul.f32 	%r449, %r569, %r429;
	mul.f32 	%r450, %r570, %r431;
	mul.f32 	%r451, %r571, %r433;
	mul.f32 	%r452, %r572, %r435;
	mul.f32 	%r453, %r573, %r437;
	.loc	1 68 11                         // chunk_scaled_dot_kkt.py:68:11
	mul.f32 	%r454, %r438, %r365;
	mul.f32 	%r455, %r439, %r365;
	mul.f32 	%r456, %r440, %r366;
	mul.f32 	%r457, %r441, %r366;
	mul.f32 	%r458, %r442, %r365;
	mul.f32 	%r459, %r443, %r365;
	mul.f32 	%r460, %r444, %r366;
	mul.f32 	%r461, %r445, %r366;
	mul.f32 	%r462, %r446, %r365;
	mul.f32 	%r463, %r447, %r365;
	mul.f32 	%r464, %r448, %r366;
	mul.f32 	%r465, %r449, %r366;
	mul.f32 	%r466, %r450, %r365;
	mul.f32 	%r467, %r451, %r365;
	mul.f32 	%r468, %r452, %r366;
	mul.f32 	%r469, %r453, %r366;
	.loc	1 70 26                         // chunk_scaled_dot_kkt.py:70:26
	setp.gt.u32 	%p52, %r5, %r370;
	setp.gt.u32 	%p53, %r5, %r377;
	setp.gt.u32 	%p54, %r6, %r370;
	setp.gt.u32 	%p55, %r6, %r377;
	setp.gt.u32 	%p56, %r5, %r376;
	setp.gt.u32 	%p57, %r5, %r375;
	setp.gt.u32 	%p58, %r6, %r375;
	setp.gt.u32 	%p59, %r5, %r374;
	setp.gt.u32 	%p60, %r5, %r373;
	setp.gt.u32 	%p61, %r6, %r374;
	setp.gt.u32 	%p62, %r6, %r373;
	setp.gt.u32 	%p63, %r5, %r372;
	setp.gt.u32 	%p64, %r5, %r371;
	setp.gt.u32 	%p65, %r6, %r372;
	setp.gt.u32 	%p66, %r6, %r371;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	mul.wide.s32 	%rd104, %r378, 8192;
	add.s64 	%rd105, %rd87, %rd104;
	mul.wide.u32 	%rd106, %r362, 4;
	add.s64 	%rd76, %rd105, %rd106;
	mul.wide.s32 	%rd107, %r379, 8192;
	add.s64 	%rd108, %rd87, %rd107;
	add.s64 	%rd77, %rd108, %rd106;
	mul.wide.s32 	%rd109, %r380, 8192;
	add.s64 	%rd110, %rd87, %rd109;
	add.s64 	%rd78, %rd110, %rd106;
	mul.wide.s32 	%rd111, %r381, 8192;
	add.s64 	%rd112, %rd87, %rd111;
	add.s64 	%rd79, %rd112, %rd106;
	and.pred 	%p29, %p33, %p43;
	and.pred 	%p30, %p33, %p42;
	and.pred 	%p31, %p33, %p41;
	and.pred 	%p32, %p33, %p40;
	shl.b32 	%r470, %r1, 4;
	and.b32 	%r471, %r470, 448;
	shl.b32 	%r472, %r1, 5;
	and.b32 	%r473, %r472, 3072;
	or.b32 	%r474, %r473, %r471;
	or.b32 	%r475, %r370, %r474;
	and.b32 	%r476, %r361, 1020;
	shr.u32 	%r477, %r474, 2;
	add.s32 	%r479, %r86, %r477;
	shl.b32 	%r480, %r475, 2;
	add.s32 	%r481, %r479, %r480;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r482, %r454, 0, %p47;
	selp.b32 	%r483, %r482, 0, %p52;
	selp.b32 	%r484, %r483, 0, %p35;
	selp.b32 	%r485, %r455, 0, %p46;
	selp.b32 	%r486, %r485, 0, %p53;
	selp.b32 	%r487, %r486, 0, %p35;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481], {%r484, %r487};
	or.b32 	%r488, %r475, 512;
	shr.u32 	%r489, %r488, 2;
	and.b32 	%r490, %r489, 1008;
	add.s32 	%r491, %r86, %r490;
	add.s32 	%r492, %r491, %r480;
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r493, %r456, 0, %p47;
	selp.b32 	%r494, %r493, 0, %p54;
	selp.b32 	%r495, %r494, 0, %p34;
	selp.b32 	%r496, %r457, 0, %p46;
	selp.b32 	%r497, %r496, 0, %p55;
	selp.b32 	%r498, %r497, 0, %p34;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r492+2048], {%r495, %r498};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r499, %r458, 0, %p45;
	selp.b32 	%r500, %r499, 0, %p56;
	selp.b32 	%r501, %r500, 0, %p35;
	selp.b32 	%r502, %r459, 0, %p44;
	selp.b32 	%r503, %r502, 0, %p57;
	selp.b32 	%r504, %r503, 0, %p35;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+32], {%r501, %r504};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r505, %r460, 0, %p45;
	selp.b32 	%r506, %r505, 0, %p52;
	selp.b32 	%r507, %r506, 0, %p34;
	selp.b32 	%r508, %r461, 0, %p44;
	selp.b32 	%r509, %r508, 0, %p58;
	selp.b32 	%r510, %r509, 0, %p34;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r492+2080], {%r507, %r510};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r511, %r462, 0, %p51;
	selp.b32 	%r512, %r511, 0, %p59;
	selp.b32 	%r513, %r512, 0, %p35;
	selp.b32 	%r514, %r463, 0, %p50;
	selp.b32 	%r515, %r514, 0, %p60;
	selp.b32 	%r516, %r515, 0, %p35;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+64], {%r513, %r516};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r517, %r464, 0, %p51;
	selp.b32 	%r518, %r517, 0, %p61;
	selp.b32 	%r519, %r518, 0, %p34;
	selp.b32 	%r520, %r465, 0, %p50;
	selp.b32 	%r521, %r520, 0, %p62;
	selp.b32 	%r522, %r521, 0, %p34;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r492+2112], {%r519, %r522};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r523, %r466, 0, %p49;
	selp.b32 	%r524, %r523, 0, %p63;
	selp.b32 	%r525, %r524, 0, %p35;
	selp.b32 	%r526, %r467, 0, %p48;
	selp.b32 	%r527, %r526, 0, %p64;
	selp.b32 	%r528, %r527, 0, %p35;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r481+96], {%r525, %r528};
	.loc	1 71 29                         // chunk_scaled_dot_kkt.py:71:29
	selp.b32 	%r529, %r468, 0, %p49;
	selp.b32 	%r530, %r529, 0, %p65;
	selp.b32 	%r531, %r530, 0, %p34;
	selp.b32 	%r532, %r469, 0, %p48;
	selp.b32 	%r533, %r532, 0, %p66;
	selp.b32 	%r534, %r533, 0, %p34;
	.loc	1 73 18                         // chunk_scaled_dot_kkt.py:73:18
	st.shared.v2.b32 	[%r492+2144], {%r531, %r534};
	bar.sync 	0;
	and.b32 	%r535, %r4, 60;
	shl.b32 	%r536, %r535, 2;
	add.s32 	%r537, %r86, %r536;
	shl.b32 	%r538, %r476, 2;
	add.s32 	%r539, %r537, %r538;
	or.b32 	%r540, %r476, 1024;
	shr.u32 	%r541, %r540, 2;
	and.b32 	%r542, %r541, 496;
	add.s32 	%r543, %r86, %r542;
	add.s32 	%r544, %r543, %r538;
	ld.shared.v4.b32 	{%r344, %r345, %r346, %r347}, [%r544+4096];
	or.b32 	%r545, %r476, 2048;
	shr.u32 	%r546, %r545, 2;
	and.b32 	%r547, %r546, 752;
	add.s32 	%r548, %r86, %r547;
	add.s32 	%r549, %r548, %r538;
	ld.shared.v4.b32 	{%r348, %r349, %r350, %r351}, [%r549+8192];
	or.b32 	%r550, %r361, 3072;
	shr.u32 	%r551, %r550, 2;
	and.b32 	%r552, %r551, 1008;
	add.s32 	%r553, %r86, %r552;
	shl.b32 	%r554, %r550, 2;
	add.s32 	%r555, %r553, %r554;
	ld.shared.v4.b32 	{%r352, %r353, %r354, %r355}, [%r555];
	ld.shared.v4.b32 	{%r340, %r341, %r342, %r343}, [%r539];
	// begin inline asm
	@%p29 st.global.v4.b32 [ %rd76 + 0 ], { %r340, %r341, %r342, %r343 };
	// end inline asm
	// begin inline asm
	@%p30 st.global.v4.b32 [ %rd77 + 0 ], { %r344, %r345, %r346, %r347 };
	// end inline asm
	// begin inline asm
	@%p31 st.global.v4.b32 [ %rd78 + 0 ], { %r348, %r349, %r350, %r351 };
	// end inline asm
	// begin inline asm
	@%p32 st.global.v4.b32 [ %rd79 + 0 ], { %r352, %r353, %r354, %r355 };
	// end inline asm
	.loc	1 73 4                          // chunk_scaled_dot_kkt.py:73:4
	ret;
$L__tmp1:
$L__func_end0:
                                        // -- End function
}
	.file	1 "/home/zeus/miniconda3/envs/cloudspace/lib/python3.13/site-packages/fla/ops/common/chunk_scaled_dot_kkt.py"
	.section	.debug_abbrev
	{
.b8 1                                   // Abbreviation Code
.b8 17                                  // DW_TAG_compile_unit
.b8 0                                   // DW_CHILDREN_no
.b8 37                                  // DW_AT_producer
.b8 8                                   // DW_FORM_string
.b8 19                                  // DW_AT_language
.b8 5                                   // DW_FORM_data2
.b8 3                                   // DW_AT_name
.b8 8                                   // DW_FORM_string
.b8 16                                  // DW_AT_stmt_list
.b8 6                                   // DW_FORM_data4
.b8 27                                  // DW_AT_comp_dir
.b8 8                                   // DW_FORM_string
.b8 0                                   // EOM(1)
.b8 0                                   // EOM(2)
.b8 0                                   // EOM(3)
	}
	.section	.debug_info
	{
.b32 127                                // Length of Unit
.b8 2                                   // DWARF version number
.b8 0
.b32 .debug_abbrev                      // Offset Into Abbrev. Section
.b8 8                                   // Address Size (in bytes)
.b8 1                                   // Abbrev [1] 0xb:0x78 DW_TAG_compile_unit
.b8 116                                 // DW_AT_producer
.b8 114
.b8 105
.b8 116
.b8 111
.b8 110
.b8 0
.b8 2                                   // DW_AT_language
.b8 0
.b8 99                                  // DW_AT_name
.b8 104
.b8 117
.b8 110
.b8 107
.b8 95
.b8 115
.b8 99
.b8 97
.b8 108
.b8 101
.b8 100
.b8 95
.b8 100
.b8 111
.b8 116
.b8 95
.b8 107
.b8 107
.b8 116
.b8 46
.b8 112
.b8 121
.b8 0
.b32 .debug_line                        // DW_AT_stmt_list
.b8 47                                  // DW_AT_comp_dir
.b8 104
.b8 111
.b8 109
.b8 101
.b8 47
.b8 122
.b8 101
.b8 117
.b8 115
.b8 47
.b8 109
.b8 105
.b8 110
.b8 105
.b8 99
.b8 111
.b8 110
.b8 100
.b8 97
.b8 51
.b8 47
.b8 101
.b8 110
.b8 118
.b8 115
.b8 47
.b8 99
.b8 108
.b8 111
.b8 117
.b8 100
.b8 115
.b8 112
.b8 97
.b8 99
.b8 101
.b8 47
.b8 108
.b8 105
.b8 98
.b8 47
.b8 112
.b8 121
.b8 116
.b8 104
.b8 111
.b8 110
.b8 51
.b8 46
.b8 49
.b8 51
.b8 47
.b8 115
.b8 105
.b8 116
.b8 101
.b8 45
.b8 112
.b8 97
.b8 99
.b8 107
.b8 97
.b8 103
.b8 101
.b8 115
.b8 47
.b8 102
.b8 108
.b8 97
.b8 47
.b8 111
.b8 112
.b8 115
.b8 47
.b8 99
.b8 111
.b8 109
.b8 109
.b8 111
.b8 110
.b8 0
	}
	.section	.debug_macinfo	{	}
